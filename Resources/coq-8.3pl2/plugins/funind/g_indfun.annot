"plugins/funind/g_indfun.ml4" 20 690 694 "plugins/funind/g_indfun.ml4" 20 690 704
type(
  ('a -> Pp.std_ppcmds) ->
  'b * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds
)
ident(
  def pr_binding "plugins/funind/g_indfun.ml4" 24 895 895 --
)
"plugins/funind/g_indfun.ml4" 20 690 705 "plugins/funind/g_indfun.ml4" 20 690 708
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/g_indfun.ml4" 20 690 711 "plugins/funind/g_indfun.ml4" 20 690 893
)
"plugins/funind/g_indfun.ml4" 21 720 724 "plugins/funind/g_indfun.ml4" 21 720 727
type(
  'b
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 21 720 755 "plugins/funind/g_indfun.ml4" 21 720 813
)
"plugins/funind/g_indfun.ml4" 21 720 746 "plugins/funind/g_indfun.ml4" 21 720 748
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 21 720 755 "plugins/funind/g_indfun.ml4" 21 720 813
)
"plugins/funind/g_indfun.ml4" 21 720 729 "plugins/funind/g_indfun.ml4" 21 720 748
type(
  Rawterm.quantified_hypothesis
)
"plugins/funind/g_indfun.ml4" 21 720 750 "plugins/funind/g_indfun.ml4" 21 720 751
type(
  'a
)
ident(
  def c "plugins/funind/g_indfun.ml4" 21 720 755 "plugins/funind/g_indfun.ml4" 21 720 813
)
"plugins/funind/g_indfun.ml4" 21 720 724 "plugins/funind/g_indfun.ml4" 21 720 751
type(
  'b * Rawterm.quantified_hypothesis * 'a
)
"plugins/funind/g_indfun.ml4" 21 720 755 "plugins/funind/g_indfun.ml4" 21 720 758
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.hov
)
"plugins/funind/g_indfun.ml4" 21 720 759 "plugins/funind/g_indfun.ml4" 21 720 760
type(
  int
)
"plugins/funind/g_indfun.ml4" 21 720 762 "plugins/funind/g_indfun.ml4" 21 720 776
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_id
)
"plugins/funind/g_indfun.ml4" 21 720 777 "plugins/funind/g_indfun.ml4" 21 720 779
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 21 720 746 "plugins/funind/g_indfun.ml4" 21 720 748
)
"plugins/funind/g_indfun.ml4" 21 720 762 "plugins/funind/g_indfun.ml4" 21 720 779
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 21 720 783 "plugins/funind/g_indfun.ml4" 21 720 786
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 21 720 787 "plugins/funind/g_indfun.ml4" 21 720 793
type(
  string
)
"plugins/funind/g_indfun.ml4" 21 720 783 "plugins/funind/g_indfun.ml4" 21 720 793
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 21 720 762 "plugins/funind/g_indfun.ml4" 21 720 793
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 21 720 797 "plugins/funind/g_indfun.ml4" 21 720 800
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.cut
)
"plugins/funind/g_indfun.ml4" 21 720 801 "plugins/funind/g_indfun.ml4" 21 720 803
type(
  unit
)
"plugins/funind/g_indfun.ml4" 21 720 797 "plugins/funind/g_indfun.ml4" 21 720 803
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 21 720 762 "plugins/funind/g_indfun.ml4" 21 720 803
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 21 720 807 "plugins/funind/g_indfun.ml4" 21 720 810
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 20 690 705 "plugins/funind/g_indfun.ml4" 20 690 708
)
"plugins/funind/g_indfun.ml4" 21 720 811 "plugins/funind/g_indfun.ml4" 21 720 812
type(
  'a
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 21 720 750 "plugins/funind/g_indfun.ml4" 21 720 751
)
"plugins/funind/g_indfun.ml4" 21 720 807 "plugins/funind/g_indfun.ml4" 21 720 812
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 21 720 762 "plugins/funind/g_indfun.ml4" 21 720 812
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 21 720 755 "plugins/funind/g_indfun.ml4" 21 720 813
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 22 814 818 "plugins/funind/g_indfun.ml4" 22 814 821
type(
  'b
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 22 814 847 "plugins/funind/g_indfun.ml4" 22 814 893
)
"plugins/funind/g_indfun.ml4" 22 814 839 "plugins/funind/g_indfun.ml4" 22 814 840
type(
  int
)
ident(
  def n "plugins/funind/g_indfun.ml4" 22 814 847 "plugins/funind/g_indfun.ml4" 22 814 893
)
"plugins/funind/g_indfun.ml4" 22 814 823 "plugins/funind/g_indfun.ml4" 22 814 840
type(
  Rawterm.quantified_hypothesis
)
"plugins/funind/g_indfun.ml4" 22 814 842 "plugins/funind/g_indfun.ml4" 22 814 843
type(
  'a
)
ident(
  def c "plugins/funind/g_indfun.ml4" 22 814 847 "plugins/funind/g_indfun.ml4" 22 814 893
)
"plugins/funind/g_indfun.ml4" 22 814 818 "plugins/funind/g_indfun.ml4" 22 814 843
type(
  'b * Rawterm.quantified_hypothesis * 'a
)
"plugins/funind/g_indfun.ml4" 22 814 847 "plugins/funind/g_indfun.ml4" 22 814 850
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.hov
)
"plugins/funind/g_indfun.ml4" 22 814 851 "plugins/funind/g_indfun.ml4" 22 814 852
type(
  int
)
"plugins/funind/g_indfun.ml4" 22 814 854 "plugins/funind/g_indfun.ml4" 22 814 857
type(
  int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.int
)
"plugins/funind/g_indfun.ml4" 22 814 858 "plugins/funind/g_indfun.ml4" 22 814 859
type(
  int
)
ident(
  int_ref n "plugins/funind/g_indfun.ml4" 22 814 839 "plugins/funind/g_indfun.ml4" 22 814 840
)
"plugins/funind/g_indfun.ml4" 22 814 854 "plugins/funind/g_indfun.ml4" 22 814 859
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 22 814 863 "plugins/funind/g_indfun.ml4" 22 814 866
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 22 814 867 "plugins/funind/g_indfun.ml4" 22 814 873
type(
  string
)
"plugins/funind/g_indfun.ml4" 22 814 863 "plugins/funind/g_indfun.ml4" 22 814 873
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 22 814 854 "plugins/funind/g_indfun.ml4" 22 814 873
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 22 814 877 "plugins/funind/g_indfun.ml4" 22 814 880
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.cut
)
"plugins/funind/g_indfun.ml4" 22 814 881 "plugins/funind/g_indfun.ml4" 22 814 883
type(
  unit
)
"plugins/funind/g_indfun.ml4" 22 814 877 "plugins/funind/g_indfun.ml4" 22 814 883
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 22 814 854 "plugins/funind/g_indfun.ml4" 22 814 883
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 22 814 887 "plugins/funind/g_indfun.ml4" 22 814 890
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 20 690 705 "plugins/funind/g_indfun.ml4" 20 690 708
)
"plugins/funind/g_indfun.ml4" 22 814 891 "plugins/funind/g_indfun.ml4" 22 814 892
type(
  'a
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 22 814 842 "plugins/funind/g_indfun.ml4" 22 814 843
)
"plugins/funind/g_indfun.ml4" 22 814 887 "plugins/funind/g_indfun.ml4" 22 814 892
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 22 814 854 "plugins/funind/g_indfun.ml4" 22 814 892
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 22 814 847 "plugins/funind/g_indfun.ml4" 22 814 893
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 20 690 711 "plugins/funind/g_indfun.ml4" 20 690 893
type(
  'b * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 20 690 705 "plugins/funind/g_indfun.ml4" 20 690 893
type(
  ('a -> Pp.std_ppcmds) ->
  'b * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 24 895 899 "plugins/funind/g_indfun.ml4" 24 895 910
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  def pr_bindings "plugins/funind/g_indfun.ml4" 33 1245 1245 --
)
"plugins/funind/g_indfun.ml4" 24 895 911 "plugins/funind/g_indfun.ml4" 24 895 914
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/g_indfun.ml4" 24 895 915 "plugins/funind/g_indfun.ml4" 24 895 1243
)
"plugins/funind/g_indfun.ml4" 24 895 915 "plugins/funind/g_indfun.ml4" 24 895 919
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prlc "plugins/funind/g_indfun.ml4" 24 895 922 "plugins/funind/g_indfun.ml4" 24 895 1243
)
"plugins/funind/g_indfun.ml4" 25 931 960 "plugins/funind/g_indfun.ml4" 25 931 961
type(
  'a list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 26 965 971 "plugins/funind/g_indfun.ml4" 26 965 1047
)
"plugins/funind/g_indfun.ml4" 25 931 935 "plugins/funind/g_indfun.ml4" 25 931 961
type(
  'a Rawterm.bindings
)
"plugins/funind/g_indfun.ml4" 26 965 971 "plugins/funind/g_indfun.ml4" 26 965 974
type(
  int * int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.brk
)
"plugins/funind/g_indfun.ml4" 26 965 976 "plugins/funind/g_indfun.ml4" 26 965 977
type(
  int
)
"plugins/funind/g_indfun.ml4" 26 965 978 "plugins/funind/g_indfun.ml4" 26 965 979
type(
  int
)
"plugins/funind/g_indfun.ml4" 26 965 976 "plugins/funind/g_indfun.ml4" 26 965 979
type(
  int * int
)
"plugins/funind/g_indfun.ml4" 26 965 971 "plugins/funind/g_indfun.ml4" 26 965 980
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 26 965 984 "plugins/funind/g_indfun.ml4" 26 965 987
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 26 965 988 "plugins/funind/g_indfun.ml4" 26 965 994
type(
  string
)
"plugins/funind/g_indfun.ml4" 26 965 984 "plugins/funind/g_indfun.ml4" 26 965 994
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 26 965 971 "plugins/funind/g_indfun.ml4" 26 965 994
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 26 965 998 "plugins/funind/g_indfun.ml4" 26 965 1001
type(
  int * int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.brk
)
"plugins/funind/g_indfun.ml4" 26 965 1003 "plugins/funind/g_indfun.ml4" 26 965 1004
type(
  int
)
"plugins/funind/g_indfun.ml4" 26 965 1005 "plugins/funind/g_indfun.ml4" 26 965 1006
type(
  int
)
"plugins/funind/g_indfun.ml4" 26 965 1003 "plugins/funind/g_indfun.ml4" 26 965 1006
type(
  int * int
)
"plugins/funind/g_indfun.ml4" 26 965 998 "plugins/funind/g_indfun.ml4" 26 965 1007
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 26 965 971 "plugins/funind/g_indfun.ml4" 26 965 1007
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 27 1011 1017 "plugins/funind/g_indfun.ml4" 27 1011 1037
type(
  (unit -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a list -> Pp.std_ppcmds
)
ident(
  ext_ref Util.prlist_with_sep
)
"plugins/funind/g_indfun.ml4" 27 1011 1038 "plugins/funind/g_indfun.ml4" 27 1011 1041
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 27 1011 1042 "plugins/funind/g_indfun.ml4" 27 1011 1045
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 24 895 911 "plugins/funind/g_indfun.ml4" 24 895 914
)
"plugins/funind/g_indfun.ml4" 27 1011 1046 "plugins/funind/g_indfun.ml4" 27 1011 1047
type(
  'a list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 25 931 960 "plugins/funind/g_indfun.ml4" 25 931 961
)
"plugins/funind/g_indfun.ml4" 27 1011 1017 "plugins/funind/g_indfun.ml4" 27 1011 1047
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 26 965 971 "plugins/funind/g_indfun.ml4" 26 965 1047
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 28 1048 1077 "plugins/funind/g_indfun.ml4" 28 1048 1078
type(
  'a Rawterm.explicit_bindings
)
ident(
  def l "plugins/funind/g_indfun.ml4" 29 1082 1088 "plugins/funind/g_indfun.ml4" 29 1082 1211
)
"plugins/funind/g_indfun.ml4" 28 1048 1052 "plugins/funind/g_indfun.ml4" 28 1048 1078
type(
  'a Rawterm.bindings
)
"plugins/funind/g_indfun.ml4" 29 1082 1088 "plugins/funind/g_indfun.ml4" 29 1082 1091
type(
  int * int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.brk
)
"plugins/funind/g_indfun.ml4" 29 1082 1093 "plugins/funind/g_indfun.ml4" 29 1082 1094
type(
  int
)
"plugins/funind/g_indfun.ml4" 29 1082 1095 "plugins/funind/g_indfun.ml4" 29 1082 1096
type(
  int
)
"plugins/funind/g_indfun.ml4" 29 1082 1093 "plugins/funind/g_indfun.ml4" 29 1082 1096
type(
  int * int
)
"plugins/funind/g_indfun.ml4" 29 1082 1088 "plugins/funind/g_indfun.ml4" 29 1082 1097
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 29 1082 1101 "plugins/funind/g_indfun.ml4" 29 1082 1104
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 29 1082 1105 "plugins/funind/g_indfun.ml4" 29 1082 1111
type(
  string
)
"plugins/funind/g_indfun.ml4" 29 1082 1101 "plugins/funind/g_indfun.ml4" 29 1082 1111
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 29 1082 1088 "plugins/funind/g_indfun.ml4" 29 1082 1111
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 29 1082 1115 "plugins/funind/g_indfun.ml4" 29 1082 1118
type(
  int * int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.brk
)
"plugins/funind/g_indfun.ml4" 29 1082 1120 "plugins/funind/g_indfun.ml4" 29 1082 1121
type(
  int
)
"plugins/funind/g_indfun.ml4" 29 1082 1122 "plugins/funind/g_indfun.ml4" 29 1082 1123
type(
  int
)
"plugins/funind/g_indfun.ml4" 29 1082 1120 "plugins/funind/g_indfun.ml4" 29 1082 1123
type(
  int * int
)
"plugins/funind/g_indfun.ml4" 29 1082 1115 "plugins/funind/g_indfun.ml4" 29 1082 1124
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 29 1082 1088 "plugins/funind/g_indfun.ml4" 29 1082 1124
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 30 1128 1136 "plugins/funind/g_indfun.ml4" 30 1128 1156
type(
  (unit -> Pp.std_ppcmds) ->
  (Util.loc * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds) ->
  'a Rawterm.explicit_bindings -> Pp.std_ppcmds
)
ident(
  ext_ref Util.prlist_with_sep
)
"plugins/funind/g_indfun.ml4" 30 1128 1157 "plugins/funind/g_indfun.ml4" 30 1128 1160
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 30 1128 1166 "plugins/funind/g_indfun.ml4" 30 1128 1167
type(
  Util.loc * Rawterm.quantified_hypothesis * 'a
)
ident(
  def b "plugins/funind/g_indfun.ml4" 30 1128 1171 "plugins/funind/g_indfun.ml4" 30 1128 1208
)
"plugins/funind/g_indfun.ml4" 30 1128 1171 "plugins/funind/g_indfun.ml4" 30 1128 1174
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 30 1128 1174 "plugins/funind/g_indfun.ml4" 30 1128 1177
type(
  string
)
"plugins/funind/g_indfun.ml4" 30 1128 1171 "plugins/funind/g_indfun.ml4" 30 1128 1177
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 30 1128 1181 "plugins/funind/g_indfun.ml4" 30 1128 1191
type(
  ('a -> Pp.std_ppcmds) ->
  Util.loc * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds
)
ident(
  int_ref pr_binding "plugins/funind/g_indfun.ml4" 20 690 694 "plugins/funind/g_indfun.ml4" 20 690 704
)
"plugins/funind/g_indfun.ml4" 30 1128 1192 "plugins/funind/g_indfun.ml4" 30 1128 1196
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prlc "plugins/funind/g_indfun.ml4" 24 895 915 "plugins/funind/g_indfun.ml4" 24 895 919
)
"plugins/funind/g_indfun.ml4" 30 1128 1197 "plugins/funind/g_indfun.ml4" 30 1128 1198
type(
  Util.loc * Rawterm.quantified_hypothesis * 'a
)
ident(
  int_ref b "plugins/funind/g_indfun.ml4" 30 1128 1166 "plugins/funind/g_indfun.ml4" 30 1128 1167
)
"plugins/funind/g_indfun.ml4" 30 1128 1181 "plugins/funind/g_indfun.ml4" 30 1128 1198
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 30 1128 1171 "plugins/funind/g_indfun.ml4" 30 1128 1198
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 30 1128 1202 "plugins/funind/g_indfun.ml4" 30 1128 1205
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 30 1128 1205 "plugins/funind/g_indfun.ml4" 30 1128 1208
type(
  string
)
"plugins/funind/g_indfun.ml4" 30 1128 1202 "plugins/funind/g_indfun.ml4" 30 1128 1208
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 30 1128 1171 "plugins/funind/g_indfun.ml4" 30 1128 1208
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 30 1128 1162 "plugins/funind/g_indfun.ml4" 30 1128 1208
type(
  Util.loc * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 30 1128 1210 "plugins/funind/g_indfun.ml4" 30 1128 1211
type(
  'a Rawterm.explicit_bindings
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 28 1048 1077 "plugins/funind/g_indfun.ml4" 28 1048 1078
)
"plugins/funind/g_indfun.ml4" 30 1128 1136 "plugins/funind/g_indfun.ml4" 30 1128 1211
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 29 1082 1088 "plugins/funind/g_indfun.ml4" 29 1082 1211
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 31 1212 1216 "plugins/funind/g_indfun.ml4" 31 1212 1234
type(
  'a Rawterm.bindings
)
"plugins/funind/g_indfun.ml4" 31 1212 1238 "plugins/funind/g_indfun.ml4" 31 1212 1240
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/g_indfun.ml4" 31 1212 1241 "plugins/funind/g_indfun.ml4" 31 1212 1243
type(
  unit
)
"plugins/funind/g_indfun.ml4" 31 1212 1238 "plugins/funind/g_indfun.ml4" 31 1212 1243
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 24 895 922 "plugins/funind/g_indfun.ml4" 24 895 1243
type(
  'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 24 895 915 "plugins/funind/g_indfun.ml4" 24 895 1243
type(
  ('a -> Pp.std_ppcmds) -> 'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 24 895 911 "plugins/funind/g_indfun.ml4" 24 895 1243
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 33 1245 1249 "plugins/funind/g_indfun.ml4" 33 1245 1265
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  def pr_with_bindings "plugins/funind/g_indfun.ml4" 36 1327 1327 --
)
"plugins/funind/g_indfun.ml4" 33 1245 1266 "plugins/funind/g_indfun.ml4" 33 1245 1269
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/g_indfun.ml4" 33 1245 1270 "plugins/funind/g_indfun.ml4" 33 1245 1325
)
"plugins/funind/g_indfun.ml4" 33 1245 1270 "plugins/funind/g_indfun.ml4" 33 1245 1274
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prlc "plugins/funind/g_indfun.ml4" 33 1245 1275 "plugins/funind/g_indfun.ml4" 33 1245 1325
)
"plugins/funind/g_indfun.ml4" 33 1245 1276 "plugins/funind/g_indfun.ml4" 33 1245 1277
type(
  'a
)
ident(
  def c "plugins/funind/g_indfun.ml4" 34 1284 1286 "plugins/funind/g_indfun.ml4" 34 1284 1325
)
"plugins/funind/g_indfun.ml4" 33 1245 1278 "plugins/funind/g_indfun.ml4" 33 1245 1280
type(
  'a Rawterm.bindings
)
ident(
  def bl "plugins/funind/g_indfun.ml4" 34 1284 1286 "plugins/funind/g_indfun.ml4" 34 1284 1325
)
"plugins/funind/g_indfun.ml4" 33 1245 1276 "plugins/funind/g_indfun.ml4" 33 1245 1280
type(
  'a * 'a Rawterm.bindings
)
"plugins/funind/g_indfun.ml4" 34 1284 1286 "plugins/funind/g_indfun.ml4" 34 1284 1289
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 33 1245 1266 "plugins/funind/g_indfun.ml4" 33 1245 1269
)
"plugins/funind/g_indfun.ml4" 34 1284 1290 "plugins/funind/g_indfun.ml4" 34 1284 1291
type(
  'a
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 33 1245 1276 "plugins/funind/g_indfun.ml4" 33 1245 1277
)
"plugins/funind/g_indfun.ml4" 34 1284 1286 "plugins/funind/g_indfun.ml4" 34 1284 1291
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 34 1284 1295 "plugins/funind/g_indfun.ml4" 34 1284 1297
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.hv
)
"plugins/funind/g_indfun.ml4" 34 1284 1298 "plugins/funind/g_indfun.ml4" 34 1284 1299
type(
  int
)
"plugins/funind/g_indfun.ml4" 34 1284 1301 "plugins/funind/g_indfun.ml4" 34 1284 1312
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  int_ref pr_bindings "plugins/funind/g_indfun.ml4" 24 895 899 "plugins/funind/g_indfun.ml4" 24 895 910
)
"plugins/funind/g_indfun.ml4" 34 1284 1313 "plugins/funind/g_indfun.ml4" 34 1284 1316
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 33 1245 1266 "plugins/funind/g_indfun.ml4" 33 1245 1269
)
"plugins/funind/g_indfun.ml4" 34 1284 1317 "plugins/funind/g_indfun.ml4" 34 1284 1321
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prlc "plugins/funind/g_indfun.ml4" 33 1245 1270 "plugins/funind/g_indfun.ml4" 33 1245 1274
)
"plugins/funind/g_indfun.ml4" 34 1284 1322 "plugins/funind/g_indfun.ml4" 34 1284 1324
type(
  'a Rawterm.bindings
)
ident(
  int_ref bl "plugins/funind/g_indfun.ml4" 33 1245 1278 "plugins/funind/g_indfun.ml4" 33 1245 1280
)
"plugins/funind/g_indfun.ml4" 34 1284 1301 "plugins/funind/g_indfun.ml4" 34 1284 1324
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 34 1284 1295 "plugins/funind/g_indfun.ml4" 34 1284 1325
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 34 1284 1286 "plugins/funind/g_indfun.ml4" 34 1284 1325
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 33 1245 1275 "plugins/funind/g_indfun.ml4" 33 1245 1325
type(
  'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 33 1245 1270 "plugins/funind/g_indfun.ml4" 33 1245 1325
type(
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 33 1245 1266 "plugins/funind/g_indfun.ml4" 33 1245 1325
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 36 1327 1331 "plugins/funind/g_indfun.ml4" 36 1327 1347
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) ->
  'b -> ('a * 'a Rawterm.bindings) option -> Pp.std_ppcmds
)
ident(
  def pr_fun_ind_using "plugins/funind/g_indfun.ml4" 47 1789 1789 --
)
"plugins/funind/g_indfun.ml4" 36 1327 1349 "plugins/funind/g_indfun.ml4" 36 1327 1352
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/g_indfun.ml4" 36 1327 1353 "plugins/funind/g_indfun.ml4" 36 1327 1493
)
"plugins/funind/g_indfun.ml4" 36 1327 1353 "plugins/funind/g_indfun.ml4" 36 1327 1357
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prlc "plugins/funind/g_indfun.ml4" 36 1327 1358 "plugins/funind/g_indfun.ml4" 36 1327 1493
)
"plugins/funind/g_indfun.ml4" 36 1327 1358 "plugins/funind/g_indfun.ml4" 36 1327 1359
type(
  'b
)
"plugins/funind/g_indfun.ml4" 36 1327 1360 "plugins/funind/g_indfun.ml4" 36 1327 1365
type(
  ('a * 'a Rawterm.bindings) option
)
ident(
  def opt_c "plugins/funind/g_indfun.ml4" 37 1368 1370 "plugins/funind/g_indfun.ml4" 37 1368 1493
)
"plugins/funind/g_indfun.ml4" 37 1368 1376 "plugins/funind/g_indfun.ml4" 37 1368 1381
type(
  ('a * 'a Rawterm.bindings) option
)
ident(
  int_ref opt_c "plugins/funind/g_indfun.ml4" 36 1327 1360 "plugins/funind/g_indfun.ml4" 36 1327 1365
)
"plugins/funind/g_indfun.ml4" 38 1387 1393 "plugins/funind/g_indfun.ml4" 38 1387 1397
type(
  ('a * 'a Rawterm.bindings) option
)
"plugins/funind/g_indfun.ml4" 38 1387 1401 "plugins/funind/g_indfun.ml4" 38 1387 1403
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/g_indfun.ml4" 38 1387 1404 "plugins/funind/g_indfun.ml4" 38 1387 1406
type(
  unit
)
"plugins/funind/g_indfun.ml4" 38 1387 1401 "plugins/funind/g_indfun.ml4" 38 1387 1406
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 39 1407 1418 "plugins/funind/g_indfun.ml4" 39 1407 1419
type(
  'a * 'a Rawterm.bindings
)
ident(
  def b "plugins/funind/g_indfun.ml4" 39 1407 1423 "plugins/funind/g_indfun.ml4" 39 1407 1493
)
"plugins/funind/g_indfun.ml4" 39 1407 1413 "plugins/funind/g_indfun.ml4" 39 1407 1419
type(
  ('a * 'a Rawterm.bindings) option
)
"plugins/funind/g_indfun.ml4" 39 1407 1423 "plugins/funind/g_indfun.ml4" 39 1407 1426
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 39 1407 1427 "plugins/funind/g_indfun.ml4" 39 1407 1429
type(
  unit
)
"plugins/funind/g_indfun.ml4" 39 1407 1423 "plugins/funind/g_indfun.ml4" 39 1407 1429
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 39 1407 1433 "plugins/funind/g_indfun.ml4" 39 1407 1436
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.hov
)
"plugins/funind/g_indfun.ml4" 39 1407 1437 "plugins/funind/g_indfun.ml4" 39 1407 1438
type(
  int
)
"plugins/funind/g_indfun.ml4" 39 1407 1440 "plugins/funind/g_indfun.ml4" 39 1407 1443
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 39 1407 1444 "plugins/funind/g_indfun.ml4" 39 1407 1451
type(
  string
)
"plugins/funind/g_indfun.ml4" 39 1407 1440 "plugins/funind/g_indfun.ml4" 39 1407 1451
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 39 1407 1455 "plugins/funind/g_indfun.ml4" 39 1407 1458
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 39 1407 1459 "plugins/funind/g_indfun.ml4" 39 1407 1461
type(
  unit
)
"plugins/funind/g_indfun.ml4" 39 1407 1455 "plugins/funind/g_indfun.ml4" 39 1407 1461
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 39 1407 1440 "plugins/funind/g_indfun.ml4" 39 1407 1461
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 39 1407 1465 "plugins/funind/g_indfun.ml4" 39 1407 1481
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  int_ref pr_with_bindings "plugins/funind/g_indfun.ml4" 33 1245 1249 "plugins/funind/g_indfun.ml4" 33 1245 1265
)
"plugins/funind/g_indfun.ml4" 39 1407 1482 "plugins/funind/g_indfun.ml4" 39 1407 1485
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 36 1327 1349 "plugins/funind/g_indfun.ml4" 36 1327 1352
)
"plugins/funind/g_indfun.ml4" 39 1407 1486 "plugins/funind/g_indfun.ml4" 39 1407 1490
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prlc "plugins/funind/g_indfun.ml4" 36 1327 1353 "plugins/funind/g_indfun.ml4" 36 1327 1357
)
"plugins/funind/g_indfun.ml4" 39 1407 1491 "plugins/funind/g_indfun.ml4" 39 1407 1492
type(
  'a * 'a Rawterm.bindings
)
ident(
  int_ref b "plugins/funind/g_indfun.ml4" 39 1407 1418 "plugins/funind/g_indfun.ml4" 39 1407 1419
)
"plugins/funind/g_indfun.ml4" 39 1407 1465 "plugins/funind/g_indfun.ml4" 39 1407 1492
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 39 1407 1440 "plugins/funind/g_indfun.ml4" 39 1407 1492
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 39 1407 1433 "plugins/funind/g_indfun.ml4" 39 1407 1493
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 39 1407 1423 "plugins/funind/g_indfun.ml4" 39 1407 1493
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 37 1368 1370 "plugins/funind/g_indfun.ml4" 37 1368 1493
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 36 1327 1360 "plugins/funind/g_indfun.ml4" 36 1327 1493
type(
  ('a * 'a Rawterm.bindings) option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 36 1327 1358 "plugins/funind/g_indfun.ml4" 36 1327 1493
type(
  'b -> ('a * 'a Rawterm.bindings) option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 36 1327 1353 "plugins/funind/g_indfun.ml4" 36 1327 1493
type(
  ('a -> Pp.std_ppcmds) ->
  'b -> ('a * 'a Rawterm.bindings) option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 36 1327 1349 "plugins/funind/g_indfun.ml4" 36 1327 1493
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) ->
  'b -> ('a * 'a Rawterm.bindings) option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 47 1789 1793 "plugins/funind/g_indfun.ml4" 47 1789 1815
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  def pr_with_bindings_typed "plugins/funind/g_indfun.ml4" 51 1879 1879 --
)
"plugins/funind/g_indfun.ml4" 47 1789 1816 "plugins/funind/g_indfun.ml4" 47 1789 1819
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/g_indfun.ml4" 47 1789 1820 "plugins/funind/g_indfun.ml4" 47 1789 1877
)
"plugins/funind/g_indfun.ml4" 47 1789 1820 "plugins/funind/g_indfun.ml4" 47 1789 1824
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prlc "plugins/funind/g_indfun.ml4" 47 1789 1825 "plugins/funind/g_indfun.ml4" 47 1789 1877
)
"plugins/funind/g_indfun.ml4" 47 1789 1826 "plugins/funind/g_indfun.ml4" 47 1789 1827
type(
  'a
)
ident(
  def c "plugins/funind/g_indfun.ml4" 48 1834 1836 "plugins/funind/g_indfun.ml4" 48 1834 1877
)
"plugins/funind/g_indfun.ml4" 47 1789 1828 "plugins/funind/g_indfun.ml4" 47 1789 1830
type(
  'a Rawterm.bindings
)
ident(
  def bl "plugins/funind/g_indfun.ml4" 48 1834 1836 "plugins/funind/g_indfun.ml4" 48 1834 1877
)
"plugins/funind/g_indfun.ml4" 47 1789 1826 "plugins/funind/g_indfun.ml4" 47 1789 1830
type(
  'a * 'a Rawterm.bindings
)
"plugins/funind/g_indfun.ml4" 48 1834 1836 "plugins/funind/g_indfun.ml4" 48 1834 1839
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 47 1789 1816 "plugins/funind/g_indfun.ml4" 47 1789 1819
)
"plugins/funind/g_indfun.ml4" 48 1834 1840 "plugins/funind/g_indfun.ml4" 48 1834 1841
type(
  'a
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 47 1789 1826 "plugins/funind/g_indfun.ml4" 47 1789 1827
)
"plugins/funind/g_indfun.ml4" 48 1834 1836 "plugins/funind/g_indfun.ml4" 48 1834 1841
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 49 1845 1847 "plugins/funind/g_indfun.ml4" 49 1845 1849
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.hv
)
"plugins/funind/g_indfun.ml4" 49 1845 1850 "plugins/funind/g_indfun.ml4" 49 1845 1851
type(
  int
)
"plugins/funind/g_indfun.ml4" 49 1845 1853 "plugins/funind/g_indfun.ml4" 49 1845 1864
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  int_ref pr_bindings "plugins/funind/g_indfun.ml4" 24 895 899 "plugins/funind/g_indfun.ml4" 24 895 910
)
"plugins/funind/g_indfun.ml4" 49 1845 1865 "plugins/funind/g_indfun.ml4" 49 1845 1868
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 47 1789 1816 "plugins/funind/g_indfun.ml4" 47 1789 1819
)
"plugins/funind/g_indfun.ml4" 49 1845 1869 "plugins/funind/g_indfun.ml4" 49 1845 1873
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prlc "plugins/funind/g_indfun.ml4" 47 1789 1820 "plugins/funind/g_indfun.ml4" 47 1789 1824
)
"plugins/funind/g_indfun.ml4" 49 1845 1874 "plugins/funind/g_indfun.ml4" 49 1845 1876
type(
  'a Rawterm.bindings
)
ident(
  int_ref bl "plugins/funind/g_indfun.ml4" 47 1789 1828 "plugins/funind/g_indfun.ml4" 47 1789 1830
)
"plugins/funind/g_indfun.ml4" 49 1845 1853 "plugins/funind/g_indfun.ml4" 49 1845 1876
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 49 1845 1847 "plugins/funind/g_indfun.ml4" 49 1845 1877
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 48 1834 1836 "plugins/funind/g_indfun.ml4" 48 1834 1877
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 47 1789 1825 "plugins/funind/g_indfun.ml4" 47 1789 1877
type(
  'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 47 1789 1820 "plugins/funind/g_indfun.ml4" 47 1789 1877
type(
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 47 1789 1816 "plugins/funind/g_indfun.ml4" 47 1789 1877
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 51 1879 1883 "plugins/funind/g_indfun.ml4" 51 1879 1905
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) ->
  'b -> ('a * 'a Rawterm.bindings) Evd.sigma option -> Pp.std_ppcmds
)
ident(
  def pr_fun_ind_using_typed "plugins/funind/g_indfun.ml4" 57 2066 2066 --
)
"plugins/funind/g_indfun.ml4" 51 1879 1906 "plugins/funind/g_indfun.ml4" 51 1879 1909
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/g_indfun.ml4" 51 1879 1910 "plugins/funind/g_indfun.ml4" 51 1879 2063
)
"plugins/funind/g_indfun.ml4" 51 1879 1910 "plugins/funind/g_indfun.ml4" 51 1879 1914
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prlc "plugins/funind/g_indfun.ml4" 51 1879 1915 "plugins/funind/g_indfun.ml4" 51 1879 2063
)
"plugins/funind/g_indfun.ml4" 51 1879 1915 "plugins/funind/g_indfun.ml4" 51 1879 1916
type(
  'b
)
"plugins/funind/g_indfun.ml4" 51 1879 1917 "plugins/funind/g_indfun.ml4" 51 1879 1922
type(
  ('a * 'a Rawterm.bindings) Evd.sigma option
)
ident(
  def opt_c "plugins/funind/g_indfun.ml4" 52 1925 1927 "plugins/funind/g_indfun.ml4" 52 1925 2063
)
"plugins/funind/g_indfun.ml4" 52 1925 1933 "plugins/funind/g_indfun.ml4" 52 1925 1938
type(
  ('a * 'a Rawterm.bindings) Evd.sigma option
)
ident(
  int_ref opt_c "plugins/funind/g_indfun.ml4" 51 1879 1917 "plugins/funind/g_indfun.ml4" 51 1879 1922
)
"plugins/funind/g_indfun.ml4" 53 1944 1950 "plugins/funind/g_indfun.ml4" 53 1944 1954
type(
  ('a * 'a Rawterm.bindings) Evd.sigma option
)
"plugins/funind/g_indfun.ml4" 53 1944 1958 "plugins/funind/g_indfun.ml4" 53 1944 1960
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/g_indfun.ml4" 53 1944 1961 "plugins/funind/g_indfun.ml4" 53 1944 1963
type(
  unit
)
"plugins/funind/g_indfun.ml4" 53 1944 1958 "plugins/funind/g_indfun.ml4" 53 1944 1963
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 54 1964 1975 "plugins/funind/g_indfun.ml4" 54 1964 1976
type(
  ('a * 'a Rawterm.bindings) Evd.sigma
)
ident(
  def b "plugins/funind/g_indfun.ml4" 54 1964 1980 "plugins/funind/g_indfun.ml4" 54 1964 2063
)
"plugins/funind/g_indfun.ml4" 54 1964 1970 "plugins/funind/g_indfun.ml4" 54 1964 1976
type(
  ('a * 'a Rawterm.bindings) Evd.sigma option
)
"plugins/funind/g_indfun.ml4" 54 1964 1980 "plugins/funind/g_indfun.ml4" 54 1964 1983
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 54 1964 1984 "plugins/funind/g_indfun.ml4" 54 1964 1986
type(
  unit
)
"plugins/funind/g_indfun.ml4" 54 1964 1980 "plugins/funind/g_indfun.ml4" 54 1964 1986
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 54 1964 1990 "plugins/funind/g_indfun.ml4" 54 1964 1993
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.hov
)
"plugins/funind/g_indfun.ml4" 54 1964 1994 "plugins/funind/g_indfun.ml4" 54 1964 1995
type(
  int
)
"plugins/funind/g_indfun.ml4" 54 1964 1997 "plugins/funind/g_indfun.ml4" 54 1964 2000
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 54 1964 2001 "plugins/funind/g_indfun.ml4" 54 1964 2008
type(
  string
)
"plugins/funind/g_indfun.ml4" 54 1964 1997 "plugins/funind/g_indfun.ml4" 54 1964 2008
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 54 1964 2012 "plugins/funind/g_indfun.ml4" 54 1964 2015
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 54 1964 2016 "plugins/funind/g_indfun.ml4" 54 1964 2018
type(
  unit
)
"plugins/funind/g_indfun.ml4" 54 1964 2012 "plugins/funind/g_indfun.ml4" 54 1964 2018
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 54 1964 1997 "plugins/funind/g_indfun.ml4" 54 1964 2018
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 54 1964 2022 "plugins/funind/g_indfun.ml4" 54 1964 2044
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  int_ref pr_with_bindings_typed "plugins/funind/g_indfun.ml4" 47 1789 1793 "plugins/funind/g_indfun.ml4" 47 1789 1815
)
"plugins/funind/g_indfun.ml4" 54 1964 2045 "plugins/funind/g_indfun.ml4" 54 1964 2048
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 51 1879 1906 "plugins/funind/g_indfun.ml4" 51 1879 1909
)
"plugins/funind/g_indfun.ml4" 54 1964 2049 "plugins/funind/g_indfun.ml4" 54 1964 2053
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prlc "plugins/funind/g_indfun.ml4" 51 1879 1910 "plugins/funind/g_indfun.ml4" 51 1879 1914
)
"plugins/funind/g_indfun.ml4" 54 1964 2054 "plugins/funind/g_indfun.ml4" 54 1964 2055
type(
  ('a * 'a Rawterm.bindings) Evd.sigma
)
ident(
  int_ref b "plugins/funind/g_indfun.ml4" 54 1964 1975 "plugins/funind/g_indfun.ml4" 54 1964 1976
)
"plugins/funind/g_indfun.ml4" 54 1964 2054 "plugins/funind/g_indfun.ml4" 54 1964 2062
type(
  'a * 'a Rawterm.bindings
)
"plugins/funind/g_indfun.ml4" 54 1964 2022 "plugins/funind/g_indfun.ml4" 54 1964 2062
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 54 1964 1997 "plugins/funind/g_indfun.ml4" 54 1964 2062
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 54 1964 1990 "plugins/funind/g_indfun.ml4" 54 1964 2063
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 54 1964 1980 "plugins/funind/g_indfun.ml4" 54 1964 2063
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 52 1925 1927 "plugins/funind/g_indfun.ml4" 52 1925 2063
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 51 1879 1917 "plugins/funind/g_indfun.ml4" 51 1879 2063
type(
  ('a * 'a Rawterm.bindings) Evd.sigma option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 51 1879 1915 "plugins/funind/g_indfun.ml4" 51 1879 2063
type(
  'b -> ('a * 'a Rawterm.bindings) Evd.sigma option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 51 1879 1910 "plugins/funind/g_indfun.ml4" 51 1879 2063
type(
  ('a -> Pp.std_ppcmds) ->
  'b -> ('a * 'a Rawterm.bindings) Evd.sigma option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 51 1879 1906 "plugins/funind/g_indfun.ml4" 51 1879 2063
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) ->
  'b -> ('a * 'a Rawterm.bindings) Evd.sigma option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 64 2318 2366 "plugins/funind/g_indfun.ml4" 64 2318 2367
type(
  Topconstr.constr_expr Rawterm.with_bindings
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
"plugins/funind/g_indfun.ml4" 64 2318 2361 "plugins/funind/g_indfun.ml4" 64 2318 2367
type(
  Topconstr.constr_expr Rawterm.with_bindings option
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option
)
"plugins/funind/g_indfun.ml4" 65 2370 2381 "plugins/funind/g_indfun.ml4" 65 2370 2385
type(
  Topconstr.constr_expr Rawterm.with_bindings option
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option
)
"plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
  Tacexpr.typed_abstract_argument_type *
  Term.constr Rawterm.with_bindings Evd.sigma option
  Pptactic.extra_genarg_printer
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
  Pptactic.extra_genarg_printer
)
ident(
  int_ref pr_fun_ind_using_typed "plugins/funind/g_indfun.ml4" 51 1879 1883 "plugins/funind/g_indfun.ml4" 51 1879 1905
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
  Tacexpr.typed_abstract_argument_type
)
ident(
  int_ref wit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
  Tacexpr.glob_abstract_argument_type *
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
  Pptactic.glob_extra_genarg_printer
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
  Pptactic.glob_extra_genarg_printer
)
ident(
  int_ref pr_fun_ind_using "plugins/funind/g_indfun.ml4" 36 1327 1331 "plugins/funind/g_indfun.ml4" 36 1327 1347
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
  Tacexpr.glob_abstract_argument_type
)
ident(
  int_ref globwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option
  Tacexpr.raw_abstract_argument_type *
  Topconstr.constr_expr Rawterm.with_bindings option
  Pptactic.raw_extra_genarg_printer
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option
  Pptactic.raw_extra_genarg_printer
)
ident(
  int_ref pr_fun_ind_using "plugins/funind/g_indfun.ml4" 36 1327 1331 "plugins/funind/g_indfun.ml4" 36 1327 1347
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option
  Tacexpr.raw_abstract_argument_type
)
ident(
  int_ref rawwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option
  Tacexpr.raw_abstract_argument_type *
  Topconstr.constr_expr Rawterm.with_bindings option
  Pptactic.raw_extra_genarg_printer ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
  Tacexpr.glob_abstract_argument_type *
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
  Pptactic.glob_extra_genarg_printer ->
  Term.constr Rawterm.with_bindings Evd.sigma option
  Tacexpr.typed_abstract_argument_type *
  Term.constr Rawterm.with_bindings Evd.sigma option
  Pptactic.extra_genarg_printer -> unit
)
ident(
  ext_ref Pptactic.declare_extra_genarg_pprule
)
type(
  unit
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  string option * Gramext.g_assoc option *
  (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr Rawterm.with_bindings -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_a -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_b -> Topconstr.constr_expr Rawterm.with_bindings option
)
type(
  '_b
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  ('_b -> Topconstr.constr_expr Rawterm.with_bindings option) ->
  Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_a
)
type(
  ('_a -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr Rawterm.with_bindings
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr_with_bindings
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Topconstr.constr_expr Rawterm.with_bindings ->
  Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr Rawterm.with_bindings
)
ident(
  def c "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings -> Gramext.g_action) ->
  Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_c -> Topconstr.constr_expr Rawterm.with_bindings option
)
type(
  '_c
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  ('_c -> Topconstr.constr_expr Rawterm.with_bindings option) ->
  Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Gramext.g_assoc option
)
type(
  string option
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  Gramext.position option
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option Pcoq.Gram.Entry.e
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option Pcoq.Gram.Entry.e
)
ident(
  int_ref fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option Pcoq.Gram.Entry.e ->
  Gramext.position option ->
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list -> unit
)
ident(
  ext_ref Pcoq.Gram.extend
)
type(
  unit
)
type(
  (Tacinterp.glob_sign ->
   Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument) *
  (Tacinterp.interp_sign ->
   Proof_type.goal Tacmach.sigma ->
   Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument) *
  (Mod_subst.substitution ->
   Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument)
)
type(
  Mod_subst.substitution ->
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Mod_subst.substitution
)
ident(
  int_ref subst "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Mod_subst.substitution ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr_with_bindings
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings, Genarg.glevel)
  Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option ->
  Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Mod_subst.substitution
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Mod_subst.substitution ->
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Tacinterp.subst_genarg
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr_with_bindings
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings, Genarg.glevel)
  Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Mod_subst.substitution
)
ident(
  def s "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option ->
  Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Mod_subst.substitution
)
ident(
  def subst "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.interp_sign
)
ident(
  int_ref ist "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option ->
  Term.constr Rawterm.with_bindings Evd.sigma option
)
type(
  Proof_type.goal Tacmach.sigma ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option ->
  Term.constr Rawterm.with_bindings Evd.sigma option
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option ->
  Term.constr Rawterm.with_bindings Evd.sigma option
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr_with_bindings
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings, Genarg.glevel)
  Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option ->
  Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.interp_sign
)
ident(
  int_ref ist "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Tacinterp.interp_genarg
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_constr_with_bindings
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument ->
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.interp_sign
)
ident(
  def ist "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Term.constr Rawterm.with_bindings Evd.sigma option ->
  Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.interp_sign
)
ident(
  def ist "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.glob_sign ->
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument ->
  Topconstr.constr_expr Rawterm.with_bindings option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Tacinterp.glob_sign
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.glob_sign ->
  Topconstr.constr_expr Rawterm.with_bindings option ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Tacexpr.raw_generic_argument
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr_with_bindings
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Topconstr.constr_expr Rawterm.with_bindings option ->
  Tacexpr.raw_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacinterp.glob_sign
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.glob_sign ->
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Tacinterp.intern_genarg
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr_with_bindings
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings, Genarg.glevel)
  Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.glob_sign
)
ident(
  def e "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr Rawterm.with_bindings option ->
  Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  Tacinterp.glob_sign
)
ident(
  def e "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  string ->
  (Tacinterp.glob_sign ->
   Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument) *
  (Tacinterp.interp_sign ->
   Proof_type.goal Tacmach.sigma ->
   Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument) *
  (Mod_subst.substitution ->
   Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument) ->
  unit
)
ident(
  ext_ref Tacinterp.add_interp_genarg
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option Pcoq.Gram.Entry.e
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  string ->
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Topconstr.constr_expr Rawterm.with_bindings option Pcoq.Gram.Entry.e
)
ident(
  ext_ref Pcoq.create_generic_entry
)
type(
  Topconstr.constr_expr Rawterm.with_bindings option Pcoq.Gram.Entry.e
)
ident(
  def fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 --
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type *
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  string ->
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type *
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.create_arg
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type *
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Topconstr.constr_expr Rawterm.with_bindings option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  def rawwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 --
)
type(
  (Genarg.rawconstr_and_expr Rawterm.with_bindings option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  def globwit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 --
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  def wit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 --
)
"plugins/funind/g_indfun.ml4" 70 2418 2449 "plugins/funind/g_indfun.ml4" 70 2418 2475
call(
  stack
)
type(
  string option
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Rawterm.quantified_hypothesis ->
  Libnames.global_reference option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Rawterm.quantified_hypothesis
)
ident(
  int_ref hyp "plugins/funind/g_indfun.ml4" 70 2418 2449 "plugins/funind/g_indfun.ml4" 70 2418 2475
)
type(
  (Rawterm.quantified_hypothesis, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_quant_hyp
)
type(
  (Rawterm.quantified_hypothesis, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Rawterm.quantified_hypothesis -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Rawterm.quantified_hypothesis
)
ident(
  def hyp "plugins/funind/g_indfun.ml4" 70 2418 2476 "plugins/funind/g_indfun.ml4" 70 2418 2496
)
"plugins/funind/g_indfun.ml4" 70 2418 2476 "plugins/funind/g_indfun.ml4" 70 2418 2496
call(
  stack
)
call(
  stack
)
type(
  string option
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Libnames.global_reference option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Libnames.global_reference option
)
ident(
  int_ref fname "plugins/funind/g_indfun.ml4" 70 2418 2476 "plugins/funind/g_indfun.ml4" 70 2418 2496
)
type(
  (Libnames.global_reference option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
type(
  (Libnames.global_reference, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_ref
)
type(
  (Libnames.global_reference, Genarg.tlevel) Genarg.abstract_argument_type ->
  (Libnames.global_reference option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Libnames.global_reference option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Libnames.global_reference option -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Libnames.global_reference option
)
ident(
  def fname "plugins/funind/g_indfun.ml4" 69 2394 2394 "plugins/funind/g_indfun.ml4" 69 2394 2550
)
"plugins/funind/g_indfun.ml4" 72 2509 2516 "plugins/funind/g_indfun.ml4" 72 2509 2529
type(
  Rawterm.quantified_hypothesis ->
  Libnames.global_reference option -> Tacmach.tactic
)
ident(
  ext_ref Invfun.invfun
)
type(
  Rawterm.quantified_hypothesis ->
  Libnames.global_reference option -> Proof_type.tactic
)
ident(
  ext_ref Invfun.invfun
)
"plugins/funind/g_indfun.ml4" 72 2509 2530 "plugins/funind/g_indfun.ml4" 72 2509 2533
type(
  Rawterm.quantified_hypothesis
)
ident(
  int_ref hyp "plugins/funind/g_indfun.ml4" 70 2418 2449 "plugins/funind/g_indfun.ml4" 70 2418 2539
)
type(
  Rawterm.quantified_hypothesis
)
ident(
  int_ref hyp "plugins/funind/g_indfun.ml4" 70 2418 2449 "plugins/funind/g_indfun.ml4" 70 2418 2475
)
"plugins/funind/g_indfun.ml4" 72 2509 2534 "plugins/funind/g_indfun.ml4" 72 2509 2539
type(
  Libnames.global_reference option
)
ident(
  int_ref fname "plugins/funind/g_indfun.ml4" 70 2418 2476 "plugins/funind/g_indfun.ml4" 70 2418 2539
)
type(
  Libnames.global_reference option
)
ident(
  int_ref fname "plugins/funind/g_indfun.ml4" 70 2418 2476 "plugins/funind/g_indfun.ml4" 70 2418 2496
)
"plugins/funind/g_indfun.ml4" 72 2509 2516 "plugins/funind/g_indfun.ml4" 72 2509 2539
call(
  tail
)
call(
  stack
)
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals)
)
type(
  int * Pptactic.grammar_terminals
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  bool
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 70 2418 2476 "plugins/funind/g_indfun.ml4" 70 2418 2539
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  Libnames.global_reference option
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref fname "" -1 0 0 "" -1 0 0
)
type(
  (Libnames.global_reference option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
type(
  (Libnames.global_reference, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_ref
)
type(
  (Libnames.global_reference, Genarg.tlevel) Genarg.abstract_argument_type ->
  (Libnames.global_reference option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Libnames.global_reference option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Libnames.global_reference option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Libnames.global_reference option
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref fname "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 70 2418 2449 "plugins/funind/g_indfun.ml4" 70 2418 2539
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  Tacmach.tactic
)
type(
  Rawterm.quantified_hypothesis
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref hyp "" -1 0 0 "" -1 0 0
)
type(
  (Rawterm.quantified_hypothesis, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_quant_hyp
)
type(
  (Rawterm.quantified_hypothesis, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Rawterm.quantified_hypothesis
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Rawterm.quantified_hypothesis
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref hyp "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 69 2394 2394 "plugins/funind/g_indfun.ml4" 69 2394 2550
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
type(
  unit
)
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
  unit
)
ident(
  ext_ref Pptactic.declare_extra_tactic_pprule
)
type(
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
   unit) ->
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals))
  list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_tactic_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 69 2394 2394 "plugins/funind/g_indfun.ml4" 69 2394 2550
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 69 2394 2394 "plugins/funind/g_indfun.ml4" 69 2394 2550
)
type(
  unit
)
type(
  unit
)
type(
  string -> unit
)
type(
  unit
)
type(
  Genarg.glevel Genarg.generic_argument list
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 69 2394 2394 "plugins/funind/g_indfun.ml4" 69 2394 2550
)
type(
  (Genarg.rawconstr_and_expr,
   Genarg.rawconstr_and_expr * Pattern.constr_pattern,
   Names.evaluable_global_reference Genarg.and_short_name Rawterm.or_var,
   Names.inductive Rawterm.or_var,
   Nametab.ltac_constant Util.located Rawterm.or_var,
   Names.identifier Util.located, Tacexpr.glob_tactic_expr, Genarg.glevel)
  Tacexpr.gen_atomic_tactic_expr
)
type(
  Tacexpr.glob_tactic_expr
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 69 2394 2394 "plugins/funind/g_indfun.ml4" 69 2394 2550
)
type(
  string -> Tacexpr.glob_tactic_expr -> unit
)
ident(
  ext_ref Tacinterp.add_primitive_tactic
)
type(
  string
)
ident(
  def s "plugins/funind/g_indfun.ml4" 69 2394 2394 "plugins/funind/g_indfun.ml4" 69 2394 2550
)
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  Tacexpr.typed_generic_argument list -> Tacmach.tactic
)
type(
  string -> (Tacexpr.typed_generic_argument list -> Tacmach.tactic) -> unit
)
ident(
  ext_ref Tacinterp.add_tactic
)
type(
  unit
)
type(
  Proof_type.tactic
)
type(
  ?dflt:bool ->
  string ->
  Tacexpr.typed_generic_argument list ->
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Refiner.abstract_extended_tactic
)
type(
  Rawterm.quantified_hypothesis ->
  Libnames.global_reference option -> Proof_type.tactic
)
ident(
  def h_newfuninv "plugins/funind/g_indfun.ml4" 69 2394 2394 --
)
"plugins/funind/g_indfun.ml4" 77 2553 2557 "plugins/funind/g_indfun.ml4" 77 2553 2572
type(
  'a ->
  'b -> 'c -> Genarg.intro_pattern_expr Util.located option -> Pp.std_ppcmds
)
ident(
  def pr_intro_as_pat "plugins/funind/g_indfun.ml4" 83 2697 2697 --
)
"plugins/funind/g_indfun.ml4" 77 2553 2573 "plugins/funind/g_indfun.ml4" 77 2553 2576
type(
  'a
)
ident(
  def prc "plugins/funind/g_indfun.ml4" 77 2553 2577 "plugins/funind/g_indfun.ml4" 77 2553 2694
)
"plugins/funind/g_indfun.ml4" 77 2553 2577 "plugins/funind/g_indfun.ml4" 77 2553 2578
type(
  'b
)
"plugins/funind/g_indfun.ml4" 77 2553 2579 "plugins/funind/g_indfun.ml4" 77 2553 2580
type(
  'c
)
"plugins/funind/g_indfun.ml4" 77 2553 2581 "plugins/funind/g_indfun.ml4" 77 2553 2584
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  def pat "plugins/funind/g_indfun.ml4" 78 2587 2589 "plugins/funind/g_indfun.ml4" 78 2587 2694
)
"plugins/funind/g_indfun.ml4" 78 2587 2595 "plugins/funind/g_indfun.ml4" 78 2587 2598
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref pat "plugins/funind/g_indfun.ml4" 77 2553 2581 "plugins/funind/g_indfun.ml4" 77 2553 2584
)
"plugins/funind/g_indfun.ml4" 79 2604 2615 "plugins/funind/g_indfun.ml4" 79 2604 2618
type(
  Genarg.intro_pattern_expr Util.located
)
ident(
  def pat "plugins/funind/g_indfun.ml4" 79 2604 2622 "plugins/funind/g_indfun.ml4" 79 2604 2674
)
"plugins/funind/g_indfun.ml4" 79 2604 2610 "plugins/funind/g_indfun.ml4" 79 2604 2618
type(
  Genarg.intro_pattern_expr Util.located option
)
"plugins/funind/g_indfun.ml4" 79 2604 2622 "plugins/funind/g_indfun.ml4" 79 2604 2625
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 79 2604 2626 "plugins/funind/g_indfun.ml4" 79 2604 2628
type(
  unit
)
"plugins/funind/g_indfun.ml4" 79 2604 2622 "plugins/funind/g_indfun.ml4" 79 2604 2628
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 79 2604 2632 "plugins/funind/g_indfun.ml4" 79 2604 2635
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 79 2604 2636 "plugins/funind/g_indfun.ml4" 79 2604 2640
type(
  string
)
"plugins/funind/g_indfun.ml4" 79 2604 2632 "plugins/funind/g_indfun.ml4" 79 2604 2640
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 79 2604 2622 "plugins/funind/g_indfun.ml4" 79 2604 2640
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 79 2604 2644 "plugins/funind/g_indfun.ml4" 79 2604 2647
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 79 2604 2648 "plugins/funind/g_indfun.ml4" 79 2604 2650
type(
  unit
)
"plugins/funind/g_indfun.ml4" 79 2604 2644 "plugins/funind/g_indfun.ml4" 79 2604 2650
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 79 2604 2622 "plugins/funind/g_indfun.ml4" 79 2604 2650
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 79 2604 2654 "plugins/funind/g_indfun.ml4" 79 2604 2670
type(
  Genarg.intro_pattern_expr Util.located -> Pp.std_ppcmds
)
ident(
  ext_ref Genarg.pr_intro_pattern
)
"plugins/funind/g_indfun.ml4" 79 2604 2671 "plugins/funind/g_indfun.ml4" 79 2604 2674
type(
  Genarg.intro_pattern_expr Util.located
)
ident(
  int_ref pat "plugins/funind/g_indfun.ml4" 79 2604 2615 "plugins/funind/g_indfun.ml4" 79 2604 2618
)
"plugins/funind/g_indfun.ml4" 79 2604 2654 "plugins/funind/g_indfun.ml4" 79 2604 2674
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 79 2604 2622 "plugins/funind/g_indfun.ml4" 79 2604 2674
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 80 2675 2681 "plugins/funind/g_indfun.ml4" 80 2675 2685
type(
  Genarg.intro_pattern_expr Util.located option
)
"plugins/funind/g_indfun.ml4" 80 2675 2689 "plugins/funind/g_indfun.ml4" 80 2675 2691
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/g_indfun.ml4" 80 2675 2692 "plugins/funind/g_indfun.ml4" 80 2675 2694
type(
  unit
)
"plugins/funind/g_indfun.ml4" 80 2675 2689 "plugins/funind/g_indfun.ml4" 80 2675 2694
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 78 2587 2589 "plugins/funind/g_indfun.ml4" 78 2587 2694
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 77 2553 2581 "plugins/funind/g_indfun.ml4" 77 2553 2694
type(
  Genarg.intro_pattern_expr Util.located option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 77 2553 2579 "plugins/funind/g_indfun.ml4" 77 2553 2694
type(
  'c -> Genarg.intro_pattern_expr Util.located option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 77 2553 2577 "plugins/funind/g_indfun.ml4" 77 2553 2694
type(
  'b -> 'c -> Genarg.intro_pattern_expr Util.located option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 77 2553 2573 "plugins/funind/g_indfun.ml4" 77 2553 2694
type(
  'a ->
  'b -> 'c -> Genarg.intro_pattern_expr Util.located option -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 84 2778 2828 "plugins/funind/g_indfun.ml4" 84 2778 2832
type(
  Genarg.intro_pattern_expr Util.located
)
ident(
  int_ref ipat "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
"plugins/funind/g_indfun.ml4" 84 2778 2823 "plugins/funind/g_indfun.ml4" 84 2778 2832
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option
)
"plugins/funind/g_indfun.ml4" 85 2835 2845 "plugins/funind/g_indfun.ml4" 85 2835 2849
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option
)
"plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  Genarg.intro_pattern_expr Util.located option
  Tacexpr.typed_abstract_argument_type *
  Genarg.intro_pattern_expr Util.located option Pptactic.extra_genarg_printer
)
type(
  Genarg.intro_pattern_expr Util.located option Pptactic.extra_genarg_printer
)
ident(
  int_ref pr_intro_as_pat "plugins/funind/g_indfun.ml4" 77 2553 2557 "plugins/funind/g_indfun.ml4" 77 2553 2572
)
type(
  Genarg.intro_pattern_expr Util.located option
  Tacexpr.typed_abstract_argument_type
)
ident(
  int_ref wit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Genarg.intro_pattern_expr Util.located option
  Tacexpr.glob_abstract_argument_type *
  Genarg.intro_pattern_expr Util.located option
  Pptactic.glob_extra_genarg_printer
)
type(
  Genarg.intro_pattern_expr Util.located option
  Pptactic.glob_extra_genarg_printer
)
ident(
  int_ref pr_intro_as_pat "plugins/funind/g_indfun.ml4" 77 2553 2557 "plugins/funind/g_indfun.ml4" 77 2553 2572
)
type(
  Genarg.intro_pattern_expr Util.located option
  Tacexpr.glob_abstract_argument_type
)
ident(
  int_ref globwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Genarg.intro_pattern_expr Util.located option
  Tacexpr.raw_abstract_argument_type *
  Genarg.intro_pattern_expr Util.located option
  Pptactic.raw_extra_genarg_printer
)
type(
  Genarg.intro_pattern_expr Util.located option
  Pptactic.raw_extra_genarg_printer
)
ident(
  int_ref pr_intro_as_pat "plugins/funind/g_indfun.ml4" 77 2553 2557 "plugins/funind/g_indfun.ml4" 77 2553 2572
)
type(
  Genarg.intro_pattern_expr Util.located option
  Tacexpr.raw_abstract_argument_type
)
ident(
  int_ref rawwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Genarg.intro_pattern_expr Util.located option
  Tacexpr.raw_abstract_argument_type *
  Genarg.intro_pattern_expr Util.located option
  Pptactic.raw_extra_genarg_printer ->
  Genarg.intro_pattern_expr Util.located option
  Tacexpr.glob_abstract_argument_type *
  Genarg.intro_pattern_expr Util.located option
  Pptactic.glob_extra_genarg_printer ->
  Genarg.intro_pattern_expr Util.located option
  Tacexpr.typed_abstract_argument_type *
  Genarg.intro_pattern_expr Util.located option Pptactic.extra_genarg_printer ->
  unit
)
ident(
  ext_ref Pptactic.declare_extra_genarg_pprule
)
type(
  unit
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  string option * Gramext.g_assoc option *
  (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Genarg.intro_pattern_expr Util.located -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_a -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_b -> Genarg.intro_pattern_expr Util.located option
)
type(
  '_b
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  ('_b -> Genarg.intro_pattern_expr Util.located option) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_a
)
type(
  ('_a -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located
)
ident(
  int_ref ipat "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_intro_pattern
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located ->
  Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located
)
ident(
  def ipat "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located -> Gramext.g_action) ->
  Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_c -> Genarg.intro_pattern_expr Util.located option
)
type(
  '_c
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  ('_c -> Genarg.intro_pattern_expr Util.located option) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Gramext.g_assoc option
)
type(
  string option
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  Gramext.position option
)
type(
  Genarg.intro_pattern_expr Util.located option Pcoq.Gram.Entry.e
)
type(
  Genarg.intro_pattern_expr Util.located option Pcoq.Gram.Entry.e
)
ident(
  int_ref with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Genarg.intro_pattern_expr Util.located option Pcoq.Gram.Entry.e ->
  Gramext.position option ->
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list -> unit
)
ident(
  ext_ref Pcoq.Gram.extend
)
type(
  unit
)
type(
  (Tacinterp.glob_sign ->
   Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument) *
  (Tacinterp.interp_sign ->
   Proof_type.goal Tacmach.sigma ->
   Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument) *
  (Mod_subst.substitution ->
   Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument)
)
type(
  Mod_subst.substitution ->
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument ->
  Genarg.intro_pattern_expr Util.located option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Mod_subst.substitution
)
ident(
  int_ref subst "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Mod_subst.substitution ->
  Genarg.intro_pattern_expr Util.located option ->
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option ->
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_intro_pattern
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.glevel)
  Genarg.abstract_argument_type ->
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located option ->
  Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Mod_subst.substitution
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Mod_subst.substitution ->
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Tacinterp.subst_genarg
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_intro_pattern
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.glevel)
  Genarg.abstract_argument_type ->
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument ->
  Genarg.intro_pattern_expr Util.located option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Mod_subst.substitution
)
ident(
  def s "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located option ->
  Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Mod_subst.substitution
)
ident(
  def subst "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument ->
  Genarg.intro_pattern_expr Util.located option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.interp_sign
)
ident(
  int_ref ist "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Genarg.intro_pattern_expr Util.located option ->
  Genarg.intro_pattern_expr Util.located option
)
type(
  Proof_type.goal Tacmach.sigma ->
  Genarg.intro_pattern_expr Util.located option ->
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option ->
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_intro_pattern
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.glevel)
  Genarg.abstract_argument_type ->
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located option ->
  Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.interp_sign
)
ident(
  int_ref ist "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Tacinterp.interp_genarg
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_intro_pattern
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument ->
  Genarg.intro_pattern_expr Util.located option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.interp_sign
)
ident(
  def ist "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located option ->
  Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.interp_sign
)
ident(
  def ist "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.glob_sign ->
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument ->
  Genarg.intro_pattern_expr Util.located option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Tacinterp.glob_sign
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.glob_sign ->
  Genarg.intro_pattern_expr Util.located option ->
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option ->
  Genarg.intro_pattern_expr Util.located option
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Tacexpr.raw_generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_intro_pattern
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located option ->
  Tacexpr.raw_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacinterp.glob_sign
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.glob_sign ->
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Tacinterp.intern_genarg
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_intro_pattern
)
type(
  (Genarg.intro_pattern_expr Util.located, Genarg.glevel)
  Genarg.abstract_argument_type ->
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument ->
  Genarg.intro_pattern_expr Util.located option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.glob_sign
)
ident(
  def e "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located option ->
  Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  Tacinterp.glob_sign
)
ident(
  def e "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  string ->
  (Tacinterp.glob_sign ->
   Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument) *
  (Tacinterp.interp_sign ->
   Proof_type.goal Tacmach.sigma ->
   Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument) *
  (Mod_subst.substitution ->
   Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument) ->
  unit
)
ident(
  ext_ref Tacinterp.add_interp_genarg
)
type(
  Genarg.intro_pattern_expr Util.located option Pcoq.Gram.Entry.e
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  string ->
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located option Pcoq.Gram.Entry.e
)
ident(
  ext_ref Pcoq.create_generic_entry
)
type(
  Genarg.intro_pattern_expr Util.located option Pcoq.Gram.Entry.e
)
ident(
  def with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 --
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type *
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  string ->
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type *
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.create_arg
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type *
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  def rawwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 --
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  def globwit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 --
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  def wit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 --
)
"plugins/funind/g_indfun.ml4" 92 2884 2913 "plugins/funind/g_indfun.ml4" 92 2884 2931
call(
  stack
)
call(
  stack
)
type(
  string option
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Term.constr list ->
  Term.constr Rawterm.with_bindings Evd.sigma option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 92 2884 2913 "plugins/funind/g_indfun.ml4" 92 2884 2931
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_constr
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type ->
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list1
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type ->
  Term.constr list -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Term.constr list
)
ident(
  def cl "plugins/funind/g_indfun.ml4" 92 2884 2932 "plugins/funind/g_indfun.ml4" 92 2884 2953
)
"plugins/funind/g_indfun.ml4" 92 2884 2932 "plugins/funind/g_indfun.ml4" 92 2884 2953
call(
  stack
)
type(
  string option
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  int_ref princl "plugins/funind/g_indfun.ml4" 92 2884 2932 "plugins/funind/g_indfun.ml4" 92 2884 2953
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Term.constr Rawterm.with_bindings Evd.sigma option ->
  Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  def princl "plugins/funind/g_indfun.ml4" 92 2884 2954 "plugins/funind/g_indfun.ml4" 92 2884 2969
)
"plugins/funind/g_indfun.ml4" 92 2884 2954 "plugins/funind/g_indfun.ml4" 92 2884 2969
call(
  stack
)
type(
  string option
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref pat "plugins/funind/g_indfun.ml4" 92 2884 2954 "plugins/funind/g_indfun.ml4" 92 2884 2969
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located option ->
  Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  def pat "plugins/funind/g_indfun.ml4" 91 2860 2860 "plugins/funind/g_indfun.ml4" 91 2860 3176
)
"plugins/funind/g_indfun.ml4" 94 2981 2992 "plugins/funind/g_indfun.ml4" 94 2981 2993
type(
  Term.constr
)
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 99 3083 3090 "plugins/funind/g_indfun.ml4" 99 3083 3170
)
"plugins/funind/g_indfun.ml4" 94 2981 3002 "plugins/funind/g_indfun.ml4" 94 2981 3004
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 92 2884 2913 "plugins/funind/g_indfun.ml4" 92 2884 3170
)
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 92 2884 2913 "plugins/funind/g_indfun.ml4" 92 2884 2931
)
"plugins/funind/g_indfun.ml4" 95 3010 3014 "plugins/funind/g_indfun.ml4" 95 3010 3016
type(
  Term.constr list
)
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 95 3010 3020 "plugins/funind/g_indfun.ml4" 95 3010 3032
type(
  Term.constr
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 96 3033 3038 "plugins/funind/g_indfun.ml4" 96 3033 3039
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 96 3033 3044 "plugins/funind/g_indfun.ml4" 96 3033 3045
)
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 96 3033 3044 "plugins/funind/g_indfun.ml4" 96 3033 3045
)
"plugins/funind/g_indfun.ml4" 96 3033 3037 "plugins/funind/g_indfun.ml4" 96 3033 3040
type(
  Term.constr list
)
type(
  Term.constr list
)
type(
  Term.constr list
)
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 96 3033 3044 "plugins/funind/g_indfun.ml4" 96 3033 3045
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 96 3033 3038 "plugins/funind/g_indfun.ml4" 96 3033 3039
)
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 96 3033 3038 "plugins/funind/g_indfun.ml4" 96 3033 3039
)
"plugins/funind/g_indfun.ml4" 97 3046 3050 "plugins/funind/g_indfun.ml4" 97 3046 3051
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 97 3046 3059 "plugins/funind/g_indfun.ml4" 97 3046 3072
)
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 97 3046 3059 "plugins/funind/g_indfun.ml4" 97 3046 3072
)
"plugins/funind/g_indfun.ml4" 97 3046 3053 "plugins/funind/g_indfun.ml4" 97 3046 3055
type(
  Term.constr list
)
ident(
  def cl "plugins/funind/g_indfun.ml4" 97 3046 3059 "plugins/funind/g_indfun.ml4" 97 3046 3072
)
type(
  Term.constr list
)
ident(
  def cl "plugins/funind/g_indfun.ml4" 97 3046 3059 "plugins/funind/g_indfun.ml4" 97 3046 3072
)
"plugins/funind/g_indfun.ml4" 97 3046 3050 "plugins/funind/g_indfun.ml4" 97 3046 3055
type(
  Term.constr list
)
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 97 3046 3059 "plugins/funind/g_indfun.ml4" 97 3046 3066
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/g_indfun.ml4" 97 3046 3067 "plugins/funind/g_indfun.ml4" 97 3046 3068
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 97 3046 3050 "plugins/funind/g_indfun.ml4" 97 3046 3051
)
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 97 3046 3050 "plugins/funind/g_indfun.ml4" 97 3046 3051
)
"plugins/funind/g_indfun.ml4" 97 3046 3069 "plugins/funind/g_indfun.ml4" 97 3046 3071
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 97 3046 3053 "plugins/funind/g_indfun.ml4" 97 3046 3055
)
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 97 3046 3053 "plugins/funind/g_indfun.ml4" 97 3046 3055
)
"plugins/funind/g_indfun.ml4" 97 3046 3067 "plugins/funind/g_indfun.ml4" 97 3046 3071
type(
  Term.constr * Term.constr list
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/g_indfun.ml4" 97 3046 3059 "plugins/funind/g_indfun.ml4" 97 3046 3072
call(
  stack
)
call(
  stack
)
type(
  Term.constr
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 94 2981 2996 "plugins/funind/g_indfun.ml4" 94 2981 3072
type(
  Term.constr
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 99 3083 3090 "plugins/funind/g_indfun.ml4" 99 3083 3118
type(
  (Term.constr Rawterm.with_bindings option -> Proof_type.tactic) ->
  Term.constr Rawterm.with_bindings Evd.sigma option -> Proof_type.tactic
)
ident(
  ext_ref Extratactics.onSomeWithHoles
)
type(
  (Term.constr Rawterm.with_bindings option -> Proof_type.tactic) ->
  Term.constr Rawterm.with_bindings Evd.sigma option -> Proof_type.tactic
)
ident(
  ext_ref Extratactics.onSomeWithHoles
)
"plugins/funind/g_indfun.ml4" 99 3083 3124 "plugins/funind/g_indfun.ml4" 99 3083 3125
type(
  Term.constr Rawterm.with_bindings option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 99 3083 3129 "plugins/funind/g_indfun.ml4" 99 3083 3162
)
type(
  Term.constr Rawterm.with_bindings option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 99 3083 3129 "plugins/funind/g_indfun.ml4" 99 3083 3162
)
"plugins/funind/g_indfun.ml4" 99 3083 3129 "plugins/funind/g_indfun.ml4" 99 3083 3149
type(
  bool ->
  Term.constr ->
  Term.constr Rawterm.with_bindings option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
ident(
  ext_ref Indfun.functional_induction
)
type(
  bool ->
  Term.constr ->
  Term.constr Rawterm.with_bindings option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
ident(
  ext_ref Indfun.functional_induction
)
"plugins/funind/g_indfun.ml4" 99 3083 3150 "plugins/funind/g_indfun.ml4" 99 3083 3154
type(
  bool
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 99 3083 3155 "plugins/funind/g_indfun.ml4" 99 3083 3156
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 94 2981 2992 "plugins/funind/g_indfun.ml4" 94 2981 2993
)
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 94 2981 2992 "plugins/funind/g_indfun.ml4" 94 2981 2993
)
"plugins/funind/g_indfun.ml4" 99 3083 3157 "plugins/funind/g_indfun.ml4" 99 3083 3158
type(
  Term.constr Rawterm.with_bindings option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 99 3083 3124 "plugins/funind/g_indfun.ml4" 99 3083 3125
)
type(
  Term.constr Rawterm.with_bindings option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 99 3083 3124 "plugins/funind/g_indfun.ml4" 99 3083 3125
)
"plugins/funind/g_indfun.ml4" 99 3083 3159 "plugins/funind/g_indfun.ml4" 99 3083 3162
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref pat "plugins/funind/g_indfun.ml4" 92 2884 2954 "plugins/funind/g_indfun.ml4" 92 2884 3170
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref pat "plugins/funind/g_indfun.ml4" 92 2884 2954 "plugins/funind/g_indfun.ml4" 92 2884 2969
)
"plugins/funind/g_indfun.ml4" 99 3083 3129 "plugins/funind/g_indfun.ml4" 99 3083 3162
call(
  tail
)
call(
  tail
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 99 3083 3120 "plugins/funind/g_indfun.ml4" 99 3083 3162
type(
  Term.constr Rawterm.with_bindings option -> Proof_type.tactic
)
type(
  Term.constr Rawterm.with_bindings option -> Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 99 3083 3164 "plugins/funind/g_indfun.ml4" 99 3083 3170
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  int_ref princl "plugins/funind/g_indfun.ml4" 92 2884 2932 "plugins/funind/g_indfun.ml4" 92 2884 3170
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  int_ref princl "plugins/funind/g_indfun.ml4" 92 2884 2932 "plugins/funind/g_indfun.ml4" 92 2884 2953
)
"plugins/funind/g_indfun.ml4" 99 3083 3090 "plugins/funind/g_indfun.ml4" 99 3083 3170
call(
  tail
)
call(
  stack
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 94 2981 2988 "plugins/funind/g_indfun.ml4" 94 2981 3170
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals)
)
type(
  int * Pptactic.grammar_terminals
)
type(
  Genarg.argument_type list
)
type(
  Proof_type.tactic
)
type(
  bool
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 92 2884 2954 "plugins/funind/g_indfun.ml4" 92 2884 3170
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Proof_type.tactic
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref pat "" -1 0 0 "" -1 0 0
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument ->
  Genarg.intro_pattern_expr Util.located option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref pat "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 92 2884 2932 "plugins/funind/g_indfun.ml4" 92 2884 3170
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Proof_type.tactic
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref princl "" -1 0 0 "" -1 0 0
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument ->
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref princl "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 92 2884 2913 "plugins/funind/g_indfun.ml4" 92 2884 3170
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
type(
  Term.constr list
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref cl "" -1 0 0 "" -1 0 0
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_constr
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type ->
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list1
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Term.constr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Term.constr list
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref cl "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 91 2860 2860 "plugins/funind/g_indfun.ml4" 91 2860 3176
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
type(
  unit
)
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
  unit
)
ident(
  ext_ref Pptactic.declare_extra_tactic_pprule
)
type(
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
   unit) ->
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals))
  list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_tactic_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 91 2860 2860 "plugins/funind/g_indfun.ml4" 91 2860 3176
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 91 2860 2860 "plugins/funind/g_indfun.ml4" 91 2860 3176
)
type(
  unit
)
type(
  unit
)
type(
  string -> unit
)
type(
  unit
)
type(
  Genarg.glevel Genarg.generic_argument list
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 91 2860 2860 "plugins/funind/g_indfun.ml4" 91 2860 3176
)
type(
  (Genarg.rawconstr_and_expr,
   Genarg.rawconstr_and_expr * Pattern.constr_pattern,
   Names.evaluable_global_reference Genarg.and_short_name Rawterm.or_var,
   Names.inductive Rawterm.or_var,
   Nametab.ltac_constant Util.located Rawterm.or_var,
   Names.identifier Util.located, Tacexpr.glob_tactic_expr, Genarg.glevel)
  Tacexpr.gen_atomic_tactic_expr
)
type(
  Tacexpr.glob_tactic_expr
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 91 2860 2860 "plugins/funind/g_indfun.ml4" 91 2860 3176
)
type(
  string -> Tacexpr.glob_tactic_expr -> unit
)
ident(
  ext_ref Tacinterp.add_primitive_tactic
)
type(
  string
)
ident(
  def s "plugins/funind/g_indfun.ml4" 91 2860 2860 "plugins/funind/g_indfun.ml4" 91 2860 3176
)
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  Tacexpr.typed_generic_argument list -> Tacmach.tactic
)
type(
  string -> (Tacexpr.typed_generic_argument list -> Tacmach.tactic) -> unit
)
ident(
  ext_ref Tacinterp.add_tactic
)
type(
  unit
)
type(
  Proof_type.tactic
)
type(
  ?dflt:bool ->
  string ->
  Tacexpr.typed_generic_argument list ->
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Refiner.abstract_extended_tactic
)
type(
  Term.constr list ->
  Term.constr Rawterm.with_bindings Evd.sigma option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
ident(
  def h_newfunind "plugins/funind/g_indfun.ml4" 91 2860 2860 --
)
"plugins/funind/g_indfun.ml4" 103 3225 3261 "plugins/funind/g_indfun.ml4" 103 3225 3279
call(
  stack
)
call(
  stack
)
type(
  string option
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Term.constr list ->
  Term.constr Rawterm.with_bindings Evd.sigma option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 103 3225 3261 "plugins/funind/g_indfun.ml4" 103 3225 3279
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_constr
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type ->
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list1
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type ->
  Term.constr list -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Term.constr list
)
ident(
  def cl "plugins/funind/g_indfun.ml4" 103 3225 3280 "plugins/funind/g_indfun.ml4" 103 3225 3301
)
"plugins/funind/g_indfun.ml4" 103 3225 3280 "plugins/funind/g_indfun.ml4" 103 3225 3301
call(
  stack
)
type(
  string option
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  int_ref princl "plugins/funind/g_indfun.ml4" 103 3225 3280 "plugins/funind/g_indfun.ml4" 103 3225 3301
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Term.constr Rawterm.with_bindings Evd.sigma option ->
  Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  def princl "plugins/funind/g_indfun.ml4" 103 3225 3302 "plugins/funind/g_indfun.ml4" 103 3225 3317
)
"plugins/funind/g_indfun.ml4" 103 3225 3302 "plugins/funind/g_indfun.ml4" 103 3225 3317
call(
  stack
)
type(
  string option
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref pat "plugins/funind/g_indfun.ml4" 103 3225 3302 "plugins/funind/g_indfun.ml4" 103 3225 3317
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Genarg.intro_pattern_expr Util.located option ->
  Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  def pat "plugins/funind/g_indfun.ml4" 102 3200 3200 "plugins/funind/g_indfun.ml4" 102 3200 3525
)
"plugins/funind/g_indfun.ml4" 105 3329 3340 "plugins/funind/g_indfun.ml4" 105 3329 3341
type(
  Term.constr
)
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 110 3431 3438 "plugins/funind/g_indfun.ml4" 110 3431 3519
)
"plugins/funind/g_indfun.ml4" 105 3329 3350 "plugins/funind/g_indfun.ml4" 105 3329 3352
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 103 3225 3261 "plugins/funind/g_indfun.ml4" 103 3225 3519
)
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 103 3225 3261 "plugins/funind/g_indfun.ml4" 103 3225 3279
)
"plugins/funind/g_indfun.ml4" 106 3358 3362 "plugins/funind/g_indfun.ml4" 106 3358 3364
type(
  Term.constr list
)
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 106 3358 3368 "plugins/funind/g_indfun.ml4" 106 3358 3380
type(
  Term.constr
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 107 3381 3386 "plugins/funind/g_indfun.ml4" 107 3381 3387
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 107 3381 3392 "plugins/funind/g_indfun.ml4" 107 3381 3393
)
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 107 3381 3392 "plugins/funind/g_indfun.ml4" 107 3381 3393
)
"plugins/funind/g_indfun.ml4" 107 3381 3385 "plugins/funind/g_indfun.ml4" 107 3381 3388
type(
  Term.constr list
)
type(
  Term.constr list
)
type(
  Term.constr list
)
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 107 3381 3392 "plugins/funind/g_indfun.ml4" 107 3381 3393
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 107 3381 3386 "plugins/funind/g_indfun.ml4" 107 3381 3387
)
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 107 3381 3386 "plugins/funind/g_indfun.ml4" 107 3381 3387
)
"plugins/funind/g_indfun.ml4" 108 3394 3398 "plugins/funind/g_indfun.ml4" 108 3394 3399
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 108 3394 3407 "plugins/funind/g_indfun.ml4" 108 3394 3420
)
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 108 3394 3407 "plugins/funind/g_indfun.ml4" 108 3394 3420
)
"plugins/funind/g_indfun.ml4" 108 3394 3401 "plugins/funind/g_indfun.ml4" 108 3394 3403
type(
  Term.constr list
)
ident(
  def cl "plugins/funind/g_indfun.ml4" 108 3394 3407 "plugins/funind/g_indfun.ml4" 108 3394 3420
)
type(
  Term.constr list
)
ident(
  def cl "plugins/funind/g_indfun.ml4" 108 3394 3407 "plugins/funind/g_indfun.ml4" 108 3394 3420
)
"plugins/funind/g_indfun.ml4" 108 3394 3398 "plugins/funind/g_indfun.ml4" 108 3394 3403
type(
  Term.constr list
)
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 108 3394 3407 "plugins/funind/g_indfun.ml4" 108 3394 3414
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/g_indfun.ml4" 108 3394 3415 "plugins/funind/g_indfun.ml4" 108 3394 3416
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 108 3394 3398 "plugins/funind/g_indfun.ml4" 108 3394 3399
)
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 108 3394 3398 "plugins/funind/g_indfun.ml4" 108 3394 3399
)
"plugins/funind/g_indfun.ml4" 108 3394 3417 "plugins/funind/g_indfun.ml4" 108 3394 3419
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 108 3394 3401 "plugins/funind/g_indfun.ml4" 108 3394 3403
)
type(
  Term.constr list
)
ident(
  int_ref cl "plugins/funind/g_indfun.ml4" 108 3394 3401 "plugins/funind/g_indfun.ml4" 108 3394 3403
)
"plugins/funind/g_indfun.ml4" 108 3394 3415 "plugins/funind/g_indfun.ml4" 108 3394 3419
type(
  Term.constr * Term.constr list
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/g_indfun.ml4" 108 3394 3407 "plugins/funind/g_indfun.ml4" 108 3394 3420
call(
  stack
)
call(
  stack
)
type(
  Term.constr
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 105 3329 3344 "plugins/funind/g_indfun.ml4" 105 3329 3420
type(
  Term.constr
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 110 3431 3438 "plugins/funind/g_indfun.ml4" 110 3431 3466
type(
  (Term.constr Rawterm.with_bindings option -> Proof_type.tactic) ->
  Term.constr Rawterm.with_bindings Evd.sigma option -> Proof_type.tactic
)
ident(
  ext_ref Extratactics.onSomeWithHoles
)
type(
  (Term.constr Rawterm.with_bindings option -> Proof_type.tactic) ->
  Term.constr Rawterm.with_bindings Evd.sigma option -> Proof_type.tactic
)
ident(
  ext_ref Extratactics.onSomeWithHoles
)
"plugins/funind/g_indfun.ml4" 110 3431 3472 "plugins/funind/g_indfun.ml4" 110 3431 3473
type(
  Term.constr Rawterm.with_bindings option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 110 3431 3477 "plugins/funind/g_indfun.ml4" 110 3431 3511
)
type(
  Term.constr Rawterm.with_bindings option
)
ident(
  def x "plugins/funind/g_indfun.ml4" 110 3431 3477 "plugins/funind/g_indfun.ml4" 110 3431 3511
)
"plugins/funind/g_indfun.ml4" 110 3431 3477 "plugins/funind/g_indfun.ml4" 110 3431 3497
type(
  bool ->
  Term.constr ->
  Term.constr Rawterm.with_bindings option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
ident(
  ext_ref Indfun.functional_induction
)
type(
  bool ->
  Term.constr ->
  Term.constr Rawterm.with_bindings option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
ident(
  ext_ref Indfun.functional_induction
)
"plugins/funind/g_indfun.ml4" 110 3431 3498 "plugins/funind/g_indfun.ml4" 110 3431 3503
type(
  bool
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 110 3431 3504 "plugins/funind/g_indfun.ml4" 110 3431 3505
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 105 3329 3340 "plugins/funind/g_indfun.ml4" 105 3329 3341
)
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 105 3329 3340 "plugins/funind/g_indfun.ml4" 105 3329 3341
)
"plugins/funind/g_indfun.ml4" 110 3431 3506 "plugins/funind/g_indfun.ml4" 110 3431 3507
type(
  Term.constr Rawterm.with_bindings option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 110 3431 3472 "plugins/funind/g_indfun.ml4" 110 3431 3473
)
type(
  Term.constr Rawterm.with_bindings option
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 110 3431 3472 "plugins/funind/g_indfun.ml4" 110 3431 3473
)
"plugins/funind/g_indfun.ml4" 110 3431 3508 "plugins/funind/g_indfun.ml4" 110 3431 3511
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref pat "plugins/funind/g_indfun.ml4" 103 3225 3302 "plugins/funind/g_indfun.ml4" 103 3225 3519
)
type(
  Genarg.intro_pattern_expr Util.located option
)
ident(
  int_ref pat "plugins/funind/g_indfun.ml4" 103 3225 3302 "plugins/funind/g_indfun.ml4" 103 3225 3317
)
"plugins/funind/g_indfun.ml4" 110 3431 3477 "plugins/funind/g_indfun.ml4" 110 3431 3511
call(
  tail
)
call(
  tail
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 110 3431 3468 "plugins/funind/g_indfun.ml4" 110 3431 3511
type(
  Term.constr Rawterm.with_bindings option -> Proof_type.tactic
)
type(
  Term.constr Rawterm.with_bindings option -> Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 110 3431 3513 "plugins/funind/g_indfun.ml4" 110 3431 3519
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  int_ref princl "plugins/funind/g_indfun.ml4" 103 3225 3280 "plugins/funind/g_indfun.ml4" 103 3225 3519
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  int_ref princl "plugins/funind/g_indfun.ml4" 103 3225 3280 "plugins/funind/g_indfun.ml4" 103 3225 3301
)
"plugins/funind/g_indfun.ml4" 110 3431 3438 "plugins/funind/g_indfun.ml4" 110 3431 3519
call(
  tail
)
call(
  stack
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 105 3329 3336 "plugins/funind/g_indfun.ml4" 105 3329 3519
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals)
)
type(
  int * Pptactic.grammar_terminals
)
type(
  Genarg.argument_type list
)
type(
  Proof_type.tactic
)
type(
  bool
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 103 3225 3302 "plugins/funind/g_indfun.ml4" 103 3225 3519
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Proof_type.tactic
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref pat "" -1 0 0 "" -1 0 0
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_with_names "plugins/funind/g_indfun.ml4" 83 2697 2697 "plugins/funind/g_indfun.ml4" 83 2697 2855
)
type(
  (Genarg.intro_pattern_expr Util.located option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument ->
  Genarg.intro_pattern_expr Util.located option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.intro_pattern_expr Util.located option
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref pat "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 103 3225 3280 "plugins/funind/g_indfun.ml4" 103 3225 3519
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Proof_type.tactic
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref princl "" -1 0 0 "" -1 0 0
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref wit_fun_ind_using "plugins/funind/g_indfun.ml4" 57 2066 2066 "plugins/funind/g_indfun.ml4" 57 2066 2391
)
type(
  (Term.constr Rawterm.with_bindings Evd.sigma option, Genarg.tlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument ->
  Term.constr Rawterm.with_bindings Evd.sigma option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Term.constr Rawterm.with_bindings Evd.sigma option
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref princl "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 103 3225 3261 "plugins/funind/g_indfun.ml4" 103 3225 3519
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
type(
  Term.constr list
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref cl "" -1 0 0 "" -1 0 0
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_constr
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type ->
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list1
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Term.constr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Term.constr list
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref cl "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 102 3200 3200 "plugins/funind/g_indfun.ml4" 102 3200 3525
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
type(
  unit
)
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
  unit
)
ident(
  ext_ref Pptactic.declare_extra_tactic_pprule
)
type(
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
   unit) ->
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals))
  list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_tactic_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 102 3200 3200 "plugins/funind/g_indfun.ml4" 102 3200 3525
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 102 3200 3200 "plugins/funind/g_indfun.ml4" 102 3200 3525
)
type(
  unit
)
type(
  unit
)
type(
  string -> unit
)
type(
  unit
)
type(
  Genarg.glevel Genarg.generic_argument list
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 102 3200 3200 "plugins/funind/g_indfun.ml4" 102 3200 3525
)
type(
  (Genarg.rawconstr_and_expr,
   Genarg.rawconstr_and_expr * Pattern.constr_pattern,
   Names.evaluable_global_reference Genarg.and_short_name Rawterm.or_var,
   Names.inductive Rawterm.or_var,
   Nametab.ltac_constant Util.located Rawterm.or_var,
   Names.identifier Util.located, Tacexpr.glob_tactic_expr, Genarg.glevel)
  Tacexpr.gen_atomic_tactic_expr
)
type(
  Tacexpr.glob_tactic_expr
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 102 3200 3200 "plugins/funind/g_indfun.ml4" 102 3200 3525
)
type(
  string -> Tacexpr.glob_tactic_expr -> unit
)
ident(
  ext_ref Tacinterp.add_primitive_tactic
)
type(
  string
)
ident(
  def s "plugins/funind/g_indfun.ml4" 102 3200 3200 "plugins/funind/g_indfun.ml4" 102 3200 3525
)
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  Tacexpr.typed_generic_argument list -> Tacmach.tactic
)
type(
  string -> (Tacexpr.typed_generic_argument list -> Tacmach.tactic) -> unit
)
ident(
  ext_ref Tacinterp.add_tactic
)
type(
  unit
)
type(
  Proof_type.tactic
)
type(
  ?dflt:bool ->
  string ->
  Tacexpr.typed_generic_argument list ->
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Refiner.abstract_extended_tactic
)
type(
  Term.constr list ->
  Term.constr Rawterm.with_bindings Evd.sigma option ->
  Genarg.intro_pattern_expr Util.located option -> Proof_type.tactic
)
ident(
  def h_snewfunind "plugins/funind/g_indfun.ml4" 102 3200 3200 --
)
"plugins/funind/g_indfun.ml4" 114 3528 3532 "plugins/funind/g_indfun.ml4" 114 3528 3555
type(
  ('a -> Pp.std_ppcmds) -> 'b -> 'c -> 'a list -> Pp.std_ppcmds
)
ident(
  def pr_constr_coma_sequence "plugins/funind/g_indfun.ml4" 116 3606 3606 --
)
"plugins/funind/g_indfun.ml4" 114 3528 3556 "plugins/funind/g_indfun.ml4" 114 3528 3559
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/g_indfun.ml4" 114 3528 3560 "plugins/funind/g_indfun.ml4" 114 3528 3604
)
"plugins/funind/g_indfun.ml4" 114 3528 3560 "plugins/funind/g_indfun.ml4" 114 3528 3561
type(
  'b
)
"plugins/funind/g_indfun.ml4" 114 3528 3562 "plugins/funind/g_indfun.ml4" 114 3528 3563
type(
  'c
)
"plugins/funind/g_indfun.ml4" 114 3528 3566 "plugins/funind/g_indfun.ml4" 114 3528 3586
type(
  (unit -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a list -> Pp.std_ppcmds
)
ident(
  ext_ref Util.prlist_with_sep
)
"plugins/funind/g_indfun.ml4" 114 3528 3587 "plugins/funind/g_indfun.ml4" 114 3528 3600
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Util.pr_comma
)
"plugins/funind/g_indfun.ml4" 114 3528 3601 "plugins/funind/g_indfun.ml4" 114 3528 3604
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 114 3528 3556 "plugins/funind/g_indfun.ml4" 114 3528 3559
)
"plugins/funind/g_indfun.ml4" 114 3528 3566 "plugins/funind/g_indfun.ml4" 114 3528 3604
call(
  tail
)
type(
  'a list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 114 3528 3562 "plugins/funind/g_indfun.ml4" 114 3528 3604
type(
  'c -> 'a list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 114 3528 3560 "plugins/funind/g_indfun.ml4" 114 3528 3604
type(
  'b -> 'c -> 'a list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 114 3528 3556 "plugins/funind/g_indfun.ml4" 114 3528 3604
type(
  ('a -> Pp.std_ppcmds) -> 'b -> 'c -> 'a list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 119 3704 3754 "plugins/funind/g_indfun.ml4" 119 3704 3755
type(
  Topconstr.constr_expr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
"plugins/funind/g_indfun.ml4" 119 3704 3757 "plugins/funind/g_indfun.ml4" 119 3704 3758
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
"plugins/funind/g_indfun.ml4" 119 3704 3754 "plugins/funind/g_indfun.ml4" 119 3704 3758
type(
  Topconstr.constr_expr list
)
type(
  Topconstr.constr_expr list
)
"plugins/funind/g_indfun.ml4" 120 3761 3783 "plugins/funind/g_indfun.ml4" 120 3761 3784
type(
  Topconstr.constr_expr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
"plugins/funind/g_indfun.ml4" 120 3761 3782 "plugins/funind/g_indfun.ml4" 120 3761 3785
type(
  Topconstr.constr_expr list
)
type(
  Topconstr.constr_expr list
)
type(
  Topconstr.constr_expr list
)
"plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  Term.constr list Tacexpr.typed_abstract_argument_type *
  Term.constr list Pptactic.extra_genarg_printer
)
type(
  Term.constr list Pptactic.extra_genarg_printer
)
ident(
  int_ref pr_constr_coma_sequence "plugins/funind/g_indfun.ml4" 114 3528 3532 "plugins/funind/g_indfun.ml4" 114 3528 3555
)
type(
  Term.constr list Tacexpr.typed_abstract_argument_type
)
ident(
  int_ref wit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Genarg.rawconstr_and_expr list Tacexpr.glob_abstract_argument_type *
  Genarg.rawconstr_and_expr list Pptactic.glob_extra_genarg_printer
)
type(
  Genarg.rawconstr_and_expr list Pptactic.glob_extra_genarg_printer
)
ident(
  int_ref pr_constr_coma_sequence "plugins/funind/g_indfun.ml4" 114 3528 3532 "plugins/funind/g_indfun.ml4" 114 3528 3555
)
type(
  Genarg.rawconstr_and_expr list Tacexpr.glob_abstract_argument_type
)
ident(
  int_ref globwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Topconstr.constr_expr list Tacexpr.raw_abstract_argument_type *
  Topconstr.constr_expr list Pptactic.raw_extra_genarg_printer
)
type(
  Topconstr.constr_expr list Pptactic.raw_extra_genarg_printer
)
ident(
  int_ref pr_constr_coma_sequence "plugins/funind/g_indfun.ml4" 114 3528 3532 "plugins/funind/g_indfun.ml4" 114 3528 3555
)
type(
  Topconstr.constr_expr list Tacexpr.raw_abstract_argument_type
)
ident(
  int_ref rawwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Topconstr.constr_expr list Tacexpr.raw_abstract_argument_type *
  Topconstr.constr_expr list Pptactic.raw_extra_genarg_printer ->
  Genarg.rawconstr_and_expr list Tacexpr.glob_abstract_argument_type *
  Genarg.rawconstr_and_expr list Pptactic.glob_extra_genarg_printer ->
  Term.constr list Tacexpr.typed_abstract_argument_type *
  Term.constr list Pptactic.extra_genarg_printer -> unit
)
ident(
  ext_ref Pptactic.declare_extra_genarg_pprule
)
type(
  unit
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  string option * Gramext.g_assoc option *
  (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr list -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_a -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_b -> Topconstr.constr_expr list
)
type(
  '_b
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  ('_b -> Topconstr.constr_expr list) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_a
)
type(
  ('_a -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr list -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr list -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_c -> Topconstr.constr_expr list
)
type(
  '_c
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  ('_c -> Topconstr.constr_expr list) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Gramext.g_assoc option
)
type(
  string option
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  Gramext.position option
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
ident(
  int_ref constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e ->
  Gramext.position option ->
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list -> unit
)
ident(
  ext_ref Pcoq.Gram.extend
)
type(
  unit
)
type(
  (Tacinterp.glob_sign ->
   Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument) *
  (Tacinterp.interp_sign ->
   Proof_type.goal Tacmach.sigma ->
   Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument) *
  (Mod_subst.substitution ->
   Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument)
)
type(
  Mod_subst.substitution ->
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument -> Genarg.rawconstr_and_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Mod_subst.substitution
)
ident(
  int_ref subst "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Mod_subst.substitution ->
  Genarg.rawconstr_and_expr list -> Genarg.rawconstr_and_expr list
)
type(
  Genarg.rawconstr_and_expr list -> Genarg.rawconstr_and_expr list
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr list
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr list -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Mod_subst.substitution
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Mod_subst.substitution ->
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Tacinterp.subst_genarg
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument -> Genarg.rawconstr_and_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.rawconstr_and_expr list
)
ident(
  def x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Mod_subst.substitution
)
ident(
  def s "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr list -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Mod_subst.substitution
)
ident(
  def subst "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Term.constr list
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument -> Genarg.rawconstr_and_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.interp_sign
)
ident(
  int_ref ist "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Genarg.rawconstr_and_expr list -> Term.constr list
)
type(
  Proof_type.goal Tacmach.sigma ->
  Genarg.rawconstr_and_expr list -> Term.constr list
)
type(
  Genarg.rawconstr_and_expr list -> Term.constr list
)
type(
  Term.constr list
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr list
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr list -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.interp_sign
)
ident(
  int_ref ist "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Tacinterp.interp_genarg
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_constr
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type ->
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Term.constr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.rawconstr_and_expr list
)
ident(
  def x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.interp_sign
)
ident(
  def ist "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  int_ref wit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type ->
  Term.constr list -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.interp_sign
)
ident(
  def ist "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.glob_sign ->
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Topconstr.constr_expr list
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument -> Topconstr.constr_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Tacinterp.glob_sign
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.glob_sign ->
  Topconstr.constr_expr list -> Genarg.rawconstr_and_expr list
)
type(
  Topconstr.constr_expr list -> Genarg.rawconstr_and_expr list
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Tacexpr.raw_generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type ->
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr list -> Tacexpr.raw_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacinterp.glob_sign
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.glob_sign ->
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Tacinterp.intern_genarg
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument -> Genarg.rawconstr_and_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Topconstr.constr_expr list
)
ident(
  def x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.glob_sign
)
ident(
  def e "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr list -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  Tacinterp.glob_sign
)
ident(
  def e "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  string ->
  (Tacinterp.glob_sign ->
   Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument) *
  (Tacinterp.interp_sign ->
   Proof_type.goal Tacmach.sigma ->
   Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument) *
  (Mod_subst.substitution ->
   Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument) ->
  unit
)
ident(
  ext_ref Tacinterp.add_interp_genarg
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  string ->
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
ident(
  ext_ref Pcoq.create_generic_entry
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
ident(
  def constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 --
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type *
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  string ->
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type *
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.create_arg
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type *
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  def rawwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 --
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  def globwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 --
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  def wit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 --
)
"plugins/funind/g_indfun.ml4" 123 3793 3797 "plugins/funind/g_indfun.ml4" 123 3793 3810
type(
  ('a -> Pp.std_ppcmds) -> 'b -> 'c -> 'a list -> Pp.std_ppcmds
)
ident(
  def pr_auto_using "plugins/funind/g_indfun.ml4" 125 3856 3856 --
)
"plugins/funind/g_indfun.ml4" 123 3793 3811 "plugins/funind/g_indfun.ml4" 123 3793 3814
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/g_indfun.ml4" 123 3793 3815 "plugins/funind/g_indfun.ml4" 123 3793 3854
)
"plugins/funind/g_indfun.ml4" 123 3793 3815 "plugins/funind/g_indfun.ml4" 123 3793 3820
type(
  'b
)
ident(
  def _prlc "plugins/funind/g_indfun.ml4" 123 3793 3821 "plugins/funind/g_indfun.ml4" 123 3793 3854
)
"plugins/funind/g_indfun.ml4" 123 3793 3821 "plugins/funind/g_indfun.ml4" 123 3793 3825
type(
  'c
)
ident(
  def _prt "plugins/funind/g_indfun.ml4" 123 3793 3828 "plugins/funind/g_indfun.ml4" 123 3793 3854
)
"plugins/funind/g_indfun.ml4" 123 3793 3828 "plugins/funind/g_indfun.ml4" 123 3793 3850
type(
  ('a -> Pp.std_ppcmds) -> 'a list -> Pp.std_ppcmds
)
ident(
  ext_ref Pptactic.pr_auto_using
)
"plugins/funind/g_indfun.ml4" 123 3793 3851 "plugins/funind/g_indfun.ml4" 123 3793 3854
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/g_indfun.ml4" 123 3793 3811 "plugins/funind/g_indfun.ml4" 123 3793 3814
)
"plugins/funind/g_indfun.ml4" 123 3793 3828 "plugins/funind/g_indfun.ml4" 123 3793 3854
call(
  tail
)
type(
  'a list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 123 3793 3821 "plugins/funind/g_indfun.ml4" 123 3793 3854
type(
  'c -> 'a list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 123 3793 3815 "plugins/funind/g_indfun.ml4" 123 3793 3854
type(
  'b -> 'c -> 'a list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 123 3793 3811 "plugins/funind/g_indfun.ml4" 123 3793 3854
type(
  ('a -> Pp.std_ppcmds) -> 'b -> 'c -> 'a list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 128 3934 3978 "plugins/funind/g_indfun.ml4" 128 3934 3979
type(
  Topconstr.constr_expr list
)
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
"plugins/funind/g_indfun.ml4" 129 3982 3993 "plugins/funind/g_indfun.ml4" 129 3982 3995
type(
  Topconstr.constr_expr list
)
type(
  Topconstr.constr_expr list
)
"plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  Term.constr list Tacexpr.typed_abstract_argument_type *
  Term.constr list Pptactic.extra_genarg_printer
)
type(
  Term.constr list Pptactic.extra_genarg_printer
)
ident(
  int_ref pr_auto_using "plugins/funind/g_indfun.ml4" 123 3793 3797 "plugins/funind/g_indfun.ml4" 123 3793 3810
)
type(
  Term.constr list Tacexpr.typed_abstract_argument_type
)
ident(
  int_ref wit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Genarg.rawconstr_and_expr list Tacexpr.glob_abstract_argument_type *
  Genarg.rawconstr_and_expr list Pptactic.glob_extra_genarg_printer
)
type(
  Genarg.rawconstr_and_expr list Pptactic.glob_extra_genarg_printer
)
ident(
  int_ref pr_auto_using "plugins/funind/g_indfun.ml4" 123 3793 3797 "plugins/funind/g_indfun.ml4" 123 3793 3810
)
type(
  Genarg.rawconstr_and_expr list Tacexpr.glob_abstract_argument_type
)
ident(
  int_ref globwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Topconstr.constr_expr list Tacexpr.raw_abstract_argument_type *
  Topconstr.constr_expr list Pptactic.raw_extra_genarg_printer
)
type(
  Topconstr.constr_expr list Pptactic.raw_extra_genarg_printer
)
ident(
  int_ref pr_auto_using "plugins/funind/g_indfun.ml4" 123 3793 3797 "plugins/funind/g_indfun.ml4" 123 3793 3810
)
type(
  Topconstr.constr_expr list Tacexpr.raw_abstract_argument_type
)
ident(
  int_ref rawwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Topconstr.constr_expr list Tacexpr.raw_abstract_argument_type *
  Topconstr.constr_expr list Pptactic.raw_extra_genarg_printer ->
  Genarg.rawconstr_and_expr list Tacexpr.glob_abstract_argument_type *
  Genarg.rawconstr_and_expr list Pptactic.glob_extra_genarg_printer ->
  Term.constr list Tacexpr.typed_abstract_argument_type *
  Term.constr list Pptactic.extra_genarg_printer -> unit
)
ident(
  ext_ref Pptactic.declare_extra_genarg_pprule
)
type(
  unit
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  string option * Gramext.g_assoc option *
  (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr list -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_a -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_b -> Topconstr.constr_expr list
)
type(
  '_b
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  ('_b -> Topconstr.constr_expr list) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_a
)
type(
  ('_a -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_constr_coma_sequence' "plugins/funind/g_indfun.ml4" 116 3606 3606 "plugins/funind/g_indfun.ml4" 116 3606 3791
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr list -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Topconstr.constr_expr list -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_c -> Topconstr.constr_expr list
)
type(
  '_c
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  ('_c -> Topconstr.constr_expr list) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Gramext.g_assoc option
)
type(
  string option
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  Gramext.position option
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
ident(
  int_ref auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e ->
  Gramext.position option ->
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list -> unit
)
ident(
  ext_ref Pcoq.Gram.extend
)
type(
  unit
)
type(
  (Tacinterp.glob_sign ->
   Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument) *
  (Tacinterp.interp_sign ->
   Proof_type.goal Tacmach.sigma ->
   Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument) *
  (Mod_subst.substitution ->
   Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument)
)
type(
  Mod_subst.substitution ->
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument -> Genarg.rawconstr_and_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Mod_subst.substitution
)
ident(
  int_ref subst "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Mod_subst.substitution ->
  Genarg.rawconstr_and_expr list -> Genarg.rawconstr_and_expr list
)
type(
  Genarg.rawconstr_and_expr list -> Genarg.rawconstr_and_expr list
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr list
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr list -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Mod_subst.substitution
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Mod_subst.substitution ->
  Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Tacinterp.subst_genarg
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument -> Genarg.rawconstr_and_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.rawconstr_and_expr list
)
ident(
  def x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Mod_subst.substitution
)
ident(
  def s "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr list -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Mod_subst.substitution
)
ident(
  def subst "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Term.constr list
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument -> Genarg.rawconstr_and_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.interp_sign
)
ident(
  int_ref ist "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Genarg.rawconstr_and_expr list -> Term.constr list
)
type(
  Proof_type.goal Tacmach.sigma ->
  Genarg.rawconstr_and_expr list -> Term.constr list
)
type(
  Genarg.rawconstr_and_expr list -> Term.constr list
)
type(
  Term.constr list
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr list
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr list -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.interp_sign
)
ident(
  int_ref ist "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.interp_sign ->
  Proof_type.goal Tacmach.sigma ->
  Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Tacinterp.interp_genarg
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_constr
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type ->
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Term.constr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Genarg.rawconstr_and_expr list
)
ident(
  def x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.interp_sign
)
ident(
  def ist "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  int_ref wit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type ->
  Term.constr list -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.glob_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.interp_sign
)
ident(
  def ist "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.glob_sign ->
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Topconstr.constr_expr list
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument -> Topconstr.constr_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Tacinterp.glob_sign
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.glob_sign ->
  Topconstr.constr_expr list -> Genarg.rawconstr_and_expr list
)
type(
  Topconstr.constr_expr list -> Genarg.rawconstr_and_expr list
)
type(
  Genarg.rawconstr_and_expr list
)
type(
  Tacexpr.glob_generic_argument
)
type(
  Tacexpr.raw_generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type ->
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr list -> Tacexpr.raw_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacinterp.glob_sign
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.glob_sign ->
  Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Tacinterp.intern_genarg
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.globwit_constr
)
type(
  (Genarg.rawconstr_and_expr, Genarg.glevel) Genarg.abstract_argument_type ->
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Tacexpr.glob_generic_argument -> Genarg.rawconstr_and_expr list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Topconstr.constr_expr list
)
ident(
  def x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.glob_sign
)
ident(
  def e "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref globwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type ->
  Genarg.rawconstr_and_expr list -> Tacexpr.glob_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  def x "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  Tacinterp.glob_sign
)
ident(
  def e "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  string ->
  (Tacinterp.glob_sign ->
   Tacexpr.raw_generic_argument -> Tacexpr.glob_generic_argument) *
  (Tacinterp.interp_sign ->
   Proof_type.goal Tacmach.sigma ->
   Tacexpr.glob_generic_argument -> Tacexpr.typed_generic_argument) *
  (Mod_subst.substitution ->
   Tacexpr.glob_generic_argument -> Tacexpr.glob_generic_argument) ->
  unit
)
ident(
  ext_ref Tacinterp.add_interp_genarg
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  string ->
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
ident(
  ext_ref Pcoq.create_generic_entry
)
type(
  Topconstr.constr_expr list Pcoq.Gram.Entry.e
)
ident(
  def auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 --
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type *
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  string ->
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type *
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.create_arg
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type *
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type *
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  def rawwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 --
)
type(
  (Genarg.rawconstr_and_expr list, Genarg.glevel)
  Genarg.abstract_argument_type
)
ident(
  def globwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 --
)
type(
  (Term.constr list, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  def wit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 --
)
"plugins/funind/g_indfun.ml4" 132 4003 4007 "plugins/funind/g_indfun.ml4" 132 4003 4029
type(
  string ->
  Topconstr.constr_expr ->
  Names.identifier option -> Topconstr.constr_expr list -> Pp.std_ppcmds
)
ident(
  def pr_rec_annotation2_aux "plugins/funind/g_indfun.ml4" 137 4192 4192 --
)
"plugins/funind/g_indfun.ml4" 132 4003 4030 "plugins/funind/g_indfun.ml4" 132 4003 4031
type(
  string
)
ident(
  def s "plugins/funind/g_indfun.ml4" 132 4003 4032 "plugins/funind/g_indfun.ml4" 132 4003 4190
)
"plugins/funind/g_indfun.ml4" 132 4003 4032 "plugins/funind/g_indfun.ml4" 132 4003 4033
type(
  Topconstr.constr_expr
)
ident(
  def r "plugins/funind/g_indfun.ml4" 132 4003 4034 "plugins/funind/g_indfun.ml4" 132 4003 4190
)
"plugins/funind/g_indfun.ml4" 132 4003 4034 "plugins/funind/g_indfun.ml4" 132 4003 4036
type(
  Names.identifier option
)
ident(
  def id "plugins/funind/g_indfun.ml4" 132 4003 4037 "plugins/funind/g_indfun.ml4" 132 4003 4190
)
"plugins/funind/g_indfun.ml4" 132 4003 4037 "plugins/funind/g_indfun.ml4" 132 4003 4038
type(
  Topconstr.constr_expr list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 133 4041 4043 "plugins/funind/g_indfun.ml4" 133 4041 4190
)
"plugins/funind/g_indfun.ml4" 133 4041 4043 "plugins/funind/g_indfun.ml4" 133 4041 4046
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 133 4041 4048 "plugins/funind/g_indfun.ml4" 133 4041 4051
type(
  string
)
"plugins/funind/g_indfun.ml4" 133 4041 4052 "plugins/funind/g_indfun.ml4" 133 4041 4053
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 132 4003 4030 "plugins/funind/g_indfun.ml4" 132 4003 4031
)
"plugins/funind/g_indfun.ml4" 133 4041 4054 "plugins/funind/g_indfun.ml4" 133 4041 4057
type(
  string
)
"plugins/funind/g_indfun.ml4" 133 4041 4052 "plugins/funind/g_indfun.ml4" 133 4041 4057
call(
  stack
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/g_indfun.ml4" 133 4041 4048 "plugins/funind/g_indfun.ml4" 133 4041 4057
call(
  stack
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/g_indfun.ml4" 133 4041 4043 "plugins/funind/g_indfun.ml4" 133 4041 4058
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 133 4041 4062 "plugins/funind/g_indfun.ml4" 133 4041 4085
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_constr_expr
)
"plugins/funind/g_indfun.ml4" 133 4041 4086 "plugins/funind/g_indfun.ml4" 133 4041 4087
type(
  Topconstr.constr_expr
)
ident(
  int_ref r "plugins/funind/g_indfun.ml4" 132 4003 4032 "plugins/funind/g_indfun.ml4" 132 4003 4033
)
"plugins/funind/g_indfun.ml4" 133 4041 4062 "plugins/funind/g_indfun.ml4" 133 4041 4087
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 133 4041 4043 "plugins/funind/g_indfun.ml4" 133 4041 4087
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 134 4091 4095 "plugins/funind/g_indfun.ml4" 134 4091 4106
type(
  (Names.identifier -> Pp.std_ppcmds) ->
  Names.identifier option -> Pp.std_ppcmds
)
ident(
  ext_ref Util.pr_opt
)
"plugins/funind/g_indfun.ml4" 134 4091 4107 "plugins/funind/g_indfun.ml4" 134 4091 4120
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Nameops.pr_id
)
"plugins/funind/g_indfun.ml4" 134 4091 4121 "plugins/funind/g_indfun.ml4" 134 4091 4123
type(
  Names.identifier option
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 132 4003 4034 "plugins/funind/g_indfun.ml4" 132 4003 4036
)
"plugins/funind/g_indfun.ml4" 134 4091 4095 "plugins/funind/g_indfun.ml4" 134 4091 4123
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 133 4041 4043 "plugins/funind/g_indfun.ml4" 133 4041 4123
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 135 4127 4131 "plugins/funind/g_indfun.ml4" 135 4127 4153
type(
  (Topconstr.constr_expr -> Pp.std_ppcmds) ->
  Topconstr.constr_expr list -> Pp.std_ppcmds
)
ident(
  ext_ref Pptactic.pr_auto_using
)
"plugins/funind/g_indfun.ml4" 135 4127 4154 "plugins/funind/g_indfun.ml4" 135 4127 4177
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_constr_expr
)
"plugins/funind/g_indfun.ml4" 135 4127 4178 "plugins/funind/g_indfun.ml4" 135 4127 4179
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 132 4003 4037 "plugins/funind/g_indfun.ml4" 132 4003 4038
)
"plugins/funind/g_indfun.ml4" 135 4127 4131 "plugins/funind/g_indfun.ml4" 135 4127 4179
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 133 4041 4043 "plugins/funind/g_indfun.ml4" 133 4041 4179
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 135 4127 4183 "plugins/funind/g_indfun.ml4" 135 4127 4186
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 135 4127 4187 "plugins/funind/g_indfun.ml4" 135 4127 4190
type(
  string
)
"plugins/funind/g_indfun.ml4" 135 4127 4183 "plugins/funind/g_indfun.ml4" 135 4127 4190
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 133 4041 4043 "plugins/funind/g_indfun.ml4" 133 4041 4190
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 132 4003 4037 "plugins/funind/g_indfun.ml4" 132 4003 4190
type(
  Topconstr.constr_expr list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 132 4003 4034 "plugins/funind/g_indfun.ml4" 132 4003 4190
type(
  Names.identifier option -> Topconstr.constr_expr list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 132 4003 4032 "plugins/funind/g_indfun.ml4" 132 4003 4190
type(
  Topconstr.constr_expr ->
  Names.identifier option -> Topconstr.constr_expr list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 132 4003 4030 "plugins/funind/g_indfun.ml4" 132 4003 4190
type(
  string ->
  Topconstr.constr_expr ->
  Names.identifier option -> Topconstr.constr_expr list -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 137 4192 4196 "plugins/funind/g_indfun.ml4" 137 4192 4214
type(
  Indfun.annot -> Pp.std_ppcmds
)
ident(
  def pr_rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 --
)
"plugins/funind/g_indfun.ml4" 138 4226 4237 "plugins/funind/g_indfun.ml4" 138 4226 4239
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 138 4226 4243 "plugins/funind/g_indfun.ml4" 138 4226 4287
)
"plugins/funind/g_indfun.ml4" 138 4226 4230 "plugins/funind/g_indfun.ml4" 138 4226 4239
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 138 4226 4243 "plugins/funind/g_indfun.ml4" 138 4226 4246
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 138 4226 4247 "plugins/funind/g_indfun.ml4" 138 4226 4256
type(
  string
)
"plugins/funind/g_indfun.ml4" 138 4226 4243 "plugins/funind/g_indfun.ml4" 138 4226 4256
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 138 4226 4260 "plugins/funind/g_indfun.ml4" 138 4226 4273
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Nameops.pr_id
)
"plugins/funind/g_indfun.ml4" 138 4226 4274 "plugins/funind/g_indfun.ml4" 138 4226 4276
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 138 4226 4237 "plugins/funind/g_indfun.ml4" 138 4226 4239
)
"plugins/funind/g_indfun.ml4" 138 4226 4260 "plugins/funind/g_indfun.ml4" 138 4226 4276
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 138 4226 4243 "plugins/funind/g_indfun.ml4" 138 4226 4276
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 138 4226 4280 "plugins/funind/g_indfun.ml4" 138 4226 4283
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 138 4226 4284 "plugins/funind/g_indfun.ml4" 138 4226 4287
type(
  string
)
"plugins/funind/g_indfun.ml4" 138 4226 4280 "plugins/funind/g_indfun.ml4" 138 4226 4287
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 138 4226 4243 "plugins/funind/g_indfun.ml4" 138 4226 4287
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 139 4288 4295 "plugins/funind/g_indfun.ml4" 139 4288 4296
type(
  Topconstr.constr_expr
)
ident(
  def r "plugins/funind/g_indfun.ml4" 139 4288 4306 "plugins/funind/g_indfun.ml4" 139 4288 4340
)
"plugins/funind/g_indfun.ml4" 139 4288 4297 "plugins/funind/g_indfun.ml4" 139 4288 4299
type(
  Names.identifier option
)
ident(
  def id "plugins/funind/g_indfun.ml4" 139 4288 4306 "plugins/funind/g_indfun.ml4" 139 4288 4340
)
"plugins/funind/g_indfun.ml4" 139 4288 4300 "plugins/funind/g_indfun.ml4" 139 4288 4301
type(
  Topconstr.constr_expr list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 139 4288 4306 "plugins/funind/g_indfun.ml4" 139 4288 4340
)
"plugins/funind/g_indfun.ml4" 139 4288 4292 "plugins/funind/g_indfun.ml4" 139 4288 4302
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 139 4288 4306 "plugins/funind/g_indfun.ml4" 139 4288 4328
type(
  string ->
  Topconstr.constr_expr ->
  Names.identifier option -> Topconstr.constr_expr list -> Pp.std_ppcmds
)
ident(
  int_ref pr_rec_annotation2_aux "plugins/funind/g_indfun.ml4" 132 4003 4007 "plugins/funind/g_indfun.ml4" 132 4003 4029
)
"plugins/funind/g_indfun.ml4" 139 4288 4329 "plugins/funind/g_indfun.ml4" 139 4288 4333
type(
  string
)
"plugins/funind/g_indfun.ml4" 139 4288 4334 "plugins/funind/g_indfun.ml4" 139 4288 4335
type(
  Topconstr.constr_expr
)
ident(
  int_ref r "plugins/funind/g_indfun.ml4" 139 4288 4295 "plugins/funind/g_indfun.ml4" 139 4288 4296
)
"plugins/funind/g_indfun.ml4" 139 4288 4336 "plugins/funind/g_indfun.ml4" 139 4288 4338
type(
  Names.identifier option
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 139 4288 4297 "plugins/funind/g_indfun.ml4" 139 4288 4299
)
"plugins/funind/g_indfun.ml4" 139 4288 4339 "plugins/funind/g_indfun.ml4" 139 4288 4340
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 139 4288 4300 "plugins/funind/g_indfun.ml4" 139 4288 4301
)
"plugins/funind/g_indfun.ml4" 139 4288 4306 "plugins/funind/g_indfun.ml4" 139 4288 4340
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 140 4341 4349 "plugins/funind/g_indfun.ml4" 140 4341 4350
type(
  Topconstr.constr_expr
)
ident(
  def r "plugins/funind/g_indfun.ml4" 140 4341 4360 "plugins/funind/g_indfun.ml4" 140 4341 4399
)
"plugins/funind/g_indfun.ml4" 140 4341 4351 "plugins/funind/g_indfun.ml4" 140 4341 4353
type(
  Names.identifier option
)
ident(
  def id "plugins/funind/g_indfun.ml4" 140 4341 4360 "plugins/funind/g_indfun.ml4" 140 4341 4399
)
"plugins/funind/g_indfun.ml4" 140 4341 4354 "plugins/funind/g_indfun.ml4" 140 4341 4355
type(
  Topconstr.constr_expr list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 140 4341 4360 "plugins/funind/g_indfun.ml4" 140 4341 4399
)
"plugins/funind/g_indfun.ml4" 140 4341 4345 "plugins/funind/g_indfun.ml4" 140 4341 4356
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 140 4341 4360 "plugins/funind/g_indfun.ml4" 140 4341 4382
type(
  string ->
  Topconstr.constr_expr ->
  Names.identifier option -> Topconstr.constr_expr list -> Pp.std_ppcmds
)
ident(
  int_ref pr_rec_annotation2_aux "plugins/funind/g_indfun.ml4" 132 4003 4007 "plugins/funind/g_indfun.ml4" 132 4003 4029
)
"plugins/funind/g_indfun.ml4" 140 4341 4383 "plugins/funind/g_indfun.ml4" 140 4341 4392
type(
  string
)
"plugins/funind/g_indfun.ml4" 140 4341 4393 "plugins/funind/g_indfun.ml4" 140 4341 4394
type(
  Topconstr.constr_expr
)
ident(
  int_ref r "plugins/funind/g_indfun.ml4" 140 4341 4349 "plugins/funind/g_indfun.ml4" 140 4341 4350
)
"plugins/funind/g_indfun.ml4" 140 4341 4395 "plugins/funind/g_indfun.ml4" 140 4341 4397
type(
  Names.identifier option
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 140 4341 4351 "plugins/funind/g_indfun.ml4" 140 4341 4353
)
"plugins/funind/g_indfun.ml4" 140 4341 4398 "plugins/funind/g_indfun.ml4" 140 4341 4399
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 140 4341 4354 "plugins/funind/g_indfun.ml4" 140 4341 4355
)
"plugins/funind/g_indfun.ml4" 140 4341 4360 "plugins/funind/g_indfun.ml4" 140 4341 4399
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 137 4192 4217 "plugins/funind/g_indfun.ml4" 137 4192 4399
type(
  Indfun.annot -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 144 4470 4516 "plugins/funind/g_indfun.ml4" 144 4470 4518
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
"plugins/funind/g_indfun.ml4" 144 4470 4509 "plugins/funind/g_indfun.ml4" 144 4470 4518
type(
  Indfun.annot
)
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 145 4521 4587 "plugins/funind/g_indfun.ml4" 145 4521 4588
type(
  Topconstr.constr_expr
)
ident(
  int_ref r "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
"plugins/funind/g_indfun.ml4" 145 4521 4589 "plugins/funind/g_indfun.ml4" 145 4521 4591
type(
  Names.identifier option
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
"plugins/funind/g_indfun.ml4" 145 4521 4592 "plugins/funind/g_indfun.ml4" 145 4521 4593
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
"plugins/funind/g_indfun.ml4" 145 4521 4584 "plugins/funind/g_indfun.ml4" 145 4521 4594
type(
  Indfun.annot
)
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 146 4597 4669 "plugins/funind/g_indfun.ml4" 146 4597 4670
type(
  Topconstr.constr_expr
)
ident(
  int_ref r "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
"plugins/funind/g_indfun.ml4" 146 4597 4671 "plugins/funind/g_indfun.ml4" 146 4597 4673
type(
  Names.identifier option
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
"plugins/funind/g_indfun.ml4" 146 4597 4674 "plugins/funind/g_indfun.ml4" 146 4597 4675
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
"plugins/funind/g_indfun.ml4" 146 4597 4665 "plugins/funind/g_indfun.ml4" 146 4597 4676
type(
  Indfun.annot
)
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  unit Tacexpr.typed_abstract_argument_type *
  unit Pptactic.extra_genarg_printer
)
type(
  unit Pptactic.extra_genarg_printer
)
type(
  (Term.constr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  unit -> Pp.std_ppcmds
)
type(
  Pp.std_ppcmds
)
type(
  string
)
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Util.anomaly
)
type(
  unit
)
type(
  Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds
)
type(
  Term.constr -> Pp.std_ppcmds
)
type(
  Term.constr -> Pp.std_ppcmds
)
type(
  unit Tacexpr.typed_abstract_argument_type
)
ident(
  int_ref wit_rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  unit Tacexpr.glob_abstract_argument_type *
  unit Pptactic.glob_extra_genarg_printer
)
type(
  unit Pptactic.glob_extra_genarg_printer
)
type(
  (Genarg.rawconstr_and_expr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  unit -> Pp.std_ppcmds
)
type(
  Pp.std_ppcmds
)
type(
  string
)
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Util.anomaly
)
type(
  unit
)
type(
  Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds
)
type(
  Genarg.rawconstr_and_expr -> Pp.std_ppcmds
)
type(
  Genarg.rawconstr_and_expr -> Pp.std_ppcmds
)
type(
  unit Tacexpr.glob_abstract_argument_type
)
ident(
  int_ref globwit_rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  Indfun.annot Tacexpr.raw_abstract_argument_type *
  Indfun.annot Pptactic.raw_extra_genarg_printer
)
type(
  Indfun.annot Pptactic.raw_extra_genarg_printer
)
type(
  (Topconstr.constr_expr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds) ->
  Indfun.annot -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds) ->
  Indfun.annot -> Pp.std_ppcmds
)
type(
  Indfun.annot -> Pp.std_ppcmds
)
ident(
  int_ref pr_rec_annotation2 "plugins/funind/g_indfun.ml4" 137 4192 4196 "plugins/funind/g_indfun.ml4" 137 4192 4214
)
type(
  Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds
)
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  Indfun.annot Tacexpr.raw_abstract_argument_type
)
ident(
  int_ref rawwit_rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  Indfun.annot Tacexpr.raw_abstract_argument_type *
  Indfun.annot Pptactic.raw_extra_genarg_printer ->
  unit Tacexpr.glob_abstract_argument_type *
  unit Pptactic.glob_extra_genarg_printer ->
  unit Tacexpr.typed_abstract_argument_type *
  unit Pptactic.extra_genarg_printer -> unit
)
ident(
  ext_ref Pptactic.declare_extra_genarg_pprule
)
type(
  unit
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  string option * Gramext.g_assoc option *
  (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_a -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Names.identifier -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_b -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_c -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_d -> Indfun.annot
)
type(
  '_d
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  ('_d -> Indfun.annot) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_c
)
type(
  ('_c -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_b
)
type(
  ('_b -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  Names.identifier -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Names.identifier -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_a
)
type(
  ('_a -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_e -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr list -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Names.identifier option -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_f -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_g -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_h -> Indfun.annot
)
type(
  '_h
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  ('_h -> Indfun.annot) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_g
)
type(
  ('_g -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_f
)
type(
  ('_f -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  int_ref r "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  def r "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Topconstr.constr_expr -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier option
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Names.identifier option, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  (Names.identifier option, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Names.identifier option, Genarg.rlevel) Genarg.abstract_argument_type ->
  Names.identifier option -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier option
)
ident(
  def id "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Names.identifier option -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr list -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Topconstr.constr_expr list -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_e
)
type(
  ('_e -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_i -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr list -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Names.identifier option -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_j -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_k -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_l -> Indfun.annot
)
type(
  '_l
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  ('_l -> Indfun.annot) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_k
)
type(
  ('_k -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_j
)
type(
  ('_j -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  int_ref r "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  def r "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Topconstr.constr_expr -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier option
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Names.identifier option, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  (Names.identifier option, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Names.identifier option, Genarg.rlevel) Genarg.abstract_argument_type ->
  Names.identifier option -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier option
)
ident(
  def id "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Names.identifier option -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_auto_using' "plugins/funind/g_indfun.ml4" 125 3856 3856 "plugins/funind/g_indfun.ml4" 125 3856 4001
)
type(
  (Topconstr.constr_expr list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr list -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Topconstr.constr_expr list -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_i
)
type(
  ('_i -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Gramext.g_assoc option
)
type(
  string option
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  Gramext.position option
)
type(
  Indfun.annot Pcoq.Gram.Entry.e
)
type(
  Indfun.annot Pcoq.Gram.Entry.e
)
ident(
  int_ref rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  Indfun.annot Pcoq.Gram.Entry.e ->
  Gramext.position option ->
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list -> unit
)
ident(
  ext_ref Pcoq.Gram.extend
)
type(
  Indfun.annot Pcoq.Gram.Entry.e
)
type(
  (Indfun.annot, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  string ->
  (Indfun.annot, Genarg.rlevel) Genarg.abstract_argument_type ->
  Indfun.annot Pcoq.Gram.Entry.e
)
ident(
  ext_ref Pcoq.create_generic_entry
)
type(
  Indfun.annot Pcoq.Gram.Entry.e
)
ident(
  def rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 --
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Indfun.annot, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  string ->
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Indfun.annot, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.create_arg
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Indfun.annot, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Indfun.annot, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  def rawwit_rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 --
)
type(
  (unit, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  def globwit_rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 --
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  def wit_rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 --
)
"plugins/funind/g_indfun.ml4" 149 4684 4688 "plugins/funind/g_indfun.ml4" 149 4684 4698
type(
  Names.identifier list * Topconstr.constr_expr -> Pp.std_ppcmds
)
ident(
  def pr_binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 --
)
"plugins/funind/g_indfun.ml4" 149 4684 4700 "plugins/funind/g_indfun.ml4" 149 4684 4703
type(
  Names.identifier list
)
ident(
  def idl "plugins/funind/g_indfun.ml4" 150 4709 4711 "plugins/funind/g_indfun.ml4" 150 4709 4831
)
"plugins/funind/g_indfun.ml4" 149 4684 4704 "plugins/funind/g_indfun.ml4" 149 4684 4705
type(
  Topconstr.constr_expr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 150 4709 4711 "plugins/funind/g_indfun.ml4" 150 4709 4831
)
"plugins/funind/g_indfun.ml4" 149 4684 4700 "plugins/funind/g_indfun.ml4" 149 4684 4705
type(
  Names.identifier list * Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 150 4709 4711 "plugins/funind/g_indfun.ml4" 150 4709 4714
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 150 4709 4715 "plugins/funind/g_indfun.ml4" 150 4709 4718
type(
  string
)
"plugins/funind/g_indfun.ml4" 150 4709 4711 "plugins/funind/g_indfun.ml4" 150 4709 4718
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 150 4709 4722 "plugins/funind/g_indfun.ml4" 150 4709 4742
type(
  (unit -> Pp.std_ppcmds) ->
  (Names.identifier -> Pp.std_ppcmds) ->
  Names.identifier list -> Pp.std_ppcmds
)
ident(
  ext_ref Util.prlist_with_sep
)
"plugins/funind/g_indfun.ml4" 150 4709 4743 "plugins/funind/g_indfun.ml4" 150 4709 4746
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 150 4709 4747 "plugins/funind/g_indfun.ml4" 150 4709 4760
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Nameops.pr_id
)
"plugins/funind/g_indfun.ml4" 150 4709 4761 "plugins/funind/g_indfun.ml4" 150 4709 4764
type(
  Names.identifier list
)
ident(
  int_ref idl "plugins/funind/g_indfun.ml4" 149 4684 4700 "plugins/funind/g_indfun.ml4" 149 4684 4703
)
"plugins/funind/g_indfun.ml4" 150 4709 4722 "plugins/funind/g_indfun.ml4" 150 4709 4764
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 150 4709 4711 "plugins/funind/g_indfun.ml4" 150 4709 4764
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 150 4709 4768 "plugins/funind/g_indfun.ml4" 150 4709 4771
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 150 4709 4772 "plugins/funind/g_indfun.ml4" 150 4709 4774
type(
  unit
)
"plugins/funind/g_indfun.ml4" 150 4709 4768 "plugins/funind/g_indfun.ml4" 150 4709 4774
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 150 4709 4711 "plugins/funind/g_indfun.ml4" 150 4709 4774
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 151 4778 4782 "plugins/funind/g_indfun.ml4" 151 4778 4785
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 151 4778 4786 "plugins/funind/g_indfun.ml4" 151 4778 4790
type(
  string
)
"plugins/funind/g_indfun.ml4" 151 4778 4782 "plugins/funind/g_indfun.ml4" 151 4778 4790
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 150 4709 4711 "plugins/funind/g_indfun.ml4" 150 4709 4790
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 151 4778 4794 "plugins/funind/g_indfun.ml4" 151 4778 4818
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_lconstr_expr
)
"plugins/funind/g_indfun.ml4" 151 4778 4819 "plugins/funind/g_indfun.ml4" 151 4778 4820
type(
  Topconstr.constr_expr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 149 4684 4704 "plugins/funind/g_indfun.ml4" 149 4684 4705
)
"plugins/funind/g_indfun.ml4" 151 4778 4794 "plugins/funind/g_indfun.ml4" 151 4778 4820
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 150 4709 4711 "plugins/funind/g_indfun.ml4" 150 4709 4820
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 151 4778 4824 "plugins/funind/g_indfun.ml4" 151 4778 4827
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 151 4778 4828 "plugins/funind/g_indfun.ml4" 151 4778 4831
type(
  string
)
"plugins/funind/g_indfun.ml4" 151 4778 4824 "plugins/funind/g_indfun.ml4" 151 4778 4831
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 150 4709 4711 "plugins/funind/g_indfun.ml4" 150 4709 4831
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 149 4684 4699 "plugins/funind/g_indfun.ml4" 149 4684 4831
type(
  Names.identifier list * Topconstr.constr_expr -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 155 4886 4942 "plugins/funind/g_indfun.ml4" 155 4886 4945
type(
  Names.identifier list
)
ident(
  int_ref idl "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
"plugins/funind/g_indfun.ml4" 155 4886 4946 "plugins/funind/g_indfun.ml4" 155 4886 4947
type(
  Topconstr.constr_expr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
"plugins/funind/g_indfun.ml4" 155 4886 4942 "plugins/funind/g_indfun.ml4" 155 4886 4947
type(
  Names.identifier list * Topconstr.constr_expr
)
type(
  Names.identifier list * Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  unit Tacexpr.typed_abstract_argument_type *
  unit Pptactic.extra_genarg_printer
)
type(
  unit Pptactic.extra_genarg_printer
)
type(
  (Term.constr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  unit -> Pp.std_ppcmds
)
type(
  Pp.std_ppcmds
)
type(
  string
)
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Util.anomaly
)
type(
  unit
)
type(
  Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds
)
type(
  Term.constr -> Pp.std_ppcmds
)
type(
  Term.constr -> Pp.std_ppcmds
)
type(
  unit Tacexpr.typed_abstract_argument_type
)
ident(
  int_ref wit_binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  unit Tacexpr.glob_abstract_argument_type *
  unit Pptactic.glob_extra_genarg_printer
)
type(
  unit Pptactic.glob_extra_genarg_printer
)
type(
  (Genarg.rawconstr_and_expr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  unit -> Pp.std_ppcmds
)
type(
  Pp.std_ppcmds
)
type(
  string
)
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Util.anomaly
)
type(
  unit
)
type(
  Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds
)
type(
  Genarg.rawconstr_and_expr -> Pp.std_ppcmds
)
type(
  Genarg.rawconstr_and_expr -> Pp.std_ppcmds
)
type(
  unit Tacexpr.glob_abstract_argument_type
)
ident(
  int_ref globwit_binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  (Names.identifier list * Topconstr.constr_expr)
  Tacexpr.raw_abstract_argument_type *
  (Names.identifier list * Topconstr.constr_expr)
  Pptactic.raw_extra_genarg_printer
)
type(
  (Names.identifier list * Topconstr.constr_expr)
  Pptactic.raw_extra_genarg_printer
)
type(
  (Topconstr.constr_expr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds) ->
  Names.identifier list * Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds) ->
  Names.identifier list * Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  Names.identifier list * Topconstr.constr_expr -> Pp.std_ppcmds
)
ident(
  int_ref pr_binder2 "plugins/funind/g_indfun.ml4" 149 4684 4688 "plugins/funind/g_indfun.ml4" 149 4684 4698
)
type(
  Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds
)
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  (Names.identifier list * Topconstr.constr_expr)
  Tacexpr.raw_abstract_argument_type
)
ident(
  int_ref rawwit_binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  (Names.identifier list * Topconstr.constr_expr)
  Tacexpr.raw_abstract_argument_type *
  (Names.identifier list * Topconstr.constr_expr)
  Pptactic.raw_extra_genarg_printer ->
  unit Tacexpr.glob_abstract_argument_type *
  unit Pptactic.glob_extra_genarg_printer ->
  unit Tacexpr.typed_abstract_argument_type *
  unit Pptactic.extra_genarg_printer -> unit
)
ident(
  ext_ref Pptactic.declare_extra_genarg_pprule
)
type(
  unit
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  string option * Gramext.g_assoc option *
  (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_a -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_b -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Names.identifier list -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_c -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_d -> Names.identifier list * Topconstr.constr_expr
)
type(
  '_d
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  ('_d -> Names.identifier list * Topconstr.constr_expr) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_c
)
type(
  ('_c -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier list
)
ident(
  int_ref idl "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  (Names.identifier list, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  (Names.identifier list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list1
)
type(
  (Names.identifier list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Names.identifier list -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier list
)
ident(
  def idl "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  (Names.identifier list -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_b
)
type(
  ('_b -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  (Topconstr.constr_expr -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_a
)
type(
  ('_a -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Gramext.g_assoc option
)
type(
  string option
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  Gramext.position option
)
type(
  (Names.identifier list * Topconstr.constr_expr) Pcoq.Gram.Entry.e
)
type(
  (Names.identifier list * Topconstr.constr_expr) Pcoq.Gram.Entry.e
)
ident(
  int_ref binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  (Names.identifier list * Topconstr.constr_expr) Pcoq.Gram.Entry.e ->
  Gramext.position option ->
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list -> unit
)
ident(
  ext_ref Pcoq.Gram.extend
)
type(
  (Names.identifier list * Topconstr.constr_expr) Pcoq.Gram.Entry.e
)
type(
  (Names.identifier list * Topconstr.constr_expr, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  string ->
  (Names.identifier list * Topconstr.constr_expr, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  (Names.identifier list * Topconstr.constr_expr) Pcoq.Gram.Entry.e
)
ident(
  ext_ref Pcoq.create_generic_entry
)
type(
  (Names.identifier list * Topconstr.constr_expr) Pcoq.Gram.Entry.e
)
ident(
  def binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 --
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Names.identifier list * Topconstr.constr_expr, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  string ->
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Names.identifier list * Topconstr.constr_expr, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.create_arg
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Names.identifier list * Topconstr.constr_expr, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Names.identifier list * Topconstr.constr_expr, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  def rawwit_binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 --
)
type(
  (unit, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  def globwit_binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 --
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  def wit_binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 --
)
"plugins/funind/g_indfun.ml4" 158 4956 4960 "plugins/funind/g_indfun.ml4" 158 4956 4972
type(
  Names.identifier list * Topconstr.constr_expr -> Topconstr.local_binder
)
ident(
  def make_binder2 "plugins/funind/g_indfun.ml4" 161 5084 5084 --
)
"plugins/funind/g_indfun.ml4" 158 4956 4974 "plugins/funind/g_indfun.ml4" 158 4956 4977
type(
  Names.identifier list
)
ident(
  def idl "plugins/funind/g_indfun.ml4" 159 4983 4985 "plugins/funind/g_indfun.ml4" 159 4983 5082
)
"plugins/funind/g_indfun.ml4" 158 4956 4978 "plugins/funind/g_indfun.ml4" 158 4956 4979
type(
  Topconstr.constr_expr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 159 4983 4985 "plugins/funind/g_indfun.ml4" 159 4983 5082
)
"plugins/funind/g_indfun.ml4" 158 4956 4974 "plugins/funind/g_indfun.ml4" 158 4956 4979
type(
  Names.identifier list * Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 159 4983 5000 "plugins/funind/g_indfun.ml4" 159 4983 5008
type(
  (Names.identifier -> Names.name Util.located) ->
  Names.identifier list -> Names.name Util.located list
)
ident(
  ext_ref List.map
)
"plugins/funind/g_indfun.ml4" 159 4983 5014 "plugins/funind/g_indfun.ml4" 159 4983 5016
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 159 4983 5021 "plugins/funind/g_indfun.ml4" 159 4983 5043
)
"plugins/funind/g_indfun.ml4" 159 4983 5021 "plugins/funind/g_indfun.ml4" 159 4983 5035
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/g_indfun.ml4" 159 4983 5041 "plugins/funind/g_indfun.ml4" 159 4983 5043
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 159 4983 5014 "plugins/funind/g_indfun.ml4" 159 4983 5016
)
"plugins/funind/g_indfun.ml4" 159 4983 5036 "plugins/funind/g_indfun.ml4" 159 4983 5043
type(
  Names.name
)
"plugins/funind/g_indfun.ml4" 159 4983 5021 "plugins/funind/g_indfun.ml4" 159 4983 5043
type(
  Names.name Util.located
)
"plugins/funind/g_indfun.ml4" 159 4983 5010 "plugins/funind/g_indfun.ml4" 159 4983 5044
type(
  Names.identifier -> Names.name Util.located
)
"plugins/funind/g_indfun.ml4" 159 4983 5046 "plugins/funind/g_indfun.ml4" 159 4983 5049
type(
  Names.identifier list
)
ident(
  int_ref idl "plugins/funind/g_indfun.ml4" 158 4956 4974 "plugins/funind/g_indfun.ml4" 158 4956 4977
)
"plugins/funind/g_indfun.ml4" 159 4983 5000 "plugins/funind/g_indfun.ml4" 159 4983 5049
call(
  stack
)
type(
  Names.name Util.located list
)
"plugins/funind/g_indfun.ml4" 159 4983 5050 "plugins/funind/g_indfun.ml4" 159 4983 5079
type(
  Topconstr.binder_kind
)
ident(
  ext_ref Topconstr.default_binder_kind
)
"plugins/funind/g_indfun.ml4" 159 4983 5080 "plugins/funind/g_indfun.ml4" 159 4983 5081
type(
  Topconstr.constr_expr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 158 4956 4978 "plugins/funind/g_indfun.ml4" 158 4956 4979
)
"plugins/funind/g_indfun.ml4" 159 4983 4985 "plugins/funind/g_indfun.ml4" 159 4983 5082
type(
  Topconstr.local_binder
)
"plugins/funind/g_indfun.ml4" 158 4956 4973 "plugins/funind/g_indfun.ml4" 158 4956 5082
type(
  Names.identifier list * Topconstr.constr_expr -> Topconstr.local_binder
)
"plugins/funind/g_indfun.ml4" 161 5084 5088 "plugins/funind/g_indfun.ml4" 161 5084 5106
type(
  Names.identifier * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr ->
  Pp.std_ppcmds
)
ident(
  def pr_rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 --
)
"plugins/funind/g_indfun.ml4" 161 5084 5108 "plugins/funind/g_indfun.ml4" 161 5084 5110
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5375
)
"plugins/funind/g_indfun.ml4" 161 5084 5111 "plugins/funind/g_indfun.ml4" 161 5084 5113
type(
  (Names.identifier list * Topconstr.constr_expr) list
)
ident(
  def bl "plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5375
)
"plugins/funind/g_indfun.ml4" 161 5084 5114 "plugins/funind/g_indfun.ml4" 161 5084 5119
type(
  Indfun.annot option
)
ident(
  def annot "plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5375
)
"plugins/funind/g_indfun.ml4" 161 5084 5120 "plugins/funind/g_indfun.ml4" 161 5084 5125
type(
  Topconstr.constr_expr
)
ident(
  def type_ "plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5375
)
"plugins/funind/g_indfun.ml4" 161 5084 5126 "plugins/funind/g_indfun.ml4" 161 5084 5129
type(
  Topconstr.constr_expr
)
ident(
  def def "plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5375
)
"plugins/funind/g_indfun.ml4" 161 5084 5108 "plugins/funind/g_indfun.ml4" 161 5084 5129
type(
  Names.identifier * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5148
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Nameops.pr_id
)
"plugins/funind/g_indfun.ml4" 162 5133 5149 "plugins/funind/g_indfun.ml4" 162 5133 5151
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 161 5084 5108 "plugins/funind/g_indfun.ml4" 161 5084 5110
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5151
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5155 "plugins/funind/g_indfun.ml4" 162 5133 5158
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 162 5133 5159 "plugins/funind/g_indfun.ml4" 162 5133 5161
type(
  unit
)
"plugins/funind/g_indfun.ml4" 162 5133 5155 "plugins/funind/g_indfun.ml4" 162 5133 5161
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5161
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 162 5133 5165 "plugins/funind/g_indfun.ml4" 162 5133 5185
type(
  (unit -> Pp.std_ppcmds) ->
  (Names.identifier list * Topconstr.constr_expr -> Pp.std_ppcmds) ->
  (Names.identifier list * Topconstr.constr_expr) list -> Pp.std_ppcmds
)
ident(
  ext_ref Util.prlist_with_sep
)
"plugins/funind/g_indfun.ml4" 162 5133 5186 "plugins/funind/g_indfun.ml4" 162 5133 5189
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 162 5133 5190 "plugins/funind/g_indfun.ml4" 162 5133 5200
type(
  Names.identifier list * Topconstr.constr_expr -> Pp.std_ppcmds
)
ident(
  int_ref pr_binder2 "plugins/funind/g_indfun.ml4" 149 4684 4688 "plugins/funind/g_indfun.ml4" 149 4684 4698
)
"plugins/funind/g_indfun.ml4" 162 5133 5201 "plugins/funind/g_indfun.ml4" 162 5133 5203
type(
  (Names.identifier list * Topconstr.constr_expr) list
)
ident(
  int_ref bl "plugins/funind/g_indfun.ml4" 161 5084 5111 "plugins/funind/g_indfun.ml4" 161 5084 5113
)
"plugins/funind/g_indfun.ml4" 162 5133 5165 "plugins/funind/g_indfun.ml4" 162 5133 5203
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5203
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 163 5207 5211 "plugins/funind/g_indfun.ml4" 163 5207 5222
type(
  (Indfun.annot -> Pp.std_ppcmds) -> Indfun.annot option -> Pp.std_ppcmds
)
ident(
  ext_ref Util.pr_opt
)
"plugins/funind/g_indfun.ml4" 163 5207 5223 "plugins/funind/g_indfun.ml4" 163 5207 5241
type(
  Indfun.annot -> Pp.std_ppcmds
)
ident(
  int_ref pr_rec_annotation2 "plugins/funind/g_indfun.ml4" 137 4192 4196 "plugins/funind/g_indfun.ml4" 137 4192 4214
)
"plugins/funind/g_indfun.ml4" 163 5207 5242 "plugins/funind/g_indfun.ml4" 163 5207 5247
type(
  Indfun.annot option
)
ident(
  int_ref annot "plugins/funind/g_indfun.ml4" 161 5084 5114 "plugins/funind/g_indfun.ml4" 161 5084 5119
)
"plugins/funind/g_indfun.ml4" 163 5207 5211 "plugins/funind/g_indfun.ml4" 163 5207 5247
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5247
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 163 5207 5251 "plugins/funind/g_indfun.ml4" 163 5207 5254
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 163 5207 5255 "plugins/funind/g_indfun.ml4" 163 5207 5257
type(
  unit
)
"plugins/funind/g_indfun.ml4" 163 5207 5251 "plugins/funind/g_indfun.ml4" 163 5207 5257
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5257
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 163 5207 5261 "plugins/funind/g_indfun.ml4" 163 5207 5264
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 163 5207 5265 "plugins/funind/g_indfun.ml4" 163 5207 5268
type(
  string
)
"plugins/funind/g_indfun.ml4" 163 5207 5261 "plugins/funind/g_indfun.ml4" 163 5207 5268
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5268
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 163 5207 5272 "plugins/funind/g_indfun.ml4" 163 5207 5275
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 163 5207 5276 "plugins/funind/g_indfun.ml4" 163 5207 5278
type(
  unit
)
"plugins/funind/g_indfun.ml4" 163 5207 5272 "plugins/funind/g_indfun.ml4" 163 5207 5278
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5278
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 164 5282 5286 "plugins/funind/g_indfun.ml4" 164 5282 5310
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_lconstr_expr
)
"plugins/funind/g_indfun.ml4" 164 5282 5311 "plugins/funind/g_indfun.ml4" 164 5282 5316
type(
  Topconstr.constr_expr
)
ident(
  int_ref type_ "plugins/funind/g_indfun.ml4" 161 5084 5120 "plugins/funind/g_indfun.ml4" 161 5084 5125
)
"plugins/funind/g_indfun.ml4" 164 5282 5286 "plugins/funind/g_indfun.ml4" 164 5282 5316
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5316
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 164 5282 5320 "plugins/funind/g_indfun.ml4" 164 5282 5323
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 164 5282 5324 "plugins/funind/g_indfun.ml4" 164 5282 5329
type(
  string
)
"plugins/funind/g_indfun.ml4" 164 5282 5320 "plugins/funind/g_indfun.ml4" 164 5282 5329
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5329
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 164 5282 5333 "plugins/funind/g_indfun.ml4" 164 5282 5336
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 164 5282 5337 "plugins/funind/g_indfun.ml4" 164 5282 5339
type(
  unit
)
"plugins/funind/g_indfun.ml4" 164 5282 5333 "plugins/funind/g_indfun.ml4" 164 5282 5339
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5339
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 165 5343 5347 "plugins/funind/g_indfun.ml4" 165 5343 5371
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_lconstr_expr
)
"plugins/funind/g_indfun.ml4" 165 5343 5372 "plugins/funind/g_indfun.ml4" 165 5343 5375
type(
  Topconstr.constr_expr
)
ident(
  int_ref def "plugins/funind/g_indfun.ml4" 161 5084 5126 "plugins/funind/g_indfun.ml4" 161 5084 5129
)
"plugins/funind/g_indfun.ml4" 165 5343 5347 "plugins/funind/g_indfun.ml4" 165 5343 5375
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 162 5133 5135 "plugins/funind/g_indfun.ml4" 162 5133 5375
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 161 5084 5107 "plugins/funind/g_indfun.ml4" 161 5084 5375
type(
  Names.identifier * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr ->
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 172 5551 5558 "plugins/funind/g_indfun.ml4" 172 5551 5560
type(
  Names.Idset.elt
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
"plugins/funind/g_indfun.ml4" 172 5551 5561 "plugins/funind/g_indfun.ml4" 172 5551 5563
type(
  (Names.identifier list * Topconstr.constr_expr) list
)
ident(
  int_ref bl "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
"plugins/funind/g_indfun.ml4" 172 5551 5564 "plugins/funind/g_indfun.ml4" 172 5551 5569
type(
  Indfun.annot option
)
ident(
  int_ref annot "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
"plugins/funind/g_indfun.ml4" 172 5551 5570 "plugins/funind/g_indfun.ml4" 172 5551 5575
type(
  Topconstr.constr_expr
)
ident(
  int_ref type_ "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
"plugins/funind/g_indfun.ml4" 172 5551 5576 "plugins/funind/g_indfun.ml4" 172 5551 5579
type(
  Topconstr.constr_expr
)
ident(
  int_ref def "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
"plugins/funind/g_indfun.ml4" 172 5551 5558 "plugins/funind/g_indfun.ml4" 172 5551 5579
type(
  Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr
)
type(
  Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  unit Tacexpr.typed_abstract_argument_type *
  unit Pptactic.extra_genarg_printer
)
type(
  unit Pptactic.extra_genarg_printer
)
type(
  (Term.constr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  unit -> Pp.std_ppcmds
)
type(
  Pp.std_ppcmds
)
type(
  string
)
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Util.anomaly
)
type(
  unit
)
type(
  Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds
)
type(
  Term.constr -> Pp.std_ppcmds
)
type(
  Term.constr -> Pp.std_ppcmds
)
type(
  unit Tacexpr.typed_abstract_argument_type
)
ident(
  int_ref wit_rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  unit Tacexpr.glob_abstract_argument_type *
  unit Pptactic.glob_extra_genarg_printer
)
type(
  unit Pptactic.glob_extra_genarg_printer
)
type(
  (Genarg.rawconstr_and_expr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  unit -> Pp.std_ppcmds
)
type(
  Pp.std_ppcmds
)
type(
  string
)
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Util.anomaly
)
type(
  unit
)
type(
  Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds
)
type(
  Genarg.rawconstr_and_expr -> Pp.std_ppcmds
)
type(
  Genarg.rawconstr_and_expr -> Pp.std_ppcmds
)
type(
  unit Tacexpr.glob_abstract_argument_type
)
ident(
  int_ref globwit_rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Tacexpr.raw_abstract_argument_type *
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Pptactic.raw_extra_genarg_printer
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Pptactic.raw_extra_genarg_printer
)
type(
  (Topconstr.constr_expr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds) ->
  Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr ->
  Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds) ->
  Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr ->
  Pp.std_ppcmds
)
type(
  Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr ->
  Pp.std_ppcmds
)
ident(
  int_ref pr_rec_definition2 "plugins/funind/g_indfun.ml4" 161 5084 5088 "plugins/funind/g_indfun.ml4" 161 5084 5106
)
type(
  Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds
)
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Tacexpr.raw_abstract_argument_type
)
ident(
  int_ref rawwit_rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Tacexpr.raw_abstract_argument_type *
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Pptactic.raw_extra_genarg_printer ->
  unit Tacexpr.glob_abstract_argument_type *
  unit Pptactic.glob_extra_genarg_printer ->
  unit Tacexpr.typed_abstract_argument_type *
  unit Pptactic.extra_genarg_printer -> unit
)
ident(
  ext_ref Pptactic.declare_extra_genarg_pprule
)
type(
  unit
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  string option * Gramext.g_assoc option *
  (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_a -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Topconstr.constr_expr -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_b -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Indfun.annot option -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  (Names.identifier list * Topconstr.constr_expr) list -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Names.Idset.elt -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_c ->
  Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr
)
type(
  '_c
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  ('_c ->
   Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr) ->
  Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.Idset.elt
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Names.Idset.elt, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.Idset.elt, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.Idset.elt, Genarg.rlevel) Genarg.abstract_argument_type ->
  Names.Idset.elt -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.Idset.elt
)
ident(
  def id "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Names.Idset.elt -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  (Names.identifier list * Topconstr.constr_expr) list
)
ident(
  int_ref bl "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  ((Names.identifier list * Topconstr.constr_expr) list, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Names.identifier list * Topconstr.constr_expr, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_binder2 "plugins/funind/g_indfun.ml4" 153 4833 4833 "plugins/funind/g_indfun.ml4" 153 4833 4954
)
type(
  (Names.identifier list * Topconstr.constr_expr, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  ((Names.identifier list * Topconstr.constr_expr) list, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list0
)
type(
  ((Names.identifier list * Topconstr.constr_expr) list, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  (Names.identifier list * Topconstr.constr_expr) list ->
  Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  (Names.identifier list * Topconstr.constr_expr) list
)
ident(
  def bl "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  ((Names.identifier list * Topconstr.constr_expr) list -> Gramext.g_action) ->
  Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Indfun.annot option
)
ident(
  int_ref annot "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Indfun.annot option, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Indfun.annot, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_rec_annotation2 "plugins/funind/g_indfun.ml4" 142 4401 4401 "plugins/funind/g_indfun.ml4" 142 4401 4682
)
type(
  (Indfun.annot, Genarg.rlevel) Genarg.abstract_argument_type ->
  (Indfun.annot option, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (Indfun.annot option, Genarg.rlevel) Genarg.abstract_argument_type ->
  Indfun.annot option -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Indfun.annot option
)
ident(
  def annot "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Indfun.annot option -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_b
)
type(
  ('_b -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  int_ref type_ "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  def type_ "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Topconstr.constr_expr -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_a
)
type(
  ('_a -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  int_ref def "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_constr
)
type(
  (Topconstr.constr_expr, Genarg.rlevel) Genarg.abstract_argument_type ->
  Topconstr.constr_expr -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Topconstr.constr_expr
)
ident(
  def def "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Topconstr.constr_expr -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Gramext.g_assoc option
)
type(
  string option
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  Gramext.position option
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Pcoq.Gram.Entry.e
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Pcoq.Gram.Entry.e
)
ident(
  int_ref rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Pcoq.Gram.Entry.e ->
  Gramext.position option ->
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list -> unit
)
ident(
  ext_ref Pcoq.Gram.extend
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Pcoq.Gram.Entry.e
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr,
   Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  string ->
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr,
   Genarg.rlevel)
  Genarg.abstract_argument_type ->
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Pcoq.Gram.Entry.e
)
ident(
  ext_ref Pcoq.create_generic_entry
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  Pcoq.Gram.Entry.e
)
ident(
  def rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 --
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr,
   Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  string ->
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr,
   Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.create_arg
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr,
   Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr,
   Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  def rawwit_rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 --
)
type(
  (unit, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  def globwit_rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 --
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  def wit_rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 --
)
"plugins/funind/g_indfun.ml4" 175 5588 5592 "plugins/funind/g_indfun.ml4" 175 5588 5613
type(
  'a * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * 'b * 'c ->
  (Util.loc * 'a) * Indfun.annot option * Topconstr.local_binder list * 'b *
  'c
)
ident(
  def make_rec_definitions2 "plugins/funind/g_indfun.ml4" 207 6623 6623 --
)
"plugins/funind/g_indfun.ml4" 175 5588 5615 "plugins/funind/g_indfun.ml4" 175 5588 5617
type(
  'a
)
ident(
  def id "plugins/funind/g_indfun.ml4" 176 5640 5645 "plugins/funind/g_indfun.ml4" 176 5640 6620
)
"plugins/funind/g_indfun.ml4" 175 5588 5618 "plugins/funind/g_indfun.ml4" 175 5588 5620
type(
  (Names.identifier list * Topconstr.constr_expr) list
)
ident(
  def bl "plugins/funind/g_indfun.ml4" 176 5640 5645 "plugins/funind/g_indfun.ml4" 176 5640 6620
)
"plugins/funind/g_indfun.ml4" 175 5588 5621 "plugins/funind/g_indfun.ml4" 175 5588 5626
type(
  Indfun.annot option
)
ident(
  def annot "plugins/funind/g_indfun.ml4" 176 5640 5645 "plugins/funind/g_indfun.ml4" 176 5640 6620
)
"plugins/funind/g_indfun.ml4" 175 5588 5627 "plugins/funind/g_indfun.ml4" 175 5588 5632
type(
  'b
)
ident(
  def type_ "plugins/funind/g_indfun.ml4" 176 5640 5645 "plugins/funind/g_indfun.ml4" 176 5640 6620
)
"plugins/funind/g_indfun.ml4" 175 5588 5633 "plugins/funind/g_indfun.ml4" 175 5588 5636
type(
  'c
)
ident(
  def def "plugins/funind/g_indfun.ml4" 176 5640 5645 "plugins/funind/g_indfun.ml4" 176 5640 6620
)
"plugins/funind/g_indfun.ml4" 175 5588 5615 "plugins/funind/g_indfun.ml4" 175 5588 5636
type(
  'a * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * 'b * 'c
)
"plugins/funind/g_indfun.ml4" 176 5640 5649 "plugins/funind/g_indfun.ml4" 176 5640 5651
type(
  Topconstr.local_binder list
)
"plugins/funind/g_indfun.ml4" 176 5640 5654 "plugins/funind/g_indfun.ml4" 176 5640 5662
type(
  (Names.identifier list * Topconstr.constr_expr -> Topconstr.local_binder) ->
  (Names.identifier list * Topconstr.constr_expr) list ->
  Topconstr.local_binder list
)
ident(
  ext_ref List.map
)
"plugins/funind/g_indfun.ml4" 176 5640 5663 "plugins/funind/g_indfun.ml4" 176 5640 5675
type(
  Names.identifier list * Topconstr.constr_expr -> Topconstr.local_binder
)
ident(
  int_ref make_binder2 "plugins/funind/g_indfun.ml4" 158 4956 4960 "plugins/funind/g_indfun.ml4" 158 4956 4972
)
"plugins/funind/g_indfun.ml4" 176 5640 5676 "plugins/funind/g_indfun.ml4" 176 5640 5678
type(
  (Names.identifier list * Topconstr.constr_expr) list
)
ident(
  int_ref bl "plugins/funind/g_indfun.ml4" 175 5588 5618 "plugins/funind/g_indfun.ml4" 175 5588 5620
)
"plugins/funind/g_indfun.ml4" 176 5640 5654 "plugins/funind/g_indfun.ml4" 176 5640 5678
call(
  stack
)
type(
  Topconstr.local_binder list
)
"plugins/funind/g_indfun.ml4" 177 5682 5691 "plugins/funind/g_indfun.ml4" 177 5682 5696
type(
  Names.name list
)
"plugins/funind/g_indfun.ml4" 177 5682 5699 "plugins/funind/g_indfun.ml4" 177 5682 5707
type(
  (Names.name Util.located -> Names.name) ->
  Names.name Util.located list -> Names.name list
)
ident(
  ext_ref List.map
)
"plugins/funind/g_indfun.ml4" 177 5682 5708 "plugins/funind/g_indfun.ml4" 177 5682 5711
type(
  Names.name Util.located -> Names.name
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/g_indfun.ml4" 177 5682 5713 "plugins/funind/g_indfun.ml4" 177 5682 5744
type(
  Topconstr.local_binder list -> Names.name Util.located list
)
ident(
  ext_ref Topconstr.names_of_local_assums
)
"plugins/funind/g_indfun.ml4" 177 5682 5745 "plugins/funind/g_indfun.ml4" 177 5682 5747
type(
  Topconstr.local_binder list
)
ident(
  int_ref bl "plugins/funind/g_indfun.ml4" 176 5640 5649 "plugins/funind/g_indfun.ml4" 176 5640 5651
)
"plugins/funind/g_indfun.ml4" 177 5682 5713 "plugins/funind/g_indfun.ml4" 177 5682 5747
call(
  stack
)
type(
  Names.name Util.located list
)
"plugins/funind/g_indfun.ml4" 177 5682 5699 "plugins/funind/g_indfun.ml4" 177 5682 5748
call(
  stack
)
type(
  Names.name list
)
"plugins/funind/g_indfun.ml4" 178 5752 5761 "plugins/funind/g_indfun.ml4" 178 5752 5775
type(
  unit -> unit
)
"plugins/funind/g_indfun.ml4" 178 5752 5776 "plugins/funind/g_indfun.ml4" 178 5752 5778
type(
  unit
)
"plugins/funind/g_indfun.ml4" 179 5781 5791 "plugins/funind/g_indfun.ml4" 179 5781 5802
type(
  Names.name list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/g_indfun.ml4" 179 5781 5803 "plugins/funind/g_indfun.ml4" 179 5781 5808
type(
  Names.name list
)
ident(
  int_ref names "plugins/funind/g_indfun.ml4" 177 5682 5691 "plugins/funind/g_indfun.ml4" 177 5682 5696
)
"plugins/funind/g_indfun.ml4" 179 5781 5791 "plugins/funind/g_indfun.ml4" 179 5781 5808
call(
  stack
)
type(
  int
)
"plugins/funind/g_indfun.ml4" 179 5781 5811 "plugins/funind/g_indfun.ml4" 179 5781 5812
type(
  int
)
"plugins/funind/g_indfun.ml4" 179 5781 5791 "plugins/funind/g_indfun.ml4" 179 5781 5812
type(
  bool
)
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"plugins/funind/g_indfun.ml4" 180 5818 5827 "plugins/funind/g_indfun.ml4" 180 5818 5844
type(
  Util.loc * string * Pp.std_ppcmds -> unit
)
ident(
  ext_ref Util.user_err_loc
)
"plugins/funind/g_indfun.ml4" 181 5845 5857 "plugins/funind/g_indfun.ml4" 181 5845 5871
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/g_indfun.ml4" 181 5845 5872 "plugins/funind/g_indfun.ml4" 181 5845 5882
type(
  string
)
"plugins/funind/g_indfun.ml4" 182 5884 5896 "plugins/funind/g_indfun.ml4" 182 5884 5902
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 182 5884 5903 "plugins/funind/g_indfun.ml4" 182 5884 5949
type(
  string
)
"plugins/funind/g_indfun.ml4" 182 5884 5896 "plugins/funind/g_indfun.ml4" 182 5884 5949
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 181 5845 5857 "plugins/funind/g_indfun.ml4" 181 5845 5949
type(
  Util.loc * string * Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 180 5818 5827 "plugins/funind/g_indfun.ml4" 180 5818 5950
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 179 5781 5788 "plugins/funind/g_indfun.ml4" 179 5781 5950
type(
  unit
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 178 5752 5776 "plugins/funind/g_indfun.ml4" 178 5752 5951
type(
  unit -> unit
)
"plugins/funind/g_indfun.ml4" 184 5960 5969 "plugins/funind/g_indfun.ml4" 184 5960 5986
type(
  Indfun.annot -> Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 184 5960 5987 "plugins/funind/g_indfun.ml4" 184 5960 5989
type(
  Indfun.annot
)
ident(
  def an "plugins/funind/g_indfun.ml4" 185 5992 5999 "plugins/funind/g_indfun.ml4" 185 5992 6439
)
"plugins/funind/g_indfun.ml4" 186 6003 6009 "plugins/funind/g_indfun.ml4" 186 6003 6011
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 190 6171 6174 "plugins/funind/g_indfun.ml4" 190 6171 6367
)
"plugins/funind/g_indfun.ml4" 186 6003 6020 "plugins/funind/g_indfun.ml4" 186 6003 6022
type(
  Indfun.annot
)
ident(
  int_ref an "plugins/funind/g_indfun.ml4" 184 5960 5987 "plugins/funind/g_indfun.ml4" 184 5960 5989
)
"plugins/funind/g_indfun.ml4" 187 6028 6041 "plugins/funind/g_indfun.ml4" 187 6028 6043
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 187 6028 6047 "plugins/funind/g_indfun.ml4" 187 6028 6049
)
"plugins/funind/g_indfun.ml4" 187 6028 6034 "plugins/funind/g_indfun.ml4" 187 6028 6043
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 187 6028 6047 "plugins/funind/g_indfun.ml4" 187 6028 6049
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 187 6028 6041 "plugins/funind/g_indfun.ml4" 187 6028 6043
)
"plugins/funind/g_indfun.ml4" 187 6028 6055 "plugins/funind/g_indfun.ml4" 187 6028 6056
type(
  Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 187 6028 6062 "plugins/funind/g_indfun.ml4" 187 6028 6064
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 187 6028 6071 "plugins/funind/g_indfun.ml4" 187 6028 6073
)
"plugins/funind/g_indfun.ml4" 187 6028 6057 "plugins/funind/g_indfun.ml4" 187 6028 6064
type(
  Names.identifier option
)
"plugins/funind/g_indfun.ml4" 187 6028 6065 "plugins/funind/g_indfun.ml4" 187 6028 6066
type(
  Topconstr.constr_expr list
)
"plugins/funind/g_indfun.ml4" 187 6028 6052 "plugins/funind/g_indfun.ml4" 187 6028 6067
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 187 6028 6071 "plugins/funind/g_indfun.ml4" 187 6028 6073
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 187 6028 6062 "plugins/funind/g_indfun.ml4" 187 6028 6064
)
"plugins/funind/g_indfun.ml4" 187 6028 6080 "plugins/funind/g_indfun.ml4" 187 6028 6081
type(
  Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 187 6028 6087 "plugins/funind/g_indfun.ml4" 187 6028 6089
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 187 6028 6096 "plugins/funind/g_indfun.ml4" 187 6028 6098
)
"plugins/funind/g_indfun.ml4" 187 6028 6082 "plugins/funind/g_indfun.ml4" 187 6028 6089
type(
  Names.identifier option
)
"plugins/funind/g_indfun.ml4" 187 6028 6090 "plugins/funind/g_indfun.ml4" 187 6028 6091
type(
  Topconstr.constr_expr list
)
"plugins/funind/g_indfun.ml4" 187 6028 6076 "plugins/funind/g_indfun.ml4" 187 6028 6092
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 187 6028 6096 "plugins/funind/g_indfun.ml4" 187 6028 6098
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 187 6028 6087 "plugins/funind/g_indfun.ml4" 187 6028 6089
)
"plugins/funind/g_indfun.ml4" 188 6099 6108 "plugins/funind/g_indfun.ml4" 188 6099 6109
type(
  Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 188 6099 6110 "plugins/funind/g_indfun.ml4" 188 6099 6114
type(
  Names.identifier option
)
"plugins/funind/g_indfun.ml4" 188 6099 6115 "plugins/funind/g_indfun.ml4" 188 6099 6116
type(
  Topconstr.constr_expr list
)
"plugins/funind/g_indfun.ml4" 188 6099 6105 "plugins/funind/g_indfun.ml4" 188 6099 6117
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 188 6099 6124 "plugins/funind/g_indfun.ml4" 188 6099 6125
type(
  Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 188 6099 6126 "plugins/funind/g_indfun.ml4" 188 6099 6130
type(
  Names.identifier option
)
"plugins/funind/g_indfun.ml4" 188 6099 6131 "plugins/funind/g_indfun.ml4" 188 6099 6132
type(
  Topconstr.constr_expr list
)
"plugins/funind/g_indfun.ml4" 188 6099 6120 "plugins/funind/g_indfun.ml4" 188 6099 6133
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 188 6099 6105 "plugins/funind/g_indfun.ml4" 188 6099 6133
type(
  Indfun.annot
)
"plugins/funind/g_indfun.ml4" 188 6099 6137 "plugins/funind/g_indfun.ml4" 188 6099 6145
type(
  string -> Names.identifier
)
ident(
  ext_ref Pervasives.failwith
)
"plugins/funind/g_indfun.ml4" 188 6099 6146 "plugins/funind/g_indfun.ml4" 188 6099 6165
type(
  string
)
"plugins/funind/g_indfun.ml4" 188 6099 6137 "plugins/funind/g_indfun.ml4" 188 6099 6165
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 186 6003 6014 "plugins/funind/g_indfun.ml4" 186 6003 6165
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 190 6171 6178 "plugins/funind/g_indfun.ml4" 190 6171 6184
type(
  int -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"plugins/funind/g_indfun.ml4" 190 6171 6185 "plugins/funind/g_indfun.ml4" 190 6171 6201
type(
  Names.name -> Names.name list -> int
)
ident(
  ext_ref Util.list_index0
)
"plugins/funind/g_indfun.ml4" 190 6171 6208 "plugins/funind/g_indfun.ml4" 190 6171 6210
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 186 6003 6009 "plugins/funind/g_indfun.ml4" 186 6003 6011
)
"plugins/funind/g_indfun.ml4" 190 6171 6203 "plugins/funind/g_indfun.ml4" 190 6171 6210
type(
  Names.name
)
"plugins/funind/g_indfun.ml4" 190 6171 6212 "plugins/funind/g_indfun.ml4" 190 6171 6217
type(
  Names.name list
)
ident(
  int_ref names "plugins/funind/g_indfun.ml4" 177 5682 5691 "plugins/funind/g_indfun.ml4" 177 5682 5696
)
"plugins/funind/g_indfun.ml4" 190 6171 6185 "plugins/funind/g_indfun.ml4" 190 6171 6217
call(
  stack
)
type(
  int
)
"plugins/funind/g_indfun.ml4" 190 6171 6178 "plugins/funind/g_indfun.ml4" 190 6171 6218
type(
  unit
)
"plugins/funind/g_indfun.ml4" 190 6171 6220 "plugins/funind/g_indfun.ml4" 190 6171 6225
type(
  Indfun.annot option
)
ident(
  int_ref annot "plugins/funind/g_indfun.ml4" 175 5588 5621 "plugins/funind/g_indfun.ml4" 175 5588 5626
)
"plugins/funind/g_indfun.ml4" 190 6171 6178 "plugins/funind/g_indfun.ml4" 190 6171 6225
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 191 6226 6234 "plugins/funind/g_indfun.ml4" 191 6226 6243
type(
  exn
)
"plugins/funind/g_indfun.ml4" 191 6226 6248 "plugins/funind/g_indfun.ml4" 191 6226 6265
type(
  Util.loc * string * Pp.std_ppcmds -> Indfun.annot option
)
ident(
  ext_ref Util.user_err_loc
)
"plugins/funind/g_indfun.ml4" 192 6266 6279 "plugins/funind/g_indfun.ml4" 192 6266 6293
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/g_indfun.ml4" 192 6266 6294 "plugins/funind/g_indfun.ml4" 192 6266 6304
type(
  string
)
"plugins/funind/g_indfun.ml4" 193 6306 6319 "plugins/funind/g_indfun.ml4" 193 6306 6325
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 193 6306 6326 "plugins/funind/g_indfun.ml4" 193 6306 6346
type(
  string
)
"plugins/funind/g_indfun.ml4" 193 6306 6319 "plugins/funind/g_indfun.ml4" 193 6306 6346
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 193 6306 6350 "plugins/funind/g_indfun.ml4" 193 6306 6363
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Nameops.pr_id
)
"plugins/funind/g_indfun.ml4" 193 6306 6364 "plugins/funind/g_indfun.ml4" 193 6306 6366
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 186 6003 6009 "plugins/funind/g_indfun.ml4" 186 6003 6011
)
"plugins/funind/g_indfun.ml4" 193 6306 6350 "plugins/funind/g_indfun.ml4" 193 6306 6366
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 193 6306 6319 "plugins/funind/g_indfun.ml4" 193 6306 6366
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 192 6266 6279 "plugins/funind/g_indfun.ml4" 192 6266 6366
type(
  Util.loc * string * Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 191 6226 6248 "plugins/funind/g_indfun.ml4" 191 6226 6367
call(
  stack
)
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 190 6171 6174 "plugins/funind/g_indfun.ml4" 190 6171 6367
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 186 6003 6005 "plugins/funind/g_indfun.ml4" 186 6003 6371
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 195 6372 6392 "plugins/funind/g_indfun.ml4" 195 6372 6411
type(
  string
)
"plugins/funind/g_indfun.ml4" 195 6372 6384 "plugins/funind/g_indfun.ml4" 195 6372 6411
type(
  exn
)
"plugins/funind/g_indfun.ml4" 195 6372 6416 "plugins/funind/g_indfun.ml4" 195 6372 6430
type(
  unit -> unit
)
ident(
  int_ref check_one_name "plugins/funind/g_indfun.ml4" 178 5752 5761 "plugins/funind/g_indfun.ml4" 178 5752 5775
)
"plugins/funind/g_indfun.ml4" 195 6372 6431 "plugins/funind/g_indfun.ml4" 195 6372 6433
type(
  unit
)
"plugins/funind/g_indfun.ml4" 195 6372 6416 "plugins/funind/g_indfun.ml4" 195 6372 6433
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 195 6372 6434 "plugins/funind/g_indfun.ml4" 195 6372 6439
type(
  Indfun.annot option
)
ident(
  int_ref annot "plugins/funind/g_indfun.ml4" 175 5588 5621 "plugins/funind/g_indfun.ml4" 175 5588 5626
)
"plugins/funind/g_indfun.ml4" 195 6372 6416 "plugins/funind/g_indfun.ml4" 195 6372 6439
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 185 5992 5999 "plugins/funind/g_indfun.ml4" 185 5992 6439
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 184 5960 5987 "plugins/funind/g_indfun.ml4" 184 5960 6439
type(
  Indfun.annot -> Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 197 6448 6457 "plugins/funind/g_indfun.ml4" 197 6448 6459
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 198 6462 6475 "plugins/funind/g_indfun.ml4" 198 6462 6480
type(
  Indfun.annot option
)
ident(
  int_ref annot "plugins/funind/g_indfun.ml4" 175 5588 5621 "plugins/funind/g_indfun.ml4" 175 5588 5626
)
"plugins/funind/g_indfun.ml4" 199 6486 6497 "plugins/funind/g_indfun.ml4" 199 6486 6501
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 200 6505 6518 "plugins/funind/g_indfun.ml4" 200 6505 6523
type(
  Indfun.annot option
)
ident(
  int_ref annot "plugins/funind/g_indfun.ml4" 175 5588 5621 "plugins/funind/g_indfun.ml4" 175 5588 5626
)
"plugins/funind/g_indfun.ml4" 201 6524 6533 "plugins/funind/g_indfun.ml4" 201 6524 6535
type(
  Indfun.annot
)
ident(
  def an "plugins/funind/g_indfun.ml4" 202 6539 6545 "plugins/funind/g_indfun.ml4" 202 6539 6565
)
"plugins/funind/g_indfun.ml4" 201 6524 6528 "plugins/funind/g_indfun.ml4" 201 6524 6535
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 202 6539 6545 "plugins/funind/g_indfun.ml4" 202 6539 6562
type(
  Indfun.annot -> Indfun.annot option
)
ident(
  int_ref check_exists_args "plugins/funind/g_indfun.ml4" 184 5960 5969 "plugins/funind/g_indfun.ml4" 184 5960 5986
)
"plugins/funind/g_indfun.ml4" 202 6539 6563 "plugins/funind/g_indfun.ml4" 202 6539 6565
type(
  Indfun.annot
)
ident(
  int_ref an "plugins/funind/g_indfun.ml4" 201 6524 6533 "plugins/funind/g_indfun.ml4" 201 6524 6535
)
"plugins/funind/g_indfun.ml4" 202 6539 6545 "plugins/funind/g_indfun.ml4" 202 6539 6565
call(
  stack
)
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 198 6462 6469 "plugins/funind/g_indfun.ml4" 198 6462 6565
type(
  Indfun.annot option
)
"plugins/funind/g_indfun.ml4" 204 6574 6581 "plugins/funind/g_indfun.ml4" 204 6574 6595
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/g_indfun.ml4" 204 6574 6596 "plugins/funind/g_indfun.ml4" 204 6574 6598
type(
  'a
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 175 5588 5615 "plugins/funind/g_indfun.ml4" 175 5588 5617
)
"plugins/funind/g_indfun.ml4" 204 6574 6581 "plugins/funind/g_indfun.ml4" 204 6574 6598
type(
  Util.loc * 'a
)
"plugins/funind/g_indfun.ml4" 204 6574 6601 "plugins/funind/g_indfun.ml4" 204 6574 6603
type(
  Indfun.annot option
)
ident(
  int_ref ni "plugins/funind/g_indfun.ml4" 197 6448 6457 "plugins/funind/g_indfun.ml4" 197 6448 6459
)
"plugins/funind/g_indfun.ml4" 204 6574 6605 "plugins/funind/g_indfun.ml4" 204 6574 6607
type(
  Topconstr.local_binder list
)
ident(
  int_ref bl "plugins/funind/g_indfun.ml4" 176 5640 5649 "plugins/funind/g_indfun.ml4" 176 5640 5651
)
"plugins/funind/g_indfun.ml4" 204 6574 6609 "plugins/funind/g_indfun.ml4" 204 6574 6614
type(
  'b
)
ident(
  int_ref type_ "plugins/funind/g_indfun.ml4" 175 5588 5627 "plugins/funind/g_indfun.ml4" 175 5588 5632
)
"plugins/funind/g_indfun.ml4" 204 6574 6616 "plugins/funind/g_indfun.ml4" 204 6574 6619
type(
  'c
)
ident(
  int_ref def "plugins/funind/g_indfun.ml4" 175 5588 5633 "plugins/funind/g_indfun.ml4" 175 5588 5636
)
"plugins/funind/g_indfun.ml4" 204 6574 6580 "plugins/funind/g_indfun.ml4" 204 6574 6619
type(
  (Util.loc * 'a) * Indfun.annot option * Topconstr.local_binder list * 'b *
  'c
)
"plugins/funind/g_indfun.ml4" 197 6448 6453 "plugins/funind/g_indfun.ml4" 197 6448 6620
type(
  (Util.loc * 'a) * Indfun.annot option * Topconstr.local_binder list * 'b *
  'c
)
"plugins/funind/g_indfun.ml4" 184 5960 5965 "plugins/funind/g_indfun.ml4" 184 5960 6620
type(
  (Util.loc * 'a) * Indfun.annot option * Topconstr.local_binder list * 'b *
  'c
)
"plugins/funind/g_indfun.ml4" 178 5752 5757 "plugins/funind/g_indfun.ml4" 178 5752 6620
type(
  (Util.loc * 'a) * Indfun.annot option * Topconstr.local_binder list * 'b *
  'c
)
"plugins/funind/g_indfun.ml4" 177 5682 5687 "plugins/funind/g_indfun.ml4" 177 5682 6620
type(
  (Util.loc * 'a) * Indfun.annot option * Topconstr.local_binder list * 'b *
  'c
)
"plugins/funind/g_indfun.ml4" 176 5640 5645 "plugins/funind/g_indfun.ml4" 176 5640 6620
type(
  (Util.loc * 'a) * Indfun.annot option * Topconstr.local_binder list * 'b *
  'c
)
"plugins/funind/g_indfun.ml4" 175 5588 5614 "plugins/funind/g_indfun.ml4" 175 5588 6620
type(
  'a * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * 'b * 'c ->
  (Util.loc * 'a) * Indfun.annot option * Topconstr.local_binder list * 'b *
  'c
)
"plugins/funind/g_indfun.ml4" 208 6654 6669 "plugins/funind/g_indfun.ml4" 208 6654 6710
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 210 6718 6721 "plugins/funind/g_indfun.ml4" 210 6718 6742
type(
  bool ->
  (Names.Idset.elt Util.located * Indfun.annot option *
   Topconstr.local_binder list * Topconstr.constr_expr *
   Topconstr.constr_expr)
  list -> unit
)
ident(
  ext_ref Indfun.do_generate_principle
)
"plugins/funind/g_indfun.ml4" 210 6718 6743 "plugins/funind/g_indfun.ml4" 210 6718 6748
type(
  bool
)
"plugins/funind/g_indfun.ml4" 210 6718 6750 "plugins/funind/g_indfun.ml4" 210 6718 6758
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr ->
   Names.Idset.elt Util.located * Indfun.annot option *
   Topconstr.local_binder list * Topconstr.constr_expr *
   Topconstr.constr_expr) ->
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  list ->
  (Names.Idset.elt Util.located * Indfun.annot option *
   Topconstr.local_binder list * Topconstr.constr_expr *
   Topconstr.constr_expr)
  list
)
ident(
  ext_ref List.map
)
"plugins/funind/g_indfun.ml4" 210 6718 6759 "plugins/funind/g_indfun.ml4" 210 6718 6780
type(
  Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
  Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr ->
  Names.Idset.elt Util.located * Indfun.annot option *
  Topconstr.local_binder list * Topconstr.constr_expr * Topconstr.constr_expr
)
ident(
  int_ref make_rec_definitions2 "plugins/funind/g_indfun.ml4" 175 5588 5592 "plugins/funind/g_indfun.ml4" 175 5588 5613
)
"plugins/funind/g_indfun.ml4" 210 6718 6781 "plugins/funind/g_indfun.ml4" 210 6718 6786
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  list
)
ident(
  int_ref recsl "plugins/funind/g_indfun.ml4" 208 6654 6657 "plugins/funind/g_indfun.ml4" 208 6654 6792
)
"plugins/funind/g_indfun.ml4" 210 6718 6750 "plugins/funind/g_indfun.ml4" 210 6718 6786
call(
  stack
)
type(
  (Names.Idset.elt Util.located * Indfun.annot option *
   Topconstr.local_binder list * Topconstr.constr_expr *
   Topconstr.constr_expr)
  list
)
"plugins/funind/g_indfun.ml4" 210 6718 6721 "plugins/funind/g_indfun.ml4" 210 6718 6787
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 208 6654 6657 "plugins/funind/g_indfun.ml4" 208 6654 6792
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  list
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref recsl "" -1 0 0 "" -1 0 0
)
type(
  ((Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
    Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
   list, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr,
   Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_rec_definition2 "plugins/funind/g_indfun.ml4" 167 5377 5377 "plugins/funind/g_indfun.ml4" 167 5377 5586
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr,
   Genarg.rlevel)
  Genarg.abstract_argument_type ->
  ((Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
    Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
   list, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list1
)
type(
  ((Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
    Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
   list, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument ->
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  (Names.Idset.elt * (Names.identifier list * Topconstr.constr_expr) list *
   Indfun.annot option * Topconstr.constr_expr * Topconstr.constr_expr)
  list
)
type(
  bool
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref recsl "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 207 6623 6623 "plugins/funind/g_indfun.ml4" 207 6623 6796
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_vernac_command_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 207 6623 6623 "plugins/funind/g_indfun.ml4" 207 6623 6796
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 207 6623 6623 "plugins/funind/g_indfun.ml4" 207 6623 6796
)
type(
  unit
)
type(
  Tacexpr.raw_generic_argument list -> unit -> unit
)
type(
  string -> (Tacexpr.raw_generic_argument list -> unit -> unit) -> unit
)
ident(
  ext_ref Vernacinterp.vinterp_add
)
"plugins/funind/g_indfun.ml4" 215 6798 6802 "plugins/funind/g_indfun.ml4" 215 6798 6819
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort -> Pp.std_ppcmds
)
ident(
  def pr_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 --
)
"plugins/funind/g_indfun.ml4" 215 6798 6821 "plugins/funind/g_indfun.ml4" 215 6798 6831
type(
  Names.identifier
)
ident(
  def princ_name "plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 7005
)
"plugins/funind/g_indfun.ml4" 215 6798 6832 "plugins/funind/g_indfun.ml4" 215 6798 6840
type(
  Libnames.reference
)
ident(
  def fun_name "plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 7005
)
"plugins/funind/g_indfun.ml4" 215 6798 6841 "plugins/funind/g_indfun.ml4" 215 6798 6842
type(
  Rawterm.rawsort
)
ident(
  def s "plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 7005
)
"plugins/funind/g_indfun.ml4" 215 6798 6821 "plugins/funind/g_indfun.ml4" 215 6798 6842
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 6861
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Nameops.pr_id
)
"plugins/funind/g_indfun.ml4" 216 6846 6862 "plugins/funind/g_indfun.ml4" 216 6846 6872
type(
  Names.identifier
)
ident(
  int_ref princ_name "plugins/funind/g_indfun.ml4" 215 6798 6821 "plugins/funind/g_indfun.ml4" 215 6798 6831
)
"plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 6872
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 216 6846 6876 "plugins/funind/g_indfun.ml4" 216 6846 6879
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 216 6846 6880 "plugins/funind/g_indfun.ml4" 216 6846 6885
type(
  string
)
"plugins/funind/g_indfun.ml4" 216 6846 6876 "plugins/funind/g_indfun.ml4" 216 6846 6885
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 6885
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 216 6846 6889 "plugins/funind/g_indfun.ml4" 216 6846 6892
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 216 6846 6892 "plugins/funind/g_indfun.ml4" 216 6846 6894
type(
  unit
)
"plugins/funind/g_indfun.ml4" 216 6846 6889 "plugins/funind/g_indfun.ml4" 216 6846 6894
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 6894
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 216 6846 6898 "plugins/funind/g_indfun.ml4" 216 6846 6901
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 216 6846 6902 "plugins/funind/g_indfun.ml4" 216 6846 6918
type(
  string
)
"plugins/funind/g_indfun.ml4" 216 6846 6898 "plugins/funind/g_indfun.ml4" 216 6846 6918
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 6918
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 217 6922 6924 "plugins/funind/g_indfun.ml4" 217 6922 6945
type(
  Libnames.reference -> Pp.std_ppcmds
)
ident(
  ext_ref Libnames.pr_reference
)
"plugins/funind/g_indfun.ml4" 217 6922 6946 "plugins/funind/g_indfun.ml4" 217 6922 6954
type(
  Libnames.reference
)
ident(
  int_ref fun_name "plugins/funind/g_indfun.ml4" 215 6798 6832 "plugins/funind/g_indfun.ml4" 215 6798 6840
)
"plugins/funind/g_indfun.ml4" 217 6922 6924 "plugins/funind/g_indfun.ml4" 217 6922 6954
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 6954
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 217 6922 6958 "plugins/funind/g_indfun.ml4" 217 6922 6961
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 217 6922 6961 "plugins/funind/g_indfun.ml4" 217 6922 6963
type(
  unit
)
"plugins/funind/g_indfun.ml4" 217 6922 6958 "plugins/funind/g_indfun.ml4" 217 6922 6963
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 6963
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 217 6922 6967 "plugins/funind/g_indfun.ml4" 217 6922 6970
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 217 6922 6971 "plugins/funind/g_indfun.ml4" 217 6922 6978
type(
  string
)
"plugins/funind/g_indfun.ml4" 217 6922 6967 "plugins/funind/g_indfun.ml4" 217 6922 6978
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 6978
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 218 6982 6984 "plugins/funind/g_indfun.ml4" 218 6982 7003
type(
  Rawterm.rawsort -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_rawsort
)
"plugins/funind/g_indfun.ml4" 218 6982 7004 "plugins/funind/g_indfun.ml4" 218 6982 7005
type(
  Rawterm.rawsort
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 215 6798 6841 "plugins/funind/g_indfun.ml4" 215 6798 6842
)
"plugins/funind/g_indfun.ml4" 218 6982 6984 "plugins/funind/g_indfun.ml4" 218 6982 7005
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 216 6846 6848 "plugins/funind/g_indfun.ml4" 216 6846 7005
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 215 6798 6820 "plugins/funind/g_indfun.ml4" 215 6798 7005
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 222 7074 7162 "plugins/funind/g_indfun.ml4" 222 7074 7172
type(
  Names.identifier
)
ident(
  int_ref princ_name "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
"plugins/funind/g_indfun.ml4" 222 7074 7173 "plugins/funind/g_indfun.ml4" 222 7074 7181
type(
  Libnames.reference
)
ident(
  int_ref fun_name "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
"plugins/funind/g_indfun.ml4" 222 7074 7182 "plugins/funind/g_indfun.ml4" 222 7074 7183
type(
  Rawterm.rawsort
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
"plugins/funind/g_indfun.ml4" 222 7074 7162 "plugins/funind/g_indfun.ml4" 222 7074 7183
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  unit Tacexpr.typed_abstract_argument_type *
  unit Pptactic.extra_genarg_printer
)
type(
  unit Pptactic.extra_genarg_printer
)
type(
  (Term.constr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  unit -> Pp.std_ppcmds
)
type(
  Pp.std_ppcmds
)
type(
  string
)
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Util.anomaly
)
type(
  unit
)
type(
  Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds
)
type(
  Term.constr -> Pp.std_ppcmds
)
type(
  Term.constr -> Pp.std_ppcmds
)
type(
  unit Tacexpr.typed_abstract_argument_type
)
ident(
  int_ref wit_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  unit Tacexpr.glob_abstract_argument_type *
  unit Pptactic.glob_extra_genarg_printer
)
type(
  unit Pptactic.glob_extra_genarg_printer
)
type(
  (Genarg.rawconstr_and_expr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds) ->
  unit -> Pp.std_ppcmds
)
type(
  unit -> Pp.std_ppcmds
)
type(
  Pp.std_ppcmds
)
type(
  string
)
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Util.anomaly
)
type(
  unit
)
type(
  Ppextend.tolerability -> Tacexpr.glob_tactic_expr -> Pp.std_ppcmds
)
type(
  Genarg.rawconstr_and_expr -> Pp.std_ppcmds
)
type(
  Genarg.rawconstr_and_expr -> Pp.std_ppcmds
)
type(
  unit Tacexpr.glob_abstract_argument_type
)
ident(
  int_ref globwit_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort)
  Tacexpr.raw_abstract_argument_type *
  (Names.identifier * Libnames.reference * Rawterm.rawsort)
  Pptactic.raw_extra_genarg_printer
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort)
  Pptactic.raw_extra_genarg_printer
)
type(
  (Topconstr.constr_expr -> Pp.std_ppcmds) ->
  (Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds) ->
  Names.identifier * Libnames.reference * Rawterm.rawsort -> Pp.std_ppcmds
)
type(
  (Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds) ->
  Names.identifier * Libnames.reference * Rawterm.rawsort -> Pp.std_ppcmds
)
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort -> Pp.std_ppcmds
)
ident(
  int_ref pr_fun_scheme_arg "plugins/funind/g_indfun.ml4" 215 6798 6802 "plugins/funind/g_indfun.ml4" 215 6798 6819
)
type(
  Ppextend.tolerability -> Tacexpr.raw_tactic_expr -> Pp.std_ppcmds
)
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  Topconstr.constr_expr -> Pp.std_ppcmds
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort)
  Tacexpr.raw_abstract_argument_type
)
ident(
  int_ref rawwit_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort)
  Tacexpr.raw_abstract_argument_type *
  (Names.identifier * Libnames.reference * Rawterm.rawsort)
  Pptactic.raw_extra_genarg_printer ->
  unit Tacexpr.glob_abstract_argument_type *
  unit Pptactic.glob_extra_genarg_printer ->
  unit Tacexpr.typed_abstract_argument_type *
  unit Pptactic.extra_genarg_printer -> unit
)
ident(
  ext_ref Pptactic.declare_extra_genarg_pprule
)
type(
  unit
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  string option * Gramext.g_assoc option *
  (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list
)
type(
  Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Rawterm.rawsort -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_a -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Libnames.reference -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_b -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_c -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_d -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Names.identifier -> Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  Gramext.g_action
)
type(
  '_e -> Names.identifier * Libnames.reference * Rawterm.rawsort
)
type(
  '_e
)
ident(
  def loc "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  ('_e -> Names.identifier * Libnames.reference * Rawterm.rawsort) ->
  Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier
)
ident(
  int_ref princ_name "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  Names.identifier -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Names.identifier
)
ident(
  def princ_name "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Names.identifier -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_d
)
type(
  ('_d -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_c
)
type(
  ('_c -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_b
)
type(
  ('_b -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Libnames.reference
)
ident(
  int_ref fun_name "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Libnames.reference, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ref
)
type(
  (Libnames.reference, Genarg.rlevel) Genarg.abstract_argument_type ->
  Libnames.reference -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Libnames.reference
)
ident(
  def fun_name "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Libnames.reference -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  '_a
)
type(
  ('_a -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Rawterm.rawsort
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Rawterm.rawsort, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_sort
)
type(
  (Rawterm.rawsort, Genarg.rlevel) Genarg.abstract_argument_type ->
  Rawterm.rawsort -> Genarg.rlevel Genarg.generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Genarg.rlevel Genarg.generic_argument
)
type(
  Rawterm.rawsort
)
ident(
  def s "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Rawterm.rawsort -> Gramext.g_action) -> Gramext.g_action
)
ident(
  ext_ref Gramext.action
)
type(
  Gramext.g_assoc option
)
type(
  string option
)
type(
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list
)
type(
  Gramext.position option
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) Pcoq.Gram.Entry.e
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) Pcoq.Gram.Entry.e
)
ident(
  int_ref fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) Pcoq.Gram.Entry.e ->
  Gramext.position option ->
  (string option * Gramext.g_assoc option *
   (Pcoq.Gram.te Gramext.g_symbol list * Gramext.g_action) list)
  list -> unit
)
ident(
  ext_ref Pcoq.Gram.extend
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) Pcoq.Gram.Entry.e
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  string ->
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  (Names.identifier * Libnames.reference * Rawterm.rawsort) Pcoq.Gram.Entry.e
)
ident(
  ext_ref Pcoq.create_generic_entry
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) Pcoq.Gram.Entry.e
)
ident(
  def fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 --
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  string ->
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.create_arg
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type *
  (unit, Genarg.glevel) Genarg.abstract_argument_type *
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  def rawwit_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 --
)
type(
  (unit, Genarg.glevel) Genarg.abstract_argument_type
)
ident(
  def globwit_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 --
)
type(
  (unit, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  def wit_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 --
)
"plugins/funind/g_indfun.ml4" 226 7193 7197 "plugins/funind/g_indfun.ml4" 226 7193 7210
type(
  Libnames.reference list -> exn -> unit
)
ident(
  def warning_error "plugins/funind/g_indfun.ml4" 241 7736 7736 --
)
"plugins/funind/g_indfun.ml4" 226 7193 7211 "plugins/funind/g_indfun.ml4" 226 7193 7216
type(
  Libnames.reference list
)
ident(
  def names "plugins/funind/g_indfun.ml4" 226 7193 7217 "plugins/funind/g_indfun.ml4" 226 7193 7733
)
"plugins/funind/g_indfun.ml4" 226 7193 7217 "plugins/funind/g_indfun.ml4" 226 7193 7218
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 227 7221 7223 "plugins/funind/g_indfun.ml4" 227 7221 7733
)
"plugins/funind/g_indfun.ml4" 227 7221 7229 "plugins/funind/g_indfun.ml4" 227 7221 7230
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 226 7193 7217 "plugins/funind/g_indfun.ml4" 226 7193 7218
)
"plugins/funind/g_indfun.ml4" 228 7236 7257 "plugins/funind/g_indfun.ml4" 228 7236 7258
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 229 7262 7263 "plugins/funind/g_indfun.ml4" 229 7262 7477
)
"plugins/funind/g_indfun.ml4" 228 7236 7242 "plugins/funind/g_indfun.ml4" 228 7236 7258
type(
  exn
)
"plugins/funind/g_indfun.ml4" 229 7262 7263 "plugins/funind/g_indfun.ml4" 229 7262 7277
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msg_warning
)
"plugins/funind/g_indfun.ml4" 230 7278 7282 "plugins/funind/g_indfun.ml4" 230 7278 7285
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 230 7278 7286 "plugins/funind/g_indfun.ml4" 230 7278 7315
type(
  string
)
"plugins/funind/g_indfun.ml4" 230 7278 7282 "plugins/funind/g_indfun.ml4" 230 7278 7315
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 231 7319 7325 "plugins/funind/g_indfun.ml4" 231 7319 7326
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.h
)
"plugins/funind/g_indfun.ml4" 231 7319 7327 "plugins/funind/g_indfun.ml4" 231 7319 7328
type(
  int
)
"plugins/funind/g_indfun.ml4" 231 7319 7330 "plugins/funind/g_indfun.ml4" 231 7319 7345
type(
  (unit -> Pp.std_ppcmds) ->
  (Libnames.reference -> Pp.std_ppcmds) ->
  Libnames.reference list -> Pp.std_ppcmds
)
ident(
  ext_ref Util.prlist_with_sep
)
"plugins/funind/g_indfun.ml4" 231 7319 7351 "plugins/funind/g_indfun.ml4" 231 7319 7352
type(
  unit
)
"plugins/funind/g_indfun.ml4" 231 7319 7356 "plugins/funind/g_indfun.ml4" 231 7319 7359
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 231 7319 7359 "plugins/funind/g_indfun.ml4" 231 7319 7362
type(
  string
)
"plugins/funind/g_indfun.ml4" 231 7319 7356 "plugins/funind/g_indfun.ml4" 231 7319 7362
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 231 7319 7364 "plugins/funind/g_indfun.ml4" 231 7319 7367
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 231 7319 7368 "plugins/funind/g_indfun.ml4" 231 7319 7370
type(
  unit
)
"plugins/funind/g_indfun.ml4" 231 7319 7364 "plugins/funind/g_indfun.ml4" 231 7319 7370
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 231 7319 7356 "plugins/funind/g_indfun.ml4" 231 7319 7370
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 231 7319 7347 "plugins/funind/g_indfun.ml4" 231 7319 7370
type(
  unit -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 231 7319 7372 "plugins/funind/g_indfun.ml4" 231 7319 7393
type(
  Libnames.reference -> Pp.std_ppcmds
)
ident(
  ext_ref Libnames.pr_reference
)
"plugins/funind/g_indfun.ml4" 231 7319 7394 "plugins/funind/g_indfun.ml4" 231 7319 7399
type(
  Libnames.reference list
)
ident(
  int_ref names "plugins/funind/g_indfun.ml4" 226 7193 7211 "plugins/funind/g_indfun.ml4" 226 7193 7216
)
"plugins/funind/g_indfun.ml4" 231 7319 7330 "plugins/funind/g_indfun.ml4" 231 7319 7399
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 231 7319 7325 "plugins/funind/g_indfun.ml4" 231 7319 7400
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 230 7278 7282 "plugins/funind/g_indfun.ml4" 230 7278 7400
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 232 7404 7413 "plugins/funind/g_indfun.ml4" 232 7404 7423
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/g_indfun.ml4" 232 7404 7424 "plugins/funind/g_indfun.ml4" 232 7404 7426
type(
  unit
)
"plugins/funind/g_indfun.ml4" 232 7404 7413 "plugins/funind/g_indfun.ml4" 232 7404 7426
call(
  stack
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 232 7404 7433 "plugins/funind/g_indfun.ml4" 232 7404 7436
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 232 7404 7437 "plugins/funind/g_indfun.ml4" 232 7404 7439
type(
  unit
)
"plugins/funind/g_indfun.ml4" 232 7404 7433 "plugins/funind/g_indfun.ml4" 232 7404 7439
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 232 7404 7443 "plugins/funind/g_indfun.ml4" 232 7404 7462
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
"plugins/funind/g_indfun.ml4" 232 7404 7463 "plugins/funind/g_indfun.ml4" 232 7404 7464
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 228 7236 7257 "plugins/funind/g_indfun.ml4" 228 7236 7258
)
"plugins/funind/g_indfun.ml4" 232 7404 7443 "plugins/funind/g_indfun.ml4" 232 7404 7464
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 232 7404 7433 "plugins/funind/g_indfun.ml4" 232 7404 7464
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 232 7404 7471 "plugins/funind/g_indfun.ml4" 232 7404 7473
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/g_indfun.ml4" 232 7404 7474 "plugins/funind/g_indfun.ml4" 232 7404 7476
type(
  unit
)
"plugins/funind/g_indfun.ml4" 232 7404 7471 "plugins/funind/g_indfun.ml4" 232 7404 7476
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 232 7404 7410 "plugins/funind/g_indfun.ml4" 232 7404 7476
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 230 7278 7282 "plugins/funind/g_indfun.ml4" 230 7278 7476
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 229 7262 7263 "plugins/funind/g_indfun.ml4" 229 7262 7477
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 233 7478 7503 "plugins/funind/g_indfun.ml4" 233 7478 7504
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 234 7508 7509 "plugins/funind/g_indfun.ml4" 234 7508 7714
)
"plugins/funind/g_indfun.ml4" 233 7478 7484 "plugins/funind/g_indfun.ml4" 233 7478 7504
type(
  exn
)
"plugins/funind/g_indfun.ml4" 234 7508 7509 "plugins/funind/g_indfun.ml4" 234 7508 7523
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msg_warning
)
"plugins/funind/g_indfun.ml4" 235 7524 7528 "plugins/funind/g_indfun.ml4" 235 7524 7531
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 235 7524 7532 "plugins/funind/g_indfun.ml4" 235 7524 7565
type(
  string
)
"plugins/funind/g_indfun.ml4" 235 7524 7528 "plugins/funind/g_indfun.ml4" 235 7524 7565
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 236 7568 7574 "plugins/funind/g_indfun.ml4" 236 7568 7575
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.h
)
"plugins/funind/g_indfun.ml4" 236 7568 7576 "plugins/funind/g_indfun.ml4" 236 7568 7577
type(
  int
)
"plugins/funind/g_indfun.ml4" 236 7568 7579 "plugins/funind/g_indfun.ml4" 236 7568 7594
type(
  (unit -> Pp.std_ppcmds) ->
  (Libnames.reference -> Pp.std_ppcmds) ->
  Libnames.reference list -> Pp.std_ppcmds
)
ident(
  ext_ref Util.prlist_with_sep
)
"plugins/funind/g_indfun.ml4" 236 7568 7600 "plugins/funind/g_indfun.ml4" 236 7568 7601
type(
  unit
)
"plugins/funind/g_indfun.ml4" 236 7568 7605 "plugins/funind/g_indfun.ml4" 236 7568 7608
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 236 7568 7608 "plugins/funind/g_indfun.ml4" 236 7568 7611
type(
  string
)
"plugins/funind/g_indfun.ml4" 236 7568 7605 "plugins/funind/g_indfun.ml4" 236 7568 7611
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 236 7568 7613 "plugins/funind/g_indfun.ml4" 236 7568 7616
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/g_indfun.ml4" 236 7568 7617 "plugins/funind/g_indfun.ml4" 236 7568 7619
type(
  unit
)
"plugins/funind/g_indfun.ml4" 236 7568 7613 "plugins/funind/g_indfun.ml4" 236 7568 7619
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 236 7568 7605 "plugins/funind/g_indfun.ml4" 236 7568 7619
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 236 7568 7596 "plugins/funind/g_indfun.ml4" 236 7568 7619
type(
  unit -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 236 7568 7621 "plugins/funind/g_indfun.ml4" 236 7568 7642
type(
  Libnames.reference -> Pp.std_ppcmds
)
ident(
  ext_ref Libnames.pr_reference
)
"plugins/funind/g_indfun.ml4" 236 7568 7643 "plugins/funind/g_indfun.ml4" 236 7568 7648
type(
  Libnames.reference list
)
ident(
  int_ref names "plugins/funind/g_indfun.ml4" 226 7193 7211 "plugins/funind/g_indfun.ml4" 226 7193 7216
)
"plugins/funind/g_indfun.ml4" 236 7568 7579 "plugins/funind/g_indfun.ml4" 236 7568 7648
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 236 7568 7574 "plugins/funind/g_indfun.ml4" 236 7568 7649
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 235 7524 7528 "plugins/funind/g_indfun.ml4" 235 7524 7649
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 237 7653 7662 "plugins/funind/g_indfun.ml4" 237 7653 7672
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/g_indfun.ml4" 237 7653 7673 "plugins/funind/g_indfun.ml4" 237 7653 7675
type(
  unit
)
"plugins/funind/g_indfun.ml4" 237 7653 7662 "plugins/funind/g_indfun.ml4" 237 7653 7675
call(
  stack
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 237 7653 7681 "plugins/funind/g_indfun.ml4" 237 7653 7700
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
"plugins/funind/g_indfun.ml4" 237 7653 7701 "plugins/funind/g_indfun.ml4" 237 7653 7702
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 233 7478 7503 "plugins/funind/g_indfun.ml4" 233 7478 7504
)
"plugins/funind/g_indfun.ml4" 237 7653 7681 "plugins/funind/g_indfun.ml4" 237 7653 7702
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 237 7653 7708 "plugins/funind/g_indfun.ml4" 237 7653 7710
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/g_indfun.ml4" 237 7653 7711 "plugins/funind/g_indfun.ml4" 237 7653 7713
type(
  unit
)
"plugins/funind/g_indfun.ml4" 237 7653 7708 "plugins/funind/g_indfun.ml4" 237 7653 7713
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 237 7653 7659 "plugins/funind/g_indfun.ml4" 237 7653 7713
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 235 7524 7528 "plugins/funind/g_indfun.ml4" 235 7524 7713
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 234 7508 7509 "plugins/funind/g_indfun.ml4" 234 7508 7714
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 238 7715 7721 "plugins/funind/g_indfun.ml4" 238 7715 7722
type(
  exn
)
"plugins/funind/g_indfun.ml4" 238 7715 7726 "plugins/funind/g_indfun.ml4" 238 7715 7731
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/g_indfun.ml4" 238 7715 7732 "plugins/funind/g_indfun.ml4" 238 7715 7733
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 226 7193 7217 "plugins/funind/g_indfun.ml4" 226 7193 7218
)
"plugins/funind/g_indfun.ml4" 238 7715 7726 "plugins/funind/g_indfun.ml4" 238 7715 7733
type(
  unit
)
"plugins/funind/g_indfun.ml4" 227 7221 7223 "plugins/funind/g_indfun.ml4" 227 7221 7733
type(
  unit
)
"plugins/funind/g_indfun.ml4" 226 7193 7217 "plugins/funind/g_indfun.ml4" 226 7193 7733
type(
  exn -> unit
)
"plugins/funind/g_indfun.ml4" 226 7193 7211 "plugins/funind/g_indfun.ml4" 226 7193 7733
type(
  Libnames.reference list -> exn -> unit
)
"plugins/funind/g_indfun.ml4" 242 7778 7804 "plugins/funind/g_indfun.ml4" 242 7778 7842
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 246 7871 7874 "plugins/funind/g_indfun.ml4" 246 7871 7914
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list -> unit
)
ident(
  ext_ref Functional_principles_types.build_scheme
)
"plugins/funind/g_indfun.ml4" 246 7871 7915 "plugins/funind/g_indfun.ml4" 246 7871 7918
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
ident(
  int_ref fas "plugins/funind/g_indfun.ml4" 242 7778 7781 "plugins/funind/g_indfun.ml4" 242 7778 8583
)
"plugins/funind/g_indfun.ml4" 246 7871 7874 "plugins/funind/g_indfun.ml4" 246 7871 7918
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 247 7919 7925 "plugins/funind/g_indfun.ml4" 247 7919 7967
type(
  exn
)
"plugins/funind/g_indfun.ml4" 249 7980 7991 "plugins/funind/g_indfun.ml4" 249 7980 7994
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
ident(
  int_ref fas "plugins/funind/g_indfun.ml4" 242 7778 7781 "plugins/funind/g_indfun.ml4" 242 7778 8583
)
"plugins/funind/g_indfun.ml4" 250 8000 8010 "plugins/funind/g_indfun.ml4" 250 8000 8011
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 250 8000 8012 "plugins/funind/g_indfun.ml4" 250 8000 8020
type(
  Libnames.reference
)
ident(
  def fun_name "plugins/funind/g_indfun.ml4" 253 8052 8046 "plugins/funind/g_indfun.ml4" 253 8052 8388
)
"plugins/funind/g_indfun.ml4" 250 8000 8021 "plugins/funind/g_indfun.ml4" 250 8000 8022
type(
  Rawterm.rawsort
)
"plugins/funind/g_indfun.ml4" 250 8000 8010 "plugins/funind/g_indfun.ml4" 250 8000 8022
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/g_indfun.ml4" 250 8000 8025 "plugins/funind/g_indfun.ml4" 250 8000 8026
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
"plugins/funind/g_indfun.ml4" 250 8000 8009 "plugins/funind/g_indfun.ml4" 250 8000 8026
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
"plugins/funind/g_indfun.ml4" 253 8052 8060 "plugins/funind/g_indfun.ml4" 253 8052 8070
type(
  Libnames.global_reference -> unit
)
ident(
  ext_ref Indfun.make_graph
)
"plugins/funind/g_indfun.ml4" 253 8052 8072 "plugins/funind/g_indfun.ml4" 253 8052 8086
type(
  Libnames.reference -> Libnames.global_reference
)
ident(
  ext_ref Nametab.global
)
"plugins/funind/g_indfun.ml4" 253 8052 8087 "plugins/funind/g_indfun.ml4" 253 8052 8095
type(
  Libnames.reference
)
ident(
  int_ref fun_name "plugins/funind/g_indfun.ml4" 250 8000 8012 "plugins/funind/g_indfun.ml4" 250 8000 8020
)
"plugins/funind/g_indfun.ml4" 253 8052 8072 "plugins/funind/g_indfun.ml4" 253 8052 8095
call(
  stack
)
type(
  Libnames.global_reference
)
"plugins/funind/g_indfun.ml4" 253 8052 8060 "plugins/funind/g_indfun.ml4" 253 8052 8096
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 256 8115 8125 "plugins/funind/g_indfun.ml4" 256 8115 8165
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list -> unit
)
ident(
  ext_ref Functional_principles_types.build_scheme
)
"plugins/funind/g_indfun.ml4" 256 8115 8166 "plugins/funind/g_indfun.ml4" 256 8115 8169
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
ident(
  int_ref fas "plugins/funind/g_indfun.ml4" 242 7778 7781 "plugins/funind/g_indfun.ml4" 242 7778 8583
)
"plugins/funind/g_indfun.ml4" 256 8115 8125 "plugins/funind/g_indfun.ml4" 256 8115 8169
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 257 8170 8181 "plugins/funind/g_indfun.ml4" 257 8170 8223
type(
  exn
)
"plugins/funind/g_indfun.ml4" 258 8227 8235 "plugins/funind/g_indfun.ml4" 258 8227 8245
type(
  string -> unit
)
ident(
  ext_ref Util.error
)
"plugins/funind/g_indfun.ml4" 258 8227 8247 "plugins/funind/g_indfun.ml4" 258 8227 8287
type(
  string
)
"plugins/funind/g_indfun.ml4" 258 8227 8235 "plugins/funind/g_indfun.ml4" 258 8227 8288
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 259 8289 8303 "plugins/funind/g_indfun.ml4" 259 8289 8304
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 260 8308 8313 "plugins/funind/g_indfun.ml4" 260 8308 8388
)
"plugins/funind/g_indfun.ml4" 260 8308 8317 "plugins/funind/g_indfun.ml4" 260 8308 8322
type(
  Libnames.reference list
)
"plugins/funind/g_indfun.ml4" 260 8308 8325 "plugins/funind/g_indfun.ml4" 260 8308 8333
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort ->
   Libnames.reference) ->
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list ->
  Libnames.reference list
)
ident(
  ext_ref List.map
)
"plugins/funind/g_indfun.ml4" 260 8308 8340 "plugins/funind/g_indfun.ml4" 260 8308 8341
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 260 8308 8342 "plugins/funind/g_indfun.ml4" 260 8308 8344
type(
  Libnames.reference
)
ident(
  def na "plugins/funind/g_indfun.ml4" 260 8308 8351 "plugins/funind/g_indfun.ml4" 260 8308 8353
)
"plugins/funind/g_indfun.ml4" 260 8308 8345 "plugins/funind/g_indfun.ml4" 260 8308 8346
type(
  Rawterm.rawsort
)
"plugins/funind/g_indfun.ml4" 260 8308 8340 "plugins/funind/g_indfun.ml4" 260 8308 8346
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/g_indfun.ml4" 260 8308 8351 "plugins/funind/g_indfun.ml4" 260 8308 8353
type(
  Libnames.reference
)
ident(
  int_ref na "plugins/funind/g_indfun.ml4" 260 8308 8342 "plugins/funind/g_indfun.ml4" 260 8308 8344
)
"plugins/funind/g_indfun.ml4" 260 8308 8335 "plugins/funind/g_indfun.ml4" 260 8308 8353
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort ->
  Libnames.reference
)
"plugins/funind/g_indfun.ml4" 260 8308 8355 "plugins/funind/g_indfun.ml4" 260 8308 8358
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
ident(
  int_ref fas "plugins/funind/g_indfun.ml4" 242 7778 7781 "plugins/funind/g_indfun.ml4" 242 7778 8583
)
"plugins/funind/g_indfun.ml4" 260 8308 8325 "plugins/funind/g_indfun.ml4" 260 8308 8358
call(
  stack
)
type(
  Libnames.reference list
)
"plugins/funind/g_indfun.ml4" 261 8362 8367 "plugins/funind/g_indfun.ml4" 261 8362 8380
type(
  Libnames.reference list -> exn -> unit
)
ident(
  int_ref warning_error "plugins/funind/g_indfun.ml4" 226 7193 7197 "plugins/funind/g_indfun.ml4" 226 7193 7210
)
"plugins/funind/g_indfun.ml4" 261 8362 8381 "plugins/funind/g_indfun.ml4" 261 8362 8386
type(
  Libnames.reference list
)
ident(
  int_ref names "plugins/funind/g_indfun.ml4" 260 8308 8317 "plugins/funind/g_indfun.ml4" 260 8308 8322
)
"plugins/funind/g_indfun.ml4" 261 8362 8387 "plugins/funind/g_indfun.ml4" 261 8362 8388
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 259 8289 8303 "plugins/funind/g_indfun.ml4" 259 8289 8304
)
"plugins/funind/g_indfun.ml4" 261 8362 8367 "plugins/funind/g_indfun.ml4" 261 8362 8388
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 260 8308 8313 "plugins/funind/g_indfun.ml4" 260 8308 8388
type(
  unit
)
"plugins/funind/g_indfun.ml4" 256 8115 8121 "plugins/funind/g_indfun.ml4" 256 8115 8388
type(
  unit
)
"plugins/funind/g_indfun.ml4" 253 8052 8046 "plugins/funind/g_indfun.ml4" 253 8052 8388
type(
  unit
)
"plugins/funind/g_indfun.ml4" 264 8398 8407 "plugins/funind/g_indfun.ml4" 264 8398 8408
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
"plugins/funind/g_indfun.ml4" 264 8398 8412 "plugins/funind/g_indfun.ml4" 264 8398 8424
type(
  unit
)
"plugins/funind/g_indfun.ml4" 249 7980 7985 "plugins/funind/g_indfun.ml4" 249 7980 8424
type(
  unit
)
"plugins/funind/g_indfun.ml4" 266 8471 8476 "plugins/funind/g_indfun.ml4" 266 8471 8477
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 267 8482 8489 "plugins/funind/g_indfun.ml4" 267 8482 8566
)
"plugins/funind/g_indfun.ml4" 267 8482 8493 "plugins/funind/g_indfun.ml4" 267 8482 8498
type(
  Libnames.reference list
)
"plugins/funind/g_indfun.ml4" 267 8482 8501 "plugins/funind/g_indfun.ml4" 267 8482 8509
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort ->
   Libnames.reference) ->
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list ->
  Libnames.reference list
)
ident(
  ext_ref List.map
)
"plugins/funind/g_indfun.ml4" 267 8482 8516 "plugins/funind/g_indfun.ml4" 267 8482 8517
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 267 8482 8518 "plugins/funind/g_indfun.ml4" 267 8482 8520
type(
  Libnames.reference
)
ident(
  def na "plugins/funind/g_indfun.ml4" 267 8482 8527 "plugins/funind/g_indfun.ml4" 267 8482 8529
)
"plugins/funind/g_indfun.ml4" 267 8482 8521 "plugins/funind/g_indfun.ml4" 267 8482 8522
type(
  Rawterm.rawsort
)
"plugins/funind/g_indfun.ml4" 267 8482 8516 "plugins/funind/g_indfun.ml4" 267 8482 8522
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/g_indfun.ml4" 267 8482 8527 "plugins/funind/g_indfun.ml4" 267 8482 8529
type(
  Libnames.reference
)
ident(
  int_ref na "plugins/funind/g_indfun.ml4" 267 8482 8518 "plugins/funind/g_indfun.ml4" 267 8482 8520
)
"plugins/funind/g_indfun.ml4" 267 8482 8511 "plugins/funind/g_indfun.ml4" 267 8482 8529
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort ->
  Libnames.reference
)
"plugins/funind/g_indfun.ml4" 267 8482 8531 "plugins/funind/g_indfun.ml4" 267 8482 8534
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
ident(
  int_ref fas "plugins/funind/g_indfun.ml4" 242 7778 7781 "plugins/funind/g_indfun.ml4" 242 7778 8583
)
"plugins/funind/g_indfun.ml4" 267 8482 8501 "plugins/funind/g_indfun.ml4" 267 8482 8534
call(
  stack
)
type(
  Libnames.reference list
)
"plugins/funind/g_indfun.ml4" 268 8538 8545 "plugins/funind/g_indfun.ml4" 268 8538 8558
type(
  Libnames.reference list -> exn -> unit
)
ident(
  int_ref warning_error "plugins/funind/g_indfun.ml4" 226 7193 7197 "plugins/funind/g_indfun.ml4" 226 7193 7210
)
"plugins/funind/g_indfun.ml4" 268 8538 8559 "plugins/funind/g_indfun.ml4" 268 8538 8564
type(
  Libnames.reference list
)
ident(
  int_ref names "plugins/funind/g_indfun.ml4" 267 8482 8493 "plugins/funind/g_indfun.ml4" 267 8482 8498
)
"plugins/funind/g_indfun.ml4" 268 8538 8565 "plugins/funind/g_indfun.ml4" 268 8538 8566
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 266 8471 8476 "plugins/funind/g_indfun.ml4" 266 8471 8477
)
"plugins/funind/g_indfun.ml4" 268 8538 8545 "plugins/funind/g_indfun.ml4" 268 8538 8566
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 267 8482 8489 "plugins/funind/g_indfun.ml4" 267 8482 8566
type(
  unit
)
"plugins/funind/g_indfun.ml4" 245 7866 7867 "plugins/funind/g_indfun.ml4" 245 7866 8566
type(
  unit
)
"plugins/funind/g_indfun.ml4" 242 7778 7781 "plugins/funind/g_indfun.ml4" 242 7778 8583
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref fas "" -1 0 0 "" -1 0 0
)
type(
  ((Names.identifier * Libnames.reference * Rawterm.rawsort) list,
   Genarg.rlevel)
  Genarg.abstract_argument_type
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  ((Names.identifier * Libnames.reference * Rawterm.rawsort) list,
   Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list1
)
type(
  ((Names.identifier * Libnames.reference * Rawterm.rawsort) list,
   Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument ->
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
type(
  bool
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref fas "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 241 7736 7736 "plugins/funind/g_indfun.ml4" 241 7736 8587
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_vernac_command_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 241 7736 7736 "plugins/funind/g_indfun.ml4" 241 7736 8587
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 241 7736 7736 "plugins/funind/g_indfun.ml4" 241 7736 8587
)
type(
  unit
)
type(
  Tacexpr.raw_generic_argument list -> unit -> unit
)
type(
  string -> (Tacexpr.raw_generic_argument list -> unit -> unit) -> unit
)
ident(
  ext_ref Vernacinterp.vinterp_add
)
"plugins/funind/g_indfun.ml4" 276 8652 8676 "plugins/funind/g_indfun.ml4" 276 8652 8695
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  string
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 278 8707 8713 "plugins/funind/g_indfun.ml4" 278 8707 8758
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort -> unit
)
ident(
  ext_ref Functional_principles_types.build_case_scheme
)
"plugins/funind/g_indfun.ml4" 278 8707 8759 "plugins/funind/g_indfun.ml4" 278 8707 8762
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
ident(
  int_ref fas "plugins/funind/g_indfun.ml4" 276 8652 8655 "plugins/funind/g_indfun.ml4" 276 8652 8768
)
"plugins/funind/g_indfun.ml4" 278 8707 8713 "plugins/funind/g_indfun.ml4" 278 8707 8762
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 276 8652 8655 "plugins/funind/g_indfun.ml4" 276 8652 8768
call(
  stack
)
call(
  stack
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit
)
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref fas "" -1 0 0 "" -1 0 0
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type
)
ident(
  int_ref rawwit_fun_scheme_arg "plugins/funind/g_indfun.ml4" 220 7007 7007 "plugins/funind/g_indfun.ml4" 220 7007 7190
)
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort, Genarg.rlevel)
  Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument ->
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
type(
  bool
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref fas "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 275 8612 8612 "plugins/funind/g_indfun.ml4" 275 8612 8772
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_vernac_command_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 275 8612 8612 "plugins/funind/g_indfun.ml4" 275 8612 8772
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 275 8612 8612 "plugins/funind/g_indfun.ml4" 275 8612 8772
)
type(
  unit
)
type(
  Tacexpr.raw_generic_argument list -> unit -> unit
)
type(
  string -> (Tacexpr.raw_generic_argument list -> unit -> unit) -> unit
)
ident(
  ext_ref Vernacinterp.vinterp_add
)
"plugins/funind/g_indfun.ml4" 284 8833 8859 "plugins/funind/g_indfun.ml4" 284 8833 8871
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 284 8833 8878 "plugins/funind/g_indfun.ml4" 284 8833 8888
type(
  Libnames.global_reference -> unit
)
ident(
  ext_ref Indfun.make_graph
)
"plugins/funind/g_indfun.ml4" 284 8833 8890 "plugins/funind/g_indfun.ml4" 284 8833 8904
type(
  Libnames.reference -> Libnames.global_reference
)
ident(
  ext_ref Nametab.global
)
"plugins/funind/g_indfun.ml4" 284 8833 8905 "plugins/funind/g_indfun.ml4" 284 8833 8906
type(
  Libnames.reference
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 284 8833 8833 "plugins/funind/g_indfun.ml4" 284 8833 8909
)
"plugins/funind/g_indfun.ml4" 284 8833 8890 "plugins/funind/g_indfun.ml4" 284 8833 8906
call(
  stack
)
type(
  Libnames.global_reference
)
"plugins/funind/g_indfun.ml4" 284 8833 8878 "plugins/funind/g_indfun.ml4" 284 8833 8907
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 284 8833 8833 "plugins/funind/g_indfun.ml4" 284 8833 8909
call(
  stack
)
call(
  stack
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit
)
type(
  Libnames.reference
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref c "" -1 0 0 "" -1 0 0
)
type(
  (Libnames.reference, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ref
)
type(
  (Libnames.reference, Genarg.rlevel) Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument -> Libnames.reference
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Libnames.reference
)
type(
  bool
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref c "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 283 8797 8797 "plugins/funind/g_indfun.ml4" 283 8797 8913
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_vernac_command_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 283 8797 8797 "plugins/funind/g_indfun.ml4" 283 8797 8913
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 283 8797 8797 "plugins/funind/g_indfun.ml4" 283 8797 8913
)
type(
  unit
)
type(
  Tacexpr.raw_generic_argument list -> unit -> unit
)
type(
  string -> (Tacexpr.raw_generic_argument list -> unit -> unit) -> unit
)
ident(
  ext_ref Vernacinterp.vinterp_add
)
"plugins/funind/g_indfun.ml4" 294 8979 8983 "plugins/funind/g_indfun.ml4" 294 8979 8986
type(
  'a -> unit
)
ident(
  def msg "plugins/funind/g_indfun.ml4" 294 8979 8997 --
)
"plugins/funind/g_indfun.ml4" 294 8979 8987 "plugins/funind/g_indfun.ml4" 294 8979 8988
type(
  'a
)
ident(
  def x "plugins/funind/g_indfun.ml4" 294 8979 8991 "plugins/funind/g_indfun.ml4" 294 8979 8993
)
"plugins/funind/g_indfun.ml4" 294 8979 8991 "plugins/funind/g_indfun.ml4" 294 8979 8993
type(
  unit
)
"plugins/funind/g_indfun.ml4" 294 8979 8987 "plugins/funind/g_indfun.ml4" 294 8979 8993
type(
  'a -> unit
)
"plugins/funind/g_indfun.ml4" 294 8979 9001 "plugins/funind/g_indfun.ml4" 294 8979 9011
type(
  'a -> Pp.std_ppcmds
)
ident(
  def pr_lconstr "plugins/funind/g_indfun.ml4" 296 9063 9063 --
)
"plugins/funind/g_indfun.ml4" 294 8979 9012 "plugins/funind/g_indfun.ml4" 294 8979 9013
type(
  'a
)
ident(
  def c "plugins/funind/g_indfun.ml4" 294 8979 9016 "plugins/funind/g_indfun.ml4" 294 8979 9022
)
"plugins/funind/g_indfun.ml4" 294 8979 9016 "plugins/funind/g_indfun.ml4" 294 8979 9019
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 294 8979 9020 "plugins/funind/g_indfun.ml4" 294 8979 9022
type(
  string
)
"plugins/funind/g_indfun.ml4" 294 8979 9016 "plugins/funind/g_indfun.ml4" 294 8979 9022
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 294 8979 9012 "plugins/funind/g_indfun.ml4" 294 8979 9022
type(
  'a -> Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 296 9063 9067 "plugins/funind/g_indfun.ml4" 296 9063 9075
type(
  Term.constr -> unit
)
ident(
  def prconstr "plugins/funind/g_indfun.ml4" 297 9130 9130 --
)
"plugins/funind/g_indfun.ml4" 296 9063 9076 "plugins/funind/g_indfun.ml4" 296 9063 9077
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 296 9063 9081 "plugins/funind/g_indfun.ml4" 296 9063 9129
)
"plugins/funind/g_indfun.ml4" 296 9063 9081 "plugins/funind/g_indfun.ml4" 296 9063 9084
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref msg "plugins/funind/g_indfun.ml4" 294 8979 8983 "plugins/funind/g_indfun.ml4" 294 8979 8986
)
"plugins/funind/g_indfun.ml4" 296 9063 9086 "plugins/funind/g_indfun.ml4" 296 9063 9089
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 296 9063 9089 "plugins/funind/g_indfun.ml4" 296 9063 9093
type(
  string
)
"plugins/funind/g_indfun.ml4" 296 9063 9086 "plugins/funind/g_indfun.ml4" 296 9063 9093
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 296 9063 9097 "plugins/funind/g_indfun.ml4" 296 9063 9115
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/g_indfun.ml4" 296 9063 9116 "plugins/funind/g_indfun.ml4" 296 9063 9117
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 296 9063 9076 "plugins/funind/g_indfun.ml4" 296 9063 9077
)
"plugins/funind/g_indfun.ml4" 296 9063 9097 "plugins/funind/g_indfun.ml4" 296 9063 9117
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 296 9063 9086 "plugins/funind/g_indfun.ml4" 296 9063 9117
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 296 9063 9121 "plugins/funind/g_indfun.ml4" 296 9063 9124
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 296 9063 9124 "plugins/funind/g_indfun.ml4" 296 9063 9128
type(
  string
)
"plugins/funind/g_indfun.ml4" 296 9063 9121 "plugins/funind/g_indfun.ml4" 296 9063 9128
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 296 9063 9086 "plugins/funind/g_indfun.ml4" 296 9063 9128
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 296 9063 9081 "plugins/funind/g_indfun.ml4" 296 9063 9129
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 296 9063 9076 "plugins/funind/g_indfun.ml4" 296 9063 9129
type(
  Term.constr -> unit
)
"plugins/funind/g_indfun.ml4" 297 9130 9134 "plugins/funind/g_indfun.ml4" 297 9130 9146
type(
  Term.constr list -> unit
)
ident(
  def prlistconstr "plugins/funind/g_indfun.ml4" 298 9174 9174 --
)
"plugins/funind/g_indfun.ml4" 297 9130 9147 "plugins/funind/g_indfun.ml4" 297 9130 9149
type(
  Term.constr list
)
ident(
  def lc "plugins/funind/g_indfun.ml4" 297 9130 9152 "plugins/funind/g_indfun.ml4" 297 9130 9173
)
"plugins/funind/g_indfun.ml4" 297 9130 9152 "plugins/funind/g_indfun.ml4" 297 9130 9161
type(
  (Term.constr -> unit) -> Term.constr list -> unit
)
ident(
  ext_ref List.iter
)
"plugins/funind/g_indfun.ml4" 297 9130 9162 "plugins/funind/g_indfun.ml4" 297 9130 9170
type(
  Term.constr -> unit
)
ident(
  int_ref prconstr "plugins/funind/g_indfun.ml4" 296 9063 9067 "plugins/funind/g_indfun.ml4" 296 9063 9075
)
"plugins/funind/g_indfun.ml4" 297 9130 9171 "plugins/funind/g_indfun.ml4" 297 9130 9173
type(
  Term.constr list
)
ident(
  int_ref lc "plugins/funind/g_indfun.ml4" 297 9130 9147 "plugins/funind/g_indfun.ml4" 297 9130 9149
)
"plugins/funind/g_indfun.ml4" 297 9130 9152 "plugins/funind/g_indfun.ml4" 297 9130 9173
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 297 9130 9147 "plugins/funind/g_indfun.ml4" 297 9130 9173
type(
  Term.constr list -> unit
)
"plugins/funind/g_indfun.ml4" 298 9174 9178 "plugins/funind/g_indfun.ml4" 298 9174 9183
type(
  string -> unit
)
ident(
  def prstr "plugins/funind/g_indfun.ml4" 299 9199 9199 --
)
"plugins/funind/g_indfun.ml4" 298 9174 9184 "plugins/funind/g_indfun.ml4" 298 9174 9185
type(
  string
)
ident(
  def s "plugins/funind/g_indfun.ml4" 298 9174 9188 "plugins/funind/g_indfun.ml4" 298 9174 9198
)
"plugins/funind/g_indfun.ml4" 298 9174 9188 "plugins/funind/g_indfun.ml4" 298 9174 9191
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref msg "plugins/funind/g_indfun.ml4" 294 8979 8983 "plugins/funind/g_indfun.ml4" 294 8979 8986
)
"plugins/funind/g_indfun.ml4" 298 9174 9192 "plugins/funind/g_indfun.ml4" 298 9174 9195
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 298 9174 9196 "plugins/funind/g_indfun.ml4" 298 9174 9197
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 298 9174 9184 "plugins/funind/g_indfun.ml4" 298 9174 9185
)
"plugins/funind/g_indfun.ml4" 298 9174 9192 "plugins/funind/g_indfun.ml4" 298 9174 9197
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 298 9174 9188 "plugins/funind/g_indfun.ml4" 298 9174 9198
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 298 9174 9184 "plugins/funind/g_indfun.ml4" 298 9174 9198
type(
  string -> unit
)
"plugins/funind/g_indfun.ml4" 299 9199 9203 "plugins/funind/g_indfun.ml4" 299 9199 9216
type(
  string -> Term.constr -> unit
)
ident(
  def prNamedConstr "plugins/funind/g_indfun.ml4" 310 9432 9432 --
)
"plugins/funind/g_indfun.ml4" 299 9199 9217 "plugins/funind/g_indfun.ml4" 299 9199 9218
type(
  string
)
ident(
  def s "plugins/funind/g_indfun.ml4" 299 9199 9219 "plugins/funind/g_indfun.ml4" 299 9199 9337
)
"plugins/funind/g_indfun.ml4" 299 9199 9219 "plugins/funind/g_indfun.ml4" 299 9199 9220
type(
  Term.constr
)
ident(
  def c "plugins/funind/g_indfun.ml4" 301 9231 9235 "plugins/funind/g_indfun.ml4" 301 9231 9331
)
"plugins/funind/g_indfun.ml4" 301 9231 9235 "plugins/funind/g_indfun.ml4" 301 9231 9238
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref msg "plugins/funind/g_indfun.ml4" 294 8979 8983 "plugins/funind/g_indfun.ml4" 294 8979 8986
)
"plugins/funind/g_indfun.ml4" 301 9231 9239 "plugins/funind/g_indfun.ml4" 301 9231 9242
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 301 9231 9243 "plugins/funind/g_indfun.ml4" 301 9231 9245
type(
  string
)
"plugins/funind/g_indfun.ml4" 301 9231 9239 "plugins/funind/g_indfun.ml4" 301 9231 9245
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 301 9231 9235 "plugins/funind/g_indfun.ml4" 301 9231 9246
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 302 9248 9252 "plugins/funind/g_indfun.ml4" 302 9248 9255
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref msg "plugins/funind/g_indfun.ml4" 294 8979 8983 "plugins/funind/g_indfun.ml4" 294 8979 8986
)
"plugins/funind/g_indfun.ml4" 302 9248 9256 "plugins/funind/g_indfun.ml4" 302 9248 9259
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 302 9248 9260 "plugins/funind/g_indfun.ml4" 302 9248 9261
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 299 9199 9217 "plugins/funind/g_indfun.ml4" 299 9199 9218
)
"plugins/funind/g_indfun.ml4" 302 9248 9262 "plugins/funind/g_indfun.ml4" 302 9248 9270
type(
  string
)
"plugins/funind/g_indfun.ml4" 302 9248 9260 "plugins/funind/g_indfun.ml4" 302 9248 9270
call(
  stack
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/g_indfun.ml4" 302 9248 9256 "plugins/funind/g_indfun.ml4" 302 9248 9271
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 302 9248 9275 "plugins/funind/g_indfun.ml4" 302 9248 9293
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/g_indfun.ml4" 302 9248 9294 "plugins/funind/g_indfun.ml4" 302 9248 9295
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 299 9199 9219 "plugins/funind/g_indfun.ml4" 299 9199 9220
)
"plugins/funind/g_indfun.ml4" 302 9248 9275 "plugins/funind/g_indfun.ml4" 302 9248 9295
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 302 9248 9256 "plugins/funind/g_indfun.ml4" 302 9248 9295
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 302 9248 9299 "plugins/funind/g_indfun.ml4" 302 9248 9302
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 302 9248 9303 "plugins/funind/g_indfun.ml4" 302 9248 9312
type(
  string
)
"plugins/funind/g_indfun.ml4" 302 9248 9299 "plugins/funind/g_indfun.ml4" 302 9248 9312
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 302 9248 9256 "plugins/funind/g_indfun.ml4" 302 9248 9312
call(
  stack
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/g_indfun.ml4" 302 9248 9252 "plugins/funind/g_indfun.ml4" 302 9248 9313
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 303 9315 9319 "plugins/funind/g_indfun.ml4" 303 9315 9322
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref msg "plugins/funind/g_indfun.ml4" 294 8979 8983 "plugins/funind/g_indfun.ml4" 294 8979 8986
)
"plugins/funind/g_indfun.ml4" 303 9315 9323 "plugins/funind/g_indfun.ml4" 303 9315 9326
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/g_indfun.ml4" 303 9315 9327 "plugins/funind/g_indfun.ml4" 303 9315 9329
type(
  string
)
"plugins/funind/g_indfun.ml4" 303 9315 9323 "plugins/funind/g_indfun.ml4" 303 9315 9329
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/g_indfun.ml4" 303 9315 9319 "plugins/funind/g_indfun.ml4" 303 9315 9330
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 301 9231 9235 "plugins/funind/g_indfun.ml4" 301 9231 9331
type(
  unit
)
"plugins/funind/g_indfun.ml4" 302 9248 9235 "plugins/funind/g_indfun.ml4" 302 9248 9331
type(
  unit
)
"plugins/funind/g_indfun.ml4" 299 9199 9219 "plugins/funind/g_indfun.ml4" 299 9199 9337
type(
  Term.constr -> unit
)
"plugins/funind/g_indfun.ml4" 299 9199 9217 "plugins/funind/g_indfun.ml4" 299 9199 9337
type(
  string -> Term.constr -> unit
)
"plugins/funind/g_indfun.ml4" 320 9815 9819 "plugins/funind/g_indfun.ml4" 320 9815 9836
type(
  Term.constr -> Term.constr -> bool
)
ident(
  def constr_head_match "plugins/funind/g_indfun.ml4" 330 10071 10071 --
)
"plugins/funind/g_indfun.ml4" 320 9815 9837 "plugins/funind/g_indfun.ml4" 320 9815 9838
type(
  Term.constr
)
ident(
  def u "plugins/funind/g_indfun.ml4" 320 9815 9839 "plugins/funind/g_indfun.ml4" 320 9815 9915
)
"plugins/funind/g_indfun.ml4" 320 9815 9839 "plugins/funind/g_indfun.ml4" 320 9815 9840
type(
  Term.constr
)
ident(
  def t "plugins/funind/g_indfun.ml4" 321 9842 9844 "plugins/funind/g_indfun.ml4" 321 9842 9915
)
"plugins/funind/g_indfun.ml4" 321 9842 9847 "plugins/funind/g_indfun.ml4" 321 9842 9852
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isApp
)
"plugins/funind/g_indfun.ml4" 321 9842 9853 "plugins/funind/g_indfun.ml4" 321 9842 9854
type(
  Term.constr
)
ident(
  int_ref u "plugins/funind/g_indfun.ml4" 320 9815 9837 "plugins/funind/g_indfun.ml4" 320 9815 9838
)
"plugins/funind/g_indfun.ml4" 321 9842 9847 "plugins/funind/g_indfun.ml4" 321 9842 9854
call(
  stack
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 323 9862 9870 "plugins/funind/g_indfun.ml4" 323 9862 9873
type(
  Term.constr
)
ident(
  def uhd "plugins/funind/g_indfun.ml4" 324 9893 9897 "plugins/funind/g_indfun.ml4" 324 9893 9902
)
"plugins/funind/g_indfun.ml4" 323 9862 9874 "plugins/funind/g_indfun.ml4" 323 9862 9878
type(
  Term.constr array
)
ident(
  def args "plugins/funind/g_indfun.ml4" 324 9893 9897 "plugins/funind/g_indfun.ml4" 324 9893 9902
)
"plugins/funind/g_indfun.ml4" 323 9862 9870 "plugins/funind/g_indfun.ml4" 323 9862 9878
type(
  Term.constr * Term.constr array
)
"plugins/funind/g_indfun.ml4" 323 9862 9880 "plugins/funind/g_indfun.ml4" 323 9862 9887
type(
  Term.constr -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/g_indfun.ml4" 323 9862 9888 "plugins/funind/g_indfun.ml4" 323 9862 9889
type(
  Term.constr
)
ident(
  int_ref u "plugins/funind/g_indfun.ml4" 320 9815 9837 "plugins/funind/g_indfun.ml4" 320 9815 9838
)
"plugins/funind/g_indfun.ml4" 323 9862 9880 "plugins/funind/g_indfun.ml4" 323 9862 9889
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/g_indfun.ml4" 324 9893 9897 "plugins/funind/g_indfun.ml4" 324 9893 9900
type(
  Term.constr
)
ident(
  int_ref uhd "plugins/funind/g_indfun.ml4" 323 9862 9870 "plugins/funind/g_indfun.ml4" 323 9862 9873
)
"plugins/funind/g_indfun.ml4" 324 9893 9901 "plugins/funind/g_indfun.ml4" 324 9893 9902
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/g_indfun.ml4" 320 9815 9839 "plugins/funind/g_indfun.ml4" 320 9815 9840
)
"plugins/funind/g_indfun.ml4" 324 9893 9897 "plugins/funind/g_indfun.ml4" 324 9893 9902
type(
  bool
)
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/g_indfun.ml4" 323 9862 9866 "plugins/funind/g_indfun.ml4" 323 9862 9902
type(
  bool
)
"plugins/funind/g_indfun.ml4" 325 9903 9910 "plugins/funind/g_indfun.ml4" 325 9903 9915
type(
  bool
)
"plugins/funind/g_indfun.ml4" 321 9842 9844 "plugins/funind/g_indfun.ml4" 321 9842 9915
type(
  bool
)
"plugins/funind/g_indfun.ml4" 320 9815 9839 "plugins/funind/g_indfun.ml4" 320 9815 9915
type(
  Term.constr -> bool
)
"plugins/funind/g_indfun.ml4" 320 9815 9837 "plugins/funind/g_indfun.ml4" 320 9815 9915
type(
  Term.constr -> Term.constr -> bool
)
"plugins/funind/g_indfun.ml4" 330 10071 10079 "plugins/funind/g_indfun.ml4" 330 10071 10089
type(
  Term.types -> (Term.types -> bool) -> fapp_info list
)
ident(
  def hdMatchSub "plugins/funind/g_indfun.ml4" 330 10071 10071 --
)
"plugins/funind/g_indfun.ml4" 330 10071 10090 "plugins/funind/g_indfun.ml4" 330 10071 10093
type(
  Term.types
)
ident(
  def inu "plugins/funind/g_indfun.ml4" 330 10071 10094 "plugins/funind/g_indfun.ml4" 330 10071 10905
)
"plugins/funind/g_indfun.ml4" 330 10071 10095 "plugins/funind/g_indfun.ml4" 330 10071 10099
type(
  Term.types -> bool
)
ident(
  def test "plugins/funind/g_indfun.ml4" 330 10071 10117 "plugins/funind/g_indfun.ml4" 330 10071 10905
)
"plugins/funind/g_indfun.ml4" 331 10136 10142 "plugins/funind/g_indfun.ml4" 331 10136 10148
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 332 10151 10161 "plugins/funind/g_indfun.ml4" 332 10151 10173
type(
  Term.types -> (Term.types, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 332 10151 10174 "plugins/funind/g_indfun.ml4" 332 10151 10177
type(
  Term.types
)
ident(
  int_ref inu "plugins/funind/g_indfun.ml4" 330 10071 10090 "plugins/funind/g_indfun.ml4" 330 10071 10093
)
"plugins/funind/g_indfun.ml4" 332 10151 10161 "plugins/funind/g_indfun.ml4" 332 10151 10177
call(
  stack
)
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 333 10183 10199 "plugins/funind/g_indfun.ml4" 333 10183 10201
type(
  Names.name
)
ident(
  def nm "plugins/funind/g_indfun.ml4" 334 10234 10237 "plugins/funind/g_indfun.ml4" 334 10234 10287
)
"plugins/funind/g_indfun.ml4" 333 10183 10202 "plugins/funind/g_indfun.ml4" 333 10183 10204
type(
  Term.types
)
ident(
  def tp "plugins/funind/g_indfun.ml4" 334 10234 10237 "plugins/funind/g_indfun.ml4" 334 10234 10287
)
"plugins/funind/g_indfun.ml4" 333 10183 10205 "plugins/funind/g_indfun.ml4" 333 10183 10209
type(
  Term.types
)
ident(
  def cstr "plugins/funind/g_indfun.ml4" 334 10234 10237 "plugins/funind/g_indfun.ml4" 334 10234 10287
)
"plugins/funind/g_indfun.ml4" 333 10183 10191 "plugins/funind/g_indfun.ml4" 333 10183 10210
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 333 10183 10219 "plugins/funind/g_indfun.ml4" 333 10183 10221
type(
  Names.name
)
ident(
  def nm "plugins/funind/g_indfun.ml4" 334 10234 10237 "plugins/funind/g_indfun.ml4" 334 10234 10287
)
"plugins/funind/g_indfun.ml4" 333 10183 10222 "plugins/funind/g_indfun.ml4" 333 10183 10224
type(
  Term.types
)
ident(
  def tp "plugins/funind/g_indfun.ml4" 334 10234 10237 "plugins/funind/g_indfun.ml4" 334 10234 10287
)
"plugins/funind/g_indfun.ml4" 333 10183 10225 "plugins/funind/g_indfun.ml4" 333 10183 10229
type(
  Term.types
)
ident(
  def cstr "plugins/funind/g_indfun.ml4" 334 10234 10237 "plugins/funind/g_indfun.ml4" 334 10234 10287
)
"plugins/funind/g_indfun.ml4" 333 10183 10213 "plugins/funind/g_indfun.ml4" 333 10183 10230
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 333 10183 10191 "plugins/funind/g_indfun.ml4" 333 10183 10230
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 334 10234 10237 "plugins/funind/g_indfun.ml4" 334 10234 10247
type(
  Term.types -> (Term.types -> bool) -> fapp_info list
)
ident(
  int_ref hdMatchSub "plugins/funind/g_indfun.ml4" 330 10071 10079 "plugins/funind/g_indfun.ml4" 330 10071 10089
)
"plugins/funind/g_indfun.ml4" 334 10234 10248 "plugins/funind/g_indfun.ml4" 334 10234 10250
type(
  Term.types
)
ident(
  int_ref tp "plugins/funind/g_indfun.ml4" 333 10183 10202 "plugins/funind/g_indfun.ml4" 333 10183 10204
)
"plugins/funind/g_indfun.ml4" 334 10234 10251 "plugins/funind/g_indfun.ml4" 334 10234 10255
type(
  Term.types -> bool
)
ident(
  int_ref test "plugins/funind/g_indfun.ml4" 330 10071 10095 "plugins/funind/g_indfun.ml4" 330 10071 10099
)
"plugins/funind/g_indfun.ml4" 334 10234 10237 "plugins/funind/g_indfun.ml4" 334 10234 10255
call(
  stack
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 334 10234 10258 "plugins/funind/g_indfun.ml4" 334 10234 10268
type(
  Term.types -> (Term.types -> bool) -> fapp_info list
)
ident(
  int_ref hdMatchSub "plugins/funind/g_indfun.ml4" 330 10071 10079 "plugins/funind/g_indfun.ml4" 330 10071 10089
)
"plugins/funind/g_indfun.ml4" 334 10234 10270 "plugins/funind/g_indfun.ml4" 334 10234 10274
type(
  int -> Term.types -> Term.types
)
ident(
  ext_ref Term.lift
)
"plugins/funind/g_indfun.ml4" 334 10234 10275 "plugins/funind/g_indfun.ml4" 334 10234 10276
type(
  int
)
"plugins/funind/g_indfun.ml4" 334 10234 10277 "plugins/funind/g_indfun.ml4" 334 10234 10281
type(
  Term.types
)
ident(
  int_ref cstr "plugins/funind/g_indfun.ml4" 333 10183 10205 "plugins/funind/g_indfun.ml4" 333 10183 10209
)
"plugins/funind/g_indfun.ml4" 334 10234 10270 "plugins/funind/g_indfun.ml4" 334 10234 10281
call(
  stack
)
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 334 10234 10283 "plugins/funind/g_indfun.ml4" 334 10234 10287
type(
  Term.types -> bool
)
ident(
  int_ref test "plugins/funind/g_indfun.ml4" 330 10071 10095 "plugins/funind/g_indfun.ml4" 330 10071 10099
)
"plugins/funind/g_indfun.ml4" 334 10234 10258 "plugins/funind/g_indfun.ml4" 334 10234 10287
call(
  stack
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 334 10234 10237 "plugins/funind/g_indfun.ml4" 334 10234 10287
call(
  stack
)
type(
  fapp_info list
)
type(
  fapp_info list -> fapp_info list -> fapp_info list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/g_indfun.ml4" 335 10288 10301 "plugins/funind/g_indfun.ml4" 335 10288 10302
type(
  int array * int
)
"plugins/funind/g_indfun.ml4" 335 10288 10304 "plugins/funind/g_indfun.ml4" 335 10288 10307
type(
  Names.name array
)
ident(
  def lna "plugins/funind/g_indfun.ml4" 336 10350 10353 "plugins/funind/g_indfun.ml4" 336 10350 10454
)
"plugins/funind/g_indfun.ml4" 335 10288 10308 "plugins/funind/g_indfun.ml4" 335 10288 10310
type(
  Term.types array
)
ident(
  def tl "plugins/funind/g_indfun.ml4" 336 10350 10353 "plugins/funind/g_indfun.ml4" 336 10350 10454
)
"plugins/funind/g_indfun.ml4" 335 10288 10311 "plugins/funind/g_indfun.ml4" 335 10288 10313
type(
  Term.types array
)
ident(
  def bl "plugins/funind/g_indfun.ml4" 336 10350 10353 "plugins/funind/g_indfun.ml4" 336 10350 10454
)
"plugins/funind/g_indfun.ml4" 335 10288 10304 "plugins/funind/g_indfun.ml4" 335 10288 10313
type(
  (Term.types, Term.types) Term.prec_declaration
)
"plugins/funind/g_indfun.ml4" 335 10288 10296 "plugins/funind/g_indfun.ml4" 335 10288 10315
type(
  (Term.types, Term.types) Term.kind_of_term
)
type(
  (Term.types, Term.types) Term.pfixpoint
)
"plugins/funind/g_indfun.ml4" 336 10350 10353 "plugins/funind/g_indfun.ml4" 336 10350 10368
type(
  (fapp_info list -> Term.types -> fapp_info list) ->
  fapp_info list -> Term.types array -> fapp_info list
)
ident(
  ext_ref Array.fold_left
)
"plugins/funind/g_indfun.ml4" 337 10369 10379 "plugins/funind/g_indfun.ml4" 337 10369 10382
type(
  fapp_info list
)
ident(
  def acc "plugins/funind/g_indfun.ml4" 337 10369 10383 "plugins/funind/g_indfun.ml4" 337 10369 10442
)
"plugins/funind/g_indfun.ml4" 337 10369 10383 "plugins/funind/g_indfun.ml4" 337 10369 10387
type(
  Term.types
)
ident(
  def cstr "plugins/funind/g_indfun.ml4" 337 10369 10391 "plugins/funind/g_indfun.ml4" 337 10369 10442
)
"plugins/funind/g_indfun.ml4" 337 10369 10391 "plugins/funind/g_indfun.ml4" 337 10369 10394
type(
  fapp_info list
)
ident(
  int_ref acc "plugins/funind/g_indfun.ml4" 337 10369 10379 "plugins/funind/g_indfun.ml4" 337 10369 10382
)
"plugins/funind/g_indfun.ml4" 337 10369 10397 "plugins/funind/g_indfun.ml4" 337 10369 10407
type(
  Term.types -> (Term.types -> bool) -> fapp_info list
)
ident(
  int_ref hdMatchSub "plugins/funind/g_indfun.ml4" 330 10071 10079 "plugins/funind/g_indfun.ml4" 330 10071 10089
)
"plugins/funind/g_indfun.ml4" 337 10369 10409 "plugins/funind/g_indfun.ml4" 337 10369 10413
type(
  int -> Term.types -> Term.types
)
ident(
  ext_ref Term.lift
)
"plugins/funind/g_indfun.ml4" 337 10369 10415 "plugins/funind/g_indfun.ml4" 337 10369 10427
type(
  Term.types array -> int
)
ident(
  ext_ref Array.length
)
"plugins/funind/g_indfun.ml4" 337 10369 10428 "plugins/funind/g_indfun.ml4" 337 10369 10430
type(
  Term.types array
)
ident(
  int_ref tl "plugins/funind/g_indfun.ml4" 335 10288 10308 "plugins/funind/g_indfun.ml4" 335 10288 10310
)
"plugins/funind/g_indfun.ml4" 337 10369 10415 "plugins/funind/g_indfun.ml4" 337 10369 10430
type(
  int
)
"plugins/funind/g_indfun.ml4" 337 10369 10432 "plugins/funind/g_indfun.ml4" 337 10369 10436
type(
  Term.types
)
ident(
  int_ref cstr "plugins/funind/g_indfun.ml4" 337 10369 10383 "plugins/funind/g_indfun.ml4" 337 10369 10387
)
"plugins/funind/g_indfun.ml4" 337 10369 10409 "plugins/funind/g_indfun.ml4" 337 10369 10436
call(
  stack
)
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 337 10369 10438 "plugins/funind/g_indfun.ml4" 337 10369 10442
type(
  Term.types -> bool
)
ident(
  int_ref test "plugins/funind/g_indfun.ml4" 330 10071 10095 "plugins/funind/g_indfun.ml4" 330 10071 10099
)
"plugins/funind/g_indfun.ml4" 337 10369 10397 "plugins/funind/g_indfun.ml4" 337 10369 10442
call(
  stack
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 337 10369 10391 "plugins/funind/g_indfun.ml4" 337 10369 10442
call(
  tail
)
type(
  fapp_info list
)
type(
  fapp_info list -> fapp_info list -> fapp_info list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/g_indfun.ml4" 337 10369 10383 "plugins/funind/g_indfun.ml4" 337 10369 10442
type(
  Term.types -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 337 10369 10375 "plugins/funind/g_indfun.ml4" 337 10369 10442
type(
  fapp_info list -> Term.types -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 338 10444 10449 "plugins/funind/g_indfun.ml4" 338 10444 10451
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 338 10444 10452 "plugins/funind/g_indfun.ml4" 338 10444 10454
type(
  Term.types array
)
ident(
  int_ref bl "plugins/funind/g_indfun.ml4" 335 10288 10311 "plugins/funind/g_indfun.ml4" 335 10288 10313
)
"plugins/funind/g_indfun.ml4" 336 10350 10353 "plugins/funind/g_indfun.ml4" 336 10350 10454
call(
  stack
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 339 10455 10463 "plugins/funind/g_indfun.ml4" 339 10455 10464
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 340 10494 10497 "plugins/funind/g_indfun.ml4" 340 10494 10508
type(
  (fapp_info list -> Term.types -> fapp_info list) ->
  fapp_info list -> Term.types -> fapp_info list
)
ident(
  ext_ref Term.fold_constr
)
"plugins/funind/g_indfun.ml4" 341 10509 10519 "plugins/funind/g_indfun.ml4" 341 10509 10520
type(
  fapp_info list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 341 10509 10521 "plugins/funind/g_indfun.ml4" 341 10509 10560
)
"plugins/funind/g_indfun.ml4" 341 10509 10521 "plugins/funind/g_indfun.ml4" 341 10509 10525
type(
  Term.types
)
ident(
  def cstr "plugins/funind/g_indfun.ml4" 342 10529 10536 "plugins/funind/g_indfun.ml4" 342 10529 10560
)
"plugins/funind/g_indfun.ml4" 342 10529 10536 "plugins/funind/g_indfun.ml4" 342 10529 10537
type(
  fapp_info list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 341 10509 10519 "plugins/funind/g_indfun.ml4" 341 10509 10520
)
"plugins/funind/g_indfun.ml4" 342 10529 10540 "plugins/funind/g_indfun.ml4" 342 10529 10550
type(
  Term.types -> (Term.types -> bool) -> fapp_info list
)
ident(
  int_ref hdMatchSub "plugins/funind/g_indfun.ml4" 330 10071 10079 "plugins/funind/g_indfun.ml4" 330 10071 10089
)
"plugins/funind/g_indfun.ml4" 342 10529 10551 "plugins/funind/g_indfun.ml4" 342 10529 10555
type(
  Term.types
)
ident(
  int_ref cstr "plugins/funind/g_indfun.ml4" 341 10509 10521 "plugins/funind/g_indfun.ml4" 341 10509 10525
)
"plugins/funind/g_indfun.ml4" 342 10529 10556 "plugins/funind/g_indfun.ml4" 342 10529 10560
type(
  Term.types -> bool
)
ident(
  int_ref test "plugins/funind/g_indfun.ml4" 330 10071 10095 "plugins/funind/g_indfun.ml4" 330 10071 10099
)
"plugins/funind/g_indfun.ml4" 342 10529 10540 "plugins/funind/g_indfun.ml4" 342 10529 10560
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 342 10529 10536 "plugins/funind/g_indfun.ml4" 342 10529 10560
type(
  fapp_info list
)
type(
  fapp_info list -> fapp_info list -> fapp_info list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/g_indfun.ml4" 341 10509 10521 "plugins/funind/g_indfun.ml4" 341 10509 10560
type(
  Term.types -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 341 10509 10515 "plugins/funind/g_indfun.ml4" 341 10509 10560
type(
  fapp_info list -> Term.types -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 342 10529 10562 "plugins/funind/g_indfun.ml4" 342 10529 10564
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 342 10529 10565 "plugins/funind/g_indfun.ml4" 342 10529 10568
type(
  Term.types
)
ident(
  int_ref inu "plugins/funind/g_indfun.ml4" 330 10071 10090 "plugins/funind/g_indfun.ml4" 330 10071 10093
)
"plugins/funind/g_indfun.ml4" 340 10494 10497 "plugins/funind/g_indfun.ml4" 340 10494 10568
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 332 10151 10155 "plugins/funind/g_indfun.ml4" 332 10151 10568
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 343 10572 10577 "plugins/funind/g_indfun.ml4" 343 10572 10580
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/g_indfun.ml4" 343 10572 10582 "plugins/funind/g_indfun.ml4" 343 10572 10586
type(
  Term.types -> bool
)
ident(
  int_ref test "plugins/funind/g_indfun.ml4" 330 10071 10095 "plugins/funind/g_indfun.ml4" 330 10071 10099
)
"plugins/funind/g_indfun.ml4" 343 10572 10587 "plugins/funind/g_indfun.ml4" 343 10572 10590
type(
  Term.types
)
ident(
  int_ref inu "plugins/funind/g_indfun.ml4" 330 10071 10090 "plugins/funind/g_indfun.ml4" 330 10071 10093
)
"plugins/funind/g_indfun.ml4" 343 10572 10582 "plugins/funind/g_indfun.ml4" 343 10572 10590
call(
  stack
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 343 10572 10577 "plugins/funind/g_indfun.ml4" 343 10572 10591
type(
  bool
)
"plugins/funind/g_indfun.ml4" 343 10572 10597 "plugins/funind/g_indfun.ml4" 343 10572 10603
type(
  fapp_info list
)
ident(
  int_ref subres "plugins/funind/g_indfun.ml4" 331 10136 10142 "plugins/funind/g_indfun.ml4" 331 10136 10148
)
"plugins/funind/g_indfun.ml4" 345 10611 10619 "plugins/funind/g_indfun.ml4" 345 10611 10620
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 345 10611 10621 "plugins/funind/g_indfun.ml4" 345 10611 10625
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 345 10611 10619 "plugins/funind/g_indfun.ml4" 345 10611 10625
type(
  Term.constr * Term.constr list
)
"plugins/funind/g_indfun.ml4" 345 10611 10628 "plugins/funind/g_indfun.ml4" 345 10611 10641
type(
  Term.types -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/g_indfun.ml4" 345 10611 10642 "plugins/funind/g_indfun.ml4" 345 10611 10645
type(
  Term.types
)
ident(
  int_ref inu "plugins/funind/g_indfun.ml4" 330 10071 10090 "plugins/funind/g_indfun.ml4" 330 10071 10093
)
"plugins/funind/g_indfun.ml4" 345 10611 10628 "plugins/funind/g_indfun.ml4" 345 10611 10645
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/g_indfun.ml4" 346 10649 10657 "plugins/funind/g_indfun.ml4" 346 10649 10664
type(
  Util.Intset.t
)
"plugins/funind/g_indfun.ml4" 346 10649 10667 "plugins/funind/g_indfun.ml4" 346 10649 10684
type(
  Term.types -> Util.Intset.t
)
ident(
  ext_ref Termops.free_rels
)
"plugins/funind/g_indfun.ml4" 346 10649 10685 "plugins/funind/g_indfun.ml4" 346 10649 10688
type(
  Term.types
)
ident(
  int_ref inu "plugins/funind/g_indfun.ml4" 330 10071 10090 "plugins/funind/g_indfun.ml4" 330 10071 10093
)
"plugins/funind/g_indfun.ml4" 346 10649 10667 "plugins/funind/g_indfun.ml4" 346 10649 10688
call(
  stack
)
type(
  Util.Intset.t
)
"plugins/funind/g_indfun.ml4" 347 10692 10700 "plugins/funind/g_indfun.ml4" 347 10692 10707
type(
  Util.Intset.elt
)
"plugins/funind/g_indfun.ml4" 347 10692 10714 "plugins/funind/g_indfun.ml4" 347 10692 10733
type(
  Util.Intset.t -> Util.Intset.elt
)
ident(
  ext_ref Util.Intset.max_elt
)
"plugins/funind/g_indfun.ml4" 347 10692 10734 "plugins/funind/g_indfun.ml4" 347 10692 10741
type(
  Util.Intset.t
)
ident(
  int_ref freeset "plugins/funind/g_indfun.ml4" 346 10649 10657 "plugins/funind/g_indfun.ml4" 346 10649 10664
)
"plugins/funind/g_indfun.ml4" 347 10692 10714 "plugins/funind/g_indfun.ml4" 347 10692 10741
call(
  stack
)
type(
  Util.Intset.elt
)
"plugins/funind/g_indfun.ml4" 347 10692 10747 "plugins/funind/g_indfun.ml4" 347 10692 10756
type(
  exn
)
"plugins/funind/g_indfun.ml4" 347 10692 10760 "plugins/funind/g_indfun.ml4" 347 10692 10762
type(
  Util.Intset.elt
)
"plugins/funind/g_indfun.ml4" 347 10692 10710 "plugins/funind/g_indfun.ml4" 347 10692 10762
type(
  Util.Intset.elt
)
"plugins/funind/g_indfun.ml4" 348 10766 10779 "plugins/funind/g_indfun.ml4" 348 10766 10780
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/g_indfun.ml4" 345 10611 10619 "plugins/funind/g_indfun.ml4" 345 10611 10620
)
"plugins/funind/g_indfun.ml4" 348 10766 10790 "plugins/funind/g_indfun.ml4" 348 10766 10794
type(
  Term.constr list
)
ident(
  int_ref args "plugins/funind/g_indfun.ml4" 345 10611 10621 "plugins/funind/g_indfun.ml4" 345 10611 10625
)
"plugins/funind/g_indfun.ml4" 348 10766 10803 "plugins/funind/g_indfun.ml4" 348 10766 10823
type(
  Util.Intset.t -> bool
)
ident(
  ext_ref Util.Intset.is_empty
)
"plugins/funind/g_indfun.ml4" 348 10766 10824 "plugins/funind/g_indfun.ml4" 348 10766 10831
type(
  Util.Intset.t
)
ident(
  int_ref freeset "plugins/funind/g_indfun.ml4" 346 10649 10657 "plugins/funind/g_indfun.ml4" 346 10649 10664
)
"plugins/funind/g_indfun.ml4" 348 10766 10803 "plugins/funind/g_indfun.ml4" 348 10766 10831
call(
  stack
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 349 10833 10847 "plugins/funind/g_indfun.ml4" 349 10833 10854
type(
  Util.Intset.elt
)
ident(
  int_ref max_rel "plugins/funind/g_indfun.ml4" 347 10692 10700 "plugins/funind/g_indfun.ml4" 347 10692 10707
)
"plugins/funind/g_indfun.ml4" 349 10833 10867 "plugins/funind/g_indfun.ml4" 349 10833 10879
type(
  (Term.constr -> bool) -> Term.constr list -> bool
)
ident(
  ext_ref List.for_all
)
"plugins/funind/g_indfun.ml4" 349 10833 10880 "plugins/funind/g_indfun.ml4" 349 10833 10885
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isVar
)
"plugins/funind/g_indfun.ml4" 349 10833 10886 "plugins/funind/g_indfun.ml4" 349 10833 10890
type(
  Term.constr list
)
ident(
  int_ref args "plugins/funind/g_indfun.ml4" 345 10611 10621 "plugins/funind/g_indfun.ml4" 345 10611 10625
)
"plugins/funind/g_indfun.ml4" 349 10833 10867 "plugins/funind/g_indfun.ml4" 349 10833 10890
call(
  stack
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 348 10766 10770 "plugins/funind/g_indfun.ml4" 348 10766 10892
type(
  fapp_info
)
"plugins/funind/g_indfun.ml4" 350 10893 10899 "plugins/funind/g_indfun.ml4" 350 10893 10905
type(
  fapp_info list
)
ident(
  int_ref subres "plugins/funind/g_indfun.ml4" 331 10136 10142 "plugins/funind/g_indfun.ml4" 331 10136 10148
)
"plugins/funind/g_indfun.ml4" 348 10766 10770 "plugins/funind/g_indfun.ml4" 348 10766 10905
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 347 10692 10696 "plugins/funind/g_indfun.ml4" 347 10692 10905
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 346 10649 10653 "plugins/funind/g_indfun.ml4" 346 10649 10905
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 345 10611 10615 "plugins/funind/g_indfun.ml4" 345 10611 10905
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 343 10572 10574 "plugins/funind/g_indfun.ml4" 343 10572 10905
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 331 10136 10138 "plugins/funind/g_indfun.ml4" 331 10136 10905
type(
  fapp_info list
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 330 10071 10094 "plugins/funind/g_indfun.ml4" 330 10071 10905
type(
  (Term.types -> bool) -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 330 10071 10090 "plugins/funind/g_indfun.ml4" 330 10071 10905
type(
  Term.types -> (Term.types -> bool) -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 352 10907 10911 "plugins/funind/g_indfun.ml4" 352 10907 10915
type(
  Term.constr -> Term.constr -> Term.constr -> Term.constr
)
ident(
  def mkEq "plugins/funind/g_indfun.ml4" 356 10979 10979 --
)
"plugins/funind/g_indfun.ml4" 352 10907 10916 "plugins/funind/g_indfun.ml4" 352 10907 10919
type(
  Term.constr
)
ident(
  def typ "plugins/funind/g_indfun.ml4" 352 10907 10920 "plugins/funind/g_indfun.ml4" 352 10907 10976
)
"plugins/funind/g_indfun.ml4" 352 10907 10920 "plugins/funind/g_indfun.ml4" 352 10907 10922
type(
  Term.constr
)
ident(
  def c1 "plugins/funind/g_indfun.ml4" 352 10907 10923 "plugins/funind/g_indfun.ml4" 352 10907 10976
)
"plugins/funind/g_indfun.ml4" 352 10907 10923 "plugins/funind/g_indfun.ml4" 352 10907 10925
type(
  Term.constr
)
ident(
  def c2 "plugins/funind/g_indfun.ml4" 353 10928 10930 "plugins/funind/g_indfun.ml4" 353 10928 10976
)
"plugins/funind/g_indfun.ml4" 353 10928 10930 "plugins/funind/g_indfun.ml4" 353 10928 10935
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/g_indfun.ml4" 353 10928 10937 "plugins/funind/g_indfun.ml4" 353 10928 10956
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_eq
)
"plugins/funind/g_indfun.ml4" 353 10928 10956 "plugins/funind/g_indfun.ml4" 353 10928 10958
type(
  unit
)
"plugins/funind/g_indfun.ml4" 353 10928 10937 "plugins/funind/g_indfun.ml4" 353 10928 10958
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 353 10928 10962 "plugins/funind/g_indfun.ml4" 353 10928 10965
type(
  Term.constr
)
ident(
  int_ref typ "plugins/funind/g_indfun.ml4" 352 10907 10916 "plugins/funind/g_indfun.ml4" 352 10907 10919
)
"plugins/funind/g_indfun.ml4" 353 10928 10967 "plugins/funind/g_indfun.ml4" 353 10928 10969
type(
  Term.constr
)
ident(
  int_ref c1 "plugins/funind/g_indfun.ml4" 352 10907 10920 "plugins/funind/g_indfun.ml4" 352 10907 10922
)
"plugins/funind/g_indfun.ml4" 353 10928 10971 "plugins/funind/g_indfun.ml4" 353 10928 10973
type(
  Term.constr
)
ident(
  int_ref c2 "plugins/funind/g_indfun.ml4" 352 10907 10923 "plugins/funind/g_indfun.ml4" 352 10907 10925
)
"plugins/funind/g_indfun.ml4" 353 10928 10959 "plugins/funind/g_indfun.ml4" 353 10928 10975
type(
  Term.constr array
)
"plugins/funind/g_indfun.ml4" 353 10928 10937 "plugins/funind/g_indfun.ml4" 353 10928 10975
type(
  Term.constr * Term.constr array
)
"plugins/funind/g_indfun.ml4" 353 10928 10930 "plugins/funind/g_indfun.ml4" 353 10928 10976
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 352 10907 10923 "plugins/funind/g_indfun.ml4" 352 10907 10976
type(
  Term.constr -> Term.constr
)
"plugins/funind/g_indfun.ml4" 352 10907 10920 "plugins/funind/g_indfun.ml4" 352 10907 10976
type(
  Term.constr -> Term.constr -> Term.constr
)
"plugins/funind/g_indfun.ml4" 352 10907 10916 "plugins/funind/g_indfun.ml4" 352 10907 10976
type(
  Term.constr -> Term.constr -> Term.constr -> Term.constr
)
"plugins/funind/g_indfun.ml4" 356 10979 10983 "plugins/funind/g_indfun.ml4" 356 10979 10995
type(
  Names.identifier ->
  Term.types ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def poseq_unsafe "plugins/funind/g_indfun.ml4" 366 11262 11262 --
)
"plugins/funind/g_indfun.ml4" 356 10979 10996 "plugins/funind/g_indfun.ml4" 356 10979 11004
type(
  Names.identifier
)
ident(
  def idunsafe "plugins/funind/g_indfun.ml4" 356 10979 11005 "plugins/funind/g_indfun.ml4" 356 10979 11259
)
"plugins/funind/g_indfun.ml4" 356 10979 11005 "plugins/funind/g_indfun.ml4" 356 10979 11009
type(
  Term.types
)
ident(
  def cstr "plugins/funind/g_indfun.ml4" 356 10979 11010 "plugins/funind/g_indfun.ml4" 356 10979 11259
)
"plugins/funind/g_indfun.ml4" 356 10979 11010 "plugins/funind/g_indfun.ml4" 356 10979 11012
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 357 11015 11017 "plugins/funind/g_indfun.ml4" 357 11015 11259
)
"plugins/funind/g_indfun.ml4" 357 11015 11021 "plugins/funind/g_indfun.ml4" 357 11015 11024
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 357 11015 11027 "plugins/funind/g_indfun.ml4" 357 11015 11045
type(
  Proof_type.goal Tacmach.sigma -> Term.types -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/g_indfun.ml4" 357 11015 11046 "plugins/funind/g_indfun.ml4" 357 11015 11048
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 356 10979 11010 "plugins/funind/g_indfun.ml4" 356 10979 11012
)
"plugins/funind/g_indfun.ml4" 357 11015 11049 "plugins/funind/g_indfun.ml4" 357 11015 11053
type(
  Term.types
)
ident(
  int_ref cstr "plugins/funind/g_indfun.ml4" 356 10979 11005 "plugins/funind/g_indfun.ml4" 356 10979 11009
)
"plugins/funind/g_indfun.ml4" 357 11015 11027 "plugins/funind/g_indfun.ml4" 357 11015 11053
call(
  stack
)
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 358 11057 11059 "plugins/funind/g_indfun.ml4" 358 11057 11066
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/g_indfun.ml4" 359 11067 11072 "plugins/funind/g_indfun.ml4" 359 11067 11089
type(
  (bool * Genarg.intro_pattern_expr Util.located) option ->
  Names.name ->
  Term.types -> Term.types option -> Tacticals.clause -> Proof_type.tactic
)
ident(
  ext_ref Tactics.letin_tac
)
"plugins/funind/g_indfun.ml4" 359 11067 11090 "plugins/funind/g_indfun.ml4" 359 11067 11094
type(
  (bool * Genarg.intro_pattern_expr Util.located) option
)
"plugins/funind/g_indfun.ml4" 359 11067 11101 "plugins/funind/g_indfun.ml4" 359 11067 11109
type(
  Names.identifier
)
ident(
  int_ref idunsafe "plugins/funind/g_indfun.ml4" 356 10979 10996 "plugins/funind/g_indfun.ml4" 356 10979 11004
)
"plugins/funind/g_indfun.ml4" 359 11067 11096 "plugins/funind/g_indfun.ml4" 359 11067 11109
type(
  Names.name
)
"plugins/funind/g_indfun.ml4" 359 11067 11111 "plugins/funind/g_indfun.ml4" 359 11067 11115
type(
  Term.types
)
ident(
  int_ref cstr "plugins/funind/g_indfun.ml4" 356 10979 11005 "plugins/funind/g_indfun.ml4" 356 10979 11009
)
"plugins/funind/g_indfun.ml4" 359 11067 11116 "plugins/funind/g_indfun.ml4" 359 11067 11120
type(
  Term.types option
)
"plugins/funind/g_indfun.ml4" 359 11067 11121 "plugins/funind/g_indfun.ml4" 359 11067 11136
type(
  Tacticals.clause
)
ident(
  ext_ref Tacticals.allHypsAndConcl
)
"plugins/funind/g_indfun.ml4" 359 11067 11072 "plugins/funind/g_indfun.ml4" 359 11067 11136
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 360 11138 11143 "plugins/funind/g_indfun.ml4" 360 11138 11155
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENFIRST
)
"plugins/funind/g_indfun.ml4" 361 11156 11163 "plugins/funind/g_indfun.ml4" 361 11156 11181
type(
  Names.name -> Term.types -> Proof_type.tactic
)
ident(
  ext_ref Tactics.assert_tac
)
"plugins/funind/g_indfun.ml4" 361 11156 11182 "plugins/funind/g_indfun.ml4" 361 11156 11191
type(
  Names.name
)
"plugins/funind/g_indfun.ml4" 361 11156 11193 "plugins/funind/g_indfun.ml4" 361 11156 11197
type(
  Term.types -> Term.types -> Term.types -> Term.types
)
ident(
  int_ref mkEq "plugins/funind/g_indfun.ml4" 352 10907 10911 "plugins/funind/g_indfun.ml4" 352 10907 10915
)
"plugins/funind/g_indfun.ml4" 361 11156 11198 "plugins/funind/g_indfun.ml4" 361 11156 11201
type(
  Term.types
)
ident(
  int_ref typ "plugins/funind/g_indfun.ml4" 357 11015 11021 "plugins/funind/g_indfun.ml4" 357 11015 11024
)
"plugins/funind/g_indfun.ml4" 361 11156 11203 "plugins/funind/g_indfun.ml4" 361 11156 11208
type(
  Names.identifier -> Term.types
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/g_indfun.ml4" 361 11156 11209 "plugins/funind/g_indfun.ml4" 361 11156 11217
type(
  Names.identifier
)
ident(
  int_ref idunsafe "plugins/funind/g_indfun.ml4" 356 10979 10996 "plugins/funind/g_indfun.ml4" 356 10979 11004
)
"plugins/funind/g_indfun.ml4" 361 11156 11203 "plugins/funind/g_indfun.ml4" 361 11156 11217
call(
  stack
)
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 361 11156 11219 "plugins/funind/g_indfun.ml4" 361 11156 11223
type(
  Term.types
)
ident(
  int_ref cstr "plugins/funind/g_indfun.ml4" 356 10979 11005 "plugins/funind/g_indfun.ml4" 356 10979 11009
)
"plugins/funind/g_indfun.ml4" 361 11156 11193 "plugins/funind/g_indfun.ml4" 361 11156 11223
call(
  stack
)
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 361 11156 11163 "plugins/funind/g_indfun.ml4" 361 11156 11224
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 362 11226 11232 "plugins/funind/g_indfun.ml4" 362 11226 11251
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.reflexivity
)
"plugins/funind/g_indfun.ml4" 360 11138 11143 "plugins/funind/g_indfun.ml4" 360 11138 11251
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 363 11253 11257 "plugins/funind/g_indfun.ml4" 363 11253 11259
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 356 10979 11010 "plugins/funind/g_indfun.ml4" 356 10979 11012
)
"plugins/funind/g_indfun.ml4" 358 11057 11059 "plugins/funind/g_indfun.ml4" 358 11057 11259
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 357 11015 11017 "plugins/funind/g_indfun.ml4" 357 11015 11259
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 356 10979 11010 "plugins/funind/g_indfun.ml4" 356 10979 11259
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 356 10979 11005 "plugins/funind/g_indfun.ml4" 356 10979 11259
type(
  Term.types ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 356 10979 10996 "plugins/funind/g_indfun.ml4" 356 10979 11259
type(
  Names.identifier ->
  Term.types ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 366 11262 11266 "plugins/funind/g_indfun.ml4" 366 11262 11271
type(
  Names.identifier ->
  Term.types ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def poseq "plugins/funind/g_indfun.ml4" 372 11364 11364 --
)
"plugins/funind/g_indfun.ml4" 366 11262 11272 "plugins/funind/g_indfun.ml4" 366 11262 11274
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 366 11262 11275 "plugins/funind/g_indfun.ml4" 366 11262 11348
)
"plugins/funind/g_indfun.ml4" 366 11262 11275 "plugins/funind/g_indfun.ml4" 366 11262 11279
type(
  Term.types
)
ident(
  def cstr "plugins/funind/g_indfun.ml4" 366 11262 11280 "plugins/funind/g_indfun.ml4" 366 11262 11348
)
"plugins/funind/g_indfun.ml4" 366 11262 11280 "plugins/funind/g_indfun.ml4" 366 11262 11282
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 367 11285 11287 "plugins/funind/g_indfun.ml4" 367 11285 11348
)
"plugins/funind/g_indfun.ml4" 367 11285 11291 "plugins/funind/g_indfun.ml4" 367 11285 11292
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 367 11285 11295 "plugins/funind/g_indfun.ml4" 367 11285 11311
type(
  Names.identifier list ->
  Names.identifier -> Proof_type.goal Tacmach.sigma -> Names.identifier
)
ident(
  ext_ref Tactics.fresh_id
)
"plugins/funind/g_indfun.ml4" 367 11285 11312 "plugins/funind/g_indfun.ml4" 367 11285 11314
type(
  Names.identifier list
)
"plugins/funind/g_indfun.ml4" 367 11285 11315 "plugins/funind/g_indfun.ml4" 367 11285 11317
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 366 11262 11272 "plugins/funind/g_indfun.ml4" 366 11262 11274
)
"plugins/funind/g_indfun.ml4" 367 11285 11318 "plugins/funind/g_indfun.ml4" 367 11285 11320
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 366 11262 11280 "plugins/funind/g_indfun.ml4" 366 11262 11282
)
"plugins/funind/g_indfun.ml4" 367 11285 11295 "plugins/funind/g_indfun.ml4" 367 11285 11320
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 368 11324 11326 "plugins/funind/g_indfun.ml4" 368 11324 11338
type(
  Names.identifier ->
  Term.types ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref poseq_unsafe "plugins/funind/g_indfun.ml4" 356 10979 10983 "plugins/funind/g_indfun.ml4" 356 10979 10995
)
"plugins/funind/g_indfun.ml4" 368 11324 11339 "plugins/funind/g_indfun.ml4" 368 11324 11340
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 367 11285 11291 "plugins/funind/g_indfun.ml4" 367 11285 11292
)
"plugins/funind/g_indfun.ml4" 368 11324 11341 "plugins/funind/g_indfun.ml4" 368 11324 11345
type(
  Term.types
)
ident(
  int_ref cstr "plugins/funind/g_indfun.ml4" 366 11262 11275 "plugins/funind/g_indfun.ml4" 366 11262 11279
)
"plugins/funind/g_indfun.ml4" 368 11324 11346 "plugins/funind/g_indfun.ml4" 368 11324 11348
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 366 11262 11280 "plugins/funind/g_indfun.ml4" 366 11262 11282
)
"plugins/funind/g_indfun.ml4" 368 11324 11326 "plugins/funind/g_indfun.ml4" 368 11324 11348
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 367 11285 11287 "plugins/funind/g_indfun.ml4" 367 11285 11348
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 366 11262 11280 "plugins/funind/g_indfun.ml4" 366 11262 11348
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 366 11262 11275 "plugins/funind/g_indfun.ml4" 366 11262 11348
type(
  Term.types ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 366 11262 11272 "plugins/funind/g_indfun.ml4" 366 11262 11348
type(
  Names.identifier ->
  Term.types ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 372 11364 11368 "plugins/funind/g_indfun.ml4" 372 11364 11385
type(
  Term.types list ref
)
ident(
  def list_constr_largs "plugins/funind/g_indfun.ml4" 374 11396 11396 --
)
"plugins/funind/g_indfun.ml4" 372 11364 11388 "plugins/funind/g_indfun.ml4" 372 11364 11391
type(
  Term.types list -> Term.types list ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/g_indfun.ml4" 372 11364 11392 "plugins/funind/g_indfun.ml4" 372 11364 11394
type(
  Term.types list
)
"plugins/funind/g_indfun.ml4" 372 11364 11388 "plugins/funind/g_indfun.ml4" 372 11364 11394
type(
  Term.types list ref
)
"plugins/funind/g_indfun.ml4" 374 11396 11404 "plugins/funind/g_indfun.ml4" 374 11396 11422
type(
  Term.types list -> Proof_type.tactic
)
ident(
  def poseq_list_ids_rec "plugins/funind/g_indfun.ml4" 374 11396 11396 --
)
"plugins/funind/g_indfun.ml4" 374 11396 11423 "plugins/funind/g_indfun.ml4" 374 11396 11428
type(
  Term.types list
)
ident(
  def lcstr "plugins/funind/g_indfun.ml4" 374 11396 11429 "plugins/funind/g_indfun.ml4" 374 11396 12156
)
"plugins/funind/g_indfun.ml4" 374 11396 11429 "plugins/funind/g_indfun.ml4" 374 11396 11431
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 375 11434 11436 "plugins/funind/g_indfun.ml4" 375 11434 12156
)
"plugins/funind/g_indfun.ml4" 375 11434 11442 "plugins/funind/g_indfun.ml4" 375 11434 11447
type(
  Term.types list
)
ident(
  int_ref lcstr "plugins/funind/g_indfun.ml4" 374 11396 11423 "plugins/funind/g_indfun.ml4" 374 11396 11428
)
"plugins/funind/g_indfun.ml4" 376 11453 11459 "plugins/funind/g_indfun.ml4" 376 11453 11461
type(
  Term.types list
)
"plugins/funind/g_indfun.ml4" 376 11453 11465 "plugins/funind/g_indfun.ml4" 376 11453 11473
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/g_indfun.ml4" 376 11453 11474 "plugins/funind/g_indfun.ml4" 376 11453 11476
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 374 11396 11429 "plugins/funind/g_indfun.ml4" 374 11396 11431
)
"plugins/funind/g_indfun.ml4" 376 11453 11465 "plugins/funind/g_indfun.ml4" 376 11453 11476
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 377 11477 11483 "plugins/funind/g_indfun.ml4" 377 11477 11484
type(
  Term.types
)
ident(
  def c "plugins/funind/g_indfun.ml4" 378 11496 11497 "plugins/funind/g_indfun.ml4" 378 11496 12156
)
"plugins/funind/g_indfun.ml4" 377 11477 11486 "plugins/funind/g_indfun.ml4" 377 11477 11492
type(
  Term.types list
)
ident(
  def lcstr' "plugins/funind/g_indfun.ml4" 378 11496 11497 "plugins/funind/g_indfun.ml4" 378 11496 12156
)
"plugins/funind/g_indfun.ml4" 377 11477 11483 "plugins/funind/g_indfun.ml4" 377 11477 11492
type(
  Term.types list
)
"plugins/funind/g_indfun.ml4" 378 11496 11503 "plugins/funind/g_indfun.ml4" 378 11496 11515
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 378 11496 11516 "plugins/funind/g_indfun.ml4" 378 11496 11517
type(
  Term.types
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 377 11477 11483 "plugins/funind/g_indfun.ml4" 377 11477 11484
)
"plugins/funind/g_indfun.ml4" 378 11496 11503 "plugins/funind/g_indfun.ml4" 378 11496 11517
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 379 11523 11532 "plugins/funind/g_indfun.ml4" 379 11523 11533
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 379 11523 11528 "plugins/funind/g_indfun.ml4" 379 11523 11533
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 380 11537 11545 "plugins/funind/g_indfun.ml4" 380 11537 11562
type(
  Term.types list ref
)
ident(
  int_ref list_constr_largs "plugins/funind/g_indfun.ml4" 372 11364 11368 "plugins/funind/g_indfun.ml4" 372 11364 11385
)
"plugins/funind/g_indfun.ml4" 380 11537 11564 "plugins/funind/g_indfun.ml4" 380 11537 11565
type(
  Term.types
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 377 11477 11483 "plugins/funind/g_indfun.ml4" 377 11477 11484
)
"plugins/funind/g_indfun.ml4" 380 11537 11568 "plugins/funind/g_indfun.ml4" 380 11537 11585
type(
  Term.types list ref
)
ident(
  int_ref list_constr_largs "plugins/funind/g_indfun.ml4" 372 11364 11368 "plugins/funind/g_indfun.ml4" 372 11364 11385
)
"plugins/funind/g_indfun.ml4" 380 11537 11567 "plugins/funind/g_indfun.ml4" 380 11537 11585
type(
  Term.types list
)
type(
  Term.types list ref -> Term.types list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/g_indfun.ml4" 380 11537 11564 "plugins/funind/g_indfun.ml4" 380 11537 11585
type(
  Term.types list
)
"plugins/funind/g_indfun.ml4" 380 11537 11545 "plugins/funind/g_indfun.ml4" 380 11537 11585
type(
  unit
)
type(
  Term.types list ref -> Term.types list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/g_indfun.ml4" 380 11537 11588 "plugins/funind/g_indfun.ml4" 380 11537 11606
type(
  Term.types list -> Proof_type.tactic
)
ident(
  int_ref poseq_list_ids_rec "plugins/funind/g_indfun.ml4" 374 11396 11404 "plugins/funind/g_indfun.ml4" 374 11396 11422
)
"plugins/funind/g_indfun.ml4" 380 11537 11607 "plugins/funind/g_indfun.ml4" 380 11537 11613
type(
  Term.types list
)
ident(
  int_ref lcstr' "plugins/funind/g_indfun.ml4" 377 11477 11486 "plugins/funind/g_indfun.ml4" 377 11477 11492
)
"plugins/funind/g_indfun.ml4" 380 11537 11614 "plugins/funind/g_indfun.ml4" 380 11537 11616
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 374 11396 11429 "plugins/funind/g_indfun.ml4" 374 11396 11431
)
"plugins/funind/g_indfun.ml4" 380 11537 11588 "plugins/funind/g_indfun.ml4" 380 11537 11616
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 380 11537 11545 "plugins/funind/g_indfun.ml4" 380 11537 11616
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 381 11618 11623 "plugins/funind/g_indfun.ml4" 381 11618 11624
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/g_indfun.ml4" 382 11628 11639 "plugins/funind/g_indfun.ml4" 382 11628 11640
type(
  unit
)
"plugins/funind/g_indfun.ml4" 382 11628 11643 "plugins/funind/g_indfun.ml4" 382 11628 11648
type(
  string -> unit
)
ident(
  int_ref prstr "plugins/funind/g_indfun.ml4" 298 9174 9178 "plugins/funind/g_indfun.ml4" 298 9174 9183
)
"plugins/funind/g_indfun.ml4" 382 11628 11649 "plugins/funind/g_indfun.ml4" 382 11628 11655
type(
  string
)
"plugins/funind/g_indfun.ml4" 382 11628 11643 "plugins/funind/g_indfun.ml4" 382 11628 11655
type(
  unit
)
"plugins/funind/g_indfun.ml4" 383 11659 11670 "plugins/funind/g_indfun.ml4" 383 11659 11671
type(
  unit
)
"plugins/funind/g_indfun.ml4" 383 11659 11674 "plugins/funind/g_indfun.ml4" 383 11659 11682
type(
  Term.types -> unit
)
ident(
  int_ref prconstr "plugins/funind/g_indfun.ml4" 296 9063 9067 "plugins/funind/g_indfun.ml4" 296 9063 9075
)
"plugins/funind/g_indfun.ml4" 383 11659 11683 "plugins/funind/g_indfun.ml4" 383 11659 11684
type(
  Term.types
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 377 11477 11483 "plugins/funind/g_indfun.ml4" 377 11477 11484
)
"plugins/funind/g_indfun.ml4" 383 11659 11674 "plugins/funind/g_indfun.ml4" 383 11659 11684
type(
  unit
)
"plugins/funind/g_indfun.ml4" 384 11688 11699 "plugins/funind/g_indfun.ml4" 384 11688 11700
type(
  unit
)
"plugins/funind/g_indfun.ml4" 384 11688 11703 "plugins/funind/g_indfun.ml4" 384 11688 11708
type(
  string -> unit
)
ident(
  int_ref prstr "plugins/funind/g_indfun.ml4" 298 9174 9178 "plugins/funind/g_indfun.ml4" 298 9174 9183
)
"plugins/funind/g_indfun.ml4" 384 11688 11709 "plugins/funind/g_indfun.ml4" 384 11688 11713
type(
  string
)
"plugins/funind/g_indfun.ml4" 384 11688 11703 "plugins/funind/g_indfun.ml4" 384 11688 11713
type(
  unit
)
"plugins/funind/g_indfun.ml4" 385 11717 11728 "plugins/funind/g_indfun.ml4" 385 11717 11731
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 385 11717 11734 "plugins/funind/g_indfun.ml4" 385 11717 11752
type(
  Proof_type.goal Tacmach.sigma -> Term.types -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/g_indfun.ml4" 385 11717 11753 "plugins/funind/g_indfun.ml4" 385 11717 11755
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 374 11396 11429 "plugins/funind/g_indfun.ml4" 374 11396 11431
)
"plugins/funind/g_indfun.ml4" 385 11717 11756 "plugins/funind/g_indfun.ml4" 385 11717 11757
type(
  Term.types
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 377 11477 11483 "plugins/funind/g_indfun.ml4" 377 11477 11484
)
"plugins/funind/g_indfun.ml4" 385 11717 11734 "plugins/funind/g_indfun.ml4" 385 11717 11757
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 386 11761 11772 "plugins/funind/g_indfun.ml4" 386 11761 11777
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 386 11761 11780 "plugins/funind/g_indfun.ml4" 386 11761 11811
type(
  Environ.env -> Term.types -> Names.name -> Names.identifier
)
ident(
  ext_ref Namegen.id_of_name_using_hdchar
)
"plugins/funind/g_indfun.ml4" 386 11761 11813 "plugins/funind/g_indfun.ml4" 386 11761 11823
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/g_indfun.ml4" 386 11761 11823 "plugins/funind/g_indfun.ml4" 386 11761 11825
type(
  unit
)
"plugins/funind/g_indfun.ml4" 386 11761 11813 "plugins/funind/g_indfun.ml4" 386 11761 11825
type(
  Environ.env
)
"plugins/funind/g_indfun.ml4" 386 11761 11827 "plugins/funind/g_indfun.ml4" 386 11761 11830
type(
  Term.types
)
ident(
  int_ref typ "plugins/funind/g_indfun.ml4" 385 11717 11728 "plugins/funind/g_indfun.ml4" 385 11717 11731
)
"plugins/funind/g_indfun.ml4" 386 11761 11831 "plugins/funind/g_indfun.ml4" 386 11761 11840
type(
  Names.name
)
"plugins/funind/g_indfun.ml4" 386 11761 11780 "plugins/funind/g_indfun.ml4" 386 11761 11840
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 387 11844 11855 "plugins/funind/g_indfun.ml4" 387 11844 11856
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 387 11844 11859 "plugins/funind/g_indfun.ml4" 387 11844 11875
type(
  Names.identifier list ->
  Names.identifier -> Proof_type.goal Tacmach.sigma -> Names.identifier
)
ident(
  ext_ref Tactics.fresh_id
)
"plugins/funind/g_indfun.ml4" 387 11844 11876 "plugins/funind/g_indfun.ml4" 387 11844 11878
type(
  Names.identifier list
)
"plugins/funind/g_indfun.ml4" 387 11844 11879 "plugins/funind/g_indfun.ml4" 387 11844 11884
type(
  Names.identifier
)
ident(
  int_ref cname "plugins/funind/g_indfun.ml4" 386 11761 11772 "plugins/funind/g_indfun.ml4" 386 11761 11777
)
"plugins/funind/g_indfun.ml4" 387 11844 11885 "plugins/funind/g_indfun.ml4" 387 11844 11887
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 374 11396 11429 "plugins/funind/g_indfun.ml4" 374 11396 11431
)
"plugins/funind/g_indfun.ml4" 387 11844 11859 "plugins/funind/g_indfun.ml4" 387 11844 11887
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 388 11891 11902 "plugins/funind/g_indfun.ml4" 388 11891 11903
type(
  unit
)
"plugins/funind/g_indfun.ml4" 388 11891 11906 "plugins/funind/g_indfun.ml4" 388 11891 11923
type(
  Term.types list ref
)
ident(
  int_ref list_constr_largs "plugins/funind/g_indfun.ml4" 372 11364 11368 "plugins/funind/g_indfun.ml4" 372 11364 11385
)
"plugins/funind/g_indfun.ml4" 388 11891 11925 "plugins/funind/g_indfun.ml4" 388 11891 11930
type(
  Names.identifier -> Term.types
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/g_indfun.ml4" 388 11891 11931 "plugins/funind/g_indfun.ml4" 388 11891 11932
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 387 11844 11855 "plugins/funind/g_indfun.ml4" 387 11844 11856
)
"plugins/funind/g_indfun.ml4" 388 11891 11925 "plugins/funind/g_indfun.ml4" 388 11891 11932
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 388 11891 11937 "plugins/funind/g_indfun.ml4" 388 11891 11954
type(
  Term.types list ref
)
ident(
  int_ref list_constr_largs "plugins/funind/g_indfun.ml4" 372 11364 11368 "plugins/funind/g_indfun.ml4" 372 11364 11385
)
"plugins/funind/g_indfun.ml4" 388 11891 11936 "plugins/funind/g_indfun.ml4" 388 11891 11954
type(
  Term.types list
)
type(
  Term.types list ref -> Term.types list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/g_indfun.ml4" 388 11891 11925 "plugins/funind/g_indfun.ml4" 388 11891 11954
type(
  Term.types list
)
"plugins/funind/g_indfun.ml4" 388 11891 11906 "plugins/funind/g_indfun.ml4" 388 11891 11954
type(
  unit
)
type(
  Term.types list ref -> Term.types list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/g_indfun.ml4" 389 11958 11969 "plugins/funind/g_indfun.ml4" 389 11958 11970
type(
  unit
)
"plugins/funind/g_indfun.ml4" 389 11958 11973 "plugins/funind/g_indfun.ml4" 389 11958 11978
type(
  string -> unit
)
ident(
  int_ref prstr "plugins/funind/g_indfun.ml4" 298 9174 9178 "plugins/funind/g_indfun.ml4" 298 9174 9183
)
"plugins/funind/g_indfun.ml4" 389 11958 11979 "plugins/funind/g_indfun.ml4" 389 11958 12002
type(
  string
)
"plugins/funind/g_indfun.ml4" 389 11958 11973 "plugins/funind/g_indfun.ml4" 389 11958 12002
type(
  unit
)
"plugins/funind/g_indfun.ml4" 390 12006 12017 "plugins/funind/g_indfun.ml4" 390 12006 12018
type(
  unit
)
"plugins/funind/g_indfun.ml4" 390 12006 12021 "plugins/funind/g_indfun.ml4" 390 12006 12033
type(
  Term.types list -> unit
)
ident(
  int_ref prlistconstr "plugins/funind/g_indfun.ml4" 297 9130 9134 "plugins/funind/g_indfun.ml4" 297 9130 9146
)
"plugins/funind/g_indfun.ml4" 390 12006 12035 "plugins/funind/g_indfun.ml4" 390 12006 12052
type(
  Term.types list ref
)
ident(
  int_ref list_constr_largs "plugins/funind/g_indfun.ml4" 372 11364 11368 "plugins/funind/g_indfun.ml4" 372 11364 11385
)
"plugins/funind/g_indfun.ml4" 390 12006 12034 "plugins/funind/g_indfun.ml4" 390 12006 12052
type(
  Term.types list
)
type(
  Term.types list ref -> Term.types list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/g_indfun.ml4" 390 12006 12021 "plugins/funind/g_indfun.ml4" 390 12006 12052
type(
  unit
)
"plugins/funind/g_indfun.ml4" 391 12056 12067 "plugins/funind/g_indfun.ml4" 391 12056 12068
type(
  unit
)
"plugins/funind/g_indfun.ml4" 391 12056 12071 "plugins/funind/g_indfun.ml4" 391 12056 12076
type(
  string -> unit
)
ident(
  int_ref prstr "plugins/funind/g_indfun.ml4" 298 9174 9178 "plugins/funind/g_indfun.ml4" 298 9174 9183
)
"plugins/funind/g_indfun.ml4" 391 12056 12077 "plugins/funind/g_indfun.ml4" 391 12056 12081
type(
  string
)
"plugins/funind/g_indfun.ml4" 391 12056 12071 "plugins/funind/g_indfun.ml4" 391 12056 12081
type(
  unit
)
"plugins/funind/g_indfun.ml4" 393 12086 12093 "plugins/funind/g_indfun.ml4" 393 12086 12100
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/g_indfun.ml4" 394 12101 12104 "plugins/funind/g_indfun.ml4" 394 12101 12116
type(
  Names.identifier -> Term.types -> Proof_type.tactic
)
ident(
  int_ref poseq_unsafe "plugins/funind/g_indfun.ml4" 356 10979 10983 "plugins/funind/g_indfun.ml4" 356 10979 10995
)
"plugins/funind/g_indfun.ml4" 394 12101 12117 "plugins/funind/g_indfun.ml4" 394 12101 12118
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 387 11844 11855 "plugins/funind/g_indfun.ml4" 387 11844 11856
)
"plugins/funind/g_indfun.ml4" 394 12101 12119 "plugins/funind/g_indfun.ml4" 394 12101 12120
type(
  Term.types
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 377 11477 11483 "plugins/funind/g_indfun.ml4" 377 11477 11484
)
"plugins/funind/g_indfun.ml4" 394 12101 12104 "plugins/funind/g_indfun.ml4" 394 12101 12120
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 395 12122 12125 "plugins/funind/g_indfun.ml4" 395 12122 12143
type(
  Term.types list -> Proof_type.tactic
)
ident(
  int_ref poseq_list_ids_rec "plugins/funind/g_indfun.ml4" 374 11396 11404 "plugins/funind/g_indfun.ml4" 374 11396 11422
)
"plugins/funind/g_indfun.ml4" 395 12122 12144 "plugins/funind/g_indfun.ml4" 395 12122 12150
type(
  Term.types list
)
ident(
  int_ref lcstr' "plugins/funind/g_indfun.ml4" 377 11477 11486 "plugins/funind/g_indfun.ml4" 377 11477 11492
)
"plugins/funind/g_indfun.ml4" 395 12122 12125 "plugins/funind/g_indfun.ml4" 395 12122 12150
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 396 12152 12154 "plugins/funind/g_indfun.ml4" 396 12152 12156
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 374 11396 11429 "plugins/funind/g_indfun.ml4" 374 11396 11431
)
"plugins/funind/g_indfun.ml4" 393 12086 12093 "plugins/funind/g_indfun.ml4" 393 12086 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 391 12056 12063 "plugins/funind/g_indfun.ml4" 391 12056 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 390 12006 12013 "plugins/funind/g_indfun.ml4" 390 12006 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 389 11958 11965 "plugins/funind/g_indfun.ml4" 389 11958 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 388 11891 11898 "plugins/funind/g_indfun.ml4" 388 11891 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 387 11844 11851 "plugins/funind/g_indfun.ml4" 387 11844 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 386 11761 11768 "plugins/funind/g_indfun.ml4" 386 11761 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 385 11717 11724 "plugins/funind/g_indfun.ml4" 385 11717 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 384 11688 11695 "plugins/funind/g_indfun.ml4" 384 11688 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 383 11659 11666 "plugins/funind/g_indfun.ml4" 383 11659 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 382 11628 11635 "plugins/funind/g_indfun.ml4" 382 11628 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 378 11496 11497 "plugins/funind/g_indfun.ml4" 378 11496 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 375 11434 11436 "plugins/funind/g_indfun.ml4" 375 11434 12156
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 374 11396 11429 "plugins/funind/g_indfun.ml4" 374 11396 12156
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 374 11396 11423 "plugins/funind/g_indfun.ml4" 374 11396 12156
type(
  Term.types list -> Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 398 12158 12162 "plugins/funind/g_indfun.ml4" 398 12158 12176
type(
  Term.types list ->
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def poseq_list_ids "plugins/funind/g_indfun.ml4" 405 12452 12452 --
)
"plugins/funind/g_indfun.ml4" 398 12158 12177 "plugins/funind/g_indfun.ml4" 398 12158 12182
type(
  Term.types list
)
ident(
  def lcstr "plugins/funind/g_indfun.ml4" 398 12158 12183 "plugins/funind/g_indfun.ml4" 398 12158 12254
)
"plugins/funind/g_indfun.ml4" 398 12158 12183 "plugins/funind/g_indfun.ml4" 398 12158 12185
type(
  Proof_type.goal Evd.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 399 12188 12190 "plugins/funind/g_indfun.ml4" 399 12188 12254
)
"plugins/funind/g_indfun.ml4" 399 12188 12194 "plugins/funind/g_indfun.ml4" 399 12188 12195
type(
  unit
)
"plugins/funind/g_indfun.ml4" 399 12188 12198 "plugins/funind/g_indfun.ml4" 399 12188 12215
type(
  Term.types list ref
)
ident(
  int_ref list_constr_largs "plugins/funind/g_indfun.ml4" 372 11364 11368 "plugins/funind/g_indfun.ml4" 372 11364 11385
)
"plugins/funind/g_indfun.ml4" 399 12188 12219 "plugins/funind/g_indfun.ml4" 399 12188 12221
type(
  Term.types list
)
"plugins/funind/g_indfun.ml4" 399 12188 12198 "plugins/funind/g_indfun.ml4" 399 12188 12221
type(
  unit
)
type(
  Term.types list ref -> Term.types list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/g_indfun.ml4" 400 12225 12227 "plugins/funind/g_indfun.ml4" 400 12225 12245
type(
  Term.types list -> Proof_type.tactic
)
ident(
  int_ref poseq_list_ids_rec "plugins/funind/g_indfun.ml4" 374 11396 11404 "plugins/funind/g_indfun.ml4" 374 11396 11422
)
"plugins/funind/g_indfun.ml4" 400 12225 12246 "plugins/funind/g_indfun.ml4" 400 12225 12251
type(
  Term.types list
)
ident(
  int_ref lcstr "plugins/funind/g_indfun.ml4" 398 12158 12177 "plugins/funind/g_indfun.ml4" 398 12158 12182
)
"plugins/funind/g_indfun.ml4" 400 12225 12252 "plugins/funind/g_indfun.ml4" 400 12225 12254
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 398 12158 12183 "plugins/funind/g_indfun.ml4" 398 12158 12185
)
"plugins/funind/g_indfun.ml4" 400 12225 12227 "plugins/funind/g_indfun.ml4" 400 12225 12254
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 399 12188 12190 "plugins/funind/g_indfun.ml4" 399 12188 12254
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 398 12158 12183 "plugins/funind/g_indfun.ml4" 398 12158 12254
type(
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 398 12158 12177 "plugins/funind/g_indfun.ml4" 398 12158 12254
type(
  Term.types list ->
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 405 12452 12456 "plugins/funind/g_indfun.ml4" 405 12452 12465
type(
  (Term.types -> bool) -> Proof_type.goal Tacmach.sigma -> fapp_info list
)
ident(
  def find_fapp "plugins/funind/g_indfun.ml4" 418 13017 13017 --
)
"plugins/funind/g_indfun.ml4" 405 12452 12467 "plugins/funind/g_indfun.ml4" 405 12452 12471
type(
  Term.types -> bool
)
ident(
  def test "plugins/funind/g_indfun.ml4" 405 12452 12488 "plugins/funind/g_indfun.ml4" 405 12452 12740
)
"plugins/funind/g_indfun.ml4" 405 12452 12488 "plugins/funind/g_indfun.ml4" 405 12452 12489
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/g_indfun.ml4" 405 12452 12490 "plugins/funind/g_indfun.ml4" 405 12452 12740
)
"plugins/funind/g_indfun.ml4" 406 12509 12515 "plugins/funind/g_indfun.ml4" 406 12509 12522
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 406 12509 12525 "plugins/funind/g_indfun.ml4" 406 12509 12535
type(
  Term.types -> (Term.types -> bool) -> fapp_info list
)
ident(
  int_ref hdMatchSub "plugins/funind/g_indfun.ml4" 330 10071 10079 "plugins/funind/g_indfun.ml4" 330 10071 10089
)
"plugins/funind/g_indfun.ml4" 406 12509 12537 "plugins/funind/g_indfun.ml4" 406 12509 12553
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/g_indfun.ml4" 406 12509 12554 "plugins/funind/g_indfun.ml4" 406 12509 12555
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/g_indfun.ml4" 405 12452 12488 "plugins/funind/g_indfun.ml4" 405 12452 12489
)
"plugins/funind/g_indfun.ml4" 406 12509 12537 "plugins/funind/g_indfun.ml4" 406 12509 12555
call(
  stack
)
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 406 12509 12557 "plugins/funind/g_indfun.ml4" 406 12509 12561
type(
  Term.types -> bool
)
ident(
  int_ref test "plugins/funind/g_indfun.ml4" 405 12452 12467 "plugins/funind/g_indfun.ml4" 405 12452 12471
)
"plugins/funind/g_indfun.ml4" 406 12509 12525 "plugins/funind/g_indfun.ml4" 406 12509 12561
call(
  stack
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 407 12565 12571 "plugins/funind/g_indfun.ml4" 407 12565 12574
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 408 12577 12581 "plugins/funind/g_indfun.ml4" 408 12577 12596
type(
  (fapp_info -> fapp_info list -> fapp_info list) ->
  fapp_info list -> fapp_info list -> fapp_info list
)
ident(
  ext_ref List.fold_right
)
"plugins/funind/g_indfun.ml4" 408 12577 12602 "plugins/funind/g_indfun.ml4" 408 12577 12603
type(
  fapp_info
)
ident(
  def x "plugins/funind/g_indfun.ml4" 408 12577 12604 "plugins/funind/g_indfun.ml4" 408 12577 12649
)
"plugins/funind/g_indfun.ml4" 408 12577 12604 "plugins/funind/g_indfun.ml4" 408 12577 12607
type(
  fapp_info list
)
ident(
  def acc "plugins/funind/g_indfun.ml4" 408 12577 12611 "plugins/funind/g_indfun.ml4" 408 12577 12649
)
"plugins/funind/g_indfun.ml4" 408 12577 12614 "plugins/funind/g_indfun.ml4" 408 12577 12622
type(
  fapp_info -> fapp_info list -> bool
)
ident(
  ext_ref List.mem
)
"plugins/funind/g_indfun.ml4" 408 12577 12623 "plugins/funind/g_indfun.ml4" 408 12577 12624
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 408 12577 12602 "plugins/funind/g_indfun.ml4" 408 12577 12603
)
"plugins/funind/g_indfun.ml4" 408 12577 12625 "plugins/funind/g_indfun.ml4" 408 12577 12628
type(
  fapp_info list
)
ident(
  int_ref acc "plugins/funind/g_indfun.ml4" 408 12577 12604 "plugins/funind/g_indfun.ml4" 408 12577 12607
)
"plugins/funind/g_indfun.ml4" 408 12577 12614 "plugins/funind/g_indfun.ml4" 408 12577 12628
call(
  stack
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 408 12577 12634 "plugins/funind/g_indfun.ml4" 408 12577 12637
type(
  fapp_info list
)
ident(
  int_ref acc "plugins/funind/g_indfun.ml4" 408 12577 12604 "plugins/funind/g_indfun.ml4" 408 12577 12607
)
"plugins/funind/g_indfun.ml4" 408 12577 12643 "plugins/funind/g_indfun.ml4" 408 12577 12644
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 408 12577 12602 "plugins/funind/g_indfun.ml4" 408 12577 12603
)
"plugins/funind/g_indfun.ml4" 408 12577 12646 "plugins/funind/g_indfun.ml4" 408 12577 12649
type(
  fapp_info list
)
ident(
  int_ref acc "plugins/funind/g_indfun.ml4" 408 12577 12604 "plugins/funind/g_indfun.ml4" 408 12577 12607
)
"plugins/funind/g_indfun.ml4" 408 12577 12643 "plugins/funind/g_indfun.ml4" 408 12577 12649
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 408 12577 12611 "plugins/funind/g_indfun.ml4" 408 12577 12649
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 408 12577 12604 "plugins/funind/g_indfun.ml4" 408 12577 12649
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 408 12577 12598 "plugins/funind/g_indfun.ml4" 408 12577 12649
type(
  fapp_info -> fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 408 12577 12651 "plugins/funind/g_indfun.ml4" 408 12577 12658
type(
  fapp_info list
)
ident(
  int_ref pre_res "plugins/funind/g_indfun.ml4" 406 12509 12515 "plugins/funind/g_indfun.ml4" 406 12509 12522
)
"plugins/funind/g_indfun.ml4" 408 12577 12659 "plugins/funind/g_indfun.ml4" 408 12577 12661
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 408 12577 12581 "plugins/funind/g_indfun.ml4" 408 12577 12661
call(
  stack
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 409 12665 12668 "plugins/funind/g_indfun.ml4" 409 12665 12680
type(
  Term.constr list -> unit
)
ident(
  int_ref prlistconstr "plugins/funind/g_indfun.ml4" 297 9130 9134 "plugins/funind/g_indfun.ml4" 297 9130 9146
)
"plugins/funind/g_indfun.ml4" 409 12665 12682 "plugins/funind/g_indfun.ml4" 409 12665 12690
type(
  (fapp_info -> Term.constr) -> fapp_info list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/g_indfun.ml4" 409 12665 12696 "plugins/funind/g_indfun.ml4" 409 12665 12697
type(
  fapp_info
)
ident(
  def x "plugins/funind/g_indfun.ml4" 409 12665 12701 "plugins/funind/g_indfun.ml4" 409 12665 12726
)
"plugins/funind/g_indfun.ml4" 409 12665 12701 "plugins/funind/g_indfun.ml4" 409 12665 12708
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/g_indfun.ml4" 409 12665 12710 "plugins/funind/g_indfun.ml4" 409 12665 12711
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 409 12665 12696 "plugins/funind/g_indfun.ml4" 409 12665 12697
)
"plugins/funind/g_indfun.ml4" 409 12665 12710 "plugins/funind/g_indfun.ml4" 409 12665 12717
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 409 12665 12718 "plugins/funind/g_indfun.ml4" 409 12665 12719
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 409 12665 12696 "plugins/funind/g_indfun.ml4" 409 12665 12697
)
"plugins/funind/g_indfun.ml4" 409 12665 12718 "plugins/funind/g_indfun.ml4" 409 12665 12725
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 409 12665 12710 "plugins/funind/g_indfun.ml4" 409 12665 12725
type(
  Term.constr * Term.constr list
)
"plugins/funind/g_indfun.ml4" 409 12665 12701 "plugins/funind/g_indfun.ml4" 409 12665 12726
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 409 12665 12692 "plugins/funind/g_indfun.ml4" 409 12665 12726
type(
  fapp_info -> Term.constr
)
"plugins/funind/g_indfun.ml4" 409 12665 12728 "plugins/funind/g_indfun.ml4" 409 12665 12731
type(
  fapp_info list
)
ident(
  int_ref res "plugins/funind/g_indfun.ml4" 407 12565 12571 "plugins/funind/g_indfun.ml4" 407 12565 12574
)
"plugins/funind/g_indfun.ml4" 409 12665 12682 "plugins/funind/g_indfun.ml4" 409 12665 12731
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 409 12665 12668 "plugins/funind/g_indfun.ml4" 409 12665 12732
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 410 12734 12736 "plugins/funind/g_indfun.ml4" 410 12734 12739
type(
  fapp_info list
)
ident(
  int_ref res "plugins/funind/g_indfun.ml4" 407 12565 12571 "plugins/funind/g_indfun.ml4" 407 12565 12574
)
"plugins/funind/g_indfun.ml4" 409 12665 12668 "plugins/funind/g_indfun.ml4" 409 12665 12739
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 407 12565 12567 "plugins/funind/g_indfun.ml4" 407 12565 12740
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 406 12509 12511 "plugins/funind/g_indfun.ml4" 406 12509 12740
type(
  fapp_info list
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 405 12452 12488 "plugins/funind/g_indfun.ml4" 405 12452 12740
type(
  Proof_type.goal Tacmach.sigma -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 405 12452 12466 "plugins/funind/g_indfun.ml4" 405 12452 12740
type(
  (Term.types -> bool) -> Proof_type.goal Tacmach.sigma -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 418 13017 13021 "plugins/funind/g_indfun.ml4" 418 13017 13031
type(
  Names.identifier option ->
  (fapp_info list -> fapp_info list) ->
  Proof_type.tactic ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def finduction "plugins/funind/g_indfun.ml4" 450 14232 14232 --
)
"plugins/funind/g_indfun.ml4" 418 13017 13033 "plugins/funind/g_indfun.ml4" 418 13017 13036
type(
  Names.identifier option
)
ident(
  def oid "plugins/funind/g_indfun.ml4" 418 13017 13056 "plugins/funind/g_indfun.ml4" 418 13017 14030
)
"plugins/funind/g_indfun.ml4" 418 13017 13057 "plugins/funind/g_indfun.ml4" 418 13017 13066
type(
  fapp_info list -> fapp_info list
)
ident(
  def heuristic "plugins/funind/g_indfun.ml4" 419 13102 13106 "plugins/funind/g_indfun.ml4" 419 13102 14030
)
"plugins/funind/g_indfun.ml4" 419 13102 13107 "plugins/funind/g_indfun.ml4" 419 13102 13114
type(
  Proof_type.tactic
)
ident(
  def nexttac "plugins/funind/g_indfun.ml4" 419 13102 13134 "plugins/funind/g_indfun.ml4" 419 13102 14030
)
"plugins/funind/g_indfun.ml4" 419 13102 13134 "plugins/funind/g_indfun.ml4" 419 13102 13135
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/g_indfun.ml4" 420 13138 13140 "plugins/funind/g_indfun.ml4" 420 13138 14030
)
"plugins/funind/g_indfun.ml4" 420 13138 13144 "plugins/funind/g_indfun.ml4" 420 13138 13148
type(
  Term.types -> bool
)
"plugins/funind/g_indfun.ml4" 420 13138 13157 "plugins/funind/g_indfun.ml4" 420 13138 13160
type(
  Names.identifier option
)
ident(
  int_ref oid "plugins/funind/g_indfun.ml4" 418 13017 13033 "plugins/funind/g_indfun.ml4" 418 13017 13036
)
"plugins/funind/g_indfun.ml4" 421 13166 13177 "plugins/funind/g_indfun.ml4" 421 13166 13179
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 422 13183 13184 "plugins/funind/g_indfun.ml4" 422 13183 13267
)
"plugins/funind/g_indfun.ml4" 421 13166 13172 "plugins/funind/g_indfun.ml4" 421 13166 13179
type(
  Names.identifier option
)
"plugins/funind/g_indfun.ml4" 422 13183 13188 "plugins/funind/g_indfun.ml4" 422 13183 13196
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 422 13183 13199 "plugins/funind/g_indfun.ml4" 422 13183 13206
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/g_indfun.ml4" 422 13183 13208 "plugins/funind/g_indfun.ml4" 422 13183 13219
type(
  Names.identifier -> Names.constant
)
ident(
  ext_ref Indfun_common.const_of_id
)
"plugins/funind/g_indfun.ml4" 422 13183 13220 "plugins/funind/g_indfun.ml4" 422 13183 13222
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 421 13166 13177 "plugins/funind/g_indfun.ml4" 421 13166 13179
)
"plugins/funind/g_indfun.ml4" 422 13183 13208 "plugins/funind/g_indfun.ml4" 422 13183 13222
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/g_indfun.ml4" 422 13183 13199 "plugins/funind/g_indfun.ml4" 422 13183 13223
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 423 13227 13233 "plugins/funind/g_indfun.ml4" 423 13227 13234
type(
  Term.types
)
ident(
  def u "plugins/funind/g_indfun.ml4" 423 13227 13238 "plugins/funind/g_indfun.ml4" 423 13227 13266
)
"plugins/funind/g_indfun.ml4" 423 13227 13238 "plugins/funind/g_indfun.ml4" 423 13227 13255
type(
  Term.types -> Term.constr -> bool
)
ident(
  int_ref constr_head_match "plugins/funind/g_indfun.ml4" 320 9815 9819 "plugins/funind/g_indfun.ml4" 320 9815 9836
)
"plugins/funind/g_indfun.ml4" 423 13227 13256 "plugins/funind/g_indfun.ml4" 423 13227 13257
type(
  Term.types
)
ident(
  int_ref u "plugins/funind/g_indfun.ml4" 423 13227 13233 "plugins/funind/g_indfun.ml4" 423 13227 13234
)
"plugins/funind/g_indfun.ml4" 423 13227 13258 "plugins/funind/g_indfun.ml4" 423 13227 13266
type(
  Term.constr
)
ident(
  int_ref idconstr "plugins/funind/g_indfun.ml4" 422 13183 13188 "plugins/funind/g_indfun.ml4" 422 13183 13196
)
"plugins/funind/g_indfun.ml4" 423 13227 13238 "plugins/funind/g_indfun.ml4" 423 13227 13266
call(
  tail
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 423 13227 13229 "plugins/funind/g_indfun.ml4" 423 13227 13266
type(
  Term.types -> bool
)
"plugins/funind/g_indfun.ml4" 422 13183 13184 "plugins/funind/g_indfun.ml4" 422 13183 13267
type(
  Term.types -> bool
)
"plugins/funind/g_indfun.ml4" 424 13289 13295 "plugins/funind/g_indfun.ml4" 424 13289 13299
type(
  Names.identifier option
)
"plugins/funind/g_indfun.ml4" 424 13289 13308 "plugins/funind/g_indfun.ml4" 424 13289 13309
type(
  Term.types
)
ident(
  def u "plugins/funind/g_indfun.ml4" 424 13289 13313 "plugins/funind/g_indfun.ml4" 424 13289 13320
)
"plugins/funind/g_indfun.ml4" 424 13289 13313 "plugins/funind/g_indfun.ml4" 424 13289 13318
type(
  Term.types -> bool
)
ident(
  ext_ref Term.isApp
)
"plugins/funind/g_indfun.ml4" 424 13289 13319 "plugins/funind/g_indfun.ml4" 424 13289 13320
type(
  Term.types
)
ident(
  int_ref u "plugins/funind/g_indfun.ml4" 424 13289 13308 "plugins/funind/g_indfun.ml4" 424 13289 13309
)
"plugins/funind/g_indfun.ml4" 424 13289 13313 "plugins/funind/g_indfun.ml4" 424 13289 13320
call(
  tail
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 424 13289 13304 "plugins/funind/g_indfun.ml4" 424 13289 13320
type(
  Term.types -> bool
)
"plugins/funind/g_indfun.ml4" 420 13138 13151 "plugins/funind/g_indfun.ml4" 420 13138 13321
type(
  Term.types -> bool
)
"plugins/funind/g_indfun.ml4" 425 13360 13366 "plugins/funind/g_indfun.ml4" 425 13360 13375
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 425 13360 13378 "plugins/funind/g_indfun.ml4" 425 13360 13387
type(
  (Term.types -> bool) -> Proof_type.goal Tacmach.sigma -> fapp_info list
)
ident(
  int_ref find_fapp "plugins/funind/g_indfun.ml4" 405 12452 12456 "plugins/funind/g_indfun.ml4" 405 12452 12465
)
"plugins/funind/g_indfun.ml4" 425 13360 13388 "plugins/funind/g_indfun.ml4" 425 13360 13392
type(
  Term.types -> bool
)
ident(
  int_ref test "plugins/funind/g_indfun.ml4" 420 13138 13144 "plugins/funind/g_indfun.ml4" 420 13138 13148
)
"plugins/funind/g_indfun.ml4" 425 13360 13393 "plugins/funind/g_indfun.ml4" 425 13360 13394
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/g_indfun.ml4" 419 13102 13134 "plugins/funind/g_indfun.ml4" 419 13102 13135
)
"plugins/funind/g_indfun.ml4" 425 13360 13378 "plugins/funind/g_indfun.ml4" 425 13360 13394
call(
  stack
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 426 13398 13404 "plugins/funind/g_indfun.ml4" 426 13398 13421
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 426 13398 13424 "plugins/funind/g_indfun.ml4" 426 13398 13433
type(
  fapp_info list -> fapp_info list
)
ident(
  int_ref heuristic "plugins/funind/g_indfun.ml4" 418 13017 13057 "plugins/funind/g_indfun.ml4" 418 13017 13066
)
"plugins/funind/g_indfun.ml4" 426 13398 13434 "plugins/funind/g_indfun.ml4" 426 13398 13443
type(
  fapp_info list
)
ident(
  int_ref info_list "plugins/funind/g_indfun.ml4" 425 13360 13366 "plugins/funind/g_indfun.ml4" 425 13360 13375
)
"plugins/funind/g_indfun.ml4" 426 13398 13424 "plugins/funind/g_indfun.ml4" 426 13398 13443
call(
  stack
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 427 13447 13449 "plugins/funind/g_indfun.ml4" 427 13447 13461
type(
  Term.constr list -> unit
)
ident(
  int_ref prlistconstr "plugins/funind/g_indfun.ml4" 297 9130 9134 "plugins/funind/g_indfun.ml4" 297 9130 9146
)
"plugins/funind/g_indfun.ml4" 427 13447 13463 "plugins/funind/g_indfun.ml4" 427 13447 13471
type(
  (fapp_info -> Term.constr) -> fapp_info list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/g_indfun.ml4" 427 13447 13477 "plugins/funind/g_indfun.ml4" 427 13447 13478
type(
  fapp_info
)
ident(
  def x "plugins/funind/g_indfun.ml4" 427 13447 13482 "plugins/funind/g_indfun.ml4" 427 13447 13507
)
"plugins/funind/g_indfun.ml4" 427 13447 13482 "plugins/funind/g_indfun.ml4" 427 13447 13489
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/g_indfun.ml4" 427 13447 13491 "plugins/funind/g_indfun.ml4" 427 13447 13492
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 427 13447 13477 "plugins/funind/g_indfun.ml4" 427 13447 13478
)
"plugins/funind/g_indfun.ml4" 427 13447 13491 "plugins/funind/g_indfun.ml4" 427 13447 13498
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 427 13447 13499 "plugins/funind/g_indfun.ml4" 427 13447 13500
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 427 13447 13477 "plugins/funind/g_indfun.ml4" 427 13447 13478
)
"plugins/funind/g_indfun.ml4" 427 13447 13499 "plugins/funind/g_indfun.ml4" 427 13447 13506
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 427 13447 13491 "plugins/funind/g_indfun.ml4" 427 13447 13506
type(
  Term.constr * Term.constr list
)
"plugins/funind/g_indfun.ml4" 427 13447 13482 "plugins/funind/g_indfun.ml4" 427 13447 13507
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 427 13447 13473 "plugins/funind/g_indfun.ml4" 427 13447 13507
type(
  fapp_info -> Term.constr
)
"plugins/funind/g_indfun.ml4" 427 13447 13509 "plugins/funind/g_indfun.ml4" 427 13447 13526
type(
  fapp_info list
)
ident(
  int_ref ordered_info_list "plugins/funind/g_indfun.ml4" 426 13398 13404 "plugins/funind/g_indfun.ml4" 426 13398 13421
)
"plugins/funind/g_indfun.ml4" 427 13447 13463 "plugins/funind/g_indfun.ml4" 427 13447 13526
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/g_indfun.ml4" 427 13447 13449 "plugins/funind/g_indfun.ml4" 427 13447 13527
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 428 13529 13534 "plugins/funind/g_indfun.ml4" 428 13529 13545
type(
  fapp_info list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/g_indfun.ml4" 428 13529 13546 "plugins/funind/g_indfun.ml4" 428 13529 13563
type(
  fapp_info list
)
ident(
  int_ref ordered_info_list "plugins/funind/g_indfun.ml4" 426 13398 13404 "plugins/funind/g_indfun.ml4" 426 13398 13421
)
"plugins/funind/g_indfun.ml4" 428 13529 13534 "plugins/funind/g_indfun.ml4" 428 13529 13563
call(
  stack
)
type(
  int
)
"plugins/funind/g_indfun.ml4" 428 13529 13566 "plugins/funind/g_indfun.ml4" 428 13529 13567
type(
  int
)
"plugins/funind/g_indfun.ml4" 428 13529 13534 "plugins/funind/g_indfun.ml4" 428 13529 13567
type(
  bool
)
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/g_indfun.ml4" 428 13529 13573 "plugins/funind/g_indfun.ml4" 428 13529 13583
type(
  string -> unit
)
ident(
  ext_ref Util.error
)
"plugins/funind/g_indfun.ml4" 428 13529 13584 "plugins/funind/g_indfun.ml4" 428 13529 13614
type(
  string
)
"plugins/funind/g_indfun.ml4" 428 13529 13573 "plugins/funind/g_indfun.ml4" 428 13529 13614
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 428 13529 13531 "plugins/funind/g_indfun.ml4" 428 13529 13614
type(
  unit
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 429 13616 13622 "plugins/funind/g_indfun.ml4" 429 13616 13629
type(
  Proof_type.tactic list
)
"plugins/funind/g_indfun.ml4" 430 13656 13660 "plugins/funind/g_indfun.ml4" 430 13656 13668
type(
  (fapp_info -> Proof_type.tactic) ->
  fapp_info list -> Proof_type.tactic list
)
ident(
  ext_ref List.map
)
"plugins/funind/g_indfun.ml4" 431 13669 13680 "plugins/funind/g_indfun.ml4" 431 13669 13684
type(
  fapp_info
)
ident(
  def info "plugins/funind/g_indfun.ml4" 432 13688 13690 "plugins/funind/g_indfun.ml4" 432 13688 13883
)
"plugins/funind/g_indfun.ml4" 432 13688 13690 "plugins/funind/g_indfun.ml4" 432 13688 13697
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/g_indfun.ml4" 433 13698 13702 "plugins/funind/g_indfun.ml4" 433 13698 13709
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/g_indfun.ml4" 433 13698 13711 "plugins/funind/g_indfun.ml4" 433 13698 13725
type(
  Term.types list -> Proof_type.tactic
)
ident(
  int_ref poseq_list_ids "plugins/funind/g_indfun.ml4" 398 12158 12162 "plugins/funind/g_indfun.ml4" 398 12158 12176
)
"plugins/funind/g_indfun.ml4" 433 13698 13726 "plugins/funind/g_indfun.ml4" 433 13698 13730
type(
  fapp_info
)
ident(
  int_ref info "plugins/funind/g_indfun.ml4" 431 13669 13680 "plugins/funind/g_indfun.ml4" 431 13669 13684
)
"plugins/funind/g_indfun.ml4" 433 13698 13726 "plugins/funind/g_indfun.ml4" 433 13698 13736
type(
  Term.types list
)
"plugins/funind/g_indfun.ml4" 433 13698 13711 "plugins/funind/g_indfun.ml4" 433 13698 13736
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 435 13745 13756 "plugins/funind/g_indfun.ml4" 435 13745 13758
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/g_indfun.ml4" 436 13762 13766 "plugins/funind/g_indfun.ml4" 436 13762 13870
)
"plugins/funind/g_indfun.ml4" 436 13762 13767 "plugins/funind/g_indfun.ml4" 436 13762 13787
type(
  bool ->
  Term.constr ->
  (Term.constr * Term.constr Rawterm.bindings) option ->
  Genarg.intro_pattern_expr Util.located option ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Indfun.functional_induction
)
"plugins/funind/g_indfun.ml4" 437 13788 13794 "plugins/funind/g_indfun.ml4" 437 13788 13798
type(
  bool
)
"plugins/funind/g_indfun.ml4" 437 13788 13800 "plugins/funind/g_indfun.ml4" 437 13788 13807
type(
  Term.constr * Term.types list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/g_indfun.ml4" 437 13788 13809 "plugins/funind/g_indfun.ml4" 437 13788 13813
type(
  fapp_info
)
ident(
  int_ref info "plugins/funind/g_indfun.ml4" 431 13669 13680 "plugins/funind/g_indfun.ml4" 431 13669 13684
)
"plugins/funind/g_indfun.ml4" 437 13788 13809 "plugins/funind/g_indfun.ml4" 437 13788 13819
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 437 13788 13821 "plugins/funind/g_indfun.ml4" 437 13788 13829
type(
  Term.types list -> Term.types list
)
ident(
  ext_ref List.rev
)
"plugins/funind/g_indfun.ml4" 437 13788 13831 "plugins/funind/g_indfun.ml4" 437 13788 13848
type(
  Term.types list ref
)
ident(
  int_ref list_constr_largs "plugins/funind/g_indfun.ml4" 372 11364 11368 "plugins/funind/g_indfun.ml4" 372 11364 11385
)
"plugins/funind/g_indfun.ml4" 437 13788 13830 "plugins/funind/g_indfun.ml4" 437 13788 13848
type(
  Term.types list
)
type(
  Term.types list ref -> Term.types list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/g_indfun.ml4" 437 13788 13821 "plugins/funind/g_indfun.ml4" 437 13788 13848
call(
  stack
)
type(
  Term.types list
)
"plugins/funind/g_indfun.ml4" 437 13788 13809 "plugins/funind/g_indfun.ml4" 437 13788 13848
type(
  Term.constr * Term.types list
)
"plugins/funind/g_indfun.ml4" 437 13788 13800 "plugins/funind/g_indfun.ml4" 437 13788 13849
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 438 13851 13857 "plugins/funind/g_indfun.ml4" 438 13851 13861
type(
  (Term.constr * Term.constr Rawterm.bindings) option
)
"plugins/funind/g_indfun.ml4" 438 13851 13862 "plugins/funind/g_indfun.ml4" 438 13851 13866
type(
  Genarg.intro_pattern_expr Util.located option
)
"plugins/funind/g_indfun.ml4" 438 13851 13868 "plugins/funind/g_indfun.ml4" 438 13851 13870
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/g_indfun.ml4" 435 13745 13756 "plugins/funind/g_indfun.ml4" 435 13745 13758
)
"plugins/funind/g_indfun.ml4" 436 13762 13766 "plugins/funind/g_indfun.ml4" 436 13762 13870
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 435 13745 13752 "plugins/funind/g_indfun.ml4" 435 13745 13870
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 433 13698 13702 "plugins/funind/g_indfun.ml4" 433 13698 13871
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 439 13873 13876 "plugins/funind/g_indfun.ml4" 439 13873 13883
type(
  Proof_type.tactic
)
ident(
  int_ref nexttac "plugins/funind/g_indfun.ml4" 419 13102 13107 "plugins/funind/g_indfun.ml4" 419 13102 13114
)
"plugins/funind/g_indfun.ml4" 432 13688 13690 "plugins/funind/g_indfun.ml4" 432 13688 13883
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 431 13669 13676 "plugins/funind/g_indfun.ml4" 431 13669 13884
type(
  fapp_info -> Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 439 13873 13886 "plugins/funind/g_indfun.ml4" 439 13873 13903
type(
  fapp_info list
)
ident(
  int_ref ordered_info_list "plugins/funind/g_indfun.ml4" 426 13398 13404 "plugins/funind/g_indfun.ml4" 426 13398 13421
)
"plugins/funind/g_indfun.ml4" 430 13656 13660 "plugins/funind/g_indfun.ml4" 430 13656 13903
call(
  stack
)
type(
  Proof_type.tactic list
)
type(
  Proof_type.tactic list
)
"plugins/funind/g_indfun.ml4" 442 14010 14012 "plugins/funind/g_indfun.ml4" 442 14010 14020
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclFIRST
)
"plugins/funind/g_indfun.ml4" 442 14010 14021 "plugins/funind/g_indfun.ml4" 442 14010 14028
type(
  Proof_type.tactic list
)
ident(
  int_ref taclist "plugins/funind/g_indfun.ml4" 429 13616 13622 "plugins/funind/g_indfun.ml4" 429 13616 13629
)
"plugins/funind/g_indfun.ml4" 442 14010 14029 "plugins/funind/g_indfun.ml4" 442 14010 14030
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/g_indfun.ml4" 419 13102 13134 "plugins/funind/g_indfun.ml4" 419 13102 13135
)
"plugins/funind/g_indfun.ml4" 442 14010 14012 "plugins/funind/g_indfun.ml4" 442 14010 14030
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 429 13616 13618 "plugins/funind/g_indfun.ml4" 429 13616 14030
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 427 13447 13449 "plugins/funind/g_indfun.ml4" 427 13447 14030
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 428 13529 13449 "plugins/funind/g_indfun.ml4" 428 13529 14030
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 426 13398 13400 "plugins/funind/g_indfun.ml4" 426 13398 14030
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 425 13360 13362 "plugins/funind/g_indfun.ml4" 425 13360 14030
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 420 13138 13140 "plugins/funind/g_indfun.ml4" 420 13138 14030
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 419 13102 13134 "plugins/funind/g_indfun.ml4" 419 13102 14030
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 419 13102 13106 "plugins/funind/g_indfun.ml4" 419 13102 14030
type(
  Proof_type.tactic ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 418 13017 13056 "plugins/funind/g_indfun.ml4" 418 13017 14030
type(
  (fapp_info list -> fapp_info list) ->
  Proof_type.tactic ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 418 13017 13032 "plugins/funind/g_indfun.ml4" 418 13017 14030
type(
  Names.identifier option ->
  (fapp_info list -> fapp_info list) ->
  Proof_type.tactic ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/g_indfun.ml4" 450 14232 14236 "plugins/funind/g_indfun.ml4" 450 14232 14251
type(
  int option -> fapp_info list -> fapp_info list
)
ident(
  def chose_heuristic "plugins/funind/g_indfun.ml4" 466 14785 14785 --
)
"plugins/funind/g_indfun.ml4" 450 14232 14253 "plugins/funind/g_indfun.ml4" 450 14232 14255
type(
  int option
)
ident(
  def oi "plugins/funind/g_indfun.ml4" 450 14232 14268 "plugins/funind/g_indfun.ml4" 450 14232 14781
)
"plugins/funind/g_indfun.ml4" 451 14305 14313 "plugins/funind/g_indfun.ml4" 451 14305 14315
type(
  int option
)
ident(
  int_ref oi "plugins/funind/g_indfun.ml4" 450 14232 14253 "plugins/funind/g_indfun.ml4" 450 14232 14255
)
"plugins/funind/g_indfun.ml4" 452 14321 14332 "plugins/funind/g_indfun.ml4" 452 14321 14333
type(
  int
)
ident(
  def i "plugins/funind/g_indfun.ml4" 452 14321 14338 "plugins/funind/g_indfun.ml4" 452 14321 14367
)
"plugins/funind/g_indfun.ml4" 452 14321 14327 "plugins/funind/g_indfun.ml4" 452 14321 14333
type(
  int option
)
"plugins/funind/g_indfun.ml4" 452 14321 14342 "plugins/funind/g_indfun.ml4" 452 14321 14343
type(
  fapp_info list
)
ident(
  def l "plugins/funind/g_indfun.ml4" 452 14321 14347 "plugins/funind/g_indfun.ml4" 452 14321 14367
)
"plugins/funind/g_indfun.ml4" 452 14321 14349 "plugins/funind/g_indfun.ml4" 452 14321 14357
type(
  fapp_info list -> int -> fapp_info
)
ident(
  ext_ref List.nth
)
"plugins/funind/g_indfun.ml4" 452 14321 14358 "plugins/funind/g_indfun.ml4" 452 14321 14359
type(
  fapp_info list
)
ident(
  int_ref l "plugins/funind/g_indfun.ml4" 452 14321 14342 "plugins/funind/g_indfun.ml4" 452 14321 14343
)
"plugins/funind/g_indfun.ml4" 452 14321 14361 "plugins/funind/g_indfun.ml4" 452 14321 14362
type(
  int
)
ident(
  int_ref i "plugins/funind/g_indfun.ml4" 452 14321 14332 "plugins/funind/g_indfun.ml4" 452 14321 14333
)
"plugins/funind/g_indfun.ml4" 452 14321 14363 "plugins/funind/g_indfun.ml4" 452 14321 14364
type(
  int
)
"plugins/funind/g_indfun.ml4" 452 14321 14361 "plugins/funind/g_indfun.ml4" 452 14321 14364
type(
  int
)
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/g_indfun.ml4" 452 14321 14349 "plugins/funind/g_indfun.ml4" 452 14321 14365
call(
  stack
)
type(
  fapp_info
)
"plugins/funind/g_indfun.ml4" 452 14321 14347 "plugins/funind/g_indfun.ml4" 452 14321 14367
type(
  fapp_info list
)
type(
  fapp_info list
)
"plugins/funind/g_indfun.ml4" 452 14321 14338 "plugins/funind/g_indfun.ml4" 452 14321 14367
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 453 14408 14414 "plugins/funind/g_indfun.ml4" 453 14408 14418
type(
  int option
)
"plugins/funind/g_indfun.ml4" 456 14545 14550 "plugins/funind/g_indfun.ml4" 456 14545 14558
type(
  fapp_info -> fapp_info -> int
)
"plugins/funind/g_indfun.ml4" 456 14545 14559 "plugins/funind/g_indfun.ml4" 456 14545 14560
type(
  fapp_info
)
ident(
  def x "plugins/funind/g_indfun.ml4" 456 14545 14561 "plugins/funind/g_indfun.ml4" 456 14545 14732
)
"plugins/funind/g_indfun.ml4" 456 14545 14561 "plugins/funind/g_indfun.ml4" 456 14545 14562
type(
  fapp_info
)
ident(
  def y "plugins/funind/g_indfun.ml4" 457 14565 14568 "plugins/funind/g_indfun.ml4" 457 14565 14732
)
"plugins/funind/g_indfun.ml4" 457 14565 14571 "plugins/funind/g_indfun.ml4" 457 14565 14572
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 456 14545 14559 "plugins/funind/g_indfun.ml4" 456 14545 14560
)
"plugins/funind/g_indfun.ml4" 457 14565 14571 "plugins/funind/g_indfun.ml4" 457 14565 14577
type(
  bool
)
"plugins/funind/g_indfun.ml4" 457 14565 14581 "plugins/funind/g_indfun.ml4" 457 14565 14582
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 456 14545 14559 "plugins/funind/g_indfun.ml4" 456 14545 14560
)
"plugins/funind/g_indfun.ml4" 457 14565 14581 "plugins/funind/g_indfun.ml4" 457 14565 14591
type(
  bool
)
"plugins/funind/g_indfun.ml4" 457 14565 14595 "plugins/funind/g_indfun.ml4" 457 14565 14596
type(
  fapp_info
)
ident(
  int_ref y "plugins/funind/g_indfun.ml4" 456 14545 14561 "plugins/funind/g_indfun.ml4" 456 14545 14562
)
"plugins/funind/g_indfun.ml4" 457 14565 14595 "plugins/funind/g_indfun.ml4" 457 14565 14601
type(
  bool
)
"plugins/funind/g_indfun.ml4" 457 14565 14605 "plugins/funind/g_indfun.ml4" 457 14565 14606
type(
  fapp_info
)
ident(
  int_ref y "plugins/funind/g_indfun.ml4" 456 14545 14561 "plugins/funind/g_indfun.ml4" 456 14545 14562
)
"plugins/funind/g_indfun.ml4" 457 14565 14605 "plugins/funind/g_indfun.ml4" 457 14565 14615
type(
  bool
)
"plugins/funind/g_indfun.ml4" 457 14565 14595 "plugins/funind/g_indfun.ml4" 457 14565 14615
type(
  bool
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 457 14565 14581 "plugins/funind/g_indfun.ml4" 457 14565 14615
type(
  bool
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 457 14565 14571 "plugins/funind/g_indfun.ml4" 457 14565 14615
type(
  bool
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 457 14565 14621 "plugins/funind/g_indfun.ml4" 457 14565 14622
type(
  int
)
"plugins/funind/g_indfun.ml4" 458 14644 14655 "plugins/funind/g_indfun.ml4" 458 14644 14656
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 456 14545 14559 "plugins/funind/g_indfun.ml4" 456 14545 14560
)
"plugins/funind/g_indfun.ml4" 458 14644 14655 "plugins/funind/g_indfun.ml4" 458 14644 14661
type(
  bool
)
"plugins/funind/g_indfun.ml4" 458 14644 14665 "plugins/funind/g_indfun.ml4" 458 14644 14666
type(
  fapp_info
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 456 14545 14559 "plugins/funind/g_indfun.ml4" 456 14545 14560
)
"plugins/funind/g_indfun.ml4" 458 14644 14665 "plugins/funind/g_indfun.ml4" 458 14644 14675
type(
  bool
)
"plugins/funind/g_indfun.ml4" 458 14644 14655 "plugins/funind/g_indfun.ml4" 458 14644 14675
type(
  bool
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 458 14644 14681 "plugins/funind/g_indfun.ml4" 458 14644 14683
type(
  int
)
"plugins/funind/g_indfun.ml4" 459 14684 14695 "plugins/funind/g_indfun.ml4" 459 14684 14696
type(
  fapp_info
)
ident(
  int_ref y "plugins/funind/g_indfun.ml4" 456 14545 14561 "plugins/funind/g_indfun.ml4" 456 14545 14562
)
"plugins/funind/g_indfun.ml4" 459 14684 14695 "plugins/funind/g_indfun.ml4" 459 14684 14701
type(
  bool
)
"plugins/funind/g_indfun.ml4" 459 14684 14705 "plugins/funind/g_indfun.ml4" 459 14684 14706
type(
  fapp_info
)
ident(
  int_ref y "plugins/funind/g_indfun.ml4" 456 14545 14561 "plugins/funind/g_indfun.ml4" 456 14545 14562
)
"plugins/funind/g_indfun.ml4" 459 14684 14705 "plugins/funind/g_indfun.ml4" 459 14684 14715
type(
  bool
)
"plugins/funind/g_indfun.ml4" 459 14684 14695 "plugins/funind/g_indfun.ml4" 459 14684 14715
type(
  bool
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 459 14684 14721 "plugins/funind/g_indfun.ml4" 459 14684 14722
type(
  int
)
"plugins/funind/g_indfun.ml4" 460 14723 14731 "plugins/funind/g_indfun.ml4" 460 14723 14732
type(
  int
)
"plugins/funind/g_indfun.ml4" 459 14684 14692 "plugins/funind/g_indfun.ml4" 459 14684 14732
type(
  int
)
"plugins/funind/g_indfun.ml4" 458 14644 14652 "plugins/funind/g_indfun.ml4" 458 14644 14732
type(
  int
)
"plugins/funind/g_indfun.ml4" 457 14565 14568 "plugins/funind/g_indfun.ml4" 457 14565 14732
type(
  int
)
"plugins/funind/g_indfun.ml4" 456 14545 14561 "plugins/funind/g_indfun.ml4" 456 14545 14732
type(
  fapp_info -> int
)
"plugins/funind/g_indfun.ml4" 456 14545 14559 "plugins/funind/g_indfun.ml4" 456 14545 14732
type(
  fapp_info -> fapp_info -> int
)
"plugins/funind/g_indfun.ml4" 462 14762 14763 "plugins/funind/g_indfun.ml4" 462 14762 14772
type(
  (fapp_info -> fapp_info -> int) -> fapp_info list -> fapp_info list
)
ident(
  ext_ref List.sort
)
"plugins/funind/g_indfun.ml4" 462 14762 14773 "plugins/funind/g_indfun.ml4" 462 14762 14781
type(
  fapp_info -> fapp_info -> int
)
ident(
  int_ref ordering "plugins/funind/g_indfun.ml4" 456 14545 14550 "plugins/funind/g_indfun.ml4" 456 14545 14558
)
"plugins/funind/g_indfun.ml4" 462 14762 14763 "plugins/funind/g_indfun.ml4" 462 14762 14781
call(
  tail
)
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 456 14545 14546 "plugins/funind/g_indfun.ml4" 456 14545 14781
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 451 14305 14307 "plugins/funind/g_indfun.ml4" 451 14305 14781
type(
  fapp_info list -> fapp_info list
)
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 450 14232 14252 "plugins/funind/g_indfun.ml4" 450 14232 14781
type(
  int option -> fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 467 14810 14828 "plugins/funind/g_indfun.ml4" 467 14810 14837
call(
  stack
)
call(
  stack
)
type(
  string option
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Names.identifier -> int option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 467 14810 14828 "plugins/funind/g_indfun.ml4" 467 14810 14837
)
type(
  (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_ident_gen
)
type(
  (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type ->
  Names.identifier -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Names.identifier
)
ident(
  def id "plugins/funind/g_indfun.ml4" 467 14810 14838 "plugins/funind/g_indfun.ml4" 467 14810 14853
)
"plugins/funind/g_indfun.ml4" 467 14810 14838 "plugins/funind/g_indfun.ml4" 467 14810 14853
call(
  stack
)
call(
  stack
)
type(
  string option
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  int option -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  int option
)
ident(
  int_ref oi "plugins/funind/g_indfun.ml4" 467 14810 14838 "plugins/funind/g_indfun.ml4" 467 14810 14853
)
type(
  (int option, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  (int, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_int
)
type(
  (int, Genarg.tlevel) Genarg.abstract_argument_type ->
  (int option, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (int option, Genarg.tlevel) Genarg.abstract_argument_type ->
  int option -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  int option
)
ident(
  def oi "plugins/funind/g_indfun.ml4" 466 14785 14785 "plugins/funind/g_indfun.ml4" 466 14785 15064
)
"plugins/funind/g_indfun.ml4" 469 14866 14873 "plugins/funind/g_indfun.ml4" 469 14866 14875
type(
  int option
)
ident(
  int_ref oi "plugins/funind/g_indfun.ml4" 467 14810 14838 "plugins/funind/g_indfun.ml4" 467 14810 15052
)
type(
  int option
)
ident(
  int_ref oi "plugins/funind/g_indfun.ml4" 467 14810 14838 "plugins/funind/g_indfun.ml4" 467 14810 14853
)
"plugins/funind/g_indfun.ml4" 470 14881 14891 "plugins/funind/g_indfun.ml4" 470 14881 14892
type(
  int
)
ident(
  def n "plugins/funind/g_indfun.ml4" 470 14881 14907 "plugins/funind/g_indfun.ml4" 470 14881 14950
)
type(
  int
)
ident(
  def n "plugins/funind/g_indfun.ml4" 470 14881 14907 "plugins/funind/g_indfun.ml4" 470 14881 14950
)
"plugins/funind/g_indfun.ml4" 470 14881 14886 "plugins/funind/g_indfun.ml4" 470 14881 14893
type(
  int option
)
type(
  int option
)
"plugins/funind/g_indfun.ml4" 470 14881 14899 "plugins/funind/g_indfun.ml4" 470 14881 14900
type(
  int
)
ident(
  int_ref n "plugins/funind/g_indfun.ml4" 470 14881 14891 "plugins/funind/g_indfun.ml4" 470 14881 14892
)
type(
  int
)
ident(
  int_ref n "plugins/funind/g_indfun.ml4" 470 14881 14891 "plugins/funind/g_indfun.ml4" 470 14881 14892
)
"plugins/funind/g_indfun.ml4" 470 14881 14902 "plugins/funind/g_indfun.ml4" 470 14881 14903
type(
  int
)
type(
  int
)
"plugins/funind/g_indfun.ml4" 470 14881 14899 "plugins/funind/g_indfun.ml4" 470 14881 14903
type(
  bool
)
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <= )
)
type(
  bool
)
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <= )
)
"plugins/funind/g_indfun.ml4" 470 14881 14907 "plugins/funind/g_indfun.ml4" 470 14881 14917
type(
  string -> Tacmach.tactic
)
ident(
  ext_ref Util.error
)
type(
  string -> Proof_type.tactic
)
ident(
  ext_ref Util.error
)
"plugins/funind/g_indfun.ml4" 470 14881 14918 "plugins/funind/g_indfun.ml4" 470 14881 14950
type(
  string
)
type(
  string
)
"plugins/funind/g_indfun.ml4" 470 14881 14907 "plugins/funind/g_indfun.ml4" 470 14881 14950
call(
  tail
)
call(
  stack
)
type(
  Tacmach.tactic
)
type(
  Tacmach.tactic
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 471 14951 14956 "plugins/funind/g_indfun.ml4" 471 14951 14957
type(
  int option
)
type(
  int option
)
"plugins/funind/g_indfun.ml4" 472 14961 14972 "plugins/funind/g_indfun.ml4" 472 14961 14981
type(
  fapp_info list -> fapp_info list
)
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 472 14961 14984 "plugins/funind/g_indfun.ml4" 472 14961 14999
type(
  int option -> fapp_info list -> fapp_info list
)
ident(
  int_ref chose_heuristic "plugins/funind/g_indfun.ml4" 450 14232 14236 "plugins/funind/g_indfun.ml4" 450 14232 14251
)
type(
  int option -> fapp_info list -> fapp_info list
)
ident(
  int_ref chose_heuristic "plugins/funind/g_indfun.ml4" 450 14232 14236 "plugins/funind/g_indfun.ml4" 450 14232 14251
)
"plugins/funind/g_indfun.ml4" 472 14961 15000 "plugins/funind/g_indfun.ml4" 472 14961 15002
type(
  int option
)
ident(
  int_ref oi "plugins/funind/g_indfun.ml4" 467 14810 14838 "plugins/funind/g_indfun.ml4" 467 14810 15052
)
type(
  int option
)
ident(
  int_ref oi "plugins/funind/g_indfun.ml4" 467 14810 14838 "plugins/funind/g_indfun.ml4" 467 14810 14853
)
"plugins/funind/g_indfun.ml4" 472 14961 14984 "plugins/funind/g_indfun.ml4" 472 14961 15002
call(
  stack
)
call(
  stack
)
type(
  fapp_info list -> fapp_info list
)
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 473 15006 15013 "plugins/funind/g_indfun.ml4" 473 15006 15023
type(
  Names.identifier option ->
  (fapp_info list -> fapp_info list) -> Proof_type.tactic -> Tacmach.tactic
)
ident(
  int_ref finduction "plugins/funind/g_indfun.ml4" 418 13017 13021 "plugins/funind/g_indfun.ml4" 418 13017 13031
)
type(
  Names.identifier option ->
  (fapp_info list -> fapp_info list) ->
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref finduction "plugins/funind/g_indfun.ml4" 418 13017 13021 "plugins/funind/g_indfun.ml4" 418 13017 13031
)
"plugins/funind/g_indfun.ml4" 473 15006 15030 "plugins/funind/g_indfun.ml4" 473 15006 15032
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 467 14810 14828 "plugins/funind/g_indfun.ml4" 467 14810 15052
)
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 467 14810 14828 "plugins/funind/g_indfun.ml4" 467 14810 14837
)
"plugins/funind/g_indfun.ml4" 473 15006 15025 "plugins/funind/g_indfun.ml4" 473 15006 15032
type(
  Names.identifier option
)
type(
  Names.identifier option
)
"plugins/funind/g_indfun.ml4" 473 15006 15034 "plugins/funind/g_indfun.ml4" 473 15006 15043
type(
  fapp_info list -> fapp_info list
)
ident(
  int_ref heuristic "plugins/funind/g_indfun.ml4" 472 14961 14972 "plugins/funind/g_indfun.ml4" 472 14961 14981
)
type(
  fapp_info list -> fapp_info list
)
ident(
  int_ref heuristic "plugins/funind/g_indfun.ml4" 472 14961 14972 "plugins/funind/g_indfun.ml4" 472 14961 14981
)
"plugins/funind/g_indfun.ml4" 473 15006 15044 "plugins/funind/g_indfun.ml4" 473 15006 15052
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/g_indfun.ml4" 473 15006 15013 "plugins/funind/g_indfun.ml4" 473 15006 15052
call(
  tail
)
call(
  stack
)
type(
  Tacmach.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 472 14961 14968 "plugins/funind/g_indfun.ml4" 472 14961 15052
type(
  Tacmach.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 469 14866 14867 "plugins/funind/g_indfun.ml4" 469 14866 15052
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals)
)
type(
  int * Pptactic.grammar_terminals
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  bool
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 467 14810 14838 "plugins/funind/g_indfun.ml4" 467 14810 15052
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  int option
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref oi "" -1 0 0 "" -1 0 0
)
type(
  (int option, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  (int, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_int
)
type(
  (int, Genarg.tlevel) Genarg.abstract_argument_type ->
  (int option, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_opt
)
type(
  (int option, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> int option
)
ident(
  ext_ref Genarg.out_gen
)
type(
  int option
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref oi "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 467 14810 14828 "plugins/funind/g_indfun.ml4" 467 14810 15052
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  Tacmach.tactic
)
type(
  Names.identifier
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref id "" -1 0 0 "" -1 0 0
)
type(
  (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_ident_gen
)
type(
  (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Names.identifier
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Names.identifier
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref id "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 466 14785 14785 "plugins/funind/g_indfun.ml4" 466 14785 15064
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
type(
  unit
)
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
  unit
)
ident(
  ext_ref Pptactic.declare_extra_tactic_pprule
)
type(
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
   unit) ->
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals))
  list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_tactic_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 466 14785 14785 "plugins/funind/g_indfun.ml4" 466 14785 15064
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 466 14785 14785 "plugins/funind/g_indfun.ml4" 466 14785 15064
)
type(
  unit
)
type(
  unit
)
type(
  string -> unit
)
type(
  unit
)
type(
  Genarg.glevel Genarg.generic_argument list
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 466 14785 14785 "plugins/funind/g_indfun.ml4" 466 14785 15064
)
type(
  (Genarg.rawconstr_and_expr,
   Genarg.rawconstr_and_expr * Pattern.constr_pattern,
   Names.evaluable_global_reference Genarg.and_short_name Rawterm.or_var,
   Names.inductive Rawterm.or_var,
   Nametab.ltac_constant Util.located Rawterm.or_var,
   Names.identifier Util.located, Tacexpr.glob_tactic_expr, Genarg.glevel)
  Tacexpr.gen_atomic_tactic_expr
)
type(
  Tacexpr.glob_tactic_expr
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 466 14785 14785 "plugins/funind/g_indfun.ml4" 466 14785 15064
)
type(
  string -> Tacexpr.glob_tactic_expr -> unit
)
ident(
  ext_ref Tacinterp.add_primitive_tactic
)
type(
  string
)
ident(
  def s "plugins/funind/g_indfun.ml4" 466 14785 14785 "plugins/funind/g_indfun.ml4" 466 14785 15064
)
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  Tacexpr.typed_generic_argument list -> Tacmach.tactic
)
type(
  string -> (Tacexpr.typed_generic_argument list -> Tacmach.tactic) -> unit
)
ident(
  ext_ref Tacinterp.add_tactic
)
type(
  unit
)
type(
  Proof_type.tactic
)
type(
  ?dflt:bool ->
  string ->
  Tacexpr.typed_generic_argument list ->
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Refiner.abstract_extended_tactic
)
type(
  Names.identifier -> int option -> Proof_type.tactic
)
ident(
  def h_finduction "plugins/funind/g_indfun.ml4" 466 14785 14785 --
)
"plugins/funind/g_indfun.ml4" 480 15088 15102 "plugins/funind/g_indfun.ml4" 480 15088 15113
type(
  string option
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  string
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  string
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 482 15126 15131 "plugins/funind/g_indfun.ml4" 482 15126 15140
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 482 15126 15143 "plugins/funind/g_indfun.ml4" 482 15126 15158
type(
  int option -> fapp_info list -> fapp_info list
)
ident(
  int_ref chose_heuristic "plugins/funind/g_indfun.ml4" 450 14232 14236 "plugins/funind/g_indfun.ml4" 450 14232 14251
)
"plugins/funind/g_indfun.ml4" 482 15126 15159 "plugins/funind/g_indfun.ml4" 482 15126 15163
type(
  int option
)
"plugins/funind/g_indfun.ml4" 482 15126 15143 "plugins/funind/g_indfun.ml4" 482 15126 15163
call(
  stack
)
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 483 15167 15168 "plugins/funind/g_indfun.ml4" 483 15167 15178
type(
  Names.identifier option ->
  (fapp_info list -> fapp_info list) -> Proof_type.tactic -> Tacmach.tactic
)
ident(
  int_ref finduction "plugins/funind/g_indfun.ml4" 418 13017 13021 "plugins/funind/g_indfun.ml4" 418 13017 13031
)
"plugins/funind/g_indfun.ml4" 483 15167 15179 "plugins/funind/g_indfun.ml4" 483 15167 15183
type(
  Names.identifier option
)
"plugins/funind/g_indfun.ml4" 483 15167 15184 "plugins/funind/g_indfun.ml4" 483 15167 15193
type(
  fapp_info list -> fapp_info list
)
ident(
  int_ref heuristic "plugins/funind/g_indfun.ml4" 482 15126 15131 "plugins/funind/g_indfun.ml4" 482 15126 15140
)
"plugins/funind/g_indfun.ml4" 483 15167 15195 "plugins/funind/g_indfun.ml4" 483 15167 15198
type(
  Tacexpr.glob_tactic_expr * Tacmach.tactic -> Tacmach.tactic
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/g_indfun.ml4" 483 15167 15199 "plugins/funind/g_indfun.ml4" 483 15167 15202
type(
  Tacexpr.glob_tactic_expr * Tacmach.tactic
)
ident(
  int_ref tac "plugins/funind/g_indfun.ml4" 480 15088 15102 "plugins/funind/g_indfun.ml4" 480 15088 15203
)
"plugins/funind/g_indfun.ml4" 483 15167 15195 "plugins/funind/g_indfun.ml4" 483 15167 15202
type(
  Tacmach.tactic
)
"plugins/funind/g_indfun.ml4" 483 15167 15168 "plugins/funind/g_indfun.ml4" 483 15167 15203
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/g_indfun.ml4" 482 15126 15127 "plugins/funind/g_indfun.ml4" 482 15126 15203
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals)
)
type(
  int * Pptactic.grammar_terminals
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 480 15088 15102 "plugins/funind/g_indfun.ml4" 480 15088 15203
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  Tacmach.tactic
)
type(
  Tacexpr.glob_tactic_expr * Tacmach.tactic
)
type(
  Tacmach.tactic
)
type(
  Tacexpr.glob_tactic_expr
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref tac "" -1 0 0 "" -1 0 0
)
type(
  (Tacexpr.glob_tactic_expr, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Extrawit.wit_tactic5
)
type(
  (Tacexpr.glob_tactic_expr, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Tacexpr.glob_tactic_expr
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Tacexpr.glob_tactic_expr -> Tacmach.tactic
)
ident(
  ext_ref Tacinterp.eval_tactic
)
type(
  Tacexpr.glob_tactic_expr
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref tac "" -1 0 0 "" -1 0 0
)
type(
  (Tacexpr.glob_tactic_expr, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Extrawit.wit_tactic5
)
type(
  (Tacexpr.glob_tactic_expr, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Tacexpr.glob_tactic_expr
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Tacexpr.glob_tactic_expr * Tacmach.tactic
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref tac "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 488 15243 15248 "plugins/funind/g_indfun.ml4" 488 15243 15257
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 488 15243 15260 "plugins/funind/g_indfun.ml4" 488 15243 15275
type(
  int option -> fapp_info list -> fapp_info list
)
ident(
  int_ref chose_heuristic "plugins/funind/g_indfun.ml4" 450 14232 14236 "plugins/funind/g_indfun.ml4" 450 14232 14251
)
"plugins/funind/g_indfun.ml4" 488 15243 15276 "plugins/funind/g_indfun.ml4" 488 15243 15280
type(
  int option
)
"plugins/funind/g_indfun.ml4" 488 15243 15260 "plugins/funind/g_indfun.ml4" 488 15243 15280
call(
  stack
)
type(
  fapp_info list -> fapp_info list
)
"plugins/funind/g_indfun.ml4" 489 15284 15285 "plugins/funind/g_indfun.ml4" 489 15284 15295
type(
  Names.identifier option ->
  (fapp_info list -> fapp_info list) -> Proof_type.tactic -> Tacmach.tactic
)
ident(
  int_ref finduction "plugins/funind/g_indfun.ml4" 418 13017 13021 "plugins/funind/g_indfun.ml4" 418 13017 13031
)
"plugins/funind/g_indfun.ml4" 489 15284 15296 "plugins/funind/g_indfun.ml4" 489 15284 15300
type(
  Names.identifier option
)
"plugins/funind/g_indfun.ml4" 489 15284 15301 "plugins/funind/g_indfun.ml4" 489 15284 15310
type(
  fapp_info list -> fapp_info list
)
ident(
  int_ref heuristic "plugins/funind/g_indfun.ml4" 488 15243 15248 "plugins/funind/g_indfun.ml4" 488 15243 15257
)
"plugins/funind/g_indfun.ml4" 489 15284 15311 "plugins/funind/g_indfun.ml4" 489 15284 15319
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/g_indfun.ml4" 489 15284 15285 "plugins/funind/g_indfun.ml4" 489 15284 15319
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/g_indfun.ml4" 488 15243 15244 "plugins/funind/g_indfun.ml4" 488 15243 15319
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals)
)
type(
  int * Pptactic.grammar_terminals
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  Tacmach.tactic
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 479 15068 15068 "plugins/funind/g_indfun.ml4" 479 15068 15332
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
type(
  unit
)
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
  unit
)
ident(
  ext_ref Pptactic.declare_extra_tactic_pprule
)
type(
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
   unit) ->
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals))
  list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_tactic_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 479 15068 15068 "plugins/funind/g_indfun.ml4" 479 15068 15332
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 479 15068 15068 "plugins/funind/g_indfun.ml4" 479 15068 15332
)
type(
  unit
)
type(
  unit
)
type(
  string -> unit
)
type(
  unit
)
type(
  Genarg.glevel Genarg.generic_argument list
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 479 15068 15068 "plugins/funind/g_indfun.ml4" 479 15068 15332
)
type(
  (Genarg.rawconstr_and_expr,
   Genarg.rawconstr_and_expr * Pattern.constr_pattern,
   Names.evaluable_global_reference Genarg.and_short_name Rawterm.or_var,
   Names.inductive Rawterm.or_var,
   Nametab.ltac_constant Util.located Rawterm.or_var,
   Names.identifier Util.located, Tacexpr.glob_tactic_expr, Genarg.glevel)
  Tacexpr.gen_atomic_tactic_expr
)
type(
  Tacexpr.glob_tactic_expr
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 479 15068 15068 "plugins/funind/g_indfun.ml4" 479 15068 15332
)
type(
  string -> Tacexpr.glob_tactic_expr -> unit
)
ident(
  ext_ref Tacinterp.add_primitive_tactic
)
type(
  string
)
ident(
  def s "plugins/funind/g_indfun.ml4" 479 15068 15068 "plugins/funind/g_indfun.ml4" 479 15068 15332
)
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  Tacexpr.typed_generic_argument list -> Tacmach.tactic
)
type(
  string -> (Tacexpr.typed_generic_argument list -> Tacmach.tactic) -> unit
)
ident(
  ext_ref Tacinterp.add_tactic
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 496 15355 15367 "plugins/funind/g_indfun.ml4" 496 15355 15375
call(
  stack
)
call(
  stack
)
type(
  string option
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Names.identifier -> Term.types -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 496 15355 15367 "plugins/funind/g_indfun.ml4" 496 15355 15375
)
type(
  (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_ident_gen
)
type(
  (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type ->
  Names.identifier -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Names.identifier
)
ident(
  def x "plugins/funind/g_indfun.ml4" 496 15355 15376 "plugins/funind/g_indfun.ml4" 496 15355 15385
)
"plugins/funind/g_indfun.ml4" 496 15355 15376 "plugins/funind/g_indfun.ml4" 496 15355 15385
call(
  stack
)
type(
  string option
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Term.types -> Proof_type.tactic
)
type(
  Tacexpr.typed_generic_argument
)
type(
  Term.types
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 496 15355 15376 "plugins/funind/g_indfun.ml4" 496 15355 15385
)
type(
  (Term.types, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_constr
)
type(
  (Term.types, Genarg.tlevel) Genarg.abstract_argument_type ->
  Term.types -> Tacexpr.typed_generic_argument
)
ident(
  ext_ref Genarg.in_gen
)
type(
  Tacexpr.typed_generic_argument list
)
type(
  Term.types
)
ident(
  def c "plugins/funind/g_indfun.ml4" 495 15335 15335 "plugins/funind/g_indfun.ml4" 495 15335 15414
)
"plugins/funind/g_indfun.ml4" 497 15391 15399 "plugins/funind/g_indfun.ml4" 497 15391 15404
type(
  Names.identifier -> Term.types -> Tacmach.tactic
)
ident(
  int_ref poseq "plugins/funind/g_indfun.ml4" 366 11262 11266 "plugins/funind/g_indfun.ml4" 366 11262 11271
)
type(
  Names.identifier -> Term.types -> Proof_type.tactic
)
ident(
  int_ref poseq "plugins/funind/g_indfun.ml4" 366 11262 11266 "plugins/funind/g_indfun.ml4" 366 11262 11271
)
"plugins/funind/g_indfun.ml4" 497 15391 15405 "plugins/funind/g_indfun.ml4" 497 15391 15406
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 496 15355 15367 "plugins/funind/g_indfun.ml4" 496 15355 15408
)
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 496 15355 15367 "plugins/funind/g_indfun.ml4" 496 15355 15375
)
"plugins/funind/g_indfun.ml4" 497 15391 15407 "plugins/funind/g_indfun.ml4" 497 15391 15408
type(
  Term.types
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 496 15355 15376 "plugins/funind/g_indfun.ml4" 496 15355 15408
)
type(
  Term.types
)
ident(
  int_ref c "plugins/funind/g_indfun.ml4" 496 15355 15376 "plugins/funind/g_indfun.ml4" 496 15355 15385
)
"plugins/funind/g_indfun.ml4" 497 15391 15399 "plugins/funind/g_indfun.ml4" 497 15391 15408
call(
  tail
)
call(
  stack
)
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals)
)
type(
  int * Pptactic.grammar_terminals
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  bool
)
type(
  Proof_type.tactic
)
"plugins/funind/g_indfun.ml4" 496 15355 15376 "plugins/funind/g_indfun.ml4" 496 15355 15408
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  Term.constr
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref c "" -1 0 0 "" -1 0 0
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_constr
)
type(
  (Term.constr, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Term.constr
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Term.constr
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref c "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 496 15355 15367 "plugins/funind/g_indfun.ml4" 496 15355 15408
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  Genarg.argument_type list
)
type(
  Tacmach.tactic
)
type(
  Tacmach.tactic
)
type(
  Names.identifier
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref x "" -1 0 0 "" -1 0 0
)
type(
  (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_ident_gen
)
type(
  (Names.identifier, Genarg.tlevel) Genarg.abstract_argument_type ->
  Tacexpr.typed_generic_argument -> Names.identifier
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Names.identifier
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.typed_generic_argument
)
ident(
  int_ref x "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.typed_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 495 15335 15335 "plugins/funind/g_indfun.ml4" 495 15335 15414
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
type(
  unit
)
type(
  string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
  unit
)
ident(
  ext_ref Pptactic.declare_extra_tactic_pprule
)
type(
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals) ->
   unit) ->
  (string * Genarg.argument_type list * (int * Pptactic.grammar_terminals))
  list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_tactic_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 495 15335 15335 "plugins/funind/g_indfun.ml4" 495 15335 15414
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 495 15335 15335 "plugins/funind/g_indfun.ml4" 495 15335 15414
)
type(
  unit
)
type(
  unit
)
type(
  string -> unit
)
type(
  unit
)
type(
  Genarg.glevel Genarg.generic_argument list
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 495 15335 15335 "plugins/funind/g_indfun.ml4" 495 15335 15414
)
type(
  (Genarg.rawconstr_and_expr,
   Genarg.rawconstr_and_expr * Pattern.constr_pattern,
   Names.evaluable_global_reference Genarg.and_short_name Rawterm.or_var,
   Names.inductive Rawterm.or_var,
   Nametab.ltac_constant Util.located Rawterm.or_var,
   Names.identifier Util.located, Tacexpr.glob_tactic_expr, Genarg.glevel)
  Tacexpr.gen_atomic_tactic_expr
)
type(
  Tacexpr.glob_tactic_expr
)
type(
  string
)
ident(
  int_ref s "plugins/funind/g_indfun.ml4" 495 15335 15335 "plugins/funind/g_indfun.ml4" 495 15335 15414
)
type(
  string -> Tacexpr.glob_tactic_expr -> unit
)
ident(
  ext_ref Tacinterp.add_primitive_tactic
)
type(
  string
)
ident(
  def s "plugins/funind/g_indfun.ml4" 495 15335 15335 "plugins/funind/g_indfun.ml4" 495 15335 15414
)
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
type(
  unit
)
type(
  Tacexpr.typed_generic_argument list -> Tacmach.tactic
)
type(
  string -> (Tacexpr.typed_generic_argument list -> Tacmach.tactic) -> unit
)
ident(
  ext_ref Tacinterp.add_tactic
)
type(
  unit
)
type(
  Proof_type.tactic
)
type(
  ?dflt:bool ->
  string ->
  Tacexpr.typed_generic_argument list ->
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Refiner.abstract_extended_tactic
)
type(
  Names.identifier -> Term.types -> Proof_type.tactic
)
ident(
  def h_poseq "plugins/funind/g_indfun.ml4" 495 15335 15335 --
)
"plugins/funind/g_indfun.ml4" 501 15450 15468 "plugins/funind/g_indfun.ml4" 501 15450 15476
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 501 15450 15484 "plugins/funind/g_indfun.ml4" 501 15450 15497
type(
  Names.identifier -> unit
)
ident(
  ext_ref Merge.showind
)
"plugins/funind/g_indfun.ml4" 501 15450 15498 "plugins/funind/g_indfun.ml4" 501 15450 15499
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/g_indfun.ml4" 501 15450 15452 "plugins/funind/g_indfun.ml4" 501 15450 15501
)
"plugins/funind/g_indfun.ml4" 501 15450 15484 "plugins/funind/g_indfun.ml4" 501 15450 15499
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 501 15450 15452 "plugins/funind/g_indfun.ml4" 501 15450 15501
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit
)
type(
  Names.identifier
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref x "" -1 0 0 "" -1 0 0
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument -> Names.identifier
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Names.identifier
)
type(
  bool
)
type(
  bool
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref x "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 500 15416 15416 "plugins/funind/g_indfun.ml4" 500 15416 15505
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_vernac_command_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 500 15416 15416 "plugins/funind/g_indfun.ml4" 500 15416 15505
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 500 15416 15416 "plugins/funind/g_indfun.ml4" 500 15416 15505
)
type(
  unit
)
type(
  Tacexpr.raw_generic_argument list -> unit -> unit
)
type(
  string -> (Tacexpr.raw_generic_argument list -> unit -> unit) -> unit
)
ident(
  ext_ref Vernacinterp.vinterp_add
)
"plugins/funind/g_indfun.ml4" 505 15541 15564 "plugins/funind/g_indfun.ml4" 505 15541 15574
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 505 15541 15575 "plugins/funind/g_indfun.ml4" 505 15541 15593
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 506 15598 15615 "plugins/funind/g_indfun.ml4" 506 15598 15625
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 506 15598 15626 "plugins/funind/g_indfun.ml4" 506 15598 15644
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 506 15598 15658 "plugins/funind/g_indfun.ml4" 506 15598 15667
type(
  Genarg.argument_type
)
type(
  Egrammar.grammar_prod_item
)
type(
  Genarg.argument_type
)
"plugins/funind/g_indfun.ml4" 508 15680 15691 "plugins/funind/g_indfun.ml4" 508 15680 15693
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 508 15680 15696 "plugins/funind/g_indfun.ml4" 508 15680 15722
type(
  Evd.evar_map -> Environ.env -> Topconstr.constr_expr -> Term.constr
)
ident(
  ext_ref Constrintern.interp_constr
)
"plugins/funind/g_indfun.ml4" 508 15680 15723 "plugins/funind/g_indfun.ml4" 508 15680 15732
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/g_indfun.ml4" 508 15680 15734 "plugins/funind/g_indfun.ml4" 508 15680 15744
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/g_indfun.ml4" 508 15680 15744 "plugins/funind/g_indfun.ml4" 508 15680 15746
type(
  unit
)
"plugins/funind/g_indfun.ml4" 508 15680 15734 "plugins/funind/g_indfun.ml4" 508 15680 15746
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/g_indfun.ml4" 509 15748 15773 "plugins/funind/g_indfun.ml4" 509 15748 15787
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/g_indfun.ml4" 509 15748 15788 "plugins/funind/g_indfun.ml4" 509 15748 15791
type(
  Names.identifier
)
ident(
  int_ref id1 "plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
)
"plugins/funind/g_indfun.ml4" 509 15748 15757 "plugins/funind/g_indfun.ml4" 509 15748 15792
type(
  Names.identifier Util.located
)
type(
  Libnames.reference
)
"plugins/funind/g_indfun.ml4" 509 15748 15751 "plugins/funind/g_indfun.ml4" 509 15748 15793
type(
  Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 508 15680 15696 "plugins/funind/g_indfun.ml4" 508 15680 15794
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 510 15798 15809 "plugins/funind/g_indfun.ml4" 510 15798 15811
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 510 15798 15814 "plugins/funind/g_indfun.ml4" 510 15798 15840
type(
  Evd.evar_map -> Environ.env -> Topconstr.constr_expr -> Term.constr
)
ident(
  ext_ref Constrintern.interp_constr
)
"plugins/funind/g_indfun.ml4" 510 15798 15841 "plugins/funind/g_indfun.ml4" 510 15798 15850
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/g_indfun.ml4" 510 15798 15852 "plugins/funind/g_indfun.ml4" 510 15798 15862
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/g_indfun.ml4" 510 15798 15862 "plugins/funind/g_indfun.ml4" 510 15798 15864
type(
  unit
)
"plugins/funind/g_indfun.ml4" 510 15798 15852 "plugins/funind/g_indfun.ml4" 510 15798 15864
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/g_indfun.ml4" 511 15866 15891 "plugins/funind/g_indfun.ml4" 511 15866 15905
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/g_indfun.ml4" 511 15866 15906 "plugins/funind/g_indfun.ml4" 511 15866 15909
type(
  Names.identifier
)
ident(
  int_ref id2 "plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
)
"plugins/funind/g_indfun.ml4" 511 15866 15875 "plugins/funind/g_indfun.ml4" 511 15866 15910
type(
  Names.identifier Util.located
)
type(
  Libnames.reference
)
"plugins/funind/g_indfun.ml4" 511 15866 15869 "plugins/funind/g_indfun.ml4" 511 15866 15911
type(
  Topconstr.constr_expr
)
"plugins/funind/g_indfun.ml4" 510 15798 15814 "plugins/funind/g_indfun.ml4" 510 15798 15912
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/g_indfun.ml4" 512 15916 15927 "plugins/funind/g_indfun.ml4" 512 15916 15933
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 512 15916 15936 "plugins/funind/g_indfun.ml4" 512 15916 15950
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.types
)
ident(
  ext_ref Typing.type_of
)
"plugins/funind/g_indfun.ml4" 512 15916 15952 "plugins/funind/g_indfun.ml4" 512 15916 15962
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/g_indfun.ml4" 512 15916 15962 "plugins/funind/g_indfun.ml4" 512 15916 15964
type(
  unit
)
"plugins/funind/g_indfun.ml4" 512 15916 15952 "plugins/funind/g_indfun.ml4" 512 15916 15964
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/g_indfun.ml4" 512 15916 15966 "plugins/funind/g_indfun.ml4" 512 15916 15975
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/g_indfun.ml4" 512 15916 15976 "plugins/funind/g_indfun.ml4" 512 15916 15978
type(
  Term.constr
)
ident(
  int_ref f1 "plugins/funind/g_indfun.ml4" 508 15680 15691 "plugins/funind/g_indfun.ml4" 508 15680 15693
)
"plugins/funind/g_indfun.ml4" 512 15916 15936 "plugins/funind/g_indfun.ml4" 512 15916 15978
call(
  stack
)
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 513 15982 15993 "plugins/funind/g_indfun.ml4" 513 15982 15999
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 513 15982 16002 "plugins/funind/g_indfun.ml4" 513 15982 16016
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.types
)
ident(
  ext_ref Typing.type_of
)
"plugins/funind/g_indfun.ml4" 513 15982 16018 "plugins/funind/g_indfun.ml4" 513 15982 16028
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/g_indfun.ml4" 513 15982 16028 "plugins/funind/g_indfun.ml4" 513 15982 16030
type(
  unit
)
"plugins/funind/g_indfun.ml4" 513 15982 16018 "plugins/funind/g_indfun.ml4" 513 15982 16030
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/g_indfun.ml4" 513 15982 16032 "plugins/funind/g_indfun.ml4" 513 15982 16041
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/g_indfun.ml4" 513 15982 16042 "plugins/funind/g_indfun.ml4" 513 15982 16044
type(
  Term.constr
)
ident(
  int_ref f2 "plugins/funind/g_indfun.ml4" 510 15798 15809 "plugins/funind/g_indfun.ml4" 510 15798 15811
)
"plugins/funind/g_indfun.ml4" 513 15982 16002 "plugins/funind/g_indfun.ml4" 513 15982 16044
call(
  stack
)
type(
  Term.types
)
"plugins/funind/g_indfun.ml4" 514 16048 16059 "plugins/funind/g_indfun.ml4" 514 16048 16062
type(
  int
)
"plugins/funind/g_indfun.ml4" 514 16048 16065 "plugins/funind/g_indfun.ml4" 514 16048 16076
type(
  (Names.name * Term.constr) list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/g_indfun.ml4" 514 16048 16078 "plugins/funind/g_indfun.ml4" 514 16048 16081
type(
  (Names.name * Term.constr) list * Term.constr ->
  (Names.name * Term.constr) list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/g_indfun.ml4" 514 16048 16083 "plugins/funind/g_indfun.ml4" 514 16048 16097
type(
  Term.types -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_prod
)
"plugins/funind/g_indfun.ml4" 514 16048 16098 "plugins/funind/g_indfun.ml4" 514 16048 16104
type(
  Term.types
)
ident(
  int_ref f1type "plugins/funind/g_indfun.ml4" 512 15916 15927 "plugins/funind/g_indfun.ml4" 512 15916 15933
)
"plugins/funind/g_indfun.ml4" 514 16048 16083 "plugins/funind/g_indfun.ml4" 514 16048 16104
call(
  stack
)
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/g_indfun.ml4" 514 16048 16078 "plugins/funind/g_indfun.ml4" 514 16048 16105
type(
  (Names.name * Term.constr) list
)
"plugins/funind/g_indfun.ml4" 514 16048 16065 "plugins/funind/g_indfun.ml4" 514 16048 16106
call(
  stack
)
type(
  int
)
"plugins/funind/g_indfun.ml4" 515 16110 16121 "plugins/funind/g_indfun.ml4" 515 16110 16124
type(
  int
)
"plugins/funind/g_indfun.ml4" 515 16110 16127 "plugins/funind/g_indfun.ml4" 515 16110 16138
type(
  (Names.name * Term.constr) list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/g_indfun.ml4" 515 16110 16140 "plugins/funind/g_indfun.ml4" 515 16110 16143
type(
  (Names.name * Term.constr) list * Term.constr ->
  (Names.name * Term.constr) list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/g_indfun.ml4" 515 16110 16145 "plugins/funind/g_indfun.ml4" 515 16110 16159
type(
  Term.types -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_prod
)
"plugins/funind/g_indfun.ml4" 515 16110 16160 "plugins/funind/g_indfun.ml4" 515 16110 16166
type(
  Term.types
)
ident(
  int_ref f2type "plugins/funind/g_indfun.ml4" 513 15982 15993 "plugins/funind/g_indfun.ml4" 513 15982 15999
)
"plugins/funind/g_indfun.ml4" 515 16110 16145 "plugins/funind/g_indfun.ml4" 515 16110 16166
call(
  stack
)
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/g_indfun.ml4" 515 16110 16140 "plugins/funind/g_indfun.ml4" 515 16110 16167
type(
  (Names.name * Term.constr) list
)
"plugins/funind/g_indfun.ml4" 515 16110 16127 "plugins/funind/g_indfun.ml4" 515 16110 16168
call(
  stack
)
type(
  int
)
"plugins/funind/g_indfun.ml4" 516 16172 16183 "plugins/funind/g_indfun.ml4" 516 16172 16184
type(
  unit
)
"plugins/funind/g_indfun.ml4" 517 16187 16192 "plugins/funind/g_indfun.ml4" 517 16187 16195
type(
  int
)
ident(
  int_ref ar1 "plugins/funind/g_indfun.ml4" 514 16048 16059 "plugins/funind/g_indfun.ml4" 514 16048 16062
)
"plugins/funind/g_indfun.ml4" 517 16187 16199 "plugins/funind/g_indfun.ml4" 517 16187 16210
type(
  Names.identifier list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/g_indfun.ml4" 517 16187 16211 "plugins/funind/g_indfun.ml4" 517 16187 16214
type(
  Names.identifier list
)
ident(
  int_ref cl1 "plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
)
"plugins/funind/g_indfun.ml4" 517 16187 16199 "plugins/funind/g_indfun.ml4" 517 16187 16214
call(
  stack
)
type(
  int
)
"plugins/funind/g_indfun.ml4" 517 16187 16192 "plugins/funind/g_indfun.ml4" 517 16187 16214
type(
  bool
)
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"plugins/funind/g_indfun.ml4" 518 16220 16224 "plugins/funind/g_indfun.ml4" 518 16220 16234
type(
  string -> unit
)
ident(
  ext_ref Util.error
)
"plugins/funind/g_indfun.ml4" 518 16220 16236 "plugins/funind/g_indfun.ml4" 518 16220 16276
type(
  string
)
"plugins/funind/g_indfun.ml4" 518 16220 16279 "plugins/funind/g_indfun.ml4" 518 16220 16291
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/g_indfun.ml4" 518 16220 16292 "plugins/funind/g_indfun.ml4" 518 16220 16295
type(
  Names.identifier
)
ident(
  int_ref id1 "plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
)
"plugins/funind/g_indfun.ml4" 518 16220 16279 "plugins/funind/g_indfun.ml4" 518 16220 16295
call(
  stack
)
type(
  string
)
"plugins/funind/g_indfun.ml4" 518 16220 16236 "plugins/funind/g_indfun.ml4" 518 16220 16295
call(
  stack
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/g_indfun.ml4" 518 16220 16224 "plugins/funind/g_indfun.ml4" 518 16220 16296
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 517 16187 16189 "plugins/funind/g_indfun.ml4" 517 16187 16296
type(
  unit
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 519 16300 16311 "plugins/funind/g_indfun.ml4" 519 16300 16312
type(
  unit
)
"plugins/funind/g_indfun.ml4" 520 16315 16320 "plugins/funind/g_indfun.ml4" 520 16315 16323
type(
  int
)
ident(
  int_ref ar2 "plugins/funind/g_indfun.ml4" 515 16110 16121 "plugins/funind/g_indfun.ml4" 515 16110 16124
)
"plugins/funind/g_indfun.ml4" 520 16315 16327 "plugins/funind/g_indfun.ml4" 520 16315 16338
type(
  Names.identifier list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/g_indfun.ml4" 520 16315 16339 "plugins/funind/g_indfun.ml4" 520 16315 16342
type(
  Names.identifier list
)
ident(
  int_ref cl2 "plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
)
"plugins/funind/g_indfun.ml4" 520 16315 16327 "plugins/funind/g_indfun.ml4" 520 16315 16342
call(
  stack
)
type(
  int
)
"plugins/funind/g_indfun.ml4" 520 16315 16320 "plugins/funind/g_indfun.ml4" 520 16315 16342
type(
  bool
)
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"plugins/funind/g_indfun.ml4" 521 16348 16352 "plugins/funind/g_indfun.ml4" 521 16348 16362
type(
  string -> unit
)
ident(
  ext_ref Util.error
)
"plugins/funind/g_indfun.ml4" 521 16348 16364 "plugins/funind/g_indfun.ml4" 521 16348 16404
type(
  string
)
"plugins/funind/g_indfun.ml4" 521 16348 16407 "plugins/funind/g_indfun.ml4" 521 16348 16419
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/g_indfun.ml4" 521 16348 16420 "plugins/funind/g_indfun.ml4" 521 16348 16423
type(
  Names.identifier
)
ident(
  int_ref id2 "plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
)
"plugins/funind/g_indfun.ml4" 521 16348 16407 "plugins/funind/g_indfun.ml4" 521 16348 16423
call(
  stack
)
type(
  string
)
"plugins/funind/g_indfun.ml4" 521 16348 16364 "plugins/funind/g_indfun.ml4" 521 16348 16423
call(
  stack
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/g_indfun.ml4" 521 16348 16352 "plugins/funind/g_indfun.ml4" 521 16348 16424
call(
  stack
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 520 16315 16317 "plugins/funind/g_indfun.ml4" 520 16315 16424
type(
  unit
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 522 16428 16435 "plugins/funind/g_indfun.ml4" 522 16428 16446
type(
  Names.identifier ->
  Names.identifier ->
  Names.identifier array ->
  Names.identifier array -> Names.identifier -> unit
)
ident(
  ext_ref Merge.merge
)
"plugins/funind/g_indfun.ml4" 522 16428 16447 "plugins/funind/g_indfun.ml4" 522 16428 16450
type(
  Names.identifier
)
ident(
  int_ref id1 "plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
)
"plugins/funind/g_indfun.ml4" 522 16428 16451 "plugins/funind/g_indfun.ml4" 522 16428 16454
type(
  Names.identifier
)
ident(
  int_ref id2 "plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
)
"plugins/funind/g_indfun.ml4" 522 16428 16456 "plugins/funind/g_indfun.ml4" 522 16428 16469
type(
  Names.identifier list -> Names.identifier array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/g_indfun.ml4" 522 16428 16470 "plugins/funind/g_indfun.ml4" 522 16428 16473
type(
  Names.identifier list
)
ident(
  int_ref cl1 "plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
)
"plugins/funind/g_indfun.ml4" 522 16428 16456 "plugins/funind/g_indfun.ml4" 522 16428 16473
call(
  stack
)
type(
  Names.identifier array
)
"plugins/funind/g_indfun.ml4" 522 16428 16476 "plugins/funind/g_indfun.ml4" 522 16428 16489
type(
  Names.identifier list -> Names.identifier array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/g_indfun.ml4" 522 16428 16490 "plugins/funind/g_indfun.ml4" 522 16428 16493
type(
  Names.identifier list
)
ident(
  int_ref cl2 "plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
)
"plugins/funind/g_indfun.ml4" 522 16428 16476 "plugins/funind/g_indfun.ml4" 522 16428 16493
call(
  stack
)
type(
  Names.identifier array
)
"plugins/funind/g_indfun.ml4" 522 16428 16496 "plugins/funind/g_indfun.ml4" 522 16428 16498
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
)
"plugins/funind/g_indfun.ml4" 522 16428 16435 "plugins/funind/g_indfun.ml4" 522 16428 16498
call(
  tail
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 519 16300 16307 "plugins/funind/g_indfun.ml4" 519 16300 16498
type(
  unit
)
"plugins/funind/g_indfun.ml4" 516 16172 16179 "plugins/funind/g_indfun.ml4" 516 16172 16498
type(
  unit
)
"plugins/funind/g_indfun.ml4" 515 16110 16117 "plugins/funind/g_indfun.ml4" 515 16110 16498
type(
  unit
)
"plugins/funind/g_indfun.ml4" 514 16048 16055 "plugins/funind/g_indfun.ml4" 514 16048 16498
type(
  unit
)
"plugins/funind/g_indfun.ml4" 513 15982 15989 "plugins/funind/g_indfun.ml4" 513 15982 16498
type(
  unit
)
"plugins/funind/g_indfun.ml4" 512 15916 15923 "plugins/funind/g_indfun.ml4" 512 15916 16498
type(
  unit
)
"plugins/funind/g_indfun.ml4" 510 15798 15805 "plugins/funind/g_indfun.ml4" 510 15798 16498
type(
  unit
)
"plugins/funind/g_indfun.ml4" 508 15680 15687 "plugins/funind/g_indfun.ml4" 508 15680 16498
type(
  unit
)
"plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
"plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
"plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
call(
  stack
)
call(
  stack
)
call(
  stack
)
"plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
call(
  stack
)
call(
  stack
)
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit -> unit
)
"plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
type(
  unit -> unit
)
type(
  unit -> unit
)
type(
  unit -> unit
)
"plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
type(
  unit -> unit
)
type(
  unit
)
"plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
type(
  Names.identifier
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref id "" -1 0 0 "" -1 0 0
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument -> Names.identifier
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Names.identifier
)
type(
  Names.identifier list
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref cl2 "" -1 0 0 "" -1 0 0
)
type(
  (Names.identifier list, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  (Names.identifier list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list1
)
type(
  (Names.identifier list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument -> Names.identifier list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Names.identifier list
)
type(
  Names.identifier
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref id2 "" -1 0 0 "" -1 0 0
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument -> Names.identifier
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Names.identifier
)
"plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
type(
  Names.identifier list
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref cl1 "" -1 0 0 "" -1 0 0
)
type(
  (Names.identifier list, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  (Names.identifier list, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.wit_list1
)
type(
  (Names.identifier list, Genarg.rlevel) Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument -> Names.identifier list
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Names.identifier list
)
type(
  Names.identifier
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref id1 "" -1 0 0 "" -1 0 0
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
type(
  bool -> (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type
)
ident(
  ext_ref Genarg.rawwit_ident_gen
)
type(
  (Names.identifier, Genarg.rlevel) Genarg.abstract_argument_type ->
  Tacexpr.raw_generic_argument -> Names.identifier
)
ident(
  ext_ref Genarg.out_gen
)
type(
  Names.identifier
)
type(
  bool
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
type(
  bool
)
type(
  bool
)
type(
  bool
)
"plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
type(
  bool
)
"plugins/funind/g_indfun.ml4" 506 15598 15543 "plugins/funind/g_indfun.ml4" 506 15598 16505
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref id "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref cl2 "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref id2 "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 505 15541 15543 "plugins/funind/g_indfun.ml4" 505 15541 16505
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref cl1 "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
type(
  bool
)
type(
  Genarg.argument_type
)
type(
  Tacexpr.raw_generic_argument
)
ident(
  int_ref id1 "" -1 0 0 "" -1 0 0
)
type(
  Tacexpr.raw_generic_argument -> Genarg.argument_type
)
ident(
  ext_ref Genarg.genarg_tag
)
type(
  Genarg.argument_type -> Genarg.argument_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/g_indfun.ml4" 504 15507 15507 "plugins/funind/g_indfun.ml4" 504 15507 16509
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  unit
)
type(
  string -> Egrammar.grammar_prod_item list list -> unit
)
ident(
  ext_ref Egrammar.extend_vernac_command_grammar
)
type(
  unit
)
type(
  unit
)
type(
  Pp.std_ppcmds
)
type(
  exn
)
ident(
  int_ref e "plugins/funind/g_indfun.ml4" 504 15507 15507 "plugins/funind/g_indfun.ml4" 504 15507 16509
)
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.pp
)
type(
  exn
)
ident(
  def e "plugins/funind/g_indfun.ml4" 504 15507 15507 "plugins/funind/g_indfun.ml4" 504 15507 16509
)
type(
  unit
)
type(
  Tacexpr.raw_generic_argument list -> unit -> unit
)
type(
  string -> (Tacexpr.raw_generic_argument list -> unit -> unit) -> unit
)
ident(
  ext_ref Vernacinterp.vinterp_add
)
