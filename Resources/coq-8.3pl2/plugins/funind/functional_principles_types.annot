"plugins/funind/functional_principles_types.ml" 23 313 317 "plugins/funind/functional_principles_types.ml" 23 313 331
type(
  Tactics.elim_scheme -> Pp.std_ppcmds
)
ident(
  def pr_elim_scheme "plugins/funind/functional_principles_types.ml" 36 1000 1000 --
)
"plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
type(
  Tactics.elim_scheme
)
ident(
  def el "plugins/funind/functional_principles_types.ml" 24 337 339 "plugins/funind/functional_principles_types.ml" 33 932 997
)
"plugins/funind/functional_principles_types.ml" 24 337 343 "plugins/funind/functional_principles_types.ml" 24 337 346
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 24 337 349 "plugins/funind/functional_principles_types.ml" 24 337 359
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_types.ml" 24 337 360 "plugins/funind/functional_principles_types.ml" 24 337 362
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 24 337 349 "plugins/funind/functional_principles_types.ml" 24 337 362
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 25 366 372 "plugins/funind/functional_principles_types.ml" 25 366 375
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 25 366 378 "plugins/funind/functional_principles_types.ml" 25 366 381
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 25 366 382 "plugins/funind/functional_principles_types.ml" 25 366 394
type(
  string
)
"plugins/funind/functional_principles_types.ml" 25 366 378 "plugins/funind/functional_principles_types.ml" 25 366 394
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 25 366 395 "plugins/funind/functional_principles_types.ml" 25 366 397
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 25 366 398 "plugins/funind/functional_principles_types.ml" 25 366 420
type(
  Environ.env -> Term.rel_context -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_rel_context
)
"plugins/funind/functional_principles_types.ml" 25 366 421 "plugins/funind/functional_principles_types.ml" 25 366 424
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 24 337 343 "plugins/funind/functional_principles_types.ml" 24 337 346
)
"plugins/funind/functional_principles_types.ml" 25 366 425 "plugins/funind/functional_principles_types.ml" 25 366 427
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
)
"plugins/funind/functional_principles_types.ml" 25 366 425 "plugins/funind/functional_principles_types.ml" 25 366 434
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 25 366 398 "plugins/funind/functional_principles_types.ml" 25 366 434
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 25 366 378 "plugins/funind/functional_principles_types.ml" 25 366 434
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 26 438 444 "plugins/funind/functional_principles_types.ml" 26 438 447
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 26 438 450 "plugins/funind/functional_principles_types.ml" 26 438 474
type(
  Term.rel_context -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel_context
)
"plugins/funind/functional_principles_types.ml" 26 438 475 "plugins/funind/functional_principles_types.ml" 26 438 477
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
)
"plugins/funind/functional_principles_types.ml" 26 438 475 "plugins/funind/functional_principles_types.ml" 26 438 484
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 26 438 485 "plugins/funind/functional_principles_types.ml" 26 438 488
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 24 337 343 "plugins/funind/functional_principles_types.ml" 24 337 346
)
"plugins/funind/functional_principles_types.ml" 26 438 450 "plugins/funind/functional_principles_types.ml" 26 438 488
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 27 492 498 "plugins/funind/functional_principles_types.ml" 27 492 501
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 27 492 504 "plugins/funind/functional_principles_types.ml" 27 492 507
type(
  Pp.std_ppcmds
)
ident(
  int_ref msg "plugins/funind/functional_principles_types.ml" 25 366 372 "plugins/funind/functional_principles_types.ml" 25 366 375
)
"plugins/funind/functional_principles_types.ml" 27 492 508 "plugins/funind/functional_principles_types.ml" 27 492 510
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 27 492 511 "plugins/funind/functional_principles_types.ml" 27 492 514
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 27 492 515 "plugins/funind/functional_principles_types.ml" 27 492 517
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 27 492 511 "plugins/funind/functional_principles_types.ml" 27 492 517
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 27 492 504 "plugins/funind/functional_principles_types.ml" 27 492 517
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 27 492 518 "plugins/funind/functional_principles_types.ml" 27 492 520
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 27 492 521 "plugins/funind/functional_principles_types.ml" 27 492 524
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 27 492 525 "plugins/funind/functional_principles_types.ml" 27 492 541
type(
  string
)
"plugins/funind/functional_principles_types.ml" 27 492 521 "plugins/funind/functional_principles_types.ml" 27 492 541
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 27 492 504 "plugins/funind/functional_principles_types.ml" 27 492 541
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 27 492 541 "plugins/funind/functional_principles_types.ml" 27 492 543
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 27 492 544 "plugins/funind/functional_principles_types.ml" 27 492 566
type(
  Environ.env -> Term.rel_context -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_rel_context
)
"plugins/funind/functional_principles_types.ml" 27 492 567 "plugins/funind/functional_principles_types.ml" 27 492 570
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 26 438 444 "plugins/funind/functional_principles_types.ml" 26 438 447
)
"plugins/funind/functional_principles_types.ml" 27 492 571 "plugins/funind/functional_principles_types.ml" 27 492 573
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
)
"plugins/funind/functional_principles_types.ml" 27 492 571 "plugins/funind/functional_principles_types.ml" 27 492 584
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 27 492 544 "plugins/funind/functional_principles_types.ml" 27 492 584
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 27 492 504 "plugins/funind/functional_principles_types.ml" 27 492 584
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 28 588 594 "plugins/funind/functional_principles_types.ml" 28 588 597
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 28 588 600 "plugins/funind/functional_principles_types.ml" 28 588 624
type(
  Term.rel_context -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel_context
)
"plugins/funind/functional_principles_types.ml" 28 588 625 "plugins/funind/functional_principles_types.ml" 28 588 627
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
)
"plugins/funind/functional_principles_types.ml" 28 588 625 "plugins/funind/functional_principles_types.ml" 28 588 638
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 28 588 639 "plugins/funind/functional_principles_types.ml" 28 588 642
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 26 438 444 "plugins/funind/functional_principles_types.ml" 26 438 447
)
"plugins/funind/functional_principles_types.ml" 28 588 600 "plugins/funind/functional_principles_types.ml" 28 588 642
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 29 646 652 "plugins/funind/functional_principles_types.ml" 29 646 655
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 29 646 658 "plugins/funind/functional_principles_types.ml" 29 646 661
type(
  Pp.std_ppcmds
)
ident(
  int_ref msg "plugins/funind/functional_principles_types.ml" 27 492 498 "plugins/funind/functional_principles_types.ml" 27 492 501
)
"plugins/funind/functional_principles_types.ml" 29 646 662 "plugins/funind/functional_principles_types.ml" 29 646 664
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 29 646 665 "plugins/funind/functional_principles_types.ml" 29 646 668
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 29 646 669 "plugins/funind/functional_principles_types.ml" 29 646 671
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 29 646 665 "plugins/funind/functional_principles_types.ml" 29 646 671
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 29 646 658 "plugins/funind/functional_principles_types.ml" 29 646 671
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 29 646 672 "plugins/funind/functional_principles_types.ml" 29 646 674
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 29 646 675 "plugins/funind/functional_principles_types.ml" 29 646 678
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 29 646 679 "plugins/funind/functional_principles_types.ml" 29 646 693
type(
  string
)
"plugins/funind/functional_principles_types.ml" 29 646 675 "plugins/funind/functional_principles_types.ml" 29 646 693
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 29 646 658 "plugins/funind/functional_principles_types.ml" 29 646 693
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 29 646 694 "plugins/funind/functional_principles_types.ml" 29 646 696
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 29 646 697 "plugins/funind/functional_principles_types.ml" 29 646 719
type(
  Environ.env -> Term.rel_context -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_rel_context
)
"plugins/funind/functional_principles_types.ml" 29 646 720 "plugins/funind/functional_principles_types.ml" 29 646 723
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 28 588 594 "plugins/funind/functional_principles_types.ml" 28 588 597
)
"plugins/funind/functional_principles_types.ml" 29 646 724 "plugins/funind/functional_principles_types.ml" 29 646 726
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
)
"plugins/funind/functional_principles_types.ml" 29 646 724 "plugins/funind/functional_principles_types.ml" 29 646 735
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 29 646 697 "plugins/funind/functional_principles_types.ml" 29 646 735
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 29 646 658 "plugins/funind/functional_principles_types.ml" 29 646 735
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 30 739 745 "plugins/funind/functional_principles_types.ml" 30 739 748
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 30 739 751 "plugins/funind/functional_principles_types.ml" 30 739 775
type(
  Term.rel_context -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel_context
)
"plugins/funind/functional_principles_types.ml" 30 739 776 "plugins/funind/functional_principles_types.ml" 30 739 778
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
)
"plugins/funind/functional_principles_types.ml" 30 739 776 "plugins/funind/functional_principles_types.ml" 30 739 787
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 30 739 788 "plugins/funind/functional_principles_types.ml" 30 739 791
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 28 588 594 "plugins/funind/functional_principles_types.ml" 28 588 597
)
"plugins/funind/functional_principles_types.ml" 30 739 751 "plugins/funind/functional_principles_types.ml" 30 739 791
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 31 795 801 "plugins/funind/functional_principles_types.ml" 31 795 804
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 31 795 807 "plugins/funind/functional_principles_types.ml" 31 795 810
type(
  Pp.std_ppcmds
)
ident(
  int_ref msg "plugins/funind/functional_principles_types.ml" 29 646 652 "plugins/funind/functional_principles_types.ml" 29 646 655
)
"plugins/funind/functional_principles_types.ml" 31 795 811 "plugins/funind/functional_principles_types.ml" 31 795 813
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 31 795 814 "plugins/funind/functional_principles_types.ml" 31 795 817
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 31 795 818 "plugins/funind/functional_principles_types.ml" 31 795 820
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 31 795 814 "plugins/funind/functional_principles_types.ml" 31 795 820
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 31 795 807 "plugins/funind/functional_principles_types.ml" 31 795 820
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 31 795 821 "plugins/funind/functional_principles_types.ml" 31 795 823
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 31 795 824 "plugins/funind/functional_principles_types.ml" 31 795 827
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 31 795 828 "plugins/funind/functional_principles_types.ml" 31 795 838
type(
  string
)
"plugins/funind/functional_principles_types.ml" 31 795 824 "plugins/funind/functional_principles_types.ml" 31 795 838
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 31 795 807 "plugins/funind/functional_principles_types.ml" 31 795 838
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 31 795 839 "plugins/funind/functional_principles_types.ml" 31 795 841
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 31 795 842 "plugins/funind/functional_principles_types.ml" 31 795 864
type(
  Environ.env -> Term.rel_context -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_rel_context
)
"plugins/funind/functional_principles_types.ml" 31 795 865 "plugins/funind/functional_principles_types.ml" 31 795 868
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 30 739 745 "plugins/funind/functional_principles_types.ml" 30 739 748
)
"plugins/funind/functional_principles_types.ml" 31 795 869 "plugins/funind/functional_principles_types.ml" 31 795 871
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
)
"plugins/funind/functional_principles_types.ml" 31 795 869 "plugins/funind/functional_principles_types.ml" 31 795 876
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 31 795 842 "plugins/funind/functional_principles_types.ml" 31 795 876
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 31 795 807 "plugins/funind/functional_principles_types.ml" 31 795 876
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 32 880 886 "plugins/funind/functional_principles_types.ml" 32 880 889
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 32 880 892 "plugins/funind/functional_principles_types.ml" 32 880 916
type(
  Term.rel_context -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel_context
)
"plugins/funind/functional_principles_types.ml" 32 880 917 "plugins/funind/functional_principles_types.ml" 32 880 919
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
)
"plugins/funind/functional_principles_types.ml" 32 880 917 "plugins/funind/functional_principles_types.ml" 32 880 924
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 32 880 925 "plugins/funind/functional_principles_types.ml" 32 880 928
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 30 739 745 "plugins/funind/functional_principles_types.ml" 30 739 748
)
"plugins/funind/functional_principles_types.ml" 32 880 892 "plugins/funind/functional_principles_types.ml" 32 880 928
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 33 932 934 "plugins/funind/functional_principles_types.ml" 33 932 937
type(
  Pp.std_ppcmds
)
ident(
  int_ref msg "plugins/funind/functional_principles_types.ml" 31 795 801 "plugins/funind/functional_principles_types.ml" 31 795 804
)
"plugins/funind/functional_principles_types.ml" 33 932 938 "plugins/funind/functional_principles_types.ml" 33 932 940
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 33 932 941 "plugins/funind/functional_principles_types.ml" 33 932 944
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 33 932 945 "plugins/funind/functional_principles_types.ml" 33 932 947
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 33 932 941 "plugins/funind/functional_principles_types.ml" 33 932 947
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 33 932 934 "plugins/funind/functional_principles_types.ml" 33 932 947
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 33 932 948 "plugins/funind/functional_principles_types.ml" 33 932 950
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 33 932 951 "plugins/funind/functional_principles_types.ml" 33 932 954
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 33 932 955 "plugins/funind/functional_principles_types.ml" 33 932 966
type(
  string
)
"plugins/funind/functional_principles_types.ml" 33 932 951 "plugins/funind/functional_principles_types.ml" 33 932 966
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 33 932 934 "plugins/funind/functional_principles_types.ml" 33 932 966
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 33 932 967 "plugins/funind/functional_principles_types.ml" 33 932 969
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 33 932 970 "plugins/funind/functional_principles_types.ml" 33 932 984
type(
  Environ.env -> Term.types -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr_env
)
"plugins/funind/functional_principles_types.ml" 33 932 985 "plugins/funind/functional_principles_types.ml" 33 932 988
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 32 880 886 "plugins/funind/functional_principles_types.ml" 32 880 889
)
"plugins/funind/functional_principles_types.ml" 33 932 989 "plugins/funind/functional_principles_types.ml" 33 932 991
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 23 313 332 "plugins/funind/functional_principles_types.ml" 23 313 334
)
"plugins/funind/functional_principles_types.ml" 33 932 989 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 33 932 970 "plugins/funind/functional_principles_types.ml" 33 932 997
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 33 932 934 "plugins/funind/functional_principles_types.ml" 33 932 997
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 32 880 882 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 31 795 797 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 30 739 741 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 29 646 648 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 28 588 590 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 27 492 494 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 26 438 440 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 25 366 368 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 24 337 339 "plugins/funind/functional_principles_types.ml" 33 932 997
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 36 1000 1004 "plugins/funind/functional_principles_types.ml" 36 1000 1011
type(
  Pp.std_ppcmds -> unit
)
ident(
  def observe "plugins/funind/functional_principles_types.ml" 41 1055 1055 --
)
"plugins/funind/functional_principles_types.ml" 36 1000 1012 "plugins/funind/functional_principles_types.ml" 36 1000 1013
type(
  Pp.std_ppcmds
)
ident(
  def s "plugins/funind/functional_principles_types.ml" 37 1016 1018 "plugins/funind/functional_principles_types.ml" 38 1035 1052
)
"plugins/funind/functional_principles_types.ml" 37 1016 1021 "plugins/funind/functional_principles_types.ml" 37 1016 1031
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/functional_principles_types.ml" 37 1016 1032 "plugins/funind/functional_principles_types.ml" 37 1016 1034
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 37 1016 1021 "plugins/funind/functional_principles_types.ml" 37 1016 1034
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 38 1035 1042 "plugins/funind/functional_principles_types.ml" 38 1035 1050
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msgnl
)
"plugins/funind/functional_principles_types.ml" 38 1035 1051 "plugins/funind/functional_principles_types.ml" 38 1035 1052
type(
  Pp.std_ppcmds
)
ident(
  int_ref s "plugins/funind/functional_principles_types.ml" 36 1000 1012 "plugins/funind/functional_principles_types.ml" 36 1000 1013
)
"plugins/funind/functional_principles_types.ml" 38 1035 1042 "plugins/funind/functional_principles_types.ml" 38 1035 1052
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 37 1016 1018 "plugins/funind/functional_principles_types.ml" 38 1035 1052
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 41 1055 1059 "plugins/funind/functional_principles_types.ml" 41 1055 1073
type(
  Tactics.elim_scheme -> Pp.std_ppcmds
)
ident(
  def pr_elim_scheme "plugins/funind/functional_principles_types.ml" 54 1742 1742 --
)
"plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
type(
  Tactics.elim_scheme
)
ident(
  def el "plugins/funind/functional_principles_types.ml" 42 1079 1081 "plugins/funind/functional_principles_types.ml" 51 1674 1739
)
"plugins/funind/functional_principles_types.ml" 42 1079 1085 "plugins/funind/functional_principles_types.ml" 42 1079 1088
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 42 1079 1091 "plugins/funind/functional_principles_types.ml" 42 1079 1101
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_types.ml" 42 1079 1102 "plugins/funind/functional_principles_types.ml" 42 1079 1104
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 42 1079 1091 "plugins/funind/functional_principles_types.ml" 42 1079 1104
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 43 1108 1114 "plugins/funind/functional_principles_types.ml" 43 1108 1117
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 43 1108 1120 "plugins/funind/functional_principles_types.ml" 43 1108 1123
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 43 1108 1124 "plugins/funind/functional_principles_types.ml" 43 1108 1136
type(
  string
)
"plugins/funind/functional_principles_types.ml" 43 1108 1120 "plugins/funind/functional_principles_types.ml" 43 1108 1136
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 43 1108 1137 "plugins/funind/functional_principles_types.ml" 43 1108 1139
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 43 1108 1140 "plugins/funind/functional_principles_types.ml" 43 1108 1162
type(
  Environ.env -> Term.rel_context -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_rel_context
)
"plugins/funind/functional_principles_types.ml" 43 1108 1163 "plugins/funind/functional_principles_types.ml" 43 1108 1166
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 42 1079 1085 "plugins/funind/functional_principles_types.ml" 42 1079 1088
)
"plugins/funind/functional_principles_types.ml" 43 1108 1167 "plugins/funind/functional_principles_types.ml" 43 1108 1169
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
)
"plugins/funind/functional_principles_types.ml" 43 1108 1167 "plugins/funind/functional_principles_types.ml" 43 1108 1176
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 43 1108 1140 "plugins/funind/functional_principles_types.ml" 43 1108 1176
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 43 1108 1120 "plugins/funind/functional_principles_types.ml" 43 1108 1176
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 44 1180 1186 "plugins/funind/functional_principles_types.ml" 44 1180 1189
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 44 1180 1192 "plugins/funind/functional_principles_types.ml" 44 1180 1216
type(
  Term.rel_context -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel_context
)
"plugins/funind/functional_principles_types.ml" 44 1180 1217 "plugins/funind/functional_principles_types.ml" 44 1180 1219
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
)
"plugins/funind/functional_principles_types.ml" 44 1180 1217 "plugins/funind/functional_principles_types.ml" 44 1180 1226
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 44 1180 1227 "plugins/funind/functional_principles_types.ml" 44 1180 1230
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 42 1079 1085 "plugins/funind/functional_principles_types.ml" 42 1079 1088
)
"plugins/funind/functional_principles_types.ml" 44 1180 1192 "plugins/funind/functional_principles_types.ml" 44 1180 1230
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 45 1234 1240 "plugins/funind/functional_principles_types.ml" 45 1234 1243
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 45 1234 1246 "plugins/funind/functional_principles_types.ml" 45 1234 1249
type(
  Pp.std_ppcmds
)
ident(
  int_ref msg "plugins/funind/functional_principles_types.ml" 43 1108 1114 "plugins/funind/functional_principles_types.ml" 43 1108 1117
)
"plugins/funind/functional_principles_types.ml" 45 1234 1250 "plugins/funind/functional_principles_types.ml" 45 1234 1252
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 45 1234 1253 "plugins/funind/functional_principles_types.ml" 45 1234 1256
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 45 1234 1257 "plugins/funind/functional_principles_types.ml" 45 1234 1259
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 45 1234 1253 "plugins/funind/functional_principles_types.ml" 45 1234 1259
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 45 1234 1246 "plugins/funind/functional_principles_types.ml" 45 1234 1259
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 45 1234 1260 "plugins/funind/functional_principles_types.ml" 45 1234 1262
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 45 1234 1263 "plugins/funind/functional_principles_types.ml" 45 1234 1266
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 45 1234 1267 "plugins/funind/functional_principles_types.ml" 45 1234 1283
type(
  string
)
"plugins/funind/functional_principles_types.ml" 45 1234 1263 "plugins/funind/functional_principles_types.ml" 45 1234 1283
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 45 1234 1246 "plugins/funind/functional_principles_types.ml" 45 1234 1283
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 45 1234 1283 "plugins/funind/functional_principles_types.ml" 45 1234 1285
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 45 1234 1286 "plugins/funind/functional_principles_types.ml" 45 1234 1308
type(
  Environ.env -> Term.rel_context -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_rel_context
)
"plugins/funind/functional_principles_types.ml" 45 1234 1309 "plugins/funind/functional_principles_types.ml" 45 1234 1312
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 44 1180 1186 "plugins/funind/functional_principles_types.ml" 44 1180 1189
)
"plugins/funind/functional_principles_types.ml" 45 1234 1313 "plugins/funind/functional_principles_types.ml" 45 1234 1315
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
)
"plugins/funind/functional_principles_types.ml" 45 1234 1313 "plugins/funind/functional_principles_types.ml" 45 1234 1326
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 45 1234 1286 "plugins/funind/functional_principles_types.ml" 45 1234 1326
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 45 1234 1246 "plugins/funind/functional_principles_types.ml" 45 1234 1326
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 46 1330 1336 "plugins/funind/functional_principles_types.ml" 46 1330 1339
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 46 1330 1342 "plugins/funind/functional_principles_types.ml" 46 1330 1366
type(
  Term.rel_context -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel_context
)
"plugins/funind/functional_principles_types.ml" 46 1330 1367 "plugins/funind/functional_principles_types.ml" 46 1330 1369
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
)
"plugins/funind/functional_principles_types.ml" 46 1330 1367 "plugins/funind/functional_principles_types.ml" 46 1330 1380
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 46 1330 1381 "plugins/funind/functional_principles_types.ml" 46 1330 1384
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 44 1180 1186 "plugins/funind/functional_principles_types.ml" 44 1180 1189
)
"plugins/funind/functional_principles_types.ml" 46 1330 1342 "plugins/funind/functional_principles_types.ml" 46 1330 1384
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 47 1388 1394 "plugins/funind/functional_principles_types.ml" 47 1388 1397
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 47 1388 1400 "plugins/funind/functional_principles_types.ml" 47 1388 1403
type(
  Pp.std_ppcmds
)
ident(
  int_ref msg "plugins/funind/functional_principles_types.ml" 45 1234 1240 "plugins/funind/functional_principles_types.ml" 45 1234 1243
)
"plugins/funind/functional_principles_types.ml" 47 1388 1404 "plugins/funind/functional_principles_types.ml" 47 1388 1406
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 47 1388 1407 "plugins/funind/functional_principles_types.ml" 47 1388 1410
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 47 1388 1411 "plugins/funind/functional_principles_types.ml" 47 1388 1413
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 47 1388 1407 "plugins/funind/functional_principles_types.ml" 47 1388 1413
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 47 1388 1400 "plugins/funind/functional_principles_types.ml" 47 1388 1413
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 47 1388 1414 "plugins/funind/functional_principles_types.ml" 47 1388 1416
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 47 1388 1417 "plugins/funind/functional_principles_types.ml" 47 1388 1420
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 47 1388 1421 "plugins/funind/functional_principles_types.ml" 47 1388 1435
type(
  string
)
"plugins/funind/functional_principles_types.ml" 47 1388 1417 "plugins/funind/functional_principles_types.ml" 47 1388 1435
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 47 1388 1400 "plugins/funind/functional_principles_types.ml" 47 1388 1435
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 47 1388 1436 "plugins/funind/functional_principles_types.ml" 47 1388 1438
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 47 1388 1439 "plugins/funind/functional_principles_types.ml" 47 1388 1461
type(
  Environ.env -> Term.rel_context -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_rel_context
)
"plugins/funind/functional_principles_types.ml" 47 1388 1462 "plugins/funind/functional_principles_types.ml" 47 1388 1465
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 46 1330 1336 "plugins/funind/functional_principles_types.ml" 46 1330 1339
)
"plugins/funind/functional_principles_types.ml" 47 1388 1466 "plugins/funind/functional_principles_types.ml" 47 1388 1468
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
)
"plugins/funind/functional_principles_types.ml" 47 1388 1466 "plugins/funind/functional_principles_types.ml" 47 1388 1477
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 47 1388 1439 "plugins/funind/functional_principles_types.ml" 47 1388 1477
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 47 1388 1400 "plugins/funind/functional_principles_types.ml" 47 1388 1477
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 48 1481 1487 "plugins/funind/functional_principles_types.ml" 48 1481 1490
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 48 1481 1493 "plugins/funind/functional_principles_types.ml" 48 1481 1517
type(
  Term.rel_context -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel_context
)
"plugins/funind/functional_principles_types.ml" 48 1481 1518 "plugins/funind/functional_principles_types.ml" 48 1481 1520
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
)
"plugins/funind/functional_principles_types.ml" 48 1481 1518 "plugins/funind/functional_principles_types.ml" 48 1481 1529
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 48 1481 1530 "plugins/funind/functional_principles_types.ml" 48 1481 1533
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 46 1330 1336 "plugins/funind/functional_principles_types.ml" 46 1330 1339
)
"plugins/funind/functional_principles_types.ml" 48 1481 1493 "plugins/funind/functional_principles_types.ml" 48 1481 1533
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 49 1537 1543 "plugins/funind/functional_principles_types.ml" 49 1537 1546
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 49 1537 1549 "plugins/funind/functional_principles_types.ml" 49 1537 1552
type(
  Pp.std_ppcmds
)
ident(
  int_ref msg "plugins/funind/functional_principles_types.ml" 47 1388 1394 "plugins/funind/functional_principles_types.ml" 47 1388 1397
)
"plugins/funind/functional_principles_types.ml" 49 1537 1553 "plugins/funind/functional_principles_types.ml" 49 1537 1555
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 49 1537 1556 "plugins/funind/functional_principles_types.ml" 49 1537 1559
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 49 1537 1560 "plugins/funind/functional_principles_types.ml" 49 1537 1562
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 49 1537 1556 "plugins/funind/functional_principles_types.ml" 49 1537 1562
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 49 1537 1549 "plugins/funind/functional_principles_types.ml" 49 1537 1562
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 49 1537 1563 "plugins/funind/functional_principles_types.ml" 49 1537 1565
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 49 1537 1566 "plugins/funind/functional_principles_types.ml" 49 1537 1569
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 49 1537 1570 "plugins/funind/functional_principles_types.ml" 49 1537 1580
type(
  string
)
"plugins/funind/functional_principles_types.ml" 49 1537 1566 "plugins/funind/functional_principles_types.ml" 49 1537 1580
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 49 1537 1549 "plugins/funind/functional_principles_types.ml" 49 1537 1580
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 49 1537 1581 "plugins/funind/functional_principles_types.ml" 49 1537 1583
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 49 1537 1584 "plugins/funind/functional_principles_types.ml" 49 1537 1606
type(
  Environ.env -> Term.rel_context -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_rel_context
)
"plugins/funind/functional_principles_types.ml" 49 1537 1607 "plugins/funind/functional_principles_types.ml" 49 1537 1610
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 48 1481 1487 "plugins/funind/functional_principles_types.ml" 48 1481 1490
)
"plugins/funind/functional_principles_types.ml" 49 1537 1611 "plugins/funind/functional_principles_types.ml" 49 1537 1613
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
)
"plugins/funind/functional_principles_types.ml" 49 1537 1611 "plugins/funind/functional_principles_types.ml" 49 1537 1618
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 49 1537 1584 "plugins/funind/functional_principles_types.ml" 49 1537 1618
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 49 1537 1549 "plugins/funind/functional_principles_types.ml" 49 1537 1618
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 50 1622 1628 "plugins/funind/functional_principles_types.ml" 50 1622 1631
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 50 1622 1634 "plugins/funind/functional_principles_types.ml" 50 1622 1658
type(
  Term.rel_context -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel_context
)
"plugins/funind/functional_principles_types.ml" 50 1622 1659 "plugins/funind/functional_principles_types.ml" 50 1622 1661
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
)
"plugins/funind/functional_principles_types.ml" 50 1622 1659 "plugins/funind/functional_principles_types.ml" 50 1622 1666
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 50 1622 1667 "plugins/funind/functional_principles_types.ml" 50 1622 1670
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 48 1481 1487 "plugins/funind/functional_principles_types.ml" 48 1481 1490
)
"plugins/funind/functional_principles_types.ml" 50 1622 1634 "plugins/funind/functional_principles_types.ml" 50 1622 1670
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 51 1674 1676 "plugins/funind/functional_principles_types.ml" 51 1674 1679
type(
  Pp.std_ppcmds
)
ident(
  int_ref msg "plugins/funind/functional_principles_types.ml" 49 1537 1543 "plugins/funind/functional_principles_types.ml" 49 1537 1546
)
"plugins/funind/functional_principles_types.ml" 51 1674 1680 "plugins/funind/functional_principles_types.ml" 51 1674 1682
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 51 1674 1683 "plugins/funind/functional_principles_types.ml" 51 1674 1686
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 51 1674 1687 "plugins/funind/functional_principles_types.ml" 51 1674 1689
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 51 1674 1683 "plugins/funind/functional_principles_types.ml" 51 1674 1689
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 51 1674 1676 "plugins/funind/functional_principles_types.ml" 51 1674 1689
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 51 1674 1690 "plugins/funind/functional_principles_types.ml" 51 1674 1692
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 51 1674 1693 "plugins/funind/functional_principles_types.ml" 51 1674 1696
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 51 1674 1697 "plugins/funind/functional_principles_types.ml" 51 1674 1708
type(
  string
)
"plugins/funind/functional_principles_types.ml" 51 1674 1693 "plugins/funind/functional_principles_types.ml" 51 1674 1708
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 51 1674 1676 "plugins/funind/functional_principles_types.ml" 51 1674 1708
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 51 1674 1709 "plugins/funind/functional_principles_types.ml" 51 1674 1711
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 51 1674 1712 "plugins/funind/functional_principles_types.ml" 51 1674 1726
type(
  Environ.env -> Term.types -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr_env
)
"plugins/funind/functional_principles_types.ml" 51 1674 1727 "plugins/funind/functional_principles_types.ml" 51 1674 1730
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 50 1622 1628 "plugins/funind/functional_principles_types.ml" 50 1622 1631
)
"plugins/funind/functional_principles_types.ml" 51 1674 1731 "plugins/funind/functional_principles_types.ml" 51 1674 1733
type(
  Tactics.elim_scheme
)
ident(
  int_ref el "plugins/funind/functional_principles_types.ml" 41 1055 1074 "plugins/funind/functional_principles_types.ml" 41 1055 1076
)
"plugins/funind/functional_principles_types.ml" 51 1674 1731 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 51 1674 1712 "plugins/funind/functional_principles_types.ml" 51 1674 1739
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 51 1674 1676 "plugins/funind/functional_principles_types.ml" 51 1674 1739
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 50 1622 1624 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 49 1537 1539 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 48 1481 1483 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 47 1388 1390 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 46 1330 1332 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 45 1234 1236 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 44 1180 1182 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 43 1108 1110 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 42 1079 1081 "plugins/funind/functional_principles_types.ml" 51 1674 1739
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 54 1742 1746 "plugins/funind/functional_principles_types.ml" 54 1742 1753
type(
  Pp.std_ppcmds -> unit
)
ident(
  def observe "plugins/funind/functional_principles_types.ml" 62 1873 1873 --
)
"plugins/funind/functional_principles_types.ml" 54 1742 1754 "plugins/funind/functional_principles_types.ml" 54 1742 1755
type(
  Pp.std_ppcmds
)
ident(
  def s "plugins/funind/functional_principles_types.ml" 55 1758 1760 "plugins/funind/functional_principles_types.ml" 56 1777 1794
)
"plugins/funind/functional_principles_types.ml" 55 1758 1763 "plugins/funind/functional_principles_types.ml" 55 1758 1773
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/functional_principles_types.ml" 55 1758 1774 "plugins/funind/functional_principles_types.ml" 55 1758 1776
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 55 1758 1763 "plugins/funind/functional_principles_types.ml" 55 1758 1776
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 56 1777 1784 "plugins/funind/functional_principles_types.ml" 56 1777 1792
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msgnl
)
"plugins/funind/functional_principles_types.ml" 56 1777 1793 "plugins/funind/functional_principles_types.ml" 56 1777 1794
type(
  Pp.std_ppcmds
)
ident(
  int_ref s "plugins/funind/functional_principles_types.ml" 54 1742 1754 "plugins/funind/functional_principles_types.ml" 54 1742 1755
)
"plugins/funind/functional_principles_types.ml" 56 1777 1784 "plugins/funind/functional_principles_types.ml" 56 1777 1794
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 55 1758 1760 "plugins/funind/functional_principles_types.ml" 56 1777 1794
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 62 1873 1877 "plugins/funind/functional_principles_types.ml" 62 1873 1908
type(
  Term.constr array -> Term.sorts array -> Term.types -> Term.types
)
ident(
  def compute_new_princ_type_from_rel "plugins/funind/functional_principles_types.ml" 278 9798 9798 --
)
"plugins/funind/functional_principles_types.ml" 62 1873 1909 "plugins/funind/functional_principles_types.ml" 62 1873 1919
type(
  Term.constr array
)
ident(
  def rel_to_fun "plugins/funind/functional_principles_types.ml" 62 1873 1920 "plugins/funind/functional_principles_types.ml" 274 9768 9794
)
"plugins/funind/functional_principles_types.ml" 62 1873 1920 "plugins/funind/functional_principles_types.ml" 62 1873 1925
type(
  Term.sorts array
)
ident(
  def sorts "plugins/funind/functional_principles_types.ml" 62 1873 1926 "plugins/funind/functional_principles_types.ml" 274 9768 9794
)
"plugins/funind/functional_principles_types.ml" 62 1873 1926 "plugins/funind/functional_principles_types.ml" 62 1873 1936
type(
  Term.types
)
ident(
  def princ_type "plugins/funind/functional_principles_types.ml" 63 1939 1941 "plugins/funind/functional_principles_types.ml" 274 9768 9794
)
"plugins/funind/functional_principles_types.ml" 63 1939 1945 "plugins/funind/functional_principles_types.ml" 63 1939 1960
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_types.ml" 63 1939 1963 "plugins/funind/functional_principles_types.ml" 63 1939 1979
type(
  ?elimc:Term.constr Rawterm.with_bindings ->
  Term.types -> Tactics.elim_scheme
)
ident(
  ext_ref Tactics.compute_elim_sig
)
"plugins/funind/functional_principles_types.ml" 63 1939 1980 "plugins/funind/functional_principles_types.ml" 63 1939 1990
type(
  Term.types
)
ident(
  int_ref princ_type "plugins/funind/functional_principles_types.ml" 62 1873 1926 "plugins/funind/functional_principles_types.ml" 62 1873 1936
)
"plugins/funind/functional_principles_types.ml" 63 1939 1963 "plugins/funind/functional_principles_types.ml" 63 1939 1990
call(
  stack
)
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_types.ml" 64 1994 2000 "plugins/funind/functional_principles_types.ml" 64 1994 2003
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 64 1994 2006 "plugins/funind/functional_principles_types.ml" 64 1994 2016
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_types.ml" 64 1994 2017 "plugins/funind/functional_principles_types.ml" 64 1994 2019
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 64 1994 2006 "plugins/funind/functional_principles_types.ml" 64 1994 2019
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 65 2023 2029 "plugins/funind/functional_principles_types.ml" 65 2023 2044
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 65 2023 2047 "plugins/funind/functional_principles_types.ml" 65 2023 2071
type(
  Term.rel_context -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel_context
)
"plugins/funind/functional_principles_types.ml" 65 2023 2072 "plugins/funind/functional_principles_types.ml" 65 2023 2087
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 63 1939 1945 "plugins/funind/functional_principles_types.ml" 63 1939 1960
)
"plugins/funind/functional_principles_types.ml" 65 2023 2072 "plugins/funind/functional_principles_types.ml" 65 2023 2094
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 65 2023 2095 "plugins/funind/functional_principles_types.ml" 65 2023 2098
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 64 1994 2000 "plugins/funind/functional_principles_types.ml" 64 1994 2003
)
"plugins/funind/functional_principles_types.ml" 65 2023 2047 "plugins/funind/functional_principles_types.ml" 65 2023 2098
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 66 2102 2108 "plugins/funind/functional_principles_types.ml" 66 2102 2111
type(
  (Names.identifier, Names.identifier) Hashtbl.t
)
"plugins/funind/functional_principles_types.ml" 66 2102 2114 "plugins/funind/functional_principles_types.ml" 66 2102 2128
type(
  int -> (Names.identifier, Names.identifier) Hashtbl.t
)
ident(
  ext_ref Hashtbl.create
)
"plugins/funind/functional_principles_types.ml" 66 2102 2129 "plugins/funind/functional_principles_types.ml" 66 2102 2132
type(
  int
)
"plugins/funind/functional_principles_types.ml" 66 2102 2114 "plugins/funind/functional_principles_types.ml" 66 2102 2132
call(
  stack
)
type(
  (Names.identifier, Names.identifier) Hashtbl.t
)
"plugins/funind/functional_principles_types.ml" 67 2136 2146 "plugins/funind/functional_principles_types.ml" 67 2136 2169
type(
  Names.identifier list -> Term.rel_context -> Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 67 2136 2171 "plugins/funind/functional_principles_types.ml" 67 2136 2176
type(
  Names.identifier list
)
ident(
  def avoid "plugins/funind/functional_principles_types.ml" 67 2136 2194 "plugins/funind/functional_principles_types.ml" 74 2462 2526
)
"plugins/funind/functional_principles_types.ml" 67 2136 2195 "plugins/funind/functional_principles_types.ml" 67 2136 2205
type(
  Term.rel_context
)
ident(
  def predicates "plugins/funind/functional_principles_types.ml" 67 2136 2220 "plugins/funind/functional_principles_types.ml" 74 2462 2526
)
"plugins/funind/functional_principles_types.ml" 68 2236 2246 "plugins/funind/functional_principles_types.ml" 68 2236 2256
type(
  Term.rel_context
)
ident(
  int_ref predicates "plugins/funind/functional_principles_types.ml" 67 2136 2195 "plugins/funind/functional_principles_types.ml" 67 2136 2205
)
"plugins/funind/functional_principles_types.ml" 69 2262 2268 "plugins/funind/functional_principles_types.ml" 69 2262 2270
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 69 2262 2274 "plugins/funind/functional_principles_types.ml" 69 2262 2276
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 70 2277 2288 "plugins/funind/functional_principles_types.ml" 70 2277 2289
type(
  Names.identifier
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 71 2310 2317 "plugins/funind/functional_principles_types.ml" 73 2391 2461
)
"plugins/funind/functional_principles_types.ml" 70 2277 2283 "plugins/funind/functional_principles_types.ml" 70 2277 2289
type(
  Names.name
)
"plugins/funind/functional_principles_types.ml" 70 2277 2290 "plugins/funind/functional_principles_types.ml" 70 2277 2291
type(
  Term.constr option
)
ident(
  def v "plugins/funind/functional_principles_types.ml" 71 2310 2317 "plugins/funind/functional_principles_types.ml" 73 2391 2461
)
"plugins/funind/functional_principles_types.ml" 70 2277 2292 "plugins/funind/functional_principles_types.ml" 70 2277 2293
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 71 2310 2317 "plugins/funind/functional_principles_types.ml" 73 2391 2461
)
"plugins/funind/functional_principles_types.ml" 70 2277 2282 "plugins/funind/functional_principles_types.ml" 70 2277 2294
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 70 2277 2296 "plugins/funind/functional_principles_types.ml" 70 2277 2306
type(
  Term.rel_context
)
ident(
  def predicates "plugins/funind/functional_principles_types.ml" 71 2310 2317 "plugins/funind/functional_principles_types.ml" 73 2391 2461
)
"plugins/funind/functional_principles_types.ml" 70 2277 2282 "plugins/funind/functional_principles_types.ml" 70 2277 2306
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 71 2310 2321 "plugins/funind/functional_principles_types.ml" 71 2310 2323
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 71 2310 2327 "plugins/funind/functional_principles_types.ml" 71 2310 2350
type(
  Names.identifier -> Names.identifier list -> Names.identifier
)
ident(
  ext_ref Namegen.next_ident_away
)
"plugins/funind/functional_principles_types.ml" 71 2310 2351 "plugins/funind/functional_principles_types.ml" 71 2310 2352
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 70 2277 2288 "plugins/funind/functional_principles_types.ml" 70 2277 2289
)
"plugins/funind/functional_principles_types.ml" 71 2310 2353 "plugins/funind/functional_principles_types.ml" 71 2310 2358
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/functional_principles_types.ml" 67 2136 2171 "plugins/funind/functional_principles_types.ml" 67 2136 2176
)
"plugins/funind/functional_principles_types.ml" 71 2310 2327 "plugins/funind/functional_principles_types.ml" 71 2310 2358
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 72 2362 2369 "plugins/funind/functional_principles_types.ml" 72 2362 2380
type(
  (Names.identifier, Names.identifier) Hashtbl.t ->
  Names.identifier -> Names.identifier -> unit
)
ident(
  ext_ref Hashtbl.add
)
"plugins/funind/functional_principles_types.ml" 72 2362 2381 "plugins/funind/functional_principles_types.ml" 72 2362 2384
type(
  (Names.identifier, Names.identifier) Hashtbl.t
)
ident(
  int_ref tbl "plugins/funind/functional_principles_types.ml" 66 2102 2108 "plugins/funind/functional_principles_types.ml" 66 2102 2111
)
"plugins/funind/functional_principles_types.ml" 72 2362 2385 "plugins/funind/functional_principles_types.ml" 72 2362 2387
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 71 2310 2321 "plugins/funind/functional_principles_types.ml" 71 2310 2323
)
"plugins/funind/functional_principles_types.ml" 72 2362 2388 "plugins/funind/functional_principles_types.ml" 72 2362 2389
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 70 2277 2288 "plugins/funind/functional_principles_types.ml" 70 2277 2289
)
"plugins/funind/functional_principles_types.ml" 72 2362 2369 "plugins/funind/functional_principles_types.ml" 72 2362 2389
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 73 2391 2404 "plugins/funind/functional_principles_types.ml" 73 2391 2406
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 71 2310 2321 "plugins/funind/functional_principles_types.ml" 71 2310 2323
)
"plugins/funind/functional_principles_types.ml" 73 2391 2399 "plugins/funind/functional_principles_types.ml" 73 2391 2406
type(
  Names.name
)
"plugins/funind/functional_principles_types.ml" 73 2391 2407 "plugins/funind/functional_principles_types.ml" 73 2391 2408
type(
  Term.constr option
)
ident(
  int_ref v "plugins/funind/functional_principles_types.ml" 70 2277 2290 "plugins/funind/functional_principles_types.ml" 70 2277 2291
)
"plugins/funind/functional_principles_types.ml" 73 2391 2409 "plugins/funind/functional_principles_types.ml" 73 2391 2410
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 70 2277 2292 "plugins/funind/functional_principles_types.ml" 70 2277 2293
)
"plugins/funind/functional_principles_types.ml" 73 2391 2398 "plugins/funind/functional_principles_types.ml" 73 2391 2411
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 73 2391 2414 "plugins/funind/functional_principles_types.ml" 73 2391 2437
type(
  Names.identifier list -> Term.rel_context -> Term.rel_context
)
ident(
  int_ref change_predicates_names "plugins/funind/functional_principles_types.ml" 67 2136 2146 "plugins/funind/functional_principles_types.ml" 67 2136 2169
)
"plugins/funind/functional_principles_types.ml" 73 2391 2439 "plugins/funind/functional_principles_types.ml" 73 2391 2441
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 71 2310 2321 "plugins/funind/functional_principles_types.ml" 71 2310 2323
)
"plugins/funind/functional_principles_types.ml" 73 2391 2443 "plugins/funind/functional_principles_types.ml" 73 2391 2448
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/functional_principles_types.ml" 67 2136 2171 "plugins/funind/functional_principles_types.ml" 67 2136 2176
)
"plugins/funind/functional_principles_types.ml" 73 2391 2438 "plugins/funind/functional_principles_types.ml" 73 2391 2449
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 73 2391 2450 "plugins/funind/functional_principles_types.ml" 73 2391 2460
type(
  Term.rel_context
)
ident(
  int_ref predicates "plugins/funind/functional_principles_types.ml" 70 2277 2296 "plugins/funind/functional_principles_types.ml" 70 2277 2306
)
"plugins/funind/functional_principles_types.ml" 73 2391 2413 "plugins/funind/functional_principles_types.ml" 73 2391 2461
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 73 2391 2398 "plugins/funind/functional_principles_types.ml" 73 2391 2461
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 72 2362 2369 "plugins/funind/functional_principles_types.ml" 73 2391 2461
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 71 2310 2317 "plugins/funind/functional_principles_types.ml" 73 2391 2461
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 74 2462 2469 "plugins/funind/functional_principles_types.ml" 74 2462 2478
type(
  Names.name
)
"plugins/funind/functional_principles_types.ml" 74 2462 2479 "plugins/funind/functional_principles_types.ml" 74 2462 2480
type(
  Term.constr option
)
"plugins/funind/functional_principles_types.ml" 74 2462 2481 "plugins/funind/functional_principles_types.ml" 74 2462 2482
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 74 2462 2468 "plugins/funind/functional_principles_types.ml" 74 2462 2483
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 74 2462 2485 "plugins/funind/functional_principles_types.ml" 74 2462 2486
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_types.ml" 74 2462 2468 "plugins/funind/functional_principles_types.ml" 74 2462 2486
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 74 2462 2490 "plugins/funind/functional_principles_types.ml" 74 2462 2497
type(
  string -> Term.rel_context
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_types.ml" 74 2462 2498 "plugins/funind/functional_principles_types.ml" 74 2462 2526
type(
  string
)
"plugins/funind/functional_principles_types.ml" 74 2462 2490 "plugins/funind/functional_principles_types.ml" 74 2462 2526
call(
  tail
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 68 2236 2240 "plugins/funind/functional_principles_types.ml" 74 2462 2526
type(
  Term.rel_context
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 76 2532 2538 "plugins/funind/functional_principles_types.ml" 76 2532 2543
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 76 2532 2547 "plugins/funind/functional_principles_types.ml" 76 2532 2569
type(
  Environ.env -> Names.identifier list
)
ident(
  ext_ref Termops.ids_of_context
)
"plugins/funind/functional_principles_types.ml" 76 2532 2570 "plugins/funind/functional_principles_types.ml" 76 2532 2585
type(
  Environ.env
)
ident(
  int_ref env_with_params "plugins/funind/functional_principles_types.ml" 65 2023 2029 "plugins/funind/functional_principles_types.ml" 65 2023 2044
)
"plugins/funind/functional_principles_types.ml" 76 2532 2546 "plugins/funind/functional_principles_types.ml" 76 2532 2587
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_types.ml" 78 2615 2621 "plugins/funind/functional_principles_types.ml" 78 2615 2636
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 63 1939 1945 "plugins/funind/functional_principles_types.ml" 63 1939 1960
)
"plugins/funind/functional_principles_types.ml" 79 2642 2656 "plugins/funind/functional_principles_types.ml" 79 2642 2679
type(
  Names.identifier list -> Term.rel_context -> Term.rel_context
)
ident(
  int_ref change_predicates_names "plugins/funind/functional_principles_types.ml" 67 2136 2146 "plugins/funind/functional_principles_types.ml" 67 2136 2169
)
"plugins/funind/functional_principles_types.ml" 79 2642 2680 "plugins/funind/functional_principles_types.ml" 79 2642 2685
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/functional_principles_types.ml" 76 2532 2538 "plugins/funind/functional_principles_types.ml" 76 2532 2543
)
"plugins/funind/functional_principles_types.ml" 79 2642 2686 "plugins/funind/functional_principles_types.ml" 79 2642 2701
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 63 1939 1945 "plugins/funind/functional_principles_types.ml" 63 1939 1960
)
"plugins/funind/functional_principles_types.ml" 79 2642 2686 "plugins/funind/functional_principles_types.ml" 79 2642 2712
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 79 2642 2656 "plugins/funind/functional_principles_types.ml" 79 2642 2712
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 78 2615 2619 "plugins/funind/functional_principles_types.ml" 80 2713 2718
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_types.ml" 84 2880 2886 "plugins/funind/functional_principles_types.ml" 84 2880 2907
type(
  int ->
  Names.name * 'a * Term.constr -> Names.identifier * 'b option * Term.constr
)
"plugins/funind/functional_principles_types.ml" 84 2880 2908 "plugins/funind/functional_principles_types.ml" 84 2880 2909
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_types.ml" 84 2880 2910 "plugins/funind/functional_principles_types.ml" 92 3097 3165
)
"plugins/funind/functional_principles_types.ml" 84 2880 2911 "plugins/funind/functional_principles_types.ml" 84 2880 2912
type(
  Names.name
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 85 2920 2924 "plugins/funind/functional_principles_types.ml" 92 3097 3165
)
"plugins/funind/functional_principles_types.ml" 84 2880 2913 "plugins/funind/functional_principles_types.ml" 84 2880 2914
type(
  'a
)
"plugins/funind/functional_principles_types.ml" 84 2880 2915 "plugins/funind/functional_principles_types.ml" 84 2880 2916
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 85 2920 2924 "plugins/funind/functional_principles_types.ml" 92 3097 3165
)
"plugins/funind/functional_principles_types.ml" 84 2880 2910 "plugins/funind/functional_principles_types.ml" 84 2880 2917
type(
  Names.name * 'a * Term.constr
)
"plugins/funind/functional_principles_types.ml" 85 2920 2928 "plugins/funind/functional_principles_types.ml" 85 2920 2936
type(
  Term.sorts
)
"plugins/funind/functional_principles_types.ml" 85 2920 2939 "plugins/funind/functional_principles_types.ml" 85 2920 2944
type(
  Term.sorts array
)
ident(
  int_ref sorts "plugins/funind/functional_principles_types.ml" 62 1873 1920 "plugins/funind/functional_principles_types.ml" 62 1873 1925
)
"plugins/funind/functional_principles_types.ml" 85 2920 2946 "plugins/funind/functional_principles_types.ml" 85 2920 2947
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 84 2880 2908 "plugins/funind/functional_principles_types.ml" 84 2880 2909
)
"plugins/funind/functional_principles_types.ml" 85 2920 2939 "plugins/funind/functional_principles_types.ml" 85 2920 2948
type(
  Term.sorts
)
"plugins/funind/functional_principles_types.ml" 86 2952 2960 "plugins/funind/functional_principles_types.ml" 86 2952 2964
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 86 2952 2965 "plugins/funind/functional_principles_types.ml" 86 2952 2966
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 86 2952 2960 "plugins/funind/functional_principles_types.ml" 86 2952 2966
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_types.ml" 86 2952 2969 "plugins/funind/functional_principles_types.ml" 86 2952 2983
type(
  Term.constr -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_prod
)
"plugins/funind/functional_principles_types.ml" 86 2952 2984 "plugins/funind/functional_principles_types.ml" 86 2952 2985
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 84 2880 2915 "plugins/funind/functional_principles_types.ml" 84 2880 2916
)
"plugins/funind/functional_principles_types.ml" 86 2952 2969 "plugins/funind/functional_principles_types.ml" 86 2952 2985
call(
  stack
)
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_types.ml" 87 2989 2997 "plugins/funind/functional_principles_types.ml" 87 2989 3006
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 88 3009 3018 "plugins/funind/functional_principles_types.ml" 88 3009 3033
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
)
"plugins/funind/functional_principles_types.ml" 88 3009 3018 "plugins/funind/functional_principles_types.ml" 88 3009 3049
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 89 3050 3061 "plugins/funind/functional_principles_types.ml" 89 3050 3068
type(
  (Names.name * Term.constr) list -> (Names.name * Term.constr) list
)
ident(
  ext_ref List.tl
)
"plugins/funind/functional_principles_types.ml" 89 3050 3069 "plugins/funind/functional_principles_types.ml" 89 3050 3073
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref args "plugins/funind/functional_principles_types.ml" 86 2952 2960 "plugins/funind/functional_principles_types.ml" 86 2952 2964
)
"plugins/funind/functional_principles_types.ml" 89 3050 3061 "plugins/funind/functional_principles_types.ml" 89 3050 3073
call(
  stack
)
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 90 3074 3085 "plugins/funind/functional_principles_types.ml" 90 3074 3089
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref args "plugins/funind/functional_principles_types.ml" 86 2952 2960 "plugins/funind/functional_principles_types.ml" 86 2952 2964
)
"plugins/funind/functional_principles_types.ml" 88 3009 3015 "plugins/funind/functional_principles_types.ml" 90 3074 3089
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 92 3097 3101 "plugins/funind/functional_principles_types.ml" 92 3097 3117
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_types.ml" 92 3097 3118 "plugins/funind/functional_principles_types.ml" 92 3097 3119
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 84 2880 2911 "plugins/funind/functional_principles_types.ml" 84 2880 2912
)
"plugins/funind/functional_principles_types.ml" 92 3097 3101 "plugins/funind/functional_principles_types.ml" 92 3097 3119
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 92 3097 3120 "plugins/funind/functional_principles_types.ml" 92 3097 3124
type(
  'b option
)
"plugins/funind/functional_principles_types.ml" 92 3097 3125 "plugins/funind/functional_principles_types.ml" 92 3097 3137
type(
  (Names.name * Term.constr) list -> Term.types -> Term.constr
)
ident(
  ext_ref Term.compose_prod
)
"plugins/funind/functional_principles_types.ml" 92 3097 3138 "plugins/funind/functional_principles_types.ml" 92 3097 3147
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref real_args "plugins/funind/functional_principles_types.ml" 87 2989 2997 "plugins/funind/functional_principles_types.ml" 87 2989 3006
)
"plugins/funind/functional_principles_types.ml" 92 3097 3149 "plugins/funind/functional_principles_types.ml" 92 3097 3155
type(
  Term.sorts -> Term.types
)
ident(
  ext_ref Term.mkSort
)
"plugins/funind/functional_principles_types.ml" 92 3097 3156 "plugins/funind/functional_principles_types.ml" 92 3097 3164
type(
  Term.sorts
)
ident(
  int_ref new_sort "plugins/funind/functional_principles_types.ml" 85 2920 2928 "plugins/funind/functional_principles_types.ml" 85 2920 2936
)
"plugins/funind/functional_principles_types.ml" 92 3097 3148 "plugins/funind/functional_principles_types.ml" 92 3097 3165
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 92 3097 3125 "plugins/funind/functional_principles_types.ml" 92 3097 3165
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 92 3097 3101 "plugins/funind/functional_principles_types.ml" 92 3097 3165
type(
  Names.identifier * 'b option * Term.constr
)
"plugins/funind/functional_principles_types.ml" 87 2989 2993 "plugins/funind/functional_principles_types.ml" 92 3097 3165
type(
  Names.identifier * 'b option * Term.constr
)
"plugins/funind/functional_principles_types.ml" 86 2952 2956 "plugins/funind/functional_principles_types.ml" 92 3097 3165
type(
  Names.identifier * 'b option * Term.constr
)
"plugins/funind/functional_principles_types.ml" 85 2920 2924 "plugins/funind/functional_principles_types.ml" 92 3097 3165
type(
  Names.identifier * 'b option * Term.constr
)
"plugins/funind/functional_principles_types.ml" 94 3171 3177 "plugins/funind/functional_principles_types.ml" 94 3171 3191
type(
  (Names.identifier * 'c option * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 95 3194 3198 "plugins/funind/functional_principles_types.ml" 95 3194 3208
type(
  (int -> Term.rel_declaration -> Names.identifier * 'c option * Term.constr) ->
  int ->
  Term.rel_context -> (Names.identifier * 'c option * Term.constr) list
)
ident(
  ext_ref Util.list_map_i
)
"plugins/funind/functional_principles_types.ml" 96 3209 3215 "plugins/funind/functional_principles_types.ml" 96 3209 3236
type(
  int -> Term.rel_declaration -> Names.identifier * 'c option * Term.constr
)
ident(
  int_ref change_predicate_sort "plugins/funind/functional_principles_types.ml" 84 2880 2886 "plugins/funind/functional_principles_types.ml" 84 2880 2907
)
"plugins/funind/functional_principles_types.ml" 97 3237 3243 "plugins/funind/functional_principles_types.ml" 97 3237 3244
type(
  int
)
"plugins/funind/functional_principles_types.ml" 98 3245 3251 "plugins/funind/functional_principles_types.ml" 98 3245 3266
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
)
"plugins/funind/functional_principles_types.ml" 98 3245 3251 "plugins/funind/functional_principles_types.ml" 98 3245 3277
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 95 3194 3198 "plugins/funind/functional_principles_types.ml" 98 3245 3277
call(
  stack
)
type(
  (Names.identifier * 'c option * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 100 3283 3289 "plugins/funind/functional_principles_types.ml" 100 3283 3319
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 100 3283 3322 "plugins/funind/functional_principles_types.ml" 100 3283 3337
type(
  (Term.named_declaration -> Environ.env -> Environ.env) ->
  Term.named_declaration list -> Environ.env -> Environ.env
)
ident(
  ext_ref List.fold_right
)
"plugins/funind/functional_principles_types.ml" 100 3283 3338 "plugins/funind/functional_principles_types.ml" 100 3283 3356
type(
  Term.named_declaration -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_named
)
"plugins/funind/functional_principles_types.ml" 100 3283 3357 "plugins/funind/functional_principles_types.ml" 100 3283 3371
type(
  Term.named_declaration list
)
ident(
  int_ref new_predicates "plugins/funind/functional_principles_types.ml" 94 3171 3177 "plugins/funind/functional_principles_types.ml" 94 3171 3191
)
"plugins/funind/functional_principles_types.ml" 100 3283 3372 "plugins/funind/functional_principles_types.ml" 100 3283 3387
type(
  Environ.env
)
ident(
  int_ref env_with_params "plugins/funind/functional_principles_types.ml" 65 2023 2029 "plugins/funind/functional_principles_types.ml" 65 2023 2044
)
"plugins/funind/functional_principles_types.ml" 100 3283 3322 "plugins/funind/functional_principles_types.ml" 100 3283 3387
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 101 3391 3397 "plugins/funind/functional_principles_types.ml" 101 3391 3406
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 102 3409 3413 "plugins/funind/functional_principles_types.ml" 102 3409 3416
type(
  Names.inductive -> Names.mutual_inductive
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_types.ml" 102 3409 3424 "plugins/funind/functional_principles_types.ml" 102 3409 3439
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
)
"plugins/funind/functional_principles_types.ml" 102 3409 3424 "plugins/funind/functional_principles_types.ml" 102 3409 3446
type(
  Libnames.global_reference option
)
"plugins/funind/functional_principles_types.ml" 103 3452 3480 "plugins/funind/functional_principles_types.ml" 103 3452 3483
type(
  Names.inductive
)
ident(
  def ind "plugins/funind/functional_principles_types.ml" 103 3452 3488 "plugins/funind/functional_principles_types.ml" 103 3452 3491
)
"plugins/funind/functional_principles_types.ml" 103 3452 3463 "plugins/funind/functional_principles_types.ml" 103 3452 3484
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_types.ml" 103 3452 3458 "plugins/funind/functional_principles_types.ml" 103 3452 3484
type(
  Libnames.global_reference option
)
"plugins/funind/functional_principles_types.ml" 103 3452 3488 "plugins/funind/functional_principles_types.ml" 103 3452 3491
type(
  Names.inductive
)
ident(
  int_ref ind "plugins/funind/functional_principles_types.ml" 103 3452 3480 "plugins/funind/functional_principles_types.ml" 103 3452 3483
)
"plugins/funind/functional_principles_types.ml" 104 3492 3498 "plugins/funind/functional_principles_types.ml" 104 3492 3499
type(
  Libnames.global_reference option
)
"plugins/funind/functional_principles_types.ml" 104 3492 3503 "plugins/funind/functional_principles_types.ml" 104 3492 3508
type(
  string -> Names.inductive
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_types.ml" 104 3492 3509 "plugins/funind/functional_principles_types.ml" 104 3492 3532
type(
  string
)
"plugins/funind/functional_principles_types.ml" 104 3492 3503 "plugins/funind/functional_principles_types.ml" 104 3492 3532
call(
  stack
)
type(
  Names.inductive
)
"plugins/funind/functional_principles_types.ml" 102 3409 3417 "plugins/funind/functional_principles_types.ml" 105 3533 3535
type(
  Names.inductive
)
"plugins/funind/functional_principles_types.ml" 102 3409 3413 "plugins/funind/functional_principles_types.ml" 105 3533 3535
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 107 3541 3547 "plugins/funind/functional_principles_types.ml" 107 3541 3556
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 107 3541 3559 "plugins/funind/functional_principles_types.ml" 107 3541 3567
type(
  (Names.identifier * '_d option * Term.constr -> Names.identifier) ->
  (Names.identifier * '_d option * Term.constr) list -> Names.identifier list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 107 3541 3574 "plugins/funind/functional_principles_types.ml" 107 3541 3576
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 107 3541 3585 "plugins/funind/functional_principles_types.ml" 107 3541 3587
)
"plugins/funind/functional_principles_types.ml" 107 3541 3577 "plugins/funind/functional_principles_types.ml" 107 3541 3578
type(
  '_d option
)
"plugins/funind/functional_principles_types.ml" 107 3541 3579 "plugins/funind/functional_principles_types.ml" 107 3541 3580
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 107 3541 3573 "plugins/funind/functional_principles_types.ml" 107 3541 3581
type(
  Names.identifier * '_d option * Term.constr
)
"plugins/funind/functional_principles_types.ml" 107 3541 3585 "plugins/funind/functional_principles_types.ml" 107 3541 3587
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 107 3541 3574 "plugins/funind/functional_principles_types.ml" 107 3541 3576
)
"plugins/funind/functional_principles_types.ml" 107 3541 3568 "plugins/funind/functional_principles_types.ml" 107 3541 3588
type(
  Names.identifier * '_d option * Term.constr -> Names.identifier
)
"plugins/funind/functional_principles_types.ml" 107 3541 3589 "plugins/funind/functional_principles_types.ml" 107 3541 3603
type(
  (Names.identifier * '_d option * Term.constr) list
)
ident(
  int_ref new_predicates "plugins/funind/functional_principles_types.ml" 94 3171 3177 "plugins/funind/functional_principles_types.ml" 94 3171 3191
)
"plugins/funind/functional_principles_types.ml" 107 3541 3559 "plugins/funind/functional_principles_types.ml" 107 3541 3603
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 108 3607 3613 "plugins/funind/functional_principles_types.ml" 108 3607 3619
type(
  Term.types -> bool
)
"plugins/funind/functional_principles_types.ml" 109 3622 3630 "plugins/funind/functional_principles_types.ml" 109 3622 3633
type(
  Names.Idset.t
)
"plugins/funind/functional_principles_types.ml" 109 3622 3636 "plugins/funind/functional_principles_types.ml" 109 3622 3651
type(
  (Names.Idset.elt -> Names.Idset.t -> Names.Idset.t) ->
  Names.Idset.elt list -> Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref List.fold_right
)
"plugins/funind/functional_principles_types.ml" 109 3622 3652 "plugins/funind/functional_principles_types.ml" 109 3622 3661
type(
  Names.Idset.elt -> Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref Names.Idset.add
)
"plugins/funind/functional_principles_types.ml" 109 3622 3662 "plugins/funind/functional_principles_types.ml" 109 3622 3671
type(
  Names.Idset.elt list
)
ident(
  int_ref ptes_vars "plugins/funind/functional_principles_types.ml" 107 3541 3547 "plugins/funind/functional_principles_types.ml" 107 3541 3556
)
"plugins/funind/functional_principles_types.ml" 109 3622 3672 "plugins/funind/functional_principles_types.ml" 109 3622 3683
type(
  Names.Idset.t
)
ident(
  ext_ref Names.Idset.empty
)
"plugins/funind/functional_principles_types.ml" 109 3622 3636 "plugins/funind/functional_principles_types.ml" 109 3622 3683
call(
  stack
)
type(
  Names.Idset.t
)
"plugins/funind/functional_principles_types.ml" 110 3687 3695 "plugins/funind/functional_principles_types.ml" 110 3687 3696
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 111 3700 3706 "plugins/funind/functional_principles_types.ml" 113 3762 3775
)
"plugins/funind/functional_principles_types.ml" 111 3700 3712 "plugins/funind/functional_principles_types.ml" 111 3700 3724
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 111 3700 3725 "plugins/funind/functional_principles_types.ml" 111 3700 3726
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 110 3687 3695 "plugins/funind/functional_principles_types.ml" 110 3687 3696
)
"plugins/funind/functional_principles_types.ml" 111 3700 3712 "plugins/funind/functional_principles_types.ml" 111 3700 3726
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 112 3732 3739 "plugins/funind/functional_principles_types.ml" 112 3732 3741
type(
  Names.Idset.elt
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 112 3732 3745 "plugins/funind/functional_principles_types.ml" 112 3732 3761
)
"plugins/funind/functional_principles_types.ml" 112 3732 3735 "plugins/funind/functional_principles_types.ml" 112 3732 3741
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 112 3732 3745 "plugins/funind/functional_principles_types.ml" 112 3732 3754
type(
  Names.Idset.elt -> Names.Idset.t -> bool
)
ident(
  ext_ref Names.Idset.mem
)
"plugins/funind/functional_principles_types.ml" 112 3732 3755 "plugins/funind/functional_principles_types.ml" 112 3732 3757
type(
  Names.Idset.elt
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 112 3732 3739 "plugins/funind/functional_principles_types.ml" 112 3732 3741
)
"plugins/funind/functional_principles_types.ml" 112 3732 3758 "plugins/funind/functional_principles_types.ml" 112 3732 3761
type(
  Names.Idset.t
)
ident(
  int_ref set "plugins/funind/functional_principles_types.ml" 109 3622 3630 "plugins/funind/functional_principles_types.ml" 109 3622 3633
)
"plugins/funind/functional_principles_types.ml" 112 3732 3745 "plugins/funind/functional_principles_types.ml" 112 3732 3761
call(
  tail
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 113 3762 3765 "plugins/funind/functional_principles_types.ml" 113 3762 3766
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 113 3762 3770 "plugins/funind/functional_principles_types.ml" 113 3762 3775
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 111 3700 3706 "plugins/funind/functional_principles_types.ml" 113 3762 3775
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 110 3687 3691 "plugins/funind/functional_principles_types.ml" 113 3762 3775
type(
  Term.types -> bool
)
"plugins/funind/functional_principles_types.ml" 109 3622 3626 "plugins/funind/functional_principles_types.ml" 113 3762 3775
type(
  Term.types -> bool
)
"plugins/funind/functional_principles_types.ml" 115 3781 3787 "plugins/funind/functional_principles_types.ml" 115 3781 3796
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 116 3799 3803 "plugins/funind/functional_principles_types.ml" 116 3799 3821
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_types.ml" 118 3835 3842 "plugins/funind/functional_principles_types.ml" 118 3835 3860
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_types.ml" 119 3861 3870 "plugins/funind/functional_principles_types.ml" 119 3861 3887
type(
  (Term.rel_declaration -> Term.types -> Term.types) ->
  Term.rel_declaration option -> Term.types -> Term.types
)
ident(
  ext_ref Option.fold_right
)
"plugins/funind/functional_principles_types.ml" 120 3888 3894 "plugins/funind/functional_principles_types.ml" 120 3888 3909
type(
  Term.rel_declaration -> Term.types -> Term.types
)
ident(
  ext_ref Termops.mkProd_or_LetIn
)
"plugins/funind/functional_principles_types.ml" 121 3910 3916 "plugins/funind/functional_principles_types.ml" 121 3910 3931
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
)
"plugins/funind/functional_principles_types.ml" 121 3910 3916 "plugins/funind/functional_principles_types.ml" 121 3910 3938
type(
  Term.rel_declaration option
)
"plugins/funind/functional_principles_types.ml" 122 3939 3945 "plugins/funind/functional_principles_types.ml" 122 3939 3960
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
)
"plugins/funind/functional_principles_types.ml" 122 3939 3945 "plugins/funind/functional_principles_types.ml" 122 3939 3966
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 119 3861 3869 "plugins/funind/functional_principles_types.ml" 123 3967 3971
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 124 3972 3974 "plugins/funind/functional_principles_types.ml" 124 3972 3989
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
)
"plugins/funind/functional_principles_types.ml" 124 3972 3974 "plugins/funind/functional_principles_types.ml" 124 3972 3994
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 118 3835 3841 "plugins/funind/functional_principles_types.ml" 125 3995 4002
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 126 4003 4009 "plugins/funind/functional_principles_types.ml" 126 4003 4024
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
)
"plugins/funind/functional_principles_types.ml" 126 4003 4009 "plugins/funind/functional_principles_types.ml" 126 4003 4033
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 116 3799 3803 "plugins/funind/functional_principles_types.ml" 126 4003 4033
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 128 4039 4045 "plugins/funind/functional_principles_types.ml" 128 4039 4054
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 128 4039 4057 "plugins/funind/functional_principles_types.ml" 128 4039 4063
type(
  Term.constr list -> Term.types -> Term.constr
)
ident(
  ext_ref Term.substl
)
"plugins/funind/functional_principles_types.ml" 128 4039 4065 "plugins/funind/functional_principles_types.ml" 128 4039 4073
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 128 4039 4074 "plugins/funind/functional_principles_types.ml" 128 4039 4079
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_types.ml" 128 4039 4080 "plugins/funind/functional_principles_types.ml" 128 4039 4089
type(
  Names.identifier list
)
ident(
  int_ref ptes_vars "plugins/funind/functional_principles_types.ml" 107 3541 3547 "plugins/funind/functional_principles_types.ml" 107 3541 3556
)
"plugins/funind/functional_principles_types.ml" 128 4039 4064 "plugins/funind/functional_principles_types.ml" 128 4039 4090
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 128 4039 4091 "plugins/funind/functional_principles_types.ml" 128 4039 4100
type(
  Term.types
)
ident(
  int_ref pre_princ "plugins/funind/functional_principles_types.ml" 115 3781 3787 "plugins/funind/functional_principles_types.ml" 115 3781 3796
)
"plugins/funind/functional_principles_types.ml" 128 4039 4057 "plugins/funind/functional_principles_types.ml" 128 4039 4100
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 129 4104 4110 "plugins/funind/functional_principles_types.ml" 129 4104 4116
type(
  Term.constr -> bool
)
"plugins/funind/functional_principles_types.ml" 129 4104 4117 "plugins/funind/functional_principles_types.ml" 129 4104 4118
type(
  Term.constr
)
ident(
  def c "plugins/funind/functional_principles_types.ml" 130 4121 4125 "plugins/funind/functional_principles_types.ml" 133 4231 4249
)
"plugins/funind/functional_principles_types.ml" 130 4121 4131 "plugins/funind/functional_principles_types.ml" 130 4121 4143
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 130 4121 4144 "plugins/funind/functional_principles_types.ml" 130 4121 4145
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/functional_principles_types.ml" 129 4104 4117 "plugins/funind/functional_principles_types.ml" 129 4104 4118
)
"plugins/funind/functional_principles_types.ml" 130 4121 4131 "plugins/funind/functional_principles_types.ml" 130 4121 4145
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 131 4151 4164 "plugins/funind/functional_principles_types.ml" 131 4151 4165
type(
  Names.mutual_inductive
)
ident(
  def u "plugins/funind/functional_principles_types.ml" 131 4151 4173 "plugins/funind/functional_principles_types.ml" 131 4151 4186
)
"plugins/funind/functional_principles_types.ml" 131 4151 4166 "plugins/funind/functional_principles_types.ml" 131 4151 4167
type(
  int
)
"plugins/funind/functional_principles_types.ml" 131 4151 4162 "plugins/funind/functional_principles_types.ml" 131 4151 4169
type(
  Names.inductive
)
"plugins/funind/functional_principles_types.ml" 131 4151 4159 "plugins/funind/functional_principles_types.ml" 131 4151 4169
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 131 4151 4173 "plugins/funind/functional_principles_types.ml" 131 4151 4174
type(
  Names.mutual_inductive
)
ident(
  int_ref u "plugins/funind/functional_principles_types.ml" 131 4151 4164 "plugins/funind/functional_principles_types.ml" 131 4151 4165
)
"plugins/funind/functional_principles_types.ml" 131 4151 4175 "plugins/funind/functional_principles_types.ml" 131 4151 4176
type(
  Names.mutual_inductive -> Names.mutual_inductive -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_types.ml" 131 4151 4177 "plugins/funind/functional_principles_types.ml" 131 4151 4186
type(
  Names.mutual_inductive
)
ident(
  int_ref rel_as_kn "plugins/funind/functional_principles_types.ml" 101 3391 3397 "plugins/funind/functional_principles_types.ml" 101 3391 3406
)
"plugins/funind/functional_principles_types.ml" 131 4151 4173 "plugins/funind/functional_principles_types.ml" 131 4151 4186
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 132 4187 4206 "plugins/funind/functional_principles_types.ml" 132 4187 4207
type(
  Names.mutual_inductive
)
ident(
  def u "plugins/funind/functional_principles_types.ml" 132 4187 4217 "plugins/funind/functional_principles_types.ml" 132 4187 4230
)
"plugins/funind/functional_principles_types.ml" 132 4187 4208 "plugins/funind/functional_principles_types.ml" 132 4187 4209
type(
  int
)
"plugins/funind/functional_principles_types.ml" 132 4187 4205 "plugins/funind/functional_principles_types.ml" 132 4187 4210
type(
  Names.inductive
)
"plugins/funind/functional_principles_types.ml" 132 4187 4211 "plugins/funind/functional_principles_types.ml" 132 4187 4212
type(
  int
)
"plugins/funind/functional_principles_types.ml" 132 4187 4204 "plugins/funind/functional_principles_types.ml" 132 4187 4213
type(
  Names.constructor
)
"plugins/funind/functional_principles_types.ml" 132 4187 4195 "plugins/funind/functional_principles_types.ml" 132 4187 4213
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 132 4187 4217 "plugins/funind/functional_principles_types.ml" 132 4187 4218
type(
  Names.mutual_inductive
)
ident(
  int_ref u "plugins/funind/functional_principles_types.ml" 132 4187 4206 "plugins/funind/functional_principles_types.ml" 132 4187 4207
)
"plugins/funind/functional_principles_types.ml" 132 4187 4219 "plugins/funind/functional_principles_types.ml" 132 4187 4220
type(
  Names.mutual_inductive -> Names.mutual_inductive -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_types.ml" 132 4187 4221 "plugins/funind/functional_principles_types.ml" 132 4187 4230
type(
  Names.mutual_inductive
)
ident(
  int_ref rel_as_kn "plugins/funind/functional_principles_types.ml" 101 3391 3397 "plugins/funind/functional_principles_types.ml" 101 3391 3406
)
"plugins/funind/functional_principles_types.ml" 132 4187 4217 "plugins/funind/functional_principles_types.ml" 132 4187 4230
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 133 4231 4239 "plugins/funind/functional_principles_types.ml" 133 4231 4240
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 133 4231 4244 "plugins/funind/functional_principles_types.ml" 133 4231 4249
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 130 4121 4125 "plugins/funind/functional_principles_types.ml" 133 4231 4249
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 135 4255 4261 "plugins/funind/functional_principles_types.ml" 135 4255 4272
type(
  Term.constr -> int
)
"plugins/funind/functional_principles_types.ml" 135 4255 4273 "plugins/funind/functional_principles_types.ml" 135 4255 4274
type(
  Term.constr
)
ident(
  def c "plugins/funind/functional_principles_types.ml" 136 4277 4281 "plugins/funind/functional_principles_types.ml" 139 4369 4394
)
"plugins/funind/functional_principles_types.ml" 136 4277 4287 "plugins/funind/functional_principles_types.ml" 136 4277 4299
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 136 4277 4300 "plugins/funind/functional_principles_types.ml" 136 4277 4301
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/functional_principles_types.ml" 135 4255 4273 "plugins/funind/functional_principles_types.ml" 135 4255 4274
)
"plugins/funind/functional_principles_types.ml" 136 4277 4287 "plugins/funind/functional_principles_types.ml" 136 4277 4301
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 137 4307 4319 "plugins/funind/functional_principles_types.ml" 137 4307 4320
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 137 4307 4321 "plugins/funind/functional_principles_types.ml" 137 4307 4324
type(
  int
)
ident(
  def num "plugins/funind/functional_principles_types.ml" 137 4307 4329 "plugins/funind/functional_principles_types.ml" 137 4307 4332
)
"plugins/funind/functional_principles_types.ml" 137 4307 4318 "plugins/funind/functional_principles_types.ml" 137 4307 4325
type(
  Names.inductive
)
"plugins/funind/functional_principles_types.ml" 137 4307 4315 "plugins/funind/functional_principles_types.ml" 137 4307 4325
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 137 4307 4329 "plugins/funind/functional_principles_types.ml" 137 4307 4332
type(
  int
)
ident(
  int_ref num "plugins/funind/functional_principles_types.ml" 137 4307 4321 "plugins/funind/functional_principles_types.ml" 137 4307 4324
)
"plugins/funind/functional_principles_types.ml" 138 4333 4352 "plugins/funind/functional_principles_types.ml" 138 4333 4353
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 138 4333 4354 "plugins/funind/functional_principles_types.ml" 138 4333 4357
type(
  int
)
ident(
  def num "plugins/funind/functional_principles_types.ml" 138 4333 4365 "plugins/funind/functional_principles_types.ml" 138 4333 4368
)
"plugins/funind/functional_principles_types.ml" 138 4333 4351 "plugins/funind/functional_principles_types.ml" 138 4333 4358
type(
  Names.inductive
)
"plugins/funind/functional_principles_types.ml" 138 4333 4359 "plugins/funind/functional_principles_types.ml" 138 4333 4360
type(
  int
)
"plugins/funind/functional_principles_types.ml" 138 4333 4350 "plugins/funind/functional_principles_types.ml" 138 4333 4361
type(
  Names.constructor
)
"plugins/funind/functional_principles_types.ml" 138 4333 4341 "plugins/funind/functional_principles_types.ml" 138 4333 4361
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 138 4333 4365 "plugins/funind/functional_principles_types.ml" 138 4333 4368
type(
  int
)
ident(
  int_ref num "plugins/funind/functional_principles_types.ml" 138 4333 4354 "plugins/funind/functional_principles_types.ml" 138 4333 4357
)
"plugins/funind/functional_principles_types.ml" 139 4369 4377 "plugins/funind/functional_principles_types.ml" 139 4369 4378
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 139 4369 4382 "plugins/funind/functional_principles_types.ml" 139 4369 4394
type(
  int
)
"plugins/funind/functional_principles_types.ml" 136 4277 4281 "plugins/funind/functional_principles_types.ml" 139 4369 4394
type(
  int
)
"plugins/funind/functional_principles_types.ml" 141 4400 4406 "plugins/funind/functional_principles_types.ml" 141 4400 4415
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 141 4400 4418 "plugins/funind/functional_principles_types.ml" 141 4400 4423
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_types.ml" 141 4400 4425 "plugins/funind/functional_principles_types.ml" 141 4400 4437
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/functional_principles_types.ml" 141 4400 4438 "plugins/funind/functional_principles_types.ml" 141 4400 4448
type(
  string
)
"plugins/funind/functional_principles_types.ml" 141 4400 4424 "plugins/funind/functional_principles_types.ml" 141 4400 4449
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 141 4400 4418 "plugins/funind/functional_principles_types.ml" 141 4400 4449
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 142 4453 4459 "plugins/funind/functional_principles_types.ml" 142 4453 4473
type(
  'e -> int -> Term.constr array -> Term.constr
)
"plugins/funind/functional_principles_types.ml" 142 4453 4474 "plugins/funind/functional_principles_types.ml" 142 4453 4475
type(
  'e
)
ident(
  def c "plugins/funind/functional_principles_types.ml" 142 4453 4476 "plugins/funind/functional_principles_types.ml" 145 4648 4655
)
"plugins/funind/functional_principles_types.ml" 142 4453 4476 "plugins/funind/functional_principles_types.ml" 142 4453 4477
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_types.ml" 142 4453 4478 "plugins/funind/functional_principles_types.ml" 145 4648 4655
)
"plugins/funind/functional_principles_types.ml" 142 4453 4478 "plugins/funind/functional_principles_types.ml" 142 4453 4482
type(
  Term.constr array
)
ident(
  def args "plugins/funind/functional_principles_types.ml" 143 4485 4489 "plugins/funind/functional_principles_types.ml" 145 4648 4655
)
"plugins/funind/functional_principles_types.ml" 143 4485 4493 "plugins/funind/functional_principles_types.ml" 143 4485 4496
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 143 4485 4499 "plugins/funind/functional_principles_types.ml" 143 4485 4504
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_types.ml" 143 4485 4505 "plugins/funind/functional_principles_types.ml" 143 4485 4515
type(
  Term.constr array
)
ident(
  int_ref rel_to_fun "plugins/funind/functional_principles_types.ml" 62 1873 1909 "plugins/funind/functional_principles_types.ml" 62 1873 1919
)
"plugins/funind/functional_principles_types.ml" 143 4485 4517 "plugins/funind/functional_principles_types.ml" 143 4485 4518
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 142 4453 4476 "plugins/funind/functional_principles_types.ml" 142 4453 4477
)
"plugins/funind/functional_principles_types.ml" 143 4485 4505 "plugins/funind/functional_principles_types.ml" 143 4485 4519
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 143 4485 4520 "plugins/funind/functional_principles_types.ml" 143 4485 4529
type(
  (Term.constr -> Term.constr) -> Term.constr array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_types.ml" 143 4485 4530 "plugins/funind/functional_principles_types.ml" 143 4485 4533
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 143 4485 4535 "plugins/funind/functional_principles_types.ml" 143 4485 4550
type(
  Term.constr array -> Term.constr array
)
ident(
  ext_ref Indfun_common.array_get_start
)
"plugins/funind/functional_principles_types.ml" 143 4485 4551 "plugins/funind/functional_principles_types.ml" 143 4485 4555
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_types.ml" 142 4453 4478 "plugins/funind/functional_principles_types.ml" 142 4453 4482
)
"plugins/funind/functional_principles_types.ml" 143 4485 4534 "plugins/funind/functional_principles_types.ml" 143 4485 4556
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_types.ml" 143 4485 4520 "plugins/funind/functional_principles_types.ml" 143 4485 4556
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_types.ml" 143 4485 4504 "plugins/funind/functional_principles_types.ml" 143 4485 4557
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_types.ml" 143 4485 4499 "plugins/funind/functional_principles_types.ml" 143 4485 4557
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 145 4648 4652 "plugins/funind/functional_principles_types.ml" 145 4648 4655
type(
  Term.constr
)
ident(
  int_ref res "plugins/funind/functional_principles_types.ml" 143 4485 4493 "plugins/funind/functional_principles_types.ml" 143 4485 4496
)
"plugins/funind/functional_principles_types.ml" 143 4485 4489 "plugins/funind/functional_principles_types.ml" 145 4648 4655
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 147 4661 4671 "plugins/funind/functional_principles_types.ml" 147 4661 4684
type(
  Term.constr -> bool
)
"plugins/funind/functional_principles_types.ml" 147 4661 4685 "plugins/funind/functional_principles_types.ml" 147 4661 4686
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 148 4690 4694 "plugins/funind/functional_principles_types.ml" 151 4787 4794
)
"plugins/funind/functional_principles_types.ml" 148 4690 4694 "plugins/funind/functional_principles_types.ml" 148 4690 4705
type(
  (bool -> Term.constr -> bool) -> bool -> Term.constr -> bool
)
ident(
  ext_ref Term.fold_constr
)
"plugins/funind/functional_principles_types.ml" 149 4706 4717 "plugins/funind/functional_principles_types.ml" 149 4706 4718
type(
  bool
)
ident(
  def b "plugins/funind/functional_principles_types.ml" 149 4706 4719 "plugins/funind/functional_principles_types.ml" 149 4706 4773
)
"plugins/funind/functional_principles_types.ml" 149 4706 4719 "plugins/funind/functional_principles_types.ml" 149 4706 4720
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 149 4706 4724 "plugins/funind/functional_principles_types.ml" 149 4706 4773
)
"plugins/funind/functional_principles_types.ml" 149 4706 4724 "plugins/funind/functional_principles_types.ml" 149 4706 4725
type(
  bool
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 149 4706 4717 "plugins/funind/functional_principles_types.ml" 149 4706 4718
)
"plugins/funind/functional_principles_types.ml" 149 4706 4726 "plugins/funind/functional_principles_types.ml" 149 4706 4728
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"plugins/funind/functional_principles_types.ml" 149 4706 4730 "plugins/funind/functional_principles_types.ml" 149 4706 4739
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 149 4706 4740 "plugins/funind/functional_principles_types.ml" 149 4706 4741
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 149 4706 4719 "plugins/funind/functional_principles_types.ml" 149 4706 4720
)
"plugins/funind/functional_principles_types.ml" 149 4706 4742 "plugins/funind/functional_principles_types.ml" 149 4706 4751
type(
  Term.constr
)
ident(
  int_ref dummy_var "plugins/funind/functional_principles_types.ml" 141 4400 4406 "plugins/funind/functional_principles_types.ml" 141 4400 4415
)
"plugins/funind/functional_principles_types.ml" 149 4706 4729 "plugins/funind/functional_principles_types.ml" 149 4706 4752
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 149 4706 4753 "plugins/funind/functional_principles_types.ml" 149 4706 4755
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"plugins/funind/functional_principles_types.ml" 149 4706 4757 "plugins/funind/functional_principles_types.ml" 149 4706 4770
type(
  Term.constr -> bool
)
ident(
  int_ref has_dummy_var "plugins/funind/functional_principles_types.ml" 147 4661 4671 "plugins/funind/functional_principles_types.ml" 147 4661 4684
)
"plugins/funind/functional_principles_types.ml" 149 4706 4771 "plugins/funind/functional_principles_types.ml" 149 4706 4772
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 149 4706 4719 "plugins/funind/functional_principles_types.ml" 149 4706 4720
)
"plugins/funind/functional_principles_types.ml" 149 4706 4756 "plugins/funind/functional_principles_types.ml" 149 4706 4773
call(
  tail
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 149 4706 4729 "plugins/funind/functional_principles_types.ml" 149 4706 4773
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 149 4706 4724 "plugins/funind/functional_principles_types.ml" 149 4706 4773
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 149 4706 4712 "plugins/funind/functional_principles_types.ml" 149 4706 4774
type(
  bool -> Term.constr -> bool
)
"plugins/funind/functional_principles_types.ml" 150 4775 4781 "plugins/funind/functional_principles_types.ml" 150 4775 4786
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 151 4787 4793 "plugins/funind/functional_principles_types.ml" 151 4787 4794
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 147 4661 4685 "plugins/funind/functional_principles_types.ml" 147 4661 4686
)
"plugins/funind/functional_principles_types.ml" 148 4690 4694 "plugins/funind/functional_principles_types.ml" 151 4787 4794
call(
  tail
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 153 4800 4833 "plugins/funind/functional_principles_types.ml" 153 4800 4839
type(
  bool
)
ident(
  def remove "plugins/funind/functional_principles_types.ml" 153 4800 4840 "plugins/funind/functional_principles_types.ml" 196 6391 6398
)
"plugins/funind/functional_principles_types.ml" 153 4800 4840 "plugins/funind/functional_principles_types.ml" 153 4800 4843
type(
  Environ.env
)
ident(
  def env "plugins/funind/functional_principles_types.ml" 153 4800 4844 "plugins/funind/functional_principles_types.ml" 196 6391 6398
)
"plugins/funind/functional_principles_types.ml" 153 4800 4844 "plugins/funind/functional_principles_types.ml" 153 4800 4853
type(
  Term.types
)
ident(
  def pre_princ "plugins/funind/functional_principles_types.ml" 153 4800 4854 "plugins/funind/functional_principles_types.ml" 196 6391 6398
)
"plugins/funind/functional_principles_types.ml" 154 4878 4887 "plugins/funind/functional_principles_types.ml" 154 4878 4901
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 154 4878 4902 "plugins/funind/functional_principles_types.ml" 154 4878 4903
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 154 4878 4886 "plugins/funind/functional_principles_types.ml" 154 4878 4904
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 154 4878 4886 "plugins/funind/functional_principles_types.ml" 154 4878 4911
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 155 4914 4926 "plugins/funind/functional_principles_types.ml" 155 4914 4938
type(
  Term.types -> (Term.types, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 155 4914 4939 "plugins/funind/functional_principles_types.ml" 155 4914 4948
type(
  Term.types
)
ident(
  int_ref pre_princ "plugins/funind/functional_principles_types.ml" 153 4800 4844 "plugins/funind/functional_principles_types.ml" 153 4800 4853
)
"plugins/funind/functional_principles_types.ml" 155 4914 4926 "plugins/funind/functional_principles_types.ml" 155 4914 4948
call(
  stack
)
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 156 4954 4961 "plugins/funind/functional_principles_types.ml" 156 4954 4962
type(
  int
)
ident(
  def n "plugins/funind/functional_principles_types.ml" 157 4966 4971 "plugins/funind/functional_principles_types.ml" 161 5122 5130
)
"plugins/funind/functional_principles_types.ml" 156 4954 4957 "plugins/funind/functional_principles_types.ml" 156 4954 4962
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 158 4977 4994 "plugins/funind/functional_principles_types.ml" 158 4977 5012
type(
  int -> Environ.env -> Term.rel_declaration
)
ident(
  ext_ref Environ.lookup_rel
)
"plugins/funind/functional_principles_types.ml" 158 4977 5013 "plugins/funind/functional_principles_types.ml" 158 4977 5014
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_types.ml" 156 4954 4961 "plugins/funind/functional_principles_types.ml" 156 4954 4962
)
"plugins/funind/functional_principles_types.ml" 158 4977 5015 "plugins/funind/functional_principles_types.ml" 158 4977 5018
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 153 4800 4840 "plugins/funind/functional_principles_types.ml" 153 4800 4843
)
"plugins/funind/functional_principles_types.ml" 158 4977 4994 "plugins/funind/functional_principles_types.ml" 158 4977 5018
call(
  stack
)
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 159 5024 5028 "plugins/funind/functional_principles_types.ml" 159 5024 5029
type(
  Names.name
)
"plugins/funind/functional_principles_types.ml" 159 5024 5030 "plugins/funind/functional_principles_types.ml" 159 5024 5031
type(
  Term.constr option
)
"plugins/funind/functional_principles_types.ml" 159 5024 5032 "plugins/funind/functional_principles_types.ml" 159 5024 5033
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 159 5024 5034 "plugins/funind/functional_principles_types.ml" 159 5024 5068
)
"plugins/funind/functional_principles_types.ml" 159 5024 5028 "plugins/funind/functional_principles_types.ml" 159 5024 5033
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 159 5024 5039 "plugins/funind/functional_principles_types.ml" 159 5024 5045
type(
  Term.types -> bool
)
ident(
  int_ref is_dom "plugins/funind/functional_principles_types.ml" 129 4104 4110 "plugins/funind/functional_principles_types.ml" 129 4104 4116
)
"plugins/funind/functional_principles_types.ml" 159 5024 5046 "plugins/funind/functional_principles_types.ml" 159 5024 5047
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 159 5024 5032 "plugins/funind/functional_principles_types.ml" 159 5024 5033
)
"plugins/funind/functional_principles_types.ml" 159 5024 5039 "plugins/funind/functional_principles_types.ml" 159 5024 5047
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 159 5024 5051 "plugins/funind/functional_principles_types.ml" 159 5024 5056
type(
  exn -> Term.types * Term.constr list
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 159 5024 5057 "plugins/funind/functional_principles_types.ml" 159 5024 5068
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 159 5024 5051 "plugins/funind/functional_principles_types.ml" 159 5024 5068
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 159 5024 5034 "plugins/funind/functional_principles_types.ml" 159 5024 5068
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 160 5069 5073 "plugins/funind/functional_principles_types.ml" 160 5069 5074
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 160 5069 5078 "plugins/funind/functional_principles_types.ml" 160 5069 5087
type(
  Term.types
)
ident(
  int_ref pre_princ "plugins/funind/functional_principles_types.ml" 153 4800 4844 "plugins/funind/functional_principles_types.ml" 153 4800 4853
)
"plugins/funind/functional_principles_types.ml" 160 5069 5088 "plugins/funind/functional_principles_types.ml" 160 5069 5090
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 160 5069 5078 "plugins/funind/functional_principles_types.ml" 160 5069 5090
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 158 4977 4988 "plugins/funind/functional_principles_types.ml" 160 5069 5090
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 160 5069 5096 "plugins/funind/functional_principles_types.ml" 160 5069 5105
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 160 5069 5109 "plugins/funind/functional_principles_types.ml" 160 5069 5121
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 157 4966 4971 "plugins/funind/functional_principles_types.ml" 161 5122 5130
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 162 5131 5139 "plugins/funind/functional_principles_types.ml" 162 5131 5140
type(
  Names.name
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 163 5149 5154 "plugins/funind/functional_principles_types.ml" 163 5149 5211
)
"plugins/funind/functional_principles_types.ml" 162 5131 5141 "plugins/funind/functional_principles_types.ml" 162 5131 5142
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 163 5149 5154 "plugins/funind/functional_principles_types.ml" 163 5149 5211
)
"plugins/funind/functional_principles_types.ml" 162 5131 5143 "plugins/funind/functional_principles_types.ml" 162 5131 5144
type(
  Term.types
)
ident(
  def b "plugins/funind/functional_principles_types.ml" 163 5149 5154 "plugins/funind/functional_principles_types.ml" 163 5149 5211
)
"plugins/funind/functional_principles_types.ml" 162 5131 5134 "plugins/funind/functional_principles_types.ml" 162 5131 5145
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 163 5149 5154 "plugins/funind/functional_principles_types.ml" 163 5149 5187
type(
  bool ->
  (Names.name * Term.types * Term.types -> Term.types) ->
  Environ.env ->
  Names.name -> Term.types -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type_for_binder "plugins/funind/functional_principles_types.ml" 198 6400 6406 "plugins/funind/functional_principles_types.ml" 198 6400 6439
)
"plugins/funind/functional_principles_types.ml" 163 5149 5188 "plugins/funind/functional_principles_types.ml" 163 5149 5194
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 153 4800 4833 "plugins/funind/functional_principles_types.ml" 153 4800 4839
)
"plugins/funind/functional_principles_types.ml" 163 5149 5195 "plugins/funind/functional_principles_types.ml" 163 5149 5201
type(
  Names.name * Term.types * Term.types -> Term.types
)
ident(
  ext_ref Term.mkProd
)
"plugins/funind/functional_principles_types.ml" 163 5149 5202 "plugins/funind/functional_principles_types.ml" 163 5149 5205
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 153 4800 4840 "plugins/funind/functional_principles_types.ml" 153 4800 4843
)
"plugins/funind/functional_principles_types.ml" 163 5149 5206 "plugins/funind/functional_principles_types.ml" 163 5149 5207
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 162 5131 5139 "plugins/funind/functional_principles_types.ml" 162 5131 5140
)
"plugins/funind/functional_principles_types.ml" 163 5149 5208 "plugins/funind/functional_principles_types.ml" 163 5149 5209
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 162 5131 5141 "plugins/funind/functional_principles_types.ml" 162 5131 5142
)
"plugins/funind/functional_principles_types.ml" 163 5149 5210 "plugins/funind/functional_principles_types.ml" 163 5149 5211
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 162 5131 5143 "plugins/funind/functional_principles_types.ml" 162 5131 5144
)
"plugins/funind/functional_principles_types.ml" 163 5149 5154 "plugins/funind/functional_principles_types.ml" 163 5149 5211
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 164 5212 5222 "plugins/funind/functional_principles_types.ml" 164 5212 5223
type(
  Names.name
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 165 5232 5237 "plugins/funind/functional_principles_types.ml" 165 5232 5297
)
"plugins/funind/functional_principles_types.ml" 164 5212 5224 "plugins/funind/functional_principles_types.ml" 164 5212 5225
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 165 5232 5237 "plugins/funind/functional_principles_types.ml" 165 5232 5297
)
"plugins/funind/functional_principles_types.ml" 164 5212 5226 "plugins/funind/functional_principles_types.ml" 164 5212 5227
type(
  Term.types
)
ident(
  def b "plugins/funind/functional_principles_types.ml" 165 5232 5237 "plugins/funind/functional_principles_types.ml" 165 5232 5297
)
"plugins/funind/functional_principles_types.ml" 164 5212 5215 "plugins/funind/functional_principles_types.ml" 164 5212 5228
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 165 5232 5237 "plugins/funind/functional_principles_types.ml" 165 5232 5270
type(
  bool ->
  (Names.name * Term.types * Term.types -> Term.types) ->
  Environ.env ->
  Names.name -> Term.types -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type_for_binder "plugins/funind/functional_principles_types.ml" 198 6400 6406 "plugins/funind/functional_principles_types.ml" 198 6400 6439
)
"plugins/funind/functional_principles_types.ml" 165 5232 5272 "plugins/funind/functional_principles_types.ml" 165 5232 5278
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 153 4800 4833 "plugins/funind/functional_principles_types.ml" 153 4800 4839
)
"plugins/funind/functional_principles_types.ml" 165 5232 5279 "plugins/funind/functional_principles_types.ml" 165 5232 5287
type(
  Names.name * Term.types * Term.types -> Term.types
)
ident(
  ext_ref Term.mkLambda
)
"plugins/funind/functional_principles_types.ml" 165 5232 5288 "plugins/funind/functional_principles_types.ml" 165 5232 5291
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 153 4800 4840 "plugins/funind/functional_principles_types.ml" 153 4800 4843
)
"plugins/funind/functional_principles_types.ml" 165 5232 5292 "plugins/funind/functional_principles_types.ml" 165 5232 5293
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 164 5212 5222 "plugins/funind/functional_principles_types.ml" 164 5212 5223
)
"plugins/funind/functional_principles_types.ml" 165 5232 5294 "plugins/funind/functional_principles_types.ml" 165 5232 5295
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 164 5212 5224 "plugins/funind/functional_principles_types.ml" 164 5212 5225
)
"plugins/funind/functional_principles_types.ml" 165 5232 5296 "plugins/funind/functional_principles_types.ml" 165 5232 5297
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 164 5212 5226 "plugins/funind/functional_principles_types.ml" 164 5212 5227
)
"plugins/funind/functional_principles_types.ml" 165 5232 5237 "plugins/funind/functional_principles_types.ml" 165 5232 5297
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 166 5298 5305 "plugins/funind/functional_principles_types.ml" 166 5298 5306
type(
  Names.inductive
)
"plugins/funind/functional_principles_types.ml" 166 5298 5301 "plugins/funind/functional_principles_types.ml" 166 5298 5306
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 166 5298 5319 "plugins/funind/functional_principles_types.ml" 166 5298 5320
type(
  Names.constructor
)
"plugins/funind/functional_principles_types.ml" 166 5298 5309 "plugins/funind/functional_principles_types.ml" 166 5298 5320
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 166 5298 5301 "plugins/funind/functional_principles_types.ml" 166 5298 5320
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 166 5298 5326 "plugins/funind/functional_principles_types.ml" 166 5298 5332
type(
  Term.types -> bool
)
ident(
  int_ref is_dom "plugins/funind/functional_principles_types.ml" 129 4104 4110 "plugins/funind/functional_principles_types.ml" 129 4104 4116
)
"plugins/funind/functional_principles_types.ml" 166 5298 5333 "plugins/funind/functional_principles_types.ml" 166 5298 5342
type(
  Term.types
)
ident(
  int_ref pre_princ "plugins/funind/functional_principles_types.ml" 153 4800 4844 "plugins/funind/functional_principles_types.ml" 153 4800 4853
)
"plugins/funind/functional_principles_types.ml" 166 5298 5326 "plugins/funind/functional_principles_types.ml" 166 5298 5342
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 166 5298 5346 "plugins/funind/functional_principles_types.ml" 166 5298 5351
type(
  exn -> Term.types * Term.constr list
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 166 5298 5352 "plugins/funind/functional_principles_types.ml" 166 5298 5363
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 166 5298 5346 "plugins/funind/functional_principles_types.ml" 166 5298 5363
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 166 5298 5321 "plugins/funind/functional_principles_types.ml" 166 5298 5363
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 167 5364 5371 "plugins/funind/functional_principles_types.ml" 167 5364 5372
type(
  Term.types
)
ident(
  def f "plugins/funind/functional_principles_types.ml" 167 5364 5379 "plugins/funind/functional_principles_types.ml" 170 5486 5573
)
"plugins/funind/functional_principles_types.ml" 167 5364 5373 "plugins/funind/functional_principles_types.ml" 167 5364 5377
type(
  Term.types array
)
ident(
  def args "plugins/funind/functional_principles_types.ml" 167 5364 5379 "plugins/funind/functional_principles_types.ml" 170 5486 5573
)
"plugins/funind/functional_principles_types.ml" 167 5364 5367 "plugins/funind/functional_principles_types.ml" 167 5364 5378
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 167 5364 5384 "plugins/funind/functional_principles_types.ml" 167 5364 5390
type(
  Term.types -> bool
)
ident(
  int_ref is_dom "plugins/funind/functional_principles_types.ml" 129 4104 4110 "plugins/funind/functional_principles_types.ml" 129 4104 4116
)
"plugins/funind/functional_principles_types.ml" 167 5364 5391 "plugins/funind/functional_principles_types.ml" 167 5364 5392
type(
  Term.types
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 167 5364 5371 "plugins/funind/functional_principles_types.ml" 167 5364 5372
)
"plugins/funind/functional_principles_types.ml" 167 5364 5384 "plugins/funind/functional_principles_types.ml" 167 5364 5392
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 168 5396 5405 "plugins/funind/functional_principles_types.ml" 168 5396 5422
type(
  int
)
"plugins/funind/functional_principles_types.ml" 168 5396 5425 "plugins/funind/functional_principles_types.ml" 168 5396 5432
type(
  Term.types -> int
)
ident(
  ext_ref Term.destRel
)
"plugins/funind/functional_principles_types.ml" 168 5396 5434 "plugins/funind/functional_principles_types.ml" 168 5396 5444
type(
  Term.types array -> Term.types
)
ident(
  ext_ref Util.array_last
)
"plugins/funind/functional_principles_types.ml" 168 5396 5445 "plugins/funind/functional_principles_types.ml" 168 5396 5449
type(
  Term.types array
)
ident(
  int_ref args "plugins/funind/functional_principles_types.ml" 167 5364 5373 "plugins/funind/functional_principles_types.ml" 167 5364 5377
)
"plugins/funind/functional_principles_types.ml" 168 5396 5433 "plugins/funind/functional_principles_types.ml" 168 5396 5450
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 168 5396 5425 "plugins/funind/functional_principles_types.ml" 168 5396 5450
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_types.ml" 169 5454 5463 "plugins/funind/functional_principles_types.ml" 169 5454 5466
type(
  int
)
"plugins/funind/functional_principles_types.ml" 169 5454 5469 "plugins/funind/functional_principles_types.ml" 169 5454 5480
type(
  Term.types -> int
)
ident(
  int_ref get_fun_num "plugins/funind/functional_principles_types.ml" 135 4255 4261 "plugins/funind/functional_principles_types.ml" 135 4255 4272
)
"plugins/funind/functional_principles_types.ml" 169 5454 5481 "plugins/funind/functional_principles_types.ml" 169 5454 5482
type(
  Term.types
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 167 5364 5371 "plugins/funind/functional_principles_types.ml" 167 5364 5372
)
"plugins/funind/functional_principles_types.ml" 169 5454 5469 "plugins/funind/functional_principles_types.ml" 169 5454 5482
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_types.ml" 170 5486 5491 "plugins/funind/functional_principles_types.ml" 170 5486 5496
type(
  exn -> Term.types * Term.constr list
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 170 5486 5520 "plugins/funind/functional_principles_types.ml" 170 5486 5537
type(
  int
)
ident(
  int_ref var_to_be_removed "plugins/funind/functional_principles_types.ml" 168 5396 5405 "plugins/funind/functional_principles_types.ml" 168 5396 5422
)
"plugins/funind/functional_principles_types.ml" 170 5486 5538 "plugins/funind/functional_principles_types.ml" 170 5486 5552
type(
  Term.types -> int -> Term.types array -> Term.constr
)
ident(
  int_ref mk_replacement "plugins/funind/functional_principles_types.ml" 142 4453 4459 "plugins/funind/functional_principles_types.ml" 142 4453 4473
)
"plugins/funind/functional_principles_types.ml" 170 5486 5553 "plugins/funind/functional_principles_types.ml" 170 5486 5562
type(
  Term.types
)
ident(
  int_ref pre_princ "plugins/funind/functional_principles_types.ml" 153 4800 4844 "plugins/funind/functional_principles_types.ml" 153 4800 4853
)
"plugins/funind/functional_principles_types.ml" 170 5486 5563 "plugins/funind/functional_principles_types.ml" 170 5486 5566
type(
  int
)
ident(
  int_ref num "plugins/funind/functional_principles_types.ml" 169 5454 5463 "plugins/funind/functional_principles_types.ml" 169 5454 5466
)
"plugins/funind/functional_principles_types.ml" 170 5486 5567 "plugins/funind/functional_principles_types.ml" 170 5486 5571
type(
  Term.types array
)
ident(
  int_ref args "plugins/funind/functional_principles_types.ml" 167 5364 5373 "plugins/funind/functional_principles_types.ml" 167 5364 5377
)
"plugins/funind/functional_principles_types.ml" 170 5486 5538 "plugins/funind/functional_principles_types.ml" 170 5486 5571
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 170 5486 5497 "plugins/funind/functional_principles_types.ml" 170 5486 5573
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 170 5486 5491 "plugins/funind/functional_principles_types.ml" 170 5486 5573
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 169 5454 5459 "plugins/funind/functional_principles_types.ml" 170 5486 5573
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 168 5396 5401 "plugins/funind/functional_principles_types.ml" 170 5486 5573
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 167 5364 5379 "plugins/funind/functional_principles_types.ml" 170 5486 5573
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 171 5574 5581 "plugins/funind/functional_principles_types.ml" 171 5574 5582
type(
  Term.types
)
ident(
  def f "plugins/funind/functional_principles_types.ml" 172 5592 5597 "plugins/funind/functional_principles_types.ml" 184 5939 6010
)
"plugins/funind/functional_principles_types.ml" 171 5574 5583 "plugins/funind/functional_principles_types.ml" 171 5574 5587
type(
  Term.types array
)
ident(
  def args "plugins/funind/functional_principles_types.ml" 172 5592 5597 "plugins/funind/functional_principles_types.ml" 184 5939 6010
)
"plugins/funind/functional_principles_types.ml" 171 5574 5577 "plugins/funind/functional_principles_types.ml" 171 5574 5588
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 172 5592 5601 "plugins/funind/functional_principles_types.ml" 172 5592 5605
type(
  Term.types array
)
"plugins/funind/functional_principles_types.ml" 173 5608 5618 "plugins/funind/functional_principles_types.ml" 173 5608 5624
type(
  Term.types -> bool
)
ident(
  int_ref is_pte "plugins/funind/functional_principles_types.ml" 108 3607 3613 "plugins/funind/functional_principles_types.ml" 108 3607 3619
)
"plugins/funind/functional_principles_types.ml" 173 5608 5625 "plugins/funind/functional_principles_types.ml" 173 5608 5626
type(
  Term.types
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 171 5574 5581 "plugins/funind/functional_principles_types.ml" 171 5574 5582
)
"plugins/funind/functional_principles_types.ml" 173 5608 5618 "plugins/funind/functional_principles_types.ml" 173 5608 5626
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 173 5608 5627 "plugins/funind/functional_principles_types.ml" 173 5608 5629
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_types.ml" 173 5608 5630 "plugins/funind/functional_principles_types.ml" 173 5608 5636
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 153 4800 4833 "plugins/funind/functional_principles_types.ml" 153 4800 4839
)
"plugins/funind/functional_principles_types.ml" 173 5608 5618 "plugins/funind/functional_principles_types.ml" 173 5608 5636
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 174 5637 5649 "plugins/funind/functional_principles_types.ml" 174 5637 5664
type(
  Term.types array -> Term.types array
)
ident(
  ext_ref Indfun_common.array_get_start
)
"plugins/funind/functional_principles_types.ml" 174 5637 5665 "plugins/funind/functional_principles_types.ml" 174 5637 5669
type(
  Term.types array
)
ident(
  int_ref args "plugins/funind/functional_principles_types.ml" 171 5574 5583 "plugins/funind/functional_principles_types.ml" 171 5574 5587
)
"plugins/funind/functional_principles_types.ml" 174 5637 5649 "plugins/funind/functional_principles_types.ml" 174 5637 5669
call(
  stack
)
type(
  Term.types array
)
"plugins/funind/functional_principles_types.ml" 175 5670 5682 "plugins/funind/functional_principles_types.ml" 175 5670 5686
type(
  Term.types array
)
ident(
  int_ref args "plugins/funind/functional_principles_types.ml" 171 5574 5583 "plugins/funind/functional_principles_types.ml" 171 5574 5587
)
"plugins/funind/functional_principles_types.ml" 173 5608 5615 "plugins/funind/functional_principles_types.ml" 175 5670 5686
type(
  Term.types array
)
"plugins/funind/functional_principles_types.ml" 177 5695 5704 "plugins/funind/functional_principles_types.ml" 177 5695 5712
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 177 5695 5713 "plugins/funind/functional_principles_types.ml" 177 5695 5730
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 177 5695 5704 "plugins/funind/functional_principles_types.ml" 177 5695 5730
type(
  Term.types list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 178 5733 5740 "plugins/funind/functional_principles_types.ml" 178 5733 5756
type(
  (Term.types ->
   Term.types list * Term.constr list -> Term.types list * Term.constr list) ->
  Term.types array ->
  Term.types list * Term.constr list -> Term.types list * Term.constr list
)
ident(
  ext_ref Array.fold_right
)
"plugins/funind/functional_principles_types.ml" 178 5733 5758 "plugins/funind/functional_principles_types.ml" 178 5733 5789
type(
  bool ->
  Environ.env ->
  Term.types ->
  Term.types list * Term.constr list -> Term.types list * Term.constr list
)
ident(
  int_ref compute_new_princ_type_with_acc "plugins/funind/functional_principles_types.ml" 255 8999 9006 "plugins/funind/functional_principles_types.ml" 255 8999 9037
)
"plugins/funind/functional_principles_types.ml" 178 5733 5790 "plugins/funind/functional_principles_types.ml" 178 5733 5796
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 153 4800 4833 "plugins/funind/functional_principles_types.ml" 153 4800 4839
)
"plugins/funind/functional_principles_types.ml" 178 5733 5797 "plugins/funind/functional_principles_types.ml" 178 5733 5800
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 153 4800 4840 "plugins/funind/functional_principles_types.ml" 153 4800 4843
)
"plugins/funind/functional_principles_types.ml" 178 5733 5757 "plugins/funind/functional_principles_types.ml" 178 5733 5801
call(
  stack
)
type(
  Term.types ->
  Term.types list * Term.constr list -> Term.types list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 179 5802 5804 "plugins/funind/functional_principles_types.ml" 179 5802 5808
type(
  Term.types array
)
ident(
  int_ref args "plugins/funind/functional_principles_types.ml" 172 5592 5601 "plugins/funind/functional_principles_types.ml" 172 5592 5605
)
"plugins/funind/functional_principles_types.ml" 180 5809 5812 "plugins/funind/functional_principles_types.ml" 180 5809 5814
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 180 5809 5815 "plugins/funind/functional_principles_types.ml" 180 5809 5817
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 180 5809 5811 "plugins/funind/functional_principles_types.ml" 180 5809 5818
type(
  Term.types list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 178 5733 5740 "plugins/funind/functional_principles_types.ml" 180 5809 5818
call(
  stack
)
type(
  Term.types list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 182 5827 5836 "plugins/funind/functional_principles_types.ml" 182 5827 5841
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 182 5827 5842 "plugins/funind/functional_principles_types.ml" 182 5827 5866
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 182 5827 5836 "plugins/funind/functional_principles_types.ml" 182 5827 5866
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 182 5827 5869 "plugins/funind/functional_principles_types.ml" 182 5827 5891
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 182 5827 5892 "plugins/funind/functional_principles_types.ml" 182 5827 5898
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 153 4800 4833 "plugins/funind/functional_principles_types.ml" 153 4800 4839
)
"plugins/funind/functional_principles_types.ml" 182 5827 5899 "plugins/funind/functional_principles_types.ml" 182 5827 5902
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 153 4800 4840 "plugins/funind/functional_principles_types.ml" 153 4800 4843
)
"plugins/funind/functional_principles_types.ml" 182 5827 5903 "plugins/funind/functional_principles_types.ml" 182 5827 5904
type(
  Term.types
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 171 5574 5581 "plugins/funind/functional_principles_types.ml" 171 5574 5582
)
"plugins/funind/functional_principles_types.ml" 182 5827 5869 "plugins/funind/functional_principles_types.ml" 182 5827 5904
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 183 5908 5913 "plugins/funind/functional_principles_types.ml" 183 5908 5920
type(
  Term.types * Term.types list -> Term.types
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_types.ml" 183 5908 5921 "plugins/funind/functional_principles_types.ml" 183 5908 5926
type(
  Term.types
)
ident(
  int_ref new_f "plugins/funind/functional_principles_types.ml" 182 5827 5836 "plugins/funind/functional_principles_types.ml" 182 5827 5841
)
"plugins/funind/functional_principles_types.ml" 183 5908 5928 "plugins/funind/functional_principles_types.ml" 183 5908 5936
type(
  Term.types list
)
ident(
  int_ref new_args "plugins/funind/functional_principles_types.ml" 177 5695 5704 "plugins/funind/functional_principles_types.ml" 177 5695 5712
)
"plugins/funind/functional_principles_types.ml" 183 5908 5920 "plugins/funind/functional_principles_types.ml" 183 5908 5937
type(
  Term.types * Term.types list
)
"plugins/funind/functional_principles_types.ml" 183 5908 5913 "plugins/funind/functional_principles_types.ml" 183 5908 5937
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 184 5939 5944 "plugins/funind/functional_principles_types.ml" 184 5939 5957
type(
  (Term.constr -> Term.constr -> bool) ->
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Indfun_common.list_union_eq
)
"plugins/funind/functional_principles_types.ml" 184 5939 5958 "plugins/funind/functional_principles_types.ml" 184 5939 5967
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 184 5939 5968 "plugins/funind/functional_principles_types.ml" 184 5939 5992
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_f "plugins/funind/functional_principles_types.ml" 182 5827 5842 "plugins/funind/functional_principles_types.ml" 182 5827 5866
)
"plugins/funind/functional_principles_types.ml" 184 5939 5993 "plugins/funind/functional_principles_types.ml" 184 5939 6010
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove "plugins/funind/functional_principles_types.ml" 177 5695 5713 "plugins/funind/functional_principles_types.ml" 177 5695 5730
)
"plugins/funind/functional_principles_types.ml" 184 5939 5944 "plugins/funind/functional_principles_types.ml" 184 5939 6010
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 183 5908 5913 "plugins/funind/functional_principles_types.ml" 184 5939 6010
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 182 5827 5832 "plugins/funind/functional_principles_types.ml" 184 5939 6010
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 177 5695 5700 "plugins/funind/functional_principles_types.ml" 184 5939 6010
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 172 5592 5597 "plugins/funind/functional_principles_types.ml" 184 5939 6010
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 185 6011 6020 "plugins/funind/functional_principles_types.ml" 185 6011 6021
type(
  Names.name
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 186 6032 6037 "plugins/funind/functional_principles_types.ml" 186 6032 6088
)
"plugins/funind/functional_principles_types.ml" 185 6011 6022 "plugins/funind/functional_principles_types.ml" 185 6011 6023
type(
  Term.types
)
ident(
  def v "plugins/funind/functional_principles_types.ml" 186 6032 6037 "plugins/funind/functional_principles_types.ml" 186 6032 6088
)
"plugins/funind/functional_principles_types.ml" 185 6011 6024 "plugins/funind/functional_principles_types.ml" 185 6011 6025
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 186 6032 6037 "plugins/funind/functional_principles_types.ml" 186 6032 6088
)
"plugins/funind/functional_principles_types.ml" 185 6011 6026 "plugins/funind/functional_principles_types.ml" 185 6011 6027
type(
  Term.types
)
ident(
  def b "plugins/funind/functional_principles_types.ml" 186 6032 6037 "plugins/funind/functional_principles_types.ml" 186 6032 6088
)
"plugins/funind/functional_principles_types.ml" 185 6011 6014 "plugins/funind/functional_principles_types.ml" 185 6011 6028
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 186 6032 6037 "plugins/funind/functional_principles_types.ml" 186 6032 6069
type(
  bool ->
  Environ.env ->
  Names.name ->
  Term.types -> Term.types -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type_for_letin "plugins/funind/functional_principles_types.ml" 226 7642 7648 "plugins/funind/functional_principles_types.ml" 226 7642 7680
)
"plugins/funind/functional_principles_types.ml" 186 6032 6070 "plugins/funind/functional_principles_types.ml" 186 6032 6076
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 153 4800 4833 "plugins/funind/functional_principles_types.ml" 153 4800 4839
)
"plugins/funind/functional_principles_types.ml" 186 6032 6077 "plugins/funind/functional_principles_types.ml" 186 6032 6080
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 153 4800 4840 "plugins/funind/functional_principles_types.ml" 153 4800 4843
)
"plugins/funind/functional_principles_types.ml" 186 6032 6081 "plugins/funind/functional_principles_types.ml" 186 6032 6082
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 185 6011 6020 "plugins/funind/functional_principles_types.ml" 185 6011 6021
)
"plugins/funind/functional_principles_types.ml" 186 6032 6083 "plugins/funind/functional_principles_types.ml" 186 6032 6084
type(
  Term.types
)
ident(
  int_ref v "plugins/funind/functional_principles_types.ml" 185 6011 6022 "plugins/funind/functional_principles_types.ml" 185 6011 6023
)
"plugins/funind/functional_principles_types.ml" 186 6032 6085 "plugins/funind/functional_principles_types.ml" 186 6032 6086
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 185 6011 6024 "plugins/funind/functional_principles_types.ml" 185 6011 6025
)
"plugins/funind/functional_principles_types.ml" 186 6032 6087 "plugins/funind/functional_principles_types.ml" 186 6032 6088
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 185 6011 6026 "plugins/funind/functional_principles_types.ml" 185 6011 6027
)
"plugins/funind/functional_principles_types.ml" 186 6032 6037 "plugins/funind/functional_principles_types.ml" 186 6032 6088
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 187 6089 6092 "plugins/funind/functional_principles_types.ml" 187 6089 6093
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 187 6089 6097 "plugins/funind/functional_principles_types.ml" 187 6089 6106
type(
  Term.types
)
ident(
  int_ref pre_princ "plugins/funind/functional_principles_types.ml" 153 4800 4844 "plugins/funind/functional_principles_types.ml" 153 4800 4853
)
"plugins/funind/functional_principles_types.ml" 187 6089 6107 "plugins/funind/functional_principles_types.ml" 187 6089 6109
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 187 6089 6097 "plugins/funind/functional_principles_types.ml" 187 6089 6109
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 155 4914 4920 "plugins/funind/functional_principles_types.ml" 187 6089 6109
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 196 6391 6395 "plugins/funind/functional_principles_types.ml" 196 6391 6398
type(
  Term.types * Term.constr list
)
ident(
  int_ref res "plugins/funind/functional_principles_types.ml" 154 4878 4886 "plugins/funind/functional_principles_types.ml" 154 4878 4911
)
"plugins/funind/functional_principles_types.ml" 154 4878 4882 "plugins/funind/functional_principles_types.ml" 196 6391 6398
type(
  Term.types * Term.constr list
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 198 6400 6406 "plugins/funind/functional_principles_types.ml" 198 6400 6439
type(
  bool ->
  (Names.name * Term.types * Term.types -> Term.types) ->
  Environ.env ->
  Names.name -> Term.types -> Term.types -> Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 198 6400 6440 "plugins/funind/functional_principles_types.ml" 198 6400 6446
type(
  bool
)
ident(
  def remove "plugins/funind/functional_principles_types.ml" 198 6400 6447 "plugins/funind/functional_principles_types.ml" 225 7634 7641
)
"plugins/funind/functional_principles_types.ml" 198 6400 6447 "plugins/funind/functional_principles_types.ml" 198 6400 6455
type(
  Names.name * Term.types * Term.types -> Term.types
)
ident(
  def bind_fun "plugins/funind/functional_principles_types.ml" 198 6400 6456 "plugins/funind/functional_principles_types.ml" 225 7634 7641
)
"plugins/funind/functional_principles_types.ml" 198 6400 6456 "plugins/funind/functional_principles_types.ml" 198 6400 6459
type(
  Environ.env
)
ident(
  def env "plugins/funind/functional_principles_types.ml" 198 6400 6460 "plugins/funind/functional_principles_types.ml" 225 7634 7641
)
"plugins/funind/functional_principles_types.ml" 198 6400 6460 "plugins/funind/functional_principles_types.ml" 198 6400 6461
type(
  Names.name
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 198 6400 6462 "plugins/funind/functional_principles_types.ml" 225 7634 7641
)
"plugins/funind/functional_principles_types.ml" 198 6400 6462 "plugins/funind/functional_principles_types.ml" 198 6400 6463
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 198 6400 6464 "plugins/funind/functional_principles_types.ml" 225 7634 7641
)
"plugins/funind/functional_principles_types.ml" 198 6400 6464 "plugins/funind/functional_principles_types.ml" 198 6400 6465
type(
  Term.types
)
ident(
  def b "plugins/funind/functional_principles_types.ml" 199 6468 6472 "plugins/funind/functional_principles_types.ml" 225 7634 7641
)
"plugins/funind/functional_principles_types.ml" 201 6488 6493 "plugins/funind/functional_principles_types.ml" 201 6488 6498
type(
  Term.types
)
ident(
  def new_t "plugins/funind/functional_principles_types.ml" 202 6565 6566 "plugins/funind/functional_principles_types.ml" 214 7063 7068
)
"plugins/funind/functional_principles_types.ml" 201 6488 6499 "plugins/funind/functional_principles_types.ml" 201 6488 6523
type(
  Term.constr list
)
ident(
  def binders_to_remove_from_t "plugins/funind/functional_principles_types.ml" 202 6565 6566 "plugins/funind/functional_principles_types.ml" 214 7063 7068
)
"plugins/funind/functional_principles_types.ml" 201 6488 6493 "plugins/funind/functional_principles_types.ml" 201 6488 6523
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 201 6488 6526 "plugins/funind/functional_principles_types.ml" 201 6488 6548
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 201 6488 6549 "plugins/funind/functional_principles_types.ml" 201 6488 6555
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 198 6400 6440 "plugins/funind/functional_principles_types.ml" 198 6400 6446
)
"plugins/funind/functional_principles_types.ml" 201 6488 6556 "plugins/funind/functional_principles_types.ml" 201 6488 6559
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 198 6400 6456 "plugins/funind/functional_principles_types.ml" 198 6400 6459
)
"plugins/funind/functional_principles_types.ml" 201 6488 6560 "plugins/funind/functional_principles_types.ml" 201 6488 6561
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 198 6400 6462 "plugins/funind/functional_principles_types.ml" 198 6400 6463
)
"plugins/funind/functional_principles_types.ml" 201 6488 6526 "plugins/funind/functional_principles_types.ml" 201 6488 6561
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 202 6565 6570 "plugins/funind/functional_principles_types.ml" 202 6565 6575
type(
  Names.name
)
ident(
  def new_x "plugins/funind/functional_principles_types.ml" 203 6620 6621 "plugins/funind/functional_principles_types.ml" 214 7063 7068
)
"plugins/funind/functional_principles_types.ml" 202 6565 6585 "plugins/funind/functional_principles_types.ml" 202 6565 6593
type(
  Names.identifier list -> ?default:string -> Names.name -> Names.name
)
ident(
  ext_ref Indfun_common.get_name
)
"plugins/funind/functional_principles_types.ml" 202 6565 6595 "plugins/funind/functional_principles_types.ml" 202 6565 6609
type(
  Environ.env -> Names.identifier list
)
ident(
  ext_ref Termops.ids_of_context
)
"plugins/funind/functional_principles_types.ml" 202 6565 6610 "plugins/funind/functional_principles_types.ml" 202 6565 6613
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 198 6400 6456 "plugins/funind/functional_principles_types.ml" 198 6400 6459
)
"plugins/funind/functional_principles_types.ml" 202 6565 6594 "plugins/funind/functional_principles_types.ml" 202 6565 6614
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 202 6565 6615 "plugins/funind/functional_principles_types.ml" 202 6565 6616
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 198 6400 6460 "plugins/funind/functional_principles_types.ml" 198 6400 6461
)
"plugins/funind/functional_principles_types.ml" 202 6565 6585 "plugins/funind/functional_principles_types.ml" 202 6565 6616
call(
  stack
)
type(
  Names.name
)
type(
  Names.name
)
"plugins/funind/functional_principles_types.ml" 203 6620 6625 "plugins/funind/functional_principles_types.ml" 203 6620 6632
type(
  Environ.env
)
ident(
  def new_env "plugins/funind/functional_principles_types.ml" 204 6670 6671 "plugins/funind/functional_principles_types.ml" 214 7063 7068
)
"plugins/funind/functional_principles_types.ml" 203 6620 6635 "plugins/funind/functional_principles_types.ml" 203 6620 6651
type(
  Term.rel_declaration -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel
)
"plugins/funind/functional_principles_types.ml" 203 6620 6653 "plugins/funind/functional_principles_types.ml" 203 6620 6654
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 198 6400 6460 "plugins/funind/functional_principles_types.ml" 198 6400 6461
)
"plugins/funind/functional_principles_types.ml" 203 6620 6655 "plugins/funind/functional_principles_types.ml" 203 6620 6659
type(
  Term.constr option
)
"plugins/funind/functional_principles_types.ml" 203 6620 6660 "plugins/funind/functional_principles_types.ml" 203 6620 6661
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 198 6400 6462 "plugins/funind/functional_principles_types.ml" 198 6400 6463
)
"plugins/funind/functional_principles_types.ml" 203 6620 6652 "plugins/funind/functional_principles_types.ml" 203 6620 6662
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 203 6620 6663 "plugins/funind/functional_principles_types.ml" 203 6620 6666
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 198 6400 6456 "plugins/funind/functional_principles_types.ml" 198 6400 6459
)
"plugins/funind/functional_principles_types.ml" 203 6620 6635 "plugins/funind/functional_principles_types.ml" 203 6620 6666
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 204 6670 6675 "plugins/funind/functional_principles_types.ml" 204 6670 6680
type(
  Term.types
)
ident(
  def new_b "plugins/funind/functional_principles_types.ml" 205 6751 6753 "plugins/funind/functional_principles_types.ml" 214 7063 7068
)
"plugins/funind/functional_principles_types.ml" 204 6670 6681 "plugins/funind/functional_principles_types.ml" 204 6670 6705
type(
  Term.constr list
)
ident(
  def binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 205 6751 6753 "plugins/funind/functional_principles_types.ml" 214 7063 7068
)
"plugins/funind/functional_principles_types.ml" 204 6670 6675 "plugins/funind/functional_principles_types.ml" 204 6670 6705
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 204 6670 6708 "plugins/funind/functional_principles_types.ml" 204 6670 6730
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 204 6670 6731 "plugins/funind/functional_principles_types.ml" 204 6670 6737
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 198 6400 6440 "plugins/funind/functional_principles_types.ml" 198 6400 6446
)
"plugins/funind/functional_principles_types.ml" 204 6670 6738 "plugins/funind/functional_principles_types.ml" 204 6670 6745
type(
  Environ.env
)
ident(
  int_ref new_env "plugins/funind/functional_principles_types.ml" 203 6620 6625 "plugins/funind/functional_principles_types.ml" 203 6620 6632
)
"plugins/funind/functional_principles_types.ml" 204 6670 6746 "plugins/funind/functional_principles_types.ml" 204 6670 6747
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 198 6400 6464 "plugins/funind/functional_principles_types.ml" 198 6400 6465
)
"plugins/funind/functional_principles_types.ml" 204 6670 6708 "plugins/funind/functional_principles_types.ml" 204 6670 6747
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 205 6751 6756 "plugins/funind/functional_principles_types.ml" 205 6751 6767
type(
  (Term.constr -> bool) -> Term.constr list -> bool
)
ident(
  ext_ref List.exists
)
"plugins/funind/functional_principles_types.ml" 205 6751 6769 "plugins/funind/functional_principles_types.ml" 205 6751 6778
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 205 6751 6780 "plugins/funind/functional_principles_types.ml" 205 6751 6785
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_types.ml" 205 6751 6786 "plugins/funind/functional_principles_types.ml" 205 6751 6787
type(
  int
)
"plugins/funind/functional_principles_types.ml" 205 6751 6779 "plugins/funind/functional_principles_types.ml" 205 6751 6788
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 205 6751 6768 "plugins/funind/functional_principles_types.ml" 205 6751 6789
call(
  stack
)
type(
  Term.constr -> bool
)
"plugins/funind/functional_principles_types.ml" 205 6751 6790 "plugins/funind/functional_principles_types.ml" 205 6751 6814
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 204 6670 6681 "plugins/funind/functional_principles_types.ml" 204 6670 6705
)
"plugins/funind/functional_principles_types.ml" 205 6751 6756 "plugins/funind/functional_principles_types.ml" 205 6751 6814
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 206 6815 6823 "plugins/funind/functional_principles_types.ml" 206 6815 6826
type(
  Term.types -> Term.types
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 206 6815 6827 "plugins/funind/functional_principles_types.ml" 206 6815 6832
type(
  Term.types
)
ident(
  int_ref new_b "plugins/funind/functional_principles_types.ml" 204 6670 6675 "plugins/funind/functional_principles_types.ml" 204 6670 6680
)
"plugins/funind/functional_principles_types.ml" 206 6815 6822 "plugins/funind/functional_principles_types.ml" 206 6815 6833
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 206 6815 6834 "plugins/funind/functional_principles_types.ml" 206 6815 6844
type(
  (Term.constr -> bool) ->
  (Term.constr -> Term.constr) -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Indfun_common.filter_map
)
"plugins/funind/functional_principles_types.ml" 206 6815 6846 "plugins/funind/functional_principles_types.ml" 206 6815 6855
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 206 6815 6857 "plugins/funind/functional_principles_types.ml" 206 6815 6862
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_types.ml" 206 6815 6863 "plugins/funind/functional_principles_types.ml" 206 6815 6864
type(
  int
)
"plugins/funind/functional_principles_types.ml" 206 6815 6856 "plugins/funind/functional_principles_types.ml" 206 6815 6865
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 206 6815 6845 "plugins/funind/functional_principles_types.ml" 206 6815 6866
call(
  stack
)
type(
  Term.constr -> bool
)
"plugins/funind/functional_principles_types.ml" 206 6815 6867 "plugins/funind/functional_principles_types.ml" 206 6815 6870
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 206 6815 6871 "plugins/funind/functional_principles_types.ml" 206 6815 6895
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 204 6670 6681 "plugins/funind/functional_principles_types.ml" 204 6670 6705
)
"plugins/funind/functional_principles_types.ml" 206 6815 6834 "plugins/funind/functional_principles_types.ml" 206 6815 6895
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 206 6815 6822 "plugins/funind/functional_principles_types.ml" 206 6815 6895
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 209 6909 6915 "plugins/funind/functional_principles_types.ml" 209 6909 6923
type(
  Names.name * Term.types * Term.types -> Term.types
)
ident(
  int_ref bind_fun "plugins/funind/functional_principles_types.ml" 198 6400 6447 "plugins/funind/functional_principles_types.ml" 198 6400 6455
)
"plugins/funind/functional_principles_types.ml" 209 6909 6924 "plugins/funind/functional_principles_types.ml" 209 6909 6929
type(
  Names.name
)
ident(
  int_ref new_x "plugins/funind/functional_principles_types.ml" 202 6565 6570 "plugins/funind/functional_principles_types.ml" 202 6565 6575
)
"plugins/funind/functional_principles_types.ml" 209 6909 6930 "plugins/funind/functional_principles_types.ml" 209 6909 6935
type(
  Term.types
)
ident(
  int_ref new_t "plugins/funind/functional_principles_types.ml" 201 6488 6493 "plugins/funind/functional_principles_types.ml" 201 6488 6498
)
"plugins/funind/functional_principles_types.ml" 209 6909 6936 "plugins/funind/functional_principles_types.ml" 209 6909 6941
type(
  Term.types
)
ident(
  int_ref new_b "plugins/funind/functional_principles_types.ml" 204 6670 6675 "plugins/funind/functional_principles_types.ml" 204 6670 6680
)
"plugins/funind/functional_principles_types.ml" 209 6909 6923 "plugins/funind/functional_principles_types.ml" 209 6909 6942
type(
  Names.name * Term.types * Term.types
)
"plugins/funind/functional_principles_types.ml" 209 6909 6915 "plugins/funind/functional_principles_types.ml" 209 6909 6942
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 210 6944 6950 "plugins/funind/functional_principles_types.ml" 210 6944 6963
type(
  (Term.constr -> Term.constr -> bool) ->
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Indfun_common.list_union_eq
)
"plugins/funind/functional_principles_types.ml" 211 6964 6972 "plugins/funind/functional_principles_types.ml" 211 6964 6981
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 212 6982 6990 "plugins/funind/functional_principles_types.ml" 212 6982 7014
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_t "plugins/funind/functional_principles_types.ml" 201 6488 6499 "plugins/funind/functional_principles_types.ml" 201 6488 6523
)
"plugins/funind/functional_principles_types.ml" 213 7015 7024 "plugins/funind/functional_principles_types.ml" 213 7015 7032
type(
  (Term.constr -> Term.constr) -> Term.constr list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 213 7015 7033 "plugins/funind/functional_principles_types.ml" 213 7015 7036
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 213 7015 7037 "plugins/funind/functional_principles_types.ml" 213 7015 7061
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 204 6670 6681 "plugins/funind/functional_principles_types.ml" 204 6670 6705
)
"plugins/funind/functional_principles_types.ml" 213 7015 7023 "plugins/funind/functional_principles_types.ml" 213 7015 7062
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 210 6944 6950 "plugins/funind/functional_principles_types.ml" 213 7015 7062
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 208 6903 6907 "plugins/funind/functional_principles_types.ml" 214 7063 7068
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 205 6751 6753 "plugins/funind/functional_principles_types.ml" 214 7063 7068
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 204 6670 6671 "plugins/funind/functional_principles_types.ml" 214 7063 7068
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 203 6620 6621 "plugins/funind/functional_principles_types.ml" 214 7063 7068
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 202 6565 6566 "plugins/funind/functional_principles_types.ml" 214 7063 7068
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 201 6488 6489 "plugins/funind/functional_principles_types.ml" 214 7063 7068
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 217 7082 7086 "plugins/funind/functional_principles_types.ml" 217 7082 7097
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 219 7180 7189 "plugins/funind/functional_principles_types.ml" 219 7180 7194
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 219 7180 7195 "plugins/funind/functional_principles_types.ml" 219 7180 7219
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 219 7180 7189 "plugins/funind/functional_principles_types.ml" 219 7180 7219
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 219 7180 7222 "plugins/funind/functional_principles_types.ml" 219 7180 7244
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 219 7180 7245 "plugins/funind/functional_principles_types.ml" 219 7180 7251
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 198 6400 6440 "plugins/funind/functional_principles_types.ml" 198 6400 6446
)
"plugins/funind/functional_principles_types.ml" 219 7180 7252 "plugins/funind/functional_principles_types.ml" 219 7180 7255
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 198 6400 6456 "plugins/funind/functional_principles_types.ml" 198 6400 6459
)
"plugins/funind/functional_principles_types.ml" 219 7180 7257 "plugins/funind/functional_principles_types.ml" 219 7180 7264
type(
  Term.constr list -> int -> Term.types -> Term.types
)
ident(
  ext_ref Term.substnl
)
"plugins/funind/functional_principles_types.ml" 219 7180 7266 "plugins/funind/functional_principles_types.ml" 219 7180 7275
type(
  Term.constr
)
ident(
  int_ref dummy_var "plugins/funind/functional_principles_types.ml" 141 4400 4406 "plugins/funind/functional_principles_types.ml" 141 4400 4415
)
"plugins/funind/functional_principles_types.ml" 219 7180 7265 "plugins/funind/functional_principles_types.ml" 219 7180 7276
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 219 7180 7277 "plugins/funind/functional_principles_types.ml" 219 7180 7278
type(
  int
)
"plugins/funind/functional_principles_types.ml" 219 7180 7279 "plugins/funind/functional_principles_types.ml" 219 7180 7280
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 198 6400 6464 "plugins/funind/functional_principles_types.ml" 198 6400 6465
)
"plugins/funind/functional_principles_types.ml" 219 7180 7256 "plugins/funind/functional_principles_types.ml" 219 7180 7281
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 219 7180 7222 "plugins/funind/functional_principles_types.ml" 219 7180 7281
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 220 7286 7291 "plugins/funind/functional_principles_types.ml" 220 7286 7296
type(
  Term.types
)
ident(
  int_ref new_b "plugins/funind/functional_principles_types.ml" 219 7180 7189 "plugins/funind/functional_principles_types.ml" 219 7180 7194
)
"plugins/funind/functional_principles_types.ml" 220 7286 7298 "plugins/funind/functional_principles_types.ml" 220 7286 7306
type(
  (Term.constr -> Term.constr) -> Term.constr list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 220 7286 7307 "plugins/funind/functional_principles_types.ml" 220 7286 7310
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 220 7286 7311 "plugins/funind/functional_principles_types.ml" 220 7286 7335
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 219 7180 7195 "plugins/funind/functional_principles_types.ml" 219 7180 7219
)
"plugins/funind/functional_principles_types.ml" 220 7286 7298 "plugins/funind/functional_principles_types.ml" 220 7286 7335
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 220 7286 7291 "plugins/funind/functional_principles_types.ml" 220 7286 7335
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 219 7180 7185 "plugins/funind/functional_principles_types.ml" 220 7286 7335
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 221 7336 7361 "plugins/funind/functional_principles_types.ml" 221 7336 7362
type(
  int
)
ident(
  def n "plugins/funind/functional_principles_types.ml" 223 7448 7453 "plugins/funind/functional_principles_types.ml" 224 7546 7633
)
"plugins/funind/functional_principles_types.ml" 221 7336 7363 "plugins/funind/functional_principles_types.ml" 221 7336 7364
type(
  Term.constr
)
ident(
  def c "plugins/funind/functional_principles_types.ml" 223 7448 7453 "plugins/funind/functional_principles_types.ml" 224 7546 7633
)
"plugins/funind/functional_principles_types.ml" 221 7336 7339 "plugins/funind/functional_principles_types.ml" 221 7336 7365
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 223 7448 7457 "plugins/funind/functional_principles_types.ml" 223 7448 7462
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 223 7448 7463 "plugins/funind/functional_principles_types.ml" 223 7448 7487
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 223 7448 7457 "plugins/funind/functional_principles_types.ml" 223 7448 7487
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 223 7448 7490 "plugins/funind/functional_principles_types.ml" 223 7448 7512
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 223 7448 7513 "plugins/funind/functional_principles_types.ml" 223 7448 7519
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 198 6400 6440 "plugins/funind/functional_principles_types.ml" 198 6400 6446
)
"plugins/funind/functional_principles_types.ml" 223 7448 7520 "plugins/funind/functional_principles_types.ml" 223 7448 7523
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 198 6400 6456 "plugins/funind/functional_principles_types.ml" 198 6400 6459
)
"plugins/funind/functional_principles_types.ml" 223 7448 7525 "plugins/funind/functional_principles_types.ml" 223 7448 7532
type(
  Term.constr list -> int -> Term.types -> Term.types
)
ident(
  ext_ref Term.substnl
)
"plugins/funind/functional_principles_types.ml" 223 7448 7534 "plugins/funind/functional_principles_types.ml" 223 7448 7535
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/functional_principles_types.ml" 221 7336 7363 "plugins/funind/functional_principles_types.ml" 221 7336 7364
)
"plugins/funind/functional_principles_types.ml" 223 7448 7533 "plugins/funind/functional_principles_types.ml" 223 7448 7536
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 223 7448 7537 "plugins/funind/functional_principles_types.ml" 223 7448 7538
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_types.ml" 221 7336 7361 "plugins/funind/functional_principles_types.ml" 221 7336 7362
)
"plugins/funind/functional_principles_types.ml" 223 7448 7539 "plugins/funind/functional_principles_types.ml" 223 7448 7540
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 198 6400 6464 "plugins/funind/functional_principles_types.ml" 198 6400 6465
)
"plugins/funind/functional_principles_types.ml" 223 7448 7524 "plugins/funind/functional_principles_types.ml" 223 7448 7541
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 223 7448 7490 "plugins/funind/functional_principles_types.ml" 223 7448 7541
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 224 7546 7551 "plugins/funind/functional_principles_types.ml" 224 7546 7556
type(
  Term.types
)
ident(
  int_ref new_b "plugins/funind/functional_principles_types.ml" 223 7448 7457 "plugins/funind/functional_principles_types.ml" 223 7448 7462
)
"plugins/funind/functional_principles_types.ml" 224 7546 7558 "plugins/funind/functional_principles_types.ml" 224 7546 7573
type(
  (Term.constr -> Term.constr -> bool) ->
  Term.constr -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Indfun_common.list_add_set_eq
)
"plugins/funind/functional_principles_types.ml" 224 7546 7574 "plugins/funind/functional_principles_types.ml" 224 7546 7583
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 224 7546 7585 "plugins/funind/functional_principles_types.ml" 224 7546 7590
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_types.ml" 224 7546 7591 "plugins/funind/functional_principles_types.ml" 224 7546 7592
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_types.ml" 221 7336 7361 "plugins/funind/functional_principles_types.ml" 221 7336 7362
)
"plugins/funind/functional_principles_types.ml" 224 7546 7584 "plugins/funind/functional_principles_types.ml" 224 7546 7593
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 224 7546 7595 "plugins/funind/functional_principles_types.ml" 224 7546 7603
type(
  (Term.constr -> Term.constr) -> Term.constr list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 224 7546 7604 "plugins/funind/functional_principles_types.ml" 224 7546 7607
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 224 7546 7608 "plugins/funind/functional_principles_types.ml" 224 7546 7632
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 223 7448 7463 "plugins/funind/functional_principles_types.ml" 223 7448 7487
)
"plugins/funind/functional_principles_types.ml" 224 7546 7594 "plugins/funind/functional_principles_types.ml" 224 7546 7633
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 224 7546 7558 "plugins/funind/functional_principles_types.ml" 224 7546 7633
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 224 7546 7551 "plugins/funind/functional_principles_types.ml" 224 7546 7633
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 223 7448 7453 "plugins/funind/functional_principles_types.ml" 224 7546 7633
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 199 6468 6472 "plugins/funind/functional_principles_types.ml" 225 7634 7641
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 226 7642 7648 "plugins/funind/functional_principles_types.ml" 226 7642 7680
type(
  bool ->
  Environ.env ->
  Names.name ->
  Term.types -> Term.types -> Term.types -> Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 226 7642 7681 "plugins/funind/functional_principles_types.ml" 226 7642 7687
type(
  bool
)
ident(
  def remove "plugins/funind/functional_principles_types.ml" 226 7642 7688 "plugins/funind/functional_principles_types.ml" 254 8991 8998
)
"plugins/funind/functional_principles_types.ml" 226 7642 7688 "plugins/funind/functional_principles_types.ml" 226 7642 7691
type(
  Environ.env
)
ident(
  def env "plugins/funind/functional_principles_types.ml" 226 7642 7692 "plugins/funind/functional_principles_types.ml" 254 8991 8998
)
"plugins/funind/functional_principles_types.ml" 226 7642 7692 "plugins/funind/functional_principles_types.ml" 226 7642 7693
type(
  Names.name
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 226 7642 7694 "plugins/funind/functional_principles_types.ml" 254 8991 8998
)
"plugins/funind/functional_principles_types.ml" 226 7642 7694 "plugins/funind/functional_principles_types.ml" 226 7642 7695
type(
  Term.types
)
ident(
  def v "plugins/funind/functional_principles_types.ml" 226 7642 7696 "plugins/funind/functional_principles_types.ml" 254 8991 8998
)
"plugins/funind/functional_principles_types.ml" 226 7642 7696 "plugins/funind/functional_principles_types.ml" 226 7642 7697
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 226 7642 7698 "plugins/funind/functional_principles_types.ml" 254 8991 8998
)
"plugins/funind/functional_principles_types.ml" 226 7642 7698 "plugins/funind/functional_principles_types.ml" 226 7642 7699
type(
  Term.types
)
ident(
  def b "plugins/funind/functional_principles_types.ml" 227 7702 7706 "plugins/funind/functional_principles_types.ml" 254 8991 8998
)
"plugins/funind/functional_principles_types.ml" 229 7722 7727 "plugins/funind/functional_principles_types.ml" 229 7722 7732
type(
  Term.types
)
ident(
  def new_t "plugins/funind/functional_principles_types.ml" 230 7799 7800 "plugins/funind/functional_principles_types.ml" 243 8423 8427
)
"plugins/funind/functional_principles_types.ml" 229 7722 7733 "plugins/funind/functional_principles_types.ml" 229 7722 7757
type(
  Term.constr list
)
ident(
  def binders_to_remove_from_t "plugins/funind/functional_principles_types.ml" 230 7799 7800 "plugins/funind/functional_principles_types.ml" 243 8423 8427
)
"plugins/funind/functional_principles_types.ml" 229 7722 7727 "plugins/funind/functional_principles_types.ml" 229 7722 7757
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 229 7722 7760 "plugins/funind/functional_principles_types.ml" 229 7722 7782
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 229 7722 7783 "plugins/funind/functional_principles_types.ml" 229 7722 7789
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 226 7642 7681 "plugins/funind/functional_principles_types.ml" 226 7642 7687
)
"plugins/funind/functional_principles_types.ml" 229 7722 7790 "plugins/funind/functional_principles_types.ml" 229 7722 7793
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 226 7642 7688 "plugins/funind/functional_principles_types.ml" 226 7642 7691
)
"plugins/funind/functional_principles_types.ml" 229 7722 7794 "plugins/funind/functional_principles_types.ml" 229 7722 7795
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 226 7642 7696 "plugins/funind/functional_principles_types.ml" 226 7642 7697
)
"plugins/funind/functional_principles_types.ml" 229 7722 7760 "plugins/funind/functional_principles_types.ml" 229 7722 7795
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 230 7799 7804 "plugins/funind/functional_principles_types.ml" 230 7799 7809
type(
  Term.types
)
ident(
  def new_v "plugins/funind/functional_principles_types.ml" 231 7876 7877 "plugins/funind/functional_principles_types.ml" 243 8423 8427
)
"plugins/funind/functional_principles_types.ml" 230 7799 7810 "plugins/funind/functional_principles_types.ml" 230 7799 7834
type(
  Term.constr list
)
ident(
  def binders_to_remove_from_v "plugins/funind/functional_principles_types.ml" 231 7876 7877 "plugins/funind/functional_principles_types.ml" 243 8423 8427
)
"plugins/funind/functional_principles_types.ml" 230 7799 7804 "plugins/funind/functional_principles_types.ml" 230 7799 7834
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 230 7799 7837 "plugins/funind/functional_principles_types.ml" 230 7799 7859
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 230 7799 7860 "plugins/funind/functional_principles_types.ml" 230 7799 7866
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 226 7642 7681 "plugins/funind/functional_principles_types.ml" 226 7642 7687
)
"plugins/funind/functional_principles_types.ml" 230 7799 7867 "plugins/funind/functional_principles_types.ml" 230 7799 7870
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 226 7642 7688 "plugins/funind/functional_principles_types.ml" 226 7642 7691
)
"plugins/funind/functional_principles_types.ml" 230 7799 7871 "plugins/funind/functional_principles_types.ml" 230 7799 7872
type(
  Term.types
)
ident(
  int_ref v "plugins/funind/functional_principles_types.ml" 226 7642 7694 "plugins/funind/functional_principles_types.ml" 226 7642 7695
)
"plugins/funind/functional_principles_types.ml" 230 7799 7837 "plugins/funind/functional_principles_types.ml" 230 7799 7872
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 231 7876 7881 "plugins/funind/functional_principles_types.ml" 231 7876 7886
type(
  Names.name
)
ident(
  def new_x "plugins/funind/functional_principles_types.ml" 232 7931 7932 "plugins/funind/functional_principles_types.ml" 243 8423 8427
)
"plugins/funind/functional_principles_types.ml" 231 7876 7896 "plugins/funind/functional_principles_types.ml" 231 7876 7904
type(
  Names.identifier list -> ?default:string -> Names.name -> Names.name
)
ident(
  ext_ref Indfun_common.get_name
)
"plugins/funind/functional_principles_types.ml" 231 7876 7906 "plugins/funind/functional_principles_types.ml" 231 7876 7920
type(
  Environ.env -> Names.identifier list
)
ident(
  ext_ref Termops.ids_of_context
)
"plugins/funind/functional_principles_types.ml" 231 7876 7921 "plugins/funind/functional_principles_types.ml" 231 7876 7924
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 226 7642 7688 "plugins/funind/functional_principles_types.ml" 226 7642 7691
)
"plugins/funind/functional_principles_types.ml" 231 7876 7905 "plugins/funind/functional_principles_types.ml" 231 7876 7925
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 231 7876 7926 "plugins/funind/functional_principles_types.ml" 231 7876 7927
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 226 7642 7692 "plugins/funind/functional_principles_types.ml" 226 7642 7693
)
"plugins/funind/functional_principles_types.ml" 231 7876 7896 "plugins/funind/functional_principles_types.ml" 231 7876 7927
call(
  stack
)
type(
  Names.name
)
type(
  Names.name
)
"plugins/funind/functional_principles_types.ml" 232 7931 7936 "plugins/funind/functional_principles_types.ml" 232 7931 7943
type(
  Environ.env
)
ident(
  def new_env "plugins/funind/functional_principles_types.ml" 233 7983 7984 "plugins/funind/functional_principles_types.ml" 243 8423 8427
)
"plugins/funind/functional_principles_types.ml" 232 7931 7946 "plugins/funind/functional_principles_types.ml" 232 7931 7962
type(
  Term.rel_declaration -> Environ.env -> Environ.env
)
ident(
  ext_ref Environ.push_rel
)
"plugins/funind/functional_principles_types.ml" 232 7931 7964 "plugins/funind/functional_principles_types.ml" 232 7931 7965
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 226 7642 7692 "plugins/funind/functional_principles_types.ml" 226 7642 7693
)
"plugins/funind/functional_principles_types.ml" 232 7931 7971 "plugins/funind/functional_principles_types.ml" 232 7931 7972
type(
  Term.types
)
ident(
  int_ref v "plugins/funind/functional_principles_types.ml" 226 7642 7694 "plugins/funind/functional_principles_types.ml" 226 7642 7695
)
"plugins/funind/functional_principles_types.ml" 232 7931 7966 "plugins/funind/functional_principles_types.ml" 232 7931 7972
type(
  Term.types option
)
"plugins/funind/functional_principles_types.ml" 232 7931 7973 "plugins/funind/functional_principles_types.ml" 232 7931 7974
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 226 7642 7696 "plugins/funind/functional_principles_types.ml" 226 7642 7697
)
"plugins/funind/functional_principles_types.ml" 232 7931 7963 "plugins/funind/functional_principles_types.ml" 232 7931 7975
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 232 7931 7976 "plugins/funind/functional_principles_types.ml" 232 7931 7979
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 226 7642 7688 "plugins/funind/functional_principles_types.ml" 226 7642 7691
)
"plugins/funind/functional_principles_types.ml" 232 7931 7946 "plugins/funind/functional_principles_types.ml" 232 7931 7979
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 233 7983 7988 "plugins/funind/functional_principles_types.ml" 233 7983 7993
type(
  Term.types
)
ident(
  def new_b "plugins/funind/functional_principles_types.ml" 234 8064 8065 "plugins/funind/functional_principles_types.ml" 243 8423 8427
)
"plugins/funind/functional_principles_types.ml" 233 7983 7994 "plugins/funind/functional_principles_types.ml" 233 7983 8018
type(
  Term.constr list
)
ident(
  def binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 234 8064 8065 "plugins/funind/functional_principles_types.ml" 243 8423 8427
)
"plugins/funind/functional_principles_types.ml" 233 7983 7988 "plugins/funind/functional_principles_types.ml" 233 7983 8018
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 233 7983 8021 "plugins/funind/functional_principles_types.ml" 233 7983 8043
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 233 7983 8044 "plugins/funind/functional_principles_types.ml" 233 7983 8050
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 226 7642 7681 "plugins/funind/functional_principles_types.ml" 226 7642 7687
)
"plugins/funind/functional_principles_types.ml" 233 7983 8051 "plugins/funind/functional_principles_types.ml" 233 7983 8058
type(
  Environ.env
)
ident(
  int_ref new_env "plugins/funind/functional_principles_types.ml" 232 7931 7936 "plugins/funind/functional_principles_types.ml" 232 7931 7943
)
"plugins/funind/functional_principles_types.ml" 233 7983 8059 "plugins/funind/functional_principles_types.ml" 233 7983 8060
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 226 7642 7698 "plugins/funind/functional_principles_types.ml" 226 7642 7699
)
"plugins/funind/functional_principles_types.ml" 233 7983 8021 "plugins/funind/functional_principles_types.ml" 233 7983 8060
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 234 8064 8068 "plugins/funind/functional_principles_types.ml" 234 8064 8079
type(
  (Term.constr -> bool) -> Term.constr list -> bool
)
ident(
  ext_ref List.exists
)
"plugins/funind/functional_principles_types.ml" 234 8064 8081 "plugins/funind/functional_principles_types.ml" 234 8064 8090
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 234 8064 8092 "plugins/funind/functional_principles_types.ml" 234 8064 8097
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_types.ml" 234 8064 8098 "plugins/funind/functional_principles_types.ml" 234 8064 8099
type(
  int
)
"plugins/funind/functional_principles_types.ml" 234 8064 8091 "plugins/funind/functional_principles_types.ml" 234 8064 8100
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 234 8064 8080 "plugins/funind/functional_principles_types.ml" 234 8064 8101
call(
  stack
)
type(
  Term.constr -> bool
)
"plugins/funind/functional_principles_types.ml" 234 8064 8102 "plugins/funind/functional_principles_types.ml" 234 8064 8126
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 233 7983 7994 "plugins/funind/functional_principles_types.ml" 233 7983 8018
)
"plugins/funind/functional_principles_types.ml" 234 8064 8068 "plugins/funind/functional_principles_types.ml" 234 8064 8126
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 235 8127 8134 "plugins/funind/functional_principles_types.ml" 235 8127 8137
type(
  Term.types -> Term.types
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 235 8127 8138 "plugins/funind/functional_principles_types.ml" 235 8127 8143
type(
  Term.types
)
ident(
  int_ref new_b "plugins/funind/functional_principles_types.ml" 233 7983 7988 "plugins/funind/functional_principles_types.ml" 233 7983 7993
)
"plugins/funind/functional_principles_types.ml" 235 8127 8133 "plugins/funind/functional_principles_types.ml" 235 8127 8144
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 235 8127 8145 "plugins/funind/functional_principles_types.ml" 235 8127 8155
type(
  (Term.constr -> bool) ->
  (Term.constr -> Term.constr) -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Indfun_common.filter_map
)
"plugins/funind/functional_principles_types.ml" 235 8127 8157 "plugins/funind/functional_principles_types.ml" 235 8127 8166
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 235 8127 8168 "plugins/funind/functional_principles_types.ml" 235 8127 8173
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_types.ml" 235 8127 8174 "plugins/funind/functional_principles_types.ml" 235 8127 8175
type(
  int
)
"plugins/funind/functional_principles_types.ml" 235 8127 8167 "plugins/funind/functional_principles_types.ml" 235 8127 8176
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 235 8127 8156 "plugins/funind/functional_principles_types.ml" 235 8127 8177
call(
  stack
)
type(
  Term.constr -> bool
)
"plugins/funind/functional_principles_types.ml" 235 8127 8178 "plugins/funind/functional_principles_types.ml" 235 8127 8181
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 235 8127 8182 "plugins/funind/functional_principles_types.ml" 235 8127 8206
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 233 7983 7994 "plugins/funind/functional_principles_types.ml" 233 7983 8018
)
"plugins/funind/functional_principles_types.ml" 235 8127 8145 "plugins/funind/functional_principles_types.ml" 235 8127 8206
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 235 8127 8133 "plugins/funind/functional_principles_types.ml" 235 8127 8206
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 238 8218 8223 "plugins/funind/functional_principles_types.ml" 238 8218 8230
type(
  Names.name * Term.types * Term.types * Term.types -> Term.types
)
ident(
  ext_ref Term.mkLetIn
)
"plugins/funind/functional_principles_types.ml" 238 8218 8231 "plugins/funind/functional_principles_types.ml" 238 8218 8236
type(
  Names.name
)
ident(
  int_ref new_x "plugins/funind/functional_principles_types.ml" 231 7876 7881 "plugins/funind/functional_principles_types.ml" 231 7876 7886
)
"plugins/funind/functional_principles_types.ml" 238 8218 8237 "plugins/funind/functional_principles_types.ml" 238 8218 8242
type(
  Term.types
)
ident(
  int_ref new_v "plugins/funind/functional_principles_types.ml" 230 7799 7804 "plugins/funind/functional_principles_types.ml" 230 7799 7809
)
"plugins/funind/functional_principles_types.ml" 238 8218 8243 "plugins/funind/functional_principles_types.ml" 238 8218 8248
type(
  Term.types
)
ident(
  int_ref new_t "plugins/funind/functional_principles_types.ml" 229 7722 7727 "plugins/funind/functional_principles_types.ml" 229 7722 7732
)
"plugins/funind/functional_principles_types.ml" 238 8218 8249 "plugins/funind/functional_principles_types.ml" 238 8218 8254
type(
  Term.types
)
ident(
  int_ref new_b "plugins/funind/functional_principles_types.ml" 233 7983 7988 "plugins/funind/functional_principles_types.ml" 233 7983 7993
)
"plugins/funind/functional_principles_types.ml" 238 8218 8230 "plugins/funind/functional_principles_types.ml" 238 8218 8255
type(
  Names.name * Term.types * Term.types * Term.types
)
"plugins/funind/functional_principles_types.ml" 238 8218 8223 "plugins/funind/functional_principles_types.ml" 238 8218 8255
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 239 8257 8262 "plugins/funind/functional_principles_types.ml" 239 8257 8275
type(
  (Term.constr -> Term.constr -> bool) ->
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Indfun_common.list_union_eq
)
"plugins/funind/functional_principles_types.ml" 240 8276 8283 "plugins/funind/functional_principles_types.ml" 240 8276 8292
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 241 8293 8301 "plugins/funind/functional_principles_types.ml" 241 8293 8314
type(
  (Term.constr -> Term.constr -> bool) ->
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Indfun_common.list_union_eq
)
"plugins/funind/functional_principles_types.ml" 241 8293 8315 "plugins/funind/functional_principles_types.ml" 241 8293 8324
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 241 8293 8325 "plugins/funind/functional_principles_types.ml" 241 8293 8349
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_t "plugins/funind/functional_principles_types.ml" 229 7722 7733 "plugins/funind/functional_principles_types.ml" 229 7722 7757
)
"plugins/funind/functional_principles_types.ml" 241 8293 8350 "plugins/funind/functional_principles_types.ml" 241 8293 8374
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_v "plugins/funind/functional_principles_types.ml" 230 7799 7810 "plugins/funind/functional_principles_types.ml" 230 7799 7834
)
"plugins/funind/functional_principles_types.ml" 241 8293 8300 "plugins/funind/functional_principles_types.ml" 241 8293 8375
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 242 8376 8384 "plugins/funind/functional_principles_types.ml" 242 8376 8392
type(
  (Term.constr -> Term.constr) -> Term.constr list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 242 8376 8393 "plugins/funind/functional_principles_types.ml" 242 8376 8396
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 242 8376 8397 "plugins/funind/functional_principles_types.ml" 242 8376 8421
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 233 7983 7994 "plugins/funind/functional_principles_types.ml" 233 7983 8018
)
"plugins/funind/functional_principles_types.ml" 242 8376 8383 "plugins/funind/functional_principles_types.ml" 242 8376 8422
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 239 8257 8262 "plugins/funind/functional_principles_types.ml" 242 8376 8422
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 237 8213 8216 "plugins/funind/functional_principles_types.ml" 243 8423 8427
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 234 8064 8065 "plugins/funind/functional_principles_types.ml" 243 8423 8427
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 233 7983 7984 "plugins/funind/functional_principles_types.ml" 243 8423 8427
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 232 7931 7932 "plugins/funind/functional_principles_types.ml" 243 8423 8427
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 231 7876 7877 "plugins/funind/functional_principles_types.ml" 243 8423 8427
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 230 7799 7800 "plugins/funind/functional_principles_types.ml" 243 8423 8427
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 229 7722 7723 "plugins/funind/functional_principles_types.ml" 243 8423 8427
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 246 8440 8443 "plugins/funind/functional_principles_types.ml" 246 8440 8454
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 248 8537 8546 "plugins/funind/functional_principles_types.ml" 248 8537 8551
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 248 8537 8552 "plugins/funind/functional_principles_types.ml" 248 8537 8576
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 248 8537 8546 "plugins/funind/functional_principles_types.ml" 248 8537 8576
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 248 8537 8579 "plugins/funind/functional_principles_types.ml" 248 8537 8601
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 248 8537 8602 "plugins/funind/functional_principles_types.ml" 248 8537 8608
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 226 7642 7681 "plugins/funind/functional_principles_types.ml" 226 7642 7687
)
"plugins/funind/functional_principles_types.ml" 248 8537 8609 "plugins/funind/functional_principles_types.ml" 248 8537 8612
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 226 7642 7688 "plugins/funind/functional_principles_types.ml" 226 7642 7691
)
"plugins/funind/functional_principles_types.ml" 248 8537 8614 "plugins/funind/functional_principles_types.ml" 248 8537 8621
type(
  Term.constr list -> int -> Term.types -> Term.types
)
ident(
  ext_ref Term.substnl
)
"plugins/funind/functional_principles_types.ml" 248 8537 8623 "plugins/funind/functional_principles_types.ml" 248 8537 8632
type(
  Term.constr
)
ident(
  int_ref dummy_var "plugins/funind/functional_principles_types.ml" 141 4400 4406 "plugins/funind/functional_principles_types.ml" 141 4400 4415
)
"plugins/funind/functional_principles_types.ml" 248 8537 8622 "plugins/funind/functional_principles_types.ml" 248 8537 8633
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 248 8537 8634 "plugins/funind/functional_principles_types.ml" 248 8537 8635
type(
  int
)
"plugins/funind/functional_principles_types.ml" 248 8537 8636 "plugins/funind/functional_principles_types.ml" 248 8537 8637
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 226 7642 7698 "plugins/funind/functional_principles_types.ml" 226 7642 7699
)
"plugins/funind/functional_principles_types.ml" 248 8537 8613 "plugins/funind/functional_principles_types.ml" 248 8537 8638
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 248 8537 8579 "plugins/funind/functional_principles_types.ml" 248 8537 8638
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 249 8643 8648 "plugins/funind/functional_principles_types.ml" 249 8643 8653
type(
  Term.types
)
ident(
  int_ref new_b "plugins/funind/functional_principles_types.ml" 248 8537 8546 "plugins/funind/functional_principles_types.ml" 248 8537 8551
)
"plugins/funind/functional_principles_types.ml" 249 8643 8655 "plugins/funind/functional_principles_types.ml" 249 8643 8663
type(
  (Term.constr -> Term.constr) -> Term.constr list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 249 8643 8664 "plugins/funind/functional_principles_types.ml" 249 8643 8667
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 249 8643 8668 "plugins/funind/functional_principles_types.ml" 249 8643 8692
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 248 8537 8552 "plugins/funind/functional_principles_types.ml" 248 8537 8576
)
"plugins/funind/functional_principles_types.ml" 249 8643 8655 "plugins/funind/functional_principles_types.ml" 249 8643 8692
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 249 8643 8648 "plugins/funind/functional_principles_types.ml" 249 8643 8692
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 248 8537 8542 "plugins/funind/functional_principles_types.ml" 249 8643 8692
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 250 8693 8718 "plugins/funind/functional_principles_types.ml" 250 8693 8719
type(
  int
)
ident(
  def n "plugins/funind/functional_principles_types.ml" 252 8805 8810 "plugins/funind/functional_principles_types.ml" 253 8903 8990
)
"plugins/funind/functional_principles_types.ml" 250 8693 8720 "plugins/funind/functional_principles_types.ml" 250 8693 8721
type(
  Term.constr
)
ident(
  def c "plugins/funind/functional_principles_types.ml" 252 8805 8810 "plugins/funind/functional_principles_types.ml" 253 8903 8990
)
"plugins/funind/functional_principles_types.ml" 250 8693 8696 "plugins/funind/functional_principles_types.ml" 250 8693 8722
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 252 8805 8814 "plugins/funind/functional_principles_types.ml" 252 8805 8819
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 252 8805 8820 "plugins/funind/functional_principles_types.ml" 252 8805 8844
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 252 8805 8814 "plugins/funind/functional_principles_types.ml" 252 8805 8844
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 252 8805 8847 "plugins/funind/functional_principles_types.ml" 252 8805 8869
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 252 8805 8870 "plugins/funind/functional_principles_types.ml" 252 8805 8876
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 226 7642 7681 "plugins/funind/functional_principles_types.ml" 226 7642 7687
)
"plugins/funind/functional_principles_types.ml" 252 8805 8877 "plugins/funind/functional_principles_types.ml" 252 8805 8880
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 226 7642 7688 "plugins/funind/functional_principles_types.ml" 226 7642 7691
)
"plugins/funind/functional_principles_types.ml" 252 8805 8882 "plugins/funind/functional_principles_types.ml" 252 8805 8889
type(
  Term.constr list -> int -> Term.types -> Term.types
)
ident(
  ext_ref Term.substnl
)
"plugins/funind/functional_principles_types.ml" 252 8805 8891 "plugins/funind/functional_principles_types.ml" 252 8805 8892
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/functional_principles_types.ml" 250 8693 8720 "plugins/funind/functional_principles_types.ml" 250 8693 8721
)
"plugins/funind/functional_principles_types.ml" 252 8805 8890 "plugins/funind/functional_principles_types.ml" 252 8805 8893
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 252 8805 8894 "plugins/funind/functional_principles_types.ml" 252 8805 8895
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_types.ml" 250 8693 8718 "plugins/funind/functional_principles_types.ml" 250 8693 8719
)
"plugins/funind/functional_principles_types.ml" 252 8805 8896 "plugins/funind/functional_principles_types.ml" 252 8805 8897
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 226 7642 7698 "plugins/funind/functional_principles_types.ml" 226 7642 7699
)
"plugins/funind/functional_principles_types.ml" 252 8805 8881 "plugins/funind/functional_principles_types.ml" 252 8805 8898
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 252 8805 8847 "plugins/funind/functional_principles_types.ml" 252 8805 8898
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 253 8903 8908 "plugins/funind/functional_principles_types.ml" 253 8903 8913
type(
  Term.types
)
ident(
  int_ref new_b "plugins/funind/functional_principles_types.ml" 252 8805 8814 "plugins/funind/functional_principles_types.ml" 252 8805 8819
)
"plugins/funind/functional_principles_types.ml" 253 8903 8915 "plugins/funind/functional_principles_types.ml" 253 8903 8930
type(
  (Term.constr -> Term.constr -> bool) ->
  Term.constr -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Indfun_common.list_add_set_eq
)
"plugins/funind/functional_principles_types.ml" 253 8903 8931 "plugins/funind/functional_principles_types.ml" 253 8903 8940
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 253 8903 8942 "plugins/funind/functional_principles_types.ml" 253 8903 8947
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_types.ml" 253 8903 8948 "plugins/funind/functional_principles_types.ml" 253 8903 8949
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_types.ml" 250 8693 8718 "plugins/funind/functional_principles_types.ml" 250 8693 8719
)
"plugins/funind/functional_principles_types.ml" 253 8903 8941 "plugins/funind/functional_principles_types.ml" 253 8903 8950
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 253 8903 8952 "plugins/funind/functional_principles_types.ml" 253 8903 8960
type(
  (Term.constr -> Term.constr) -> Term.constr list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 253 8903 8961 "plugins/funind/functional_principles_types.ml" 253 8903 8964
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_types.ml" 253 8903 8965 "plugins/funind/functional_principles_types.ml" 253 8903 8989
type(
  Term.constr list
)
ident(
  int_ref binders_to_remove_from_b "plugins/funind/functional_principles_types.ml" 252 8805 8820 "plugins/funind/functional_principles_types.ml" 252 8805 8844
)
"plugins/funind/functional_principles_types.ml" 253 8903 8951 "plugins/funind/functional_principles_types.ml" 253 8903 8990
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 253 8903 8915 "plugins/funind/functional_principles_types.ml" 253 8903 8990
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 253 8903 8908 "plugins/funind/functional_principles_types.ml" 253 8903 8990
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 252 8805 8810 "plugins/funind/functional_principles_types.ml" 253 8903 8990
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 227 7702 7706 "plugins/funind/functional_principles_types.ml" 254 8991 8998
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 255 8999 9006 "plugins/funind/functional_principles_types.ml" 255 8999 9037
type(
  bool ->
  Environ.env ->
  Term.types ->
  Term.types list * Term.constr list -> Term.types list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 255 8999 9038 "plugins/funind/functional_principles_types.ml" 255 8999 9044
type(
  bool
)
ident(
  def remove "plugins/funind/functional_principles_types.ml" 255 8999 9045 "plugins/funind/functional_principles_types.ml" 258 9152 9223
)
"plugins/funind/functional_principles_types.ml" 255 8999 9045 "plugins/funind/functional_principles_types.ml" 255 8999 9048
type(
  Environ.env
)
ident(
  def env "plugins/funind/functional_principles_types.ml" 255 8999 9049 "plugins/funind/functional_principles_types.ml" 258 9152 9223
)
"plugins/funind/functional_principles_types.ml" 255 8999 9049 "plugins/funind/functional_principles_types.ml" 255 8999 9050
type(
  Term.types
)
ident(
  def e "plugins/funind/functional_principles_types.ml" 255 8999 9051 "plugins/funind/functional_principles_types.ml" 258 9152 9223
)
"plugins/funind/functional_principles_types.ml" 255 8999 9052 "plugins/funind/functional_principles_types.ml" 255 8999 9057
type(
  Term.types list
)
ident(
  def c_acc "plugins/funind/functional_principles_types.ml" 256 9076 9080 "plugins/funind/functional_principles_types.ml" 258 9152 9223
)
"plugins/funind/functional_principles_types.ml" 255 8999 9058 "plugins/funind/functional_principles_types.ml" 255 8999 9071
type(
  Term.constr list
)
ident(
  def to_remove_acc "plugins/funind/functional_principles_types.ml" 256 9076 9080 "plugins/funind/functional_principles_types.ml" 258 9152 9223
)
"plugins/funind/functional_principles_types.ml" 255 8999 9051 "plugins/funind/functional_principles_types.ml" 255 8999 9072
type(
  Term.types list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 256 9076 9084 "plugins/funind/functional_principles_types.ml" 256 9076 9089
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 256 9076 9090 "plugins/funind/functional_principles_types.ml" 256 9076 9106
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 256 9076 9084 "plugins/funind/functional_principles_types.ml" 256 9076 9106
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 256 9076 9109 "plugins/funind/functional_principles_types.ml" 256 9076 9131
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 256 9076 9132 "plugins/funind/functional_principles_types.ml" 256 9076 9138
type(
  bool
)
ident(
  int_ref remove "plugins/funind/functional_principles_types.ml" 255 8999 9038 "plugins/funind/functional_principles_types.ml" 255 8999 9044
)
"plugins/funind/functional_principles_types.ml" 256 9076 9139 "plugins/funind/functional_principles_types.ml" 256 9076 9142
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 255 8999 9045 "plugins/funind/functional_principles_types.ml" 255 8999 9048
)
"plugins/funind/functional_principles_types.ml" 256 9076 9143 "plugins/funind/functional_principles_types.ml" 256 9076 9144
type(
  Term.types
)
ident(
  int_ref e "plugins/funind/functional_principles_types.ml" 255 8999 9049 "plugins/funind/functional_principles_types.ml" 255 8999 9050
)
"plugins/funind/functional_principles_types.ml" 256 9076 9109 "plugins/funind/functional_principles_types.ml" 256 9076 9144
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 258 9152 9156 "plugins/funind/functional_principles_types.ml" 258 9152 9161
type(
  Term.types
)
ident(
  int_ref new_e "plugins/funind/functional_principles_types.ml" 256 9076 9084 "plugins/funind/functional_principles_types.ml" 256 9076 9089
)
"plugins/funind/functional_principles_types.ml" 258 9152 9163 "plugins/funind/functional_principles_types.ml" 258 9152 9168
type(
  Term.types list
)
ident(
  int_ref c_acc "plugins/funind/functional_principles_types.ml" 255 8999 9052 "plugins/funind/functional_principles_types.ml" 255 8999 9057
)
"plugins/funind/functional_principles_types.ml" 258 9152 9156 "plugins/funind/functional_principles_types.ml" 258 9152 9168
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 258 9152 9169 "plugins/funind/functional_principles_types.ml" 258 9152 9182
type(
  (Term.constr -> Term.constr -> bool) ->
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Indfun_common.list_union_eq
)
"plugins/funind/functional_principles_types.ml" 258 9152 9183 "plugins/funind/functional_principles_types.ml" 258 9152 9192
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 258 9152 9193 "plugins/funind/functional_principles_types.ml" 258 9152 9209
type(
  Term.constr list
)
ident(
  int_ref to_remove_from_e "plugins/funind/functional_principles_types.ml" 256 9076 9090 "plugins/funind/functional_principles_types.ml" 256 9076 9106
)
"plugins/funind/functional_principles_types.ml" 258 9152 9210 "plugins/funind/functional_principles_types.ml" 258 9152 9223
type(
  Term.constr list
)
ident(
  int_ref to_remove_acc "plugins/funind/functional_principles_types.ml" 255 8999 9058 "plugins/funind/functional_principles_types.ml" 255 8999 9071
)
"plugins/funind/functional_principles_types.ml" 258 9152 9169 "plugins/funind/functional_principles_types.ml" 258 9152 9223
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 258 9152 9156 "plugins/funind/functional_principles_types.ml" 258 9152 9223
type(
  Term.types list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 256 9076 9080 "plugins/funind/functional_principles_types.ml" 258 9152 9223
type(
  Term.types list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 261 9343 9349 "plugins/funind/functional_principles_types.ml" 261 9343 9356
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 261 9343 9357 "plugins/funind/functional_principles_types.ml" 261 9343 9358
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 261 9343 9349 "plugins/funind/functional_principles_types.ml" 261 9343 9358
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 262 9361 9365 "plugins/funind/functional_principles_types.ml" 262 9361 9387
type(
  bool -> Environ.env -> Term.types -> Term.types * Term.constr list
)
ident(
  int_ref compute_new_princ_type "plugins/funind/functional_principles_types.ml" 153 4800 4810 "plugins/funind/functional_principles_types.ml" 153 4800 4832
)
"plugins/funind/functional_principles_types.ml" 262 9361 9388 "plugins/funind/functional_principles_types.ml" 262 9361 9403
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
)
"plugins/funind/functional_principles_types.ml" 262 9361 9388 "plugins/funind/functional_principles_types.ml" 262 9361 9419
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 262 9361 9420 "plugins/funind/functional_principles_types.ml" 262 9361 9450
type(
  Environ.env
)
ident(
  int_ref env_with_params_and_predicates "plugins/funind/functional_principles_types.ml" 100 3283 3289 "plugins/funind/functional_principles_types.ml" 100 3283 3319
)
"plugins/funind/functional_principles_types.ml" 262 9361 9451 "plugins/funind/functional_principles_types.ml" 262 9361 9460
type(
  Term.types
)
ident(
  int_ref pre_princ "plugins/funind/functional_principles_types.ml" 128 4039 4045 "plugins/funind/functional_principles_types.ml" 128 4039 4054
)
"plugins/funind/functional_principles_types.ml" 262 9361 9365 "plugins/funind/functional_principles_types.ml" 262 9361 9460
call(
  stack
)
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 264 9466 9472 "plugins/funind/functional_principles_types.ml" 264 9466 9479
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 265 9482 9486 "plugins/funind/functional_principles_types.ml" 265 9482 9498
type(
  (Names.identifier * Term.constr) list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.replace_vars
)
"plugins/funind/functional_principles_types.ml" 266 9499 9506 "plugins/funind/functional_principles_types.ml" 266 9499 9516
type(
  (int -> Names.identifier -> Names.identifier * Term.constr) ->
  int -> Names.identifier list -> (Names.identifier * Term.constr) list
)
ident(
  ext_ref Util.list_map_i
)
"plugins/funind/functional_principles_types.ml" 266 9499 9522 "plugins/funind/functional_principles_types.ml" 266 9499 9523
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_types.ml" 266 9499 9524 "plugins/funind/functional_principles_types.ml" 266 9499 9543
)
"plugins/funind/functional_principles_types.ml" 266 9499 9524 "plugins/funind/functional_principles_types.ml" 266 9499 9526
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 266 9499 9530 "plugins/funind/functional_principles_types.ml" 266 9499 9543
)
"plugins/funind/functional_principles_types.ml" 266 9499 9531 "plugins/funind/functional_principles_types.ml" 266 9499 9533
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 266 9499 9524 "plugins/funind/functional_principles_types.ml" 266 9499 9526
)
"plugins/funind/functional_principles_types.ml" 266 9499 9535 "plugins/funind/functional_principles_types.ml" 266 9499 9540
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_types.ml" 266 9499 9541 "plugins/funind/functional_principles_types.ml" 266 9499 9542
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 266 9499 9522 "plugins/funind/functional_principles_types.ml" 266 9499 9523
)
"plugins/funind/functional_principles_types.ml" 266 9499 9535 "plugins/funind/functional_principles_types.ml" 266 9499 9542
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 266 9499 9530 "plugins/funind/functional_principles_types.ml" 266 9499 9543
type(
  Names.identifier * Term.constr
)
"plugins/funind/functional_principles_types.ml" 266 9499 9517 "plugins/funind/functional_principles_types.ml" 266 9499 9544
type(
  int -> Names.identifier -> Names.identifier * Term.constr
)
"plugins/funind/functional_principles_types.ml" 266 9499 9545 "plugins/funind/functional_principles_types.ml" 266 9499 9546
type(
  int
)
"plugins/funind/functional_principles_types.ml" 266 9499 9547 "plugins/funind/functional_principles_types.ml" 266 9499 9556
type(
  Names.identifier list
)
ident(
  int_ref ptes_vars "plugins/funind/functional_principles_types.ml" 107 3541 3547 "plugins/funind/functional_principles_types.ml" 107 3541 3556
)
"plugins/funind/functional_principles_types.ml" 266 9499 9505 "plugins/funind/functional_principles_types.ml" 266 9499 9557
call(
  stack
)
type(
  (Names.identifier * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 267 9558 9565 "plugins/funind/functional_principles_types.ml" 267 9558 9569
type(
  int -> Term.types -> Term.constr
)
ident(
  ext_ref Term.lift
)
"plugins/funind/functional_principles_types.ml" 267 9558 9571 "plugins/funind/functional_principles_types.ml" 267 9558 9582
type(
  Names.identifier list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_types.ml" 267 9558 9583 "plugins/funind/functional_principles_types.ml" 267 9558 9592
type(
  Names.identifier list
)
ident(
  int_ref ptes_vars "plugins/funind/functional_principles_types.ml" 107 3541 3547 "plugins/funind/functional_principles_types.ml" 107 3541 3556
)
"plugins/funind/functional_principles_types.ml" 267 9558 9570 "plugins/funind/functional_principles_types.ml" 267 9558 9593
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_types.ml" 267 9558 9594 "plugins/funind/functional_principles_types.ml" 267 9558 9601
type(
  Term.types
)
ident(
  int_ref pre_res "plugins/funind/functional_principles_types.ml" 261 9343 9349 "plugins/funind/functional_principles_types.ml" 261 9343 9356
)
"plugins/funind/functional_principles_types.ml" 267 9558 9564 "plugins/funind/functional_principles_types.ml" 267 9558 9602
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 265 9482 9486 "plugins/funind/functional_principles_types.ml" 267 9558 9602
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 269 9608 9610 "plugins/funind/functional_principles_types.ml" 269 9608 9628
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_types.ml" 270 9629 9640 "plugins/funind/functional_principles_types.ml" 270 9629 9658
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_types.ml" 271 9659 9671 "plugins/funind/functional_principles_types.ml" 271 9659 9678
type(
  Term.types
)
ident(
  int_ref pre_res "plugins/funind/functional_principles_types.ml" 264 9466 9472 "plugins/funind/functional_principles_types.ml" 264 9466 9479
)
"plugins/funind/functional_principles_types.ml" 271 9659 9680 "plugins/funind/functional_principles_types.ml" 271 9659 9688
type(
  (Names.identifier * Term.constr option * Term.types -> Term.rel_declaration) ->
  (Names.identifier * Term.constr option * Term.types) list ->
  Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 271 9659 9695 "plugins/funind/functional_principles_types.ml" 271 9659 9697
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 271 9659 9706 "plugins/funind/functional_principles_types.ml" 271 9659 9736
)
"plugins/funind/functional_principles_types.ml" 271 9659 9698 "plugins/funind/functional_principles_types.ml" 271 9659 9699
type(
  Term.constr option
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 271 9659 9706 "plugins/funind/functional_principles_types.ml" 271 9659 9736
)
"plugins/funind/functional_principles_types.ml" 271 9659 9700 "plugins/funind/functional_principles_types.ml" 271 9659 9701
type(
  Term.types
)
ident(
  def b "plugins/funind/functional_principles_types.ml" 271 9659 9706 "plugins/funind/functional_principles_types.ml" 271 9659 9736
)
"plugins/funind/functional_principles_types.ml" 271 9659 9694 "plugins/funind/functional_principles_types.ml" 271 9659 9702
type(
  Names.identifier * Term.constr option * Term.types
)
"plugins/funind/functional_principles_types.ml" 271 9659 9711 "plugins/funind/functional_principles_types.ml" 271 9659 9723
type(
  (Names.identifier, Names.identifier) Hashtbl.t ->
  Names.identifier -> Names.identifier
)
ident(
  ext_ref Hashtbl.find
)
"plugins/funind/functional_principles_types.ml" 271 9659 9724 "plugins/funind/functional_principles_types.ml" 271 9659 9727
type(
  (Names.identifier, Names.identifier) Hashtbl.t
)
ident(
  int_ref tbl "plugins/funind/functional_principles_types.ml" 66 2102 2108 "plugins/funind/functional_principles_types.ml" 66 2102 2111
)
"plugins/funind/functional_principles_types.ml" 271 9659 9728 "plugins/funind/functional_principles_types.ml" 271 9659 9730
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 271 9659 9695 "plugins/funind/functional_principles_types.ml" 271 9659 9697
)
"plugins/funind/functional_principles_types.ml" 271 9659 9710 "plugins/funind/functional_principles_types.ml" 271 9659 9731
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 271 9659 9706 "plugins/funind/functional_principles_types.ml" 271 9659 9731
type(
  Names.name
)
"plugins/funind/functional_principles_types.ml" 271 9659 9733 "plugins/funind/functional_principles_types.ml" 271 9659 9734
type(
  Term.constr option
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 271 9659 9698 "plugins/funind/functional_principles_types.ml" 271 9659 9699
)
"plugins/funind/functional_principles_types.ml" 271 9659 9735 "plugins/funind/functional_principles_types.ml" 271 9659 9736
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 271 9659 9700 "plugins/funind/functional_principles_types.ml" 271 9659 9701
)
"plugins/funind/functional_principles_types.ml" 271 9659 9706 "plugins/funind/functional_principles_types.ml" 271 9659 9736
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 271 9659 9689 "plugins/funind/functional_principles_types.ml" 271 9659 9737
type(
  Names.identifier * Term.constr option * Term.types -> Term.rel_declaration
)
"plugins/funind/functional_principles_types.ml" 272 9738 9747 "plugins/funind/functional_principles_types.ml" 272 9738 9761
type(
  (Names.identifier * Term.constr option * Term.types) list
)
ident(
  int_ref new_predicates "plugins/funind/functional_principles_types.ml" 94 3171 3177 "plugins/funind/functional_principles_types.ml" 94 3171 3191
)
"plugins/funind/functional_principles_types.ml" 271 9659 9679 "plugins/funind/functional_principles_types.ml" 272 9738 9762
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 270 9629 9639 "plugins/funind/functional_principles_types.ml" 273 9763 9767
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 274 9768 9772 "plugins/funind/functional_principles_types.ml" 274 9768 9787
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_type_info "plugins/funind/functional_principles_types.ml" 77 2591 2597 "plugins/funind/functional_principles_types.ml" 77 2591 2612
)
"plugins/funind/functional_principles_types.ml" 274 9768 9772 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 269 9608 9610 "plugins/funind/functional_principles_types.ml" 274 9768 9794
call(
  tail
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 264 9466 9468 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 261 9343 9345 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 153 4800 4802 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 147 4661 4663 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 142 4453 4455 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 141 4400 4402 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 135 4255 4257 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 129 4104 4106 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 128 4039 4041 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 115 3781 3783 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 108 3607 3609 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 107 3541 3543 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 101 3391 3393 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 100 3283 3285 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 94 3171 3173 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 84 2880 2882 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 77 2591 2593 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 76 2532 2534 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 67 2136 2138 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 66 2102 2104 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 65 2023 2025 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 64 1994 1996 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 63 1939 1941 "plugins/funind/functional_principles_types.ml" 274 9768 9794
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 278 9798 9802 "plugins/funind/functional_principles_types.ml" 278 9798 9822
type(
  Term.sorts -> Term.types -> Names.identifier -> Term.constr
)
ident(
  def change_property_sort "plugins/funind/functional_principles_types.ml" 301 10461 10461 --
)
"plugins/funind/functional_principles_types.ml" 278 9798 9823 "plugins/funind/functional_principles_types.ml" 278 9798 9829
type(
  Term.sorts
)
ident(
  def toSort "plugins/funind/functional_principles_types.ml" 278 9798 9830 "plugins/funind/functional_principles_types.ml" 298 10437 10458
)
"plugins/funind/functional_principles_types.ml" 278 9798 9830 "plugins/funind/functional_principles_types.ml" 278 9798 9835
type(
  Term.types
)
ident(
  def princ "plugins/funind/functional_principles_types.ml" 278 9798 9836 "plugins/funind/functional_principles_types.ml" 298 10437 10458
)
"plugins/funind/functional_principles_types.ml" 278 9798 9836 "plugins/funind/functional_principles_types.ml" 278 9798 9845
type(
  Names.identifier
)
ident(
  def princName "plugins/funind/functional_principles_types.ml" 279 9848 9850 "plugins/funind/functional_principles_types.ml" 298 10437 10458
)
"plugins/funind/functional_principles_types.ml" 279 9848 9854 "plugins/funind/functional_principles_types.ml" 279 9848 9864
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_types.ml" 279 9848 9867 "plugins/funind/functional_principles_types.ml" 279 9848 9883
type(
  ?elimc:Term.constr Rawterm.with_bindings ->
  Term.types -> Tactics.elim_scheme
)
ident(
  ext_ref Tactics.compute_elim_sig
)
"plugins/funind/functional_principles_types.ml" 279 9848 9884 "plugins/funind/functional_principles_types.ml" 279 9848 9889
type(
  Term.types
)
ident(
  int_ref princ "plugins/funind/functional_principles_types.ml" 278 9798 9830 "plugins/funind/functional_principles_types.ml" 278 9798 9835
)
"plugins/funind/functional_principles_types.ml" 279 9848 9867 "plugins/funind/functional_principles_types.ml" 279 9848 9889
call(
  stack
)
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_types.ml" 280 9893 9899 "plugins/funind/functional_principles_types.ml" 280 9893 9923
type(
  'a * 'b * Term.constr -> 'a * 'c option * Term.constr
)
"plugins/funind/functional_principles_types.ml" 280 9893 9925 "plugins/funind/functional_principles_types.ml" 280 9893 9926
type(
  'a
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 281 9934 9938 "plugins/funind/functional_principles_types.ml" 284 10024 10029
)
"plugins/funind/functional_principles_types.ml" 280 9893 9927 "plugins/funind/functional_principles_types.ml" 280 9893 9928
type(
  'b
)
ident(
  def v "plugins/funind/functional_principles_types.ml" 281 9934 9938 "plugins/funind/functional_principles_types.ml" 284 10024 10029
)
"plugins/funind/functional_principles_types.ml" 280 9893 9929 "plugins/funind/functional_principles_types.ml" 280 9893 9930
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 281 9934 9938 "plugins/funind/functional_principles_types.ml" 284 10024 10029
)
"plugins/funind/functional_principles_types.ml" 280 9893 9924 "plugins/funind/functional_principles_types.ml" 280 9893 9931
type(
  'a * 'b * Term.constr
)
"plugins/funind/functional_principles_types.ml" 281 9934 9939 "plugins/funind/functional_principles_types.ml" 281 9934 9940
type(
  'a
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 280 9893 9925 "plugins/funind/functional_principles_types.ml" 280 9893 9926
)
"plugins/funind/functional_principles_types.ml" 281 9934 9941 "plugins/funind/functional_principles_types.ml" 281 9934 9945
type(
  'c option
)
"plugins/funind/functional_principles_types.ml" 282 9947 9956 "plugins/funind/functional_principles_types.ml" 282 9947 9960
type(
  (Names.name * Term.constr) list
)
ident(
  def args "plugins/funind/functional_principles_types.ml" 283 9985 9990 "plugins/funind/functional_principles_types.ml" 283 9985 10023
)
"plugins/funind/functional_principles_types.ml" 282 9947 9961 "plugins/funind/functional_principles_types.ml" 282 9947 9962
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 282 9947 9956 "plugins/funind/functional_principles_types.ml" 282 9947 9962
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_types.ml" 282 9947 9965 "plugins/funind/functional_principles_types.ml" 282 9947 9979
type(
  Term.constr -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_prod
)
"plugins/funind/functional_principles_types.ml" 282 9947 9980 "plugins/funind/functional_principles_types.ml" 282 9947 9981
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 280 9893 9929 "plugins/funind/functional_principles_types.ml" 280 9893 9930
)
"plugins/funind/functional_principles_types.ml" 282 9947 9965 "plugins/funind/functional_principles_types.ml" 282 9947 9981
call(
  stack
)
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_types.ml" 283 9985 9990 "plugins/funind/functional_principles_types.ml" 283 9985 10002
type(
  (Names.name * Term.constr) list -> Term.types -> Term.constr
)
ident(
  ext_ref Term.compose_prod
)
"plugins/funind/functional_principles_types.ml" 283 9985 10003 "plugins/funind/functional_principles_types.ml" 283 9985 10007
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref args "plugins/funind/functional_principles_types.ml" 282 9947 9956 "plugins/funind/functional_principles_types.ml" 282 9947 9960
)
"plugins/funind/functional_principles_types.ml" 283 9985 10009 "plugins/funind/functional_principles_types.ml" 283 9985 10015
type(
  Term.sorts -> Term.types
)
ident(
  ext_ref Term.mkSort
)
"plugins/funind/functional_principles_types.ml" 283 9985 10016 "plugins/funind/functional_principles_types.ml" 283 9985 10022
type(
  Term.sorts
)
ident(
  int_ref toSort "plugins/funind/functional_principles_types.ml" 278 9798 9823 "plugins/funind/functional_principles_types.ml" 278 9798 9829
)
"plugins/funind/functional_principles_types.ml" 283 9985 10008 "plugins/funind/functional_principles_types.ml" 283 9985 10023
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 283 9985 9990 "plugins/funind/functional_principles_types.ml" 283 9985 10023
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 282 9947 9952 "plugins/funind/functional_principles_types.ml" 283 9985 10023
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 281 9934 9938 "plugins/funind/functional_principles_types.ml" 284 10024 10029
type(
  'a * 'c option * Term.constr
)
"plugins/funind/functional_principles_types.ml" 286 10035 10041 "plugins/funind/functional_principles_types.ml" 286 10035 10060
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 286 10035 10063 "plugins/funind/functional_principles_types.ml" 286 10035 10085
type(
  Environ.env -> Names.identifier -> Term.constr
)
ident(
  ext_ref Tacinterp.constr_of_id
)
"plugins/funind/functional_principles_types.ml" 286 10035 10087 "plugins/funind/functional_principles_types.ml" 286 10035 10097
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_types.ml" 286 10035 10098 "plugins/funind/functional_principles_types.ml" 286 10035 10100
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 286 10035 10086 "plugins/funind/functional_principles_types.ml" 286 10035 10101
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 286 10035 10102 "plugins/funind/functional_principles_types.ml" 286 10035 10111
type(
  Names.identifier
)
ident(
  int_ref princName "plugins/funind/functional_principles_types.ml" 278 9798 9836 "plugins/funind/functional_principles_types.ml" 278 9798 9845
)
"plugins/funind/functional_principles_types.ml" 286 10035 10063 "plugins/funind/functional_principles_types.ml" 286 10035 10111
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 287 10115 10121 "plugins/funind/functional_principles_types.ml" 287 10115 10125
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 288 10128 10136 "plugins/funind/functional_principles_types.ml" 288 10128 10141
type(
  int
)
"plugins/funind/functional_principles_types.ml" 288 10128 10146 "plugins/funind/functional_principles_types.ml" 288 10128 10156
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_types.ml" 279 9848 9854 "plugins/funind/functional_principles_types.ml" 279 9848 9864
)
"plugins/funind/functional_principles_types.ml" 288 10128 10146 "plugins/funind/functional_principles_types.ml" 288 10128 10164
type(
  int
)
"plugins/funind/functional_principles_types.ml" 288 10128 10165 "plugins/funind/functional_principles_types.ml" 288 10128 10166
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_types.ml" 288 10128 10168 "plugins/funind/functional_principles_types.ml" 288 10128 10179
type(
  Term.rel_context -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_types.ml" 288 10128 10181 "plugins/funind/functional_principles_types.ml" 288 10128 10191
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_types.ml" 279 9848 9854 "plugins/funind/functional_principles_types.ml" 279 9848 9864
)
"plugins/funind/functional_principles_types.ml" 288 10128 10181 "plugins/funind/functional_principles_types.ml" 288 10128 10202
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 288 10128 10167 "plugins/funind/functional_principles_types.ml" 288 10128 10203
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_types.ml" 288 10128 10145 "plugins/funind/functional_principles_types.ml" 288 10128 10204
type(
  int
)
"plugins/funind/functional_principles_types.ml" 289 10208 10212 "plugins/funind/functional_principles_types.ml" 289 10208 10217
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_types.ml" 289 10208 10218 "plugins/funind/functional_principles_types.ml" 289 10208 10237
type(
  Term.constr
)
ident(
  int_ref princName_as_constr "plugins/funind/functional_principles_types.ml" 286 10035 10041 "plugins/funind/functional_principles_types.ml" 286 10035 10060
)
"plugins/funind/functional_principles_types.ml" 290 10239 10242 "plugins/funind/functional_principles_types.ml" 290 10239 10252
type(
  int -> (int -> Term.constr) -> Term.constr array
)
ident(
  ext_ref Array.init
)
"plugins/funind/functional_principles_types.ml" 290 10239 10253 "plugins/funind/functional_principles_types.ml" 290 10239 10258
type(
  int
)
ident(
  int_ref nargs "plugins/funind/functional_principles_types.ml" 288 10128 10136 "plugins/funind/functional_principles_types.ml" 288 10128 10141
)
"plugins/funind/functional_principles_types.ml" 291 10259 10269 "plugins/funind/functional_principles_types.ml" 291 10259 10270
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_types.ml" 291 10259 10274 "plugins/funind/functional_principles_types.ml" 291 10259 10292
)
"plugins/funind/functional_principles_types.ml" 291 10259 10274 "plugins/funind/functional_principles_types.ml" 291 10259 10279
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_types.ml" 291 10259 10281 "plugins/funind/functional_principles_types.ml" 291 10259 10286
type(
  int
)
ident(
  int_ref nargs "plugins/funind/functional_principles_types.ml" 288 10128 10136 "plugins/funind/functional_principles_types.ml" 288 10128 10141
)
"plugins/funind/functional_principles_types.ml" 291 10259 10287 "plugins/funind/functional_principles_types.ml" 291 10259 10288
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_types.ml" 291 10259 10289 "plugins/funind/functional_principles_types.ml" 291 10259 10290
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 291 10259 10269 "plugins/funind/functional_principles_types.ml" 291 10259 10270
)
"plugins/funind/functional_principles_types.ml" 291 10259 10280 "plugins/funind/functional_principles_types.ml" 291 10259 10292
type(
  int
)
"plugins/funind/functional_principles_types.ml" 291 10259 10274 "plugins/funind/functional_principles_types.ml" 291 10259 10292
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 291 10259 10264 "plugins/funind/functional_principles_types.ml" 291 10259 10293
type(
  int -> Term.constr
)
"plugins/funind/functional_principles_types.ml" 290 10239 10242 "plugins/funind/functional_principles_types.ml" 291 10259 10293
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_types.ml" 289 10208 10217 "plugins/funind/functional_principles_types.ml" 291 10259 10294
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_types.ml" 289 10208 10212 "plugins/funind/functional_principles_types.ml" 291 10259 10294
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 288 10128 10132 "plugins/funind/functional_principles_types.ml" 291 10259 10294
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 293 10300 10302 "plugins/funind/functional_principles_types.ml" 293 10300 10322
type(
  init:Term.constr -> Term.rel_context -> Term.constr
)
ident(
  ext_ref Termops.it_mkLambda_or_LetIn
)
"plugins/funind/functional_principles_types.ml" 295 10334 10339 "plugins/funind/functional_principles_types.ml" 295 10334 10359
type(
  init:Term.constr -> Term.rel_context -> Term.constr
)
ident(
  ext_ref Termops.it_mkLambda_or_LetIn
)
"plugins/funind/functional_principles_types.ml" 295 10334 10361 "plugins/funind/functional_principles_types.ml" 295 10334 10365
type(
  Term.constr
)
ident(
  int_ref init "plugins/funind/functional_principles_types.ml" 287 10115 10121 "plugins/funind/functional_principles_types.ml" 287 10115 10125
)
"plugins/funind/functional_principles_types.ml" 296 10366 10374 "plugins/funind/functional_principles_types.ml" 296 10366 10382
type(
  (Term.rel_declaration -> Term.rel_declaration) ->
  Term.rel_context -> Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 296 10366 10383 "plugins/funind/functional_principles_types.ml" 296 10366 10407
type(
  Term.rel_declaration -> Term.rel_declaration
)
ident(
  int_ref change_sort_in_predicate "plugins/funind/functional_principles_types.ml" 280 9893 9899 "plugins/funind/functional_principles_types.ml" 280 9893 9923
)
"plugins/funind/functional_principles_types.ml" 296 10366 10408 "plugins/funind/functional_principles_types.ml" 296 10366 10418
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_types.ml" 279 9848 9854 "plugins/funind/functional_principles_types.ml" 279 9848 9864
)
"plugins/funind/functional_principles_types.ml" 296 10366 10408 "plugins/funind/functional_principles_types.ml" 296 10366 10429
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 296 10366 10373 "plugins/funind/functional_principles_types.ml" 296 10366 10430
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 295 10334 10338 "plugins/funind/functional_principles_types.ml" 297 10431 10436
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 298 10437 10441 "plugins/funind/functional_principles_types.ml" 298 10437 10451
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_types.ml" 279 9848 9854 "plugins/funind/functional_principles_types.ml" 279 9848 9864
)
"plugins/funind/functional_principles_types.ml" 298 10437 10441 "plugins/funind/functional_principles_types.ml" 298 10437 10458
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 293 10300 10302 "plugins/funind/functional_principles_types.ml" 298 10437 10458
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 287 10115 10117 "plugins/funind/functional_principles_types.ml" 298 10437 10458
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 286 10035 10037 "plugins/funind/functional_principles_types.ml" 298 10437 10458
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 280 9893 9895 "plugins/funind/functional_principles_types.ml" 298 10437 10458
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 279 9848 9850 "plugins/funind/functional_principles_types.ml" 298 10437 10458
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 301 10461 10465 "plugins/funind/functional_principles_types.ml" 301 10461 10471
type(
  System.time -> System.time -> Pp.std_ppcmds
)
ident(
  def pp_dur "plugins/funind/functional_principles_types.ml" 305 10582 10582 --
)
"plugins/funind/functional_principles_types.ml" 301 10461 10472 "plugins/funind/functional_principles_types.ml" 301 10461 10476
type(
  System.time
)
ident(
  def time "plugins/funind/functional_principles_types.ml" 301 10461 10477 "plugins/funind/functional_principles_types.ml" 302 10485 10544
)
"plugins/funind/functional_principles_types.ml" 301 10461 10477 "plugins/funind/functional_principles_types.ml" 301 10461 10482
type(
  System.time
)
ident(
  def time' "plugins/funind/functional_principles_types.ml" 302 10485 10487 "plugins/funind/functional_principles_types.ml" 302 10485 10544
)
"plugins/funind/functional_principles_types.ml" 302 10485 10487 "plugins/funind/functional_principles_types.ml" 302 10485 10490
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 302 10485 10492 "plugins/funind/functional_principles_types.ml" 302 10485 10507
type(
  float -> string
)
ident(
  ext_ref Pervasives.string_of_float
)
"plugins/funind/functional_principles_types.ml" 302 10485 10509 "plugins/funind/functional_principles_types.ml" 302 10485 10531
type(
  System.time -> System.time -> float
)
ident(
  ext_ref System.time_difference
)
"plugins/funind/functional_principles_types.ml" 302 10485 10532 "plugins/funind/functional_principles_types.ml" 302 10485 10536
type(
  System.time
)
ident(
  int_ref time "plugins/funind/functional_principles_types.ml" 301 10461 10472 "plugins/funind/functional_principles_types.ml" 301 10461 10476
)
"plugins/funind/functional_principles_types.ml" 302 10485 10537 "plugins/funind/functional_principles_types.ml" 302 10485 10542
type(
  System.time
)
ident(
  int_ref time' "plugins/funind/functional_principles_types.ml" 301 10461 10477 "plugins/funind/functional_principles_types.ml" 301 10461 10482
)
"plugins/funind/functional_principles_types.ml" 302 10485 10508 "plugins/funind/functional_principles_types.ml" 302 10485 10543
call(
  stack
)
type(
  float
)
"plugins/funind/functional_principles_types.ml" 302 10485 10491 "plugins/funind/functional_principles_types.ml" 302 10485 10544
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_types.ml" 302 10485 10487 "plugins/funind/functional_principles_types.ml" 302 10485 10544
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 305 10582 10586 "plugins/funind/functional_principles_types.ml" 305 10582 10593
type(
  unit -> unit
)
ident(
  def defined "plugins/funind/functional_principles_types.ml" 320 10845 10845 --
)
"plugins/funind/functional_principles_types.ml" 305 10582 10594 "plugins/funind/functional_principles_types.ml" 305 10582 10596
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 307 10605 10609 "plugins/funind/functional_principles_types.ml" 307 10605 10626
type(
  bool -> unit
)
ident(
  ext_ref Lemmas.save_named
)
"plugins/funind/functional_principles_types.ml" 307 10605 10627 "plugins/funind/functional_principles_types.ml" 307 10605 10632
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 307 10605 10609 "plugins/funind/functional_principles_types.ml" 307 10605 10632
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 309 10640 10656 "plugins/funind/functional_principles_types.ml" 309 10640 10671
type(
  string
)
"plugins/funind/functional_principles_types.ml" 309 10640 10672 "plugins/funind/functional_principles_types.ml" 309 10640 10675
type(
  Pp.std_ppcmds
)
ident(
  def msg "plugins/funind/functional_principles_types.ml" 310 10680 10681 "plugins/funind/functional_principles_types.ml" 315 10810 10822
)
"plugins/funind/functional_principles_types.ml" 309 10640 10646 "plugins/funind/functional_principles_types.ml" 309 10640 10676
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 310 10680 10681 "plugins/funind/functional_principles_types.ml" 310 10680 10698
type(
  string -> Pp.std_ppcmds -> unit
)
ident(
  ext_ref Util.errorlabstrm
)
"plugins/funind/functional_principles_types.ml" 311 10699 10702 "plugins/funind/functional_principles_types.ml" 311 10699 10711
type(
  string
)
"plugins/funind/functional_principles_types.ml" 313 10721 10728 "plugins/funind/functional_principles_types.ml" 313 10721 10731
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 313 10721 10732 "plugins/funind/functional_principles_types.ml" 313 10721 10744
type(
  string
)
"plugins/funind/functional_principles_types.ml" 313 10721 10728 "plugins/funind/functional_principles_types.ml" 313 10721 10744
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 313 10721 10745 "plugins/funind/functional_principles_types.ml" 313 10721 10747
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 313 10721 10748 "plugins/funind/functional_principles_types.ml" 313 10721 10751
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 313 10721 10752 "plugins/funind/functional_principles_types.ml" 313 10721 10754
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 313 10721 10748 "plugins/funind/functional_principles_types.ml" 313 10721 10754
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 313 10721 10728 "plugins/funind/functional_principles_types.ml" 313 10721 10754
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 313 10721 10755 "plugins/funind/functional_principles_types.ml" 313 10721 10757
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 313 10721 10759 "plugins/funind/functional_principles_types.ml" 313 10721 10775
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_open_subgoals
)
"plugins/funind/functional_principles_types.ml" 313 10721 10776 "plugins/funind/functional_principles_types.ml" 313 10721 10778
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 313 10721 10759 "plugins/funind/functional_principles_types.ml" 313 10721 10778
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 313 10721 10728 "plugins/funind/functional_principles_types.ml" 313 10721 10778
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 313 10721 10779 "plugins/funind/functional_principles_types.ml" 313 10721 10781
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 313 10721 10782 "plugins/funind/functional_principles_types.ml" 313 10721 10785
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_types.ml" 313 10721 10786 "plugins/funind/functional_principles_types.ml" 313 10721 10788
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 313 10721 10782 "plugins/funind/functional_principles_types.ml" 313 10721 10788
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 313 10721 10728 "plugins/funind/functional_principles_types.ml" 313 10721 10788
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 314 10789 10799 "plugins/funind/functional_principles_types.ml" 314 10789 10800
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 314 10789 10804 "plugins/funind/functional_principles_types.ml" 314 10789 10806
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/functional_principles_types.ml" 314 10789 10807 "plugins/funind/functional_principles_types.ml" 314 10789 10809
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 314 10789 10804 "plugins/funind/functional_principles_types.ml" 314 10789 10809
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 312 10712 10716 "plugins/funind/functional_principles_types.ml" 315 10810 10815
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 315 10810 10816 "plugins/funind/functional_principles_types.ml" 315 10810 10818
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 315 10810 10818 "plugins/funind/functional_principles_types.ml" 315 10810 10821
type(
  Pp.std_ppcmds
)
ident(
  int_ref msg "plugins/funind/functional_principles_types.ml" 309 10640 10672 "plugins/funind/functional_principles_types.ml" 309 10640 10675
)
"plugins/funind/functional_principles_types.ml" 312 10712 10715 "plugins/funind/functional_principles_types.ml" 315 10810 10822
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 310 10680 10681 "plugins/funind/functional_principles_types.ml" 315 10810 10822
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 316 10823 10829 "plugins/funind/functional_principles_types.ml" 316 10823 10830
type(
  exn
)
ident(
  def e "plugins/funind/functional_principles_types.ml" 316 10823 10834 "plugins/funind/functional_principles_types.ml" 316 10823 10841
)
"plugins/funind/functional_principles_types.ml" 316 10823 10834 "plugins/funind/functional_principles_types.ml" 316 10823 10839
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 316 10823 10840 "plugins/funind/functional_principles_types.ml" 316 10823 10841
type(
  exn
)
ident(
  int_ref e "plugins/funind/functional_principles_types.ml" 316 10823 10829 "plugins/funind/functional_principles_types.ml" 316 10823 10830
)
"plugins/funind/functional_principles_types.ml" 316 10823 10834 "plugins/funind/functional_principles_types.ml" 316 10823 10841
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 306 10599 10601 "plugins/funind/functional_principles_types.ml" 316 10823 10841
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 320 10845 10849 "plugins/funind/functional_principles_types.ml" 320 10845 10875
type(
  'a ->
  Term.types ->
  Term.sorts array ->
  Names.constant array ->
  'b ->
  (Term.constr array -> int -> Tacmach.tactic) ->
  (Term.types -> Tacexpr.declaration_hook) ->
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
ident(
  def build_functional_principle "plugins/funind/functional_principles_types.ml" 355 12126 12126 --
)
"plugins/funind/functional_principles_types.ml" 320 10845 10876 "plugins/funind/functional_principles_types.ml" 320 10845 10893
type(
  'a
)
ident(
  def interactive_proof "plugins/funind/functional_principles_types.ml" 320 10845 10894 "plugins/funind/functional_principles_types.ml" 351 12117 12122
)
"plugins/funind/functional_principles_types.ml" 320 10845 10894 "plugins/funind/functional_principles_types.ml" 320 10845 10908
type(
  Term.types
)
ident(
  def old_princ_type "plugins/funind/functional_principles_types.ml" 320 10845 10909 "plugins/funind/functional_principles_types.ml" 351 12117 12122
)
"plugins/funind/functional_principles_types.ml" 320 10845 10909 "plugins/funind/functional_principles_types.ml" 320 10845 10914
type(
  Term.sorts array
)
ident(
  def sorts "plugins/funind/functional_principles_types.ml" 320 10845 10915 "plugins/funind/functional_principles_types.ml" 351 12117 12122
)
"plugins/funind/functional_principles_types.ml" 320 10845 10915 "plugins/funind/functional_principles_types.ml" 320 10845 10919
type(
  Names.constant array
)
ident(
  def funs "plugins/funind/functional_principles_types.ml" 320 10845 10920 "plugins/funind/functional_principles_types.ml" 351 12117 12122
)
"plugins/funind/functional_principles_types.ml" 320 10845 10920 "plugins/funind/functional_principles_types.ml" 320 10845 10921
type(
  'b
)
ident(
  def i "plugins/funind/functional_principles_types.ml" 320 10845 10922 "plugins/funind/functional_principles_types.ml" 351 12117 12122
)
"plugins/funind/functional_principles_types.ml" 320 10845 10922 "plugins/funind/functional_principles_types.ml" 320 10845 10931
type(
  Term.constr array -> int -> Tacmach.tactic
)
ident(
  def proof_tac "plugins/funind/functional_principles_types.ml" 320 10845 10932 "plugins/funind/functional_principles_types.ml" 351 12117 12122
)
"plugins/funind/functional_principles_types.ml" 320 10845 10932 "plugins/funind/functional_principles_types.ml" 320 10845 10936
type(
  Term.types -> Tacexpr.declaration_hook
)
ident(
  def hook "plugins/funind/functional_principles_types.ml" 322 10996 10998 "plugins/funind/functional_principles_types.ml" 351 12117 12122
)
"plugins/funind/functional_principles_types.ml" 322 10996 11002 "plugins/funind/functional_principles_types.ml" 322 10996 11014
type(
  int
)
"plugins/funind/functional_principles_types.ml" 322 10996 11018 "plugins/funind/functional_principles_types.ml" 322 10996 11034
type(
  ?elimc:Term.constr Rawterm.with_bindings ->
  Term.types -> Tactics.elim_scheme
)
ident(
  ext_ref Tactics.compute_elim_sig
)
"plugins/funind/functional_principles_types.ml" 322 10996 11035 "plugins/funind/functional_principles_types.ml" 322 10996 11049
type(
  Term.types
)
ident(
  int_ref old_princ_type "plugins/funind/functional_principles_types.ml" 320 10845 10894 "plugins/funind/functional_principles_types.ml" 320 10845 10908
)
"plugins/funind/functional_principles_types.ml" 322 10996 11017 "plugins/funind/functional_principles_types.ml" 322 10996 11050
call(
  stack
)
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_types.ml" 322 10996 11017 "plugins/funind/functional_principles_types.ml" 322 10996 11058
type(
  int
)
"plugins/funind/functional_principles_types.ml" 324 11107 11113 "plugins/funind/functional_principles_types.ml" 324 11107 11131
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 325 11134 11138 "plugins/funind/functional_principles_types.ml" 325 11134 11169
type(
  Term.constr array -> Term.sorts array -> Term.types -> Term.types
)
ident(
  int_ref compute_new_princ_type_from_rel "plugins/funind/functional_principles_types.ml" 62 1873 1877 "plugins/funind/functional_principles_types.ml" 62 1873 1908
)
"plugins/funind/functional_principles_types.ml" 326 11170 11177 "plugins/funind/functional_principles_types.ml" 326 11170 11186
type(
  (Names.constant -> Term.constr) ->
  Names.constant array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_types.ml" 326 11170 11187 "plugins/funind/functional_principles_types.ml" 326 11170 11194
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/functional_principles_types.ml" 326 11170 11195 "plugins/funind/functional_principles_types.ml" 326 11170 11199
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 320 10845 10915 "plugins/funind/functional_principles_types.ml" 320 10845 10919
)
"plugins/funind/functional_principles_types.ml" 326 11170 11176 "plugins/funind/functional_principles_types.ml" 326 11170 11200
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_types.ml" 327 11201 11207 "plugins/funind/functional_principles_types.ml" 327 11201 11212
type(
  Term.sorts array
)
ident(
  int_ref sorts "plugins/funind/functional_principles_types.ml" 320 10845 10909 "plugins/funind/functional_principles_types.ml" 320 10845 10914
)
"plugins/funind/functional_principles_types.ml" 328 11213 11219 "plugins/funind/functional_principles_types.ml" 328 11213 11233
type(
  Term.types
)
ident(
  int_ref old_princ_type "plugins/funind/functional_principles_types.ml" 320 10845 10894 "plugins/funind/functional_principles_types.ml" 320 10845 10908
)
"plugins/funind/functional_principles_types.ml" 325 11134 11138 "plugins/funind/functional_principles_types.ml" 328 11213 11233
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 332 11385 11390 "plugins/funind/functional_principles_types.ml" 332 11385 11397
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/functional_principles_types.ml" 54 1742 1746 "plugins/funind/functional_principles_types.ml" 54 1742 1753
)
"plugins/funind/functional_principles_types.ml" 332 11385 11399 "plugins/funind/functional_principles_types.ml" 332 11385 11402
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 332 11385 11403 "plugins/funind/functional_principles_types.ml" 332 11385 11426
type(
  string
)
"plugins/funind/functional_principles_types.ml" 332 11385 11399 "plugins/funind/functional_principles_types.ml" 332 11385 11426
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 332 11385 11427 "plugins/funind/functional_principles_types.ml" 332 11385 11429
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 332 11385 11430 "plugins/funind/functional_principles_types.ml" 332 11385 11440
type(
  Term.types -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/functional_principles_types.ml" 332 11385 11441 "plugins/funind/functional_principles_types.ml" 332 11385 11459
type(
  Term.types
)
ident(
  int_ref new_principle_type "plugins/funind/functional_principles_types.ml" 324 11107 11113 "plugins/funind/functional_principles_types.ml" 324 11107 11131
)
"plugins/funind/functional_principles_types.ml" 332 11385 11430 "plugins/funind/functional_principles_types.ml" 332 11385 11459
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 332 11385 11398 "plugins/funind/functional_principles_types.ml" 332 11385 11460
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 332 11385 11390 "plugins/funind/functional_principles_types.ml" 332 11385 11460
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 333 11462 11468 "plugins/funind/functional_principles_types.ml" 333 11462 11482
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 334 11485 11489 "plugins/funind/functional_principles_types.ml" 334 11485 11512
type(
  Names.identifier -> Names.identifier list -> Names.identifier
)
ident(
  ext_ref Namegen.next_ident_away_in_goal
)
"plugins/funind/functional_principles_types.ml" 334 11485 11514 "plugins/funind/functional_principles_types.ml" 334 11485 11526
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/functional_principles_types.ml" 334 11485 11527 "plugins/funind/functional_principles_types.ml" 334 11485 11554
type(
  string
)
"plugins/funind/functional_principles_types.ml" 334 11485 11513 "plugins/funind/functional_principles_types.ml" 334 11485 11555
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 334 11485 11556 "plugins/funind/functional_principles_types.ml" 334 11485 11558
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 334 11485 11489 "plugins/funind/functional_principles_types.ml" 334 11485 11558
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 337 11572 11576 "plugins/funind/functional_principles_types.ml" 337 11572 11594
type(
  Names.identifier ->
  Decl_kinds.goal_kind ->
  Term.types ->
  ?init_tac:Proof_type.tactic ->
  ?compute_guard:Pfedit.lemma_possible_guards ->
  Tacexpr.declaration_hook -> unit
)
ident(
  ext_ref Lemmas.start_proof
)
"plugins/funind/functional_principles_types.ml" 338 11595 11601 "plugins/funind/functional_principles_types.ml" 338 11595 11615
type(
  Names.identifier
)
ident(
  int_ref new_princ_name "plugins/funind/functional_principles_types.ml" 333 11462 11468 "plugins/funind/functional_principles_types.ml" 333 11462 11482
)
"plugins/funind/functional_principles_types.ml" 339 11616 11623 "plugins/funind/functional_principles_types.ml" 339 11616 11640
type(
  Decl_kinds.locality
)
"plugins/funind/functional_principles_types.ml" 339 11616 11659 "plugins/funind/functional_principles_types.ml" 339 11616 11677
type(
  Decl_kinds.theorem_kind
)
"plugins/funind/functional_principles_types.ml" 339 11616 11641 "plugins/funind/functional_principles_types.ml" 339 11616 11678
type(
  Decl_kinds.goal_object_kind
)
"plugins/funind/functional_principles_types.ml" 339 11616 11622 "plugins/funind/functional_principles_types.ml" 339 11616 11679
type(
  Decl_kinds.goal_kind
)
"plugins/funind/functional_principles_types.ml" 340 11680 11686 "plugins/funind/functional_principles_types.ml" 340 11680 11704
type(
  Term.types
)
ident(
  int_ref new_principle_type "plugins/funind/functional_principles_types.ml" 324 11107 11113 "plugins/funind/functional_principles_types.ml" 324 11107 11131
)
"plugins/funind/functional_principles_types.ml" 341 11705 11712 "plugins/funind/functional_principles_types.ml" 341 11705 11716
type(
  Term.types -> Tacexpr.declaration_hook
)
ident(
  int_ref hook "plugins/funind/functional_principles_types.ml" 320 10845 10932 "plugins/funind/functional_principles_types.ml" 320 10845 10936
)
"plugins/funind/functional_principles_types.ml" 341 11705 11717 "plugins/funind/functional_principles_types.ml" 341 11705 11735
type(
  Term.types
)
ident(
  int_ref new_principle_type "plugins/funind/functional_principles_types.ml" 324 11107 11113 "plugins/funind/functional_principles_types.ml" 324 11107 11131
)
"plugins/funind/functional_principles_types.ml" 341 11705 11711 "plugins/funind/functional_principles_types.ml" 341 11705 11736
call(
  stack
)
type(
  Tacexpr.declaration_hook
)
"plugins/funind/functional_principles_types.ml" 337 11572 11576 "plugins/funind/functional_principles_types.ml" 341 11705 11736
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 344 11794 11798 "plugins/funind/functional_principles_types.ml" 344 11794 11807
type(
  Tacmach.tactic -> unit
)
ident(
  ext_ref Pfedit.by
)
"plugins/funind/functional_principles_types.ml" 344 11794 11810 "plugins/funind/functional_principles_types.ml" 344 11794 11819
type(
  Term.constr array -> int -> Tacmach.tactic
)
ident(
  int_ref proof_tac "plugins/funind/functional_principles_types.ml" 320 10845 10922 "plugins/funind/functional_principles_types.ml" 320 10845 10931
)
"plugins/funind/functional_principles_types.ml" 344 11794 11821 "plugins/funind/functional_principles_types.ml" 344 11794 11830
type(
  (Names.constant -> Term.constr) ->
  Names.constant array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_types.ml" 344 11794 11831 "plugins/funind/functional_principles_types.ml" 344 11794 11838
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/functional_principles_types.ml" 344 11794 11839 "plugins/funind/functional_principles_types.ml" 344 11794 11843
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 320 10845 10915 "plugins/funind/functional_principles_types.ml" 320 10845 10919
)
"plugins/funind/functional_principles_types.ml" 344 11794 11820 "plugins/funind/functional_principles_types.ml" 344 11794 11844
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_types.ml" 344 11794 11845 "plugins/funind/functional_principles_types.ml" 344 11794 11857
type(
  int
)
ident(
  int_ref mutr_nparams "plugins/funind/functional_principles_types.ml" 322 10996 11002 "plugins/funind/functional_principles_types.ml" 322 10996 11014
)
"plugins/funind/functional_principles_types.ml" 344 11794 11809 "plugins/funind/functional_principles_types.ml" 344 11794 11858
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_types.ml" 344 11794 11798 "plugins/funind/functional_principles_types.ml" 344 11794 11858
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 350 12092 12096 "plugins/funind/functional_principles_types.ml" 350 12092 12111
type(
  bool ->
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
ident(
  ext_ref Indfun_common.get_proof_clean
)
"plugins/funind/functional_principles_types.ml" 350 12092 12112 "plugins/funind/functional_principles_types.ml" 350 12092 12116
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 350 12092 12096 "plugins/funind/functional_principles_types.ml" 350 12092 12116
call(
  tail
)
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 344 11794 11798 "plugins/funind/functional_principles_types.ml" 350 12092 12116
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 336 11564 11566 "plugins/funind/functional_principles_types.ml" 351 12117 12122
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 333 11462 11464 "plugins/funind/functional_principles_types.ml" 351 12117 12122
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 332 11385 11390 "plugins/funind/functional_principles_types.ml" 351 12117 12122
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 324 11107 11109 "plugins/funind/functional_principles_types.ml" 351 12117 12122
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 322 10996 10998 "plugins/funind/functional_principles_types.ml" 351 12117 12122
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 355 12126 12130 "plugins/funind/functional_principles_types.ml" 355 12126 12159
type(
  'a ->
  Term.types ->
  Term.sorts array option ->
  Names.identifier option ->
  Names.constant array ->
  int -> (Term.constr array -> int -> Tacmach.tactic) -> unit
)
ident(
  def generate_functional_principle "plugins/funind/functional_principles_types.ml" 433 14336 14336 --
)
"plugins/funind/functional_principles_types.ml" 356 12160 12164 "plugins/funind/functional_principles_types.ml" 356 12160 12181
type(
  'a
)
ident(
  def interactive_proof "plugins/funind/functional_principles_types.ml" 357 12182 12186 "plugins/funind/functional_principles_types.ml" 429 14306 14313
)
"plugins/funind/functional_principles_types.ml" 357 12182 12186 "plugins/funind/functional_principles_types.ml" 357 12182 12200
type(
  Term.types
)
ident(
  def old_princ_type "plugins/funind/functional_principles_types.ml" 357 12182 12201 "plugins/funind/functional_principles_types.ml" 429 14306 14313
)
"plugins/funind/functional_principles_types.ml" 357 12182 12201 "plugins/funind/functional_principles_types.ml" 357 12182 12206
type(
  Term.sorts array option
)
ident(
  def sorts "plugins/funind/functional_principles_types.ml" 357 12182 12207 "plugins/funind/functional_principles_types.ml" 429 14306 14313
)
"plugins/funind/functional_principles_types.ml" 357 12182 12207 "plugins/funind/functional_principles_types.ml" 357 12182 12221
type(
  Names.identifier option
)
ident(
  def new_princ_name "plugins/funind/functional_principles_types.ml" 357 12182 12222 "plugins/funind/functional_principles_types.ml" 429 14306 14313
)
"plugins/funind/functional_principles_types.ml" 357 12182 12222 "plugins/funind/functional_principles_types.ml" 357 12182 12226
type(
  Names.constant array
)
ident(
  def funs "plugins/funind/functional_principles_types.ml" 357 12182 12227 "plugins/funind/functional_principles_types.ml" 429 14306 14313
)
"plugins/funind/functional_principles_types.ml" 357 12182 12227 "plugins/funind/functional_principles_types.ml" 357 12182 12228
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_types.ml" 357 12182 12229 "plugins/funind/functional_principles_types.ml" 429 14306 14313
)
"plugins/funind/functional_principles_types.ml" 357 12182 12229 "plugins/funind/functional_principles_types.ml" 357 12182 12238
type(
  Term.constr array -> int -> Tacmach.tactic
)
ident(
  def proof_tac "plugins/funind/functional_principles_types.ml" 359 12245 12247 "plugins/funind/functional_principles_types.ml" 429 14306 14313
)
"plugins/funind/functional_principles_types.ml" 361 12252 12258 "plugins/funind/functional_principles_types.ml" 361 12252 12259
type(
  Names.constant
)
ident(
  def f "plugins/funind/functional_principles_types.ml" 362 12274 12276 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 361 12252 12262 "plugins/funind/functional_principles_types.ml" 361 12252 12266
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 357 12182 12222 "plugins/funind/functional_principles_types.ml" 357 12182 12226
)
"plugins/funind/functional_principles_types.ml" 361 12252 12268 "plugins/funind/functional_principles_types.ml" 361 12252 12269
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 357 12182 12227 "plugins/funind/functional_principles_types.ml" 357 12182 12228
)
"plugins/funind/functional_principles_types.ml" 361 12252 12262 "plugins/funind/functional_principles_types.ml" 361 12252 12270
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 362 12274 12280 "plugins/funind/functional_principles_types.ml" 362 12274 12289
type(
  Term.sorts
)
ident(
  def type_sort "plugins/funind/functional_principles_types.ml" 363 12329 12331 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 362 12274 12292 "plugins/funind/functional_principles_types.ml" 362 12274 12318
type(
  Term.sorts_family -> Term.sorts
)
ident(
  ext_ref Termops.new_sort_in_family
)
"plugins/funind/functional_principles_types.ml" 362 12274 12319 "plugins/funind/functional_principles_types.ml" 362 12274 12325
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 362 12274 12292 "plugins/funind/functional_principles_types.ml" 362 12274 12325
call(
  stack
)
type(
  Term.sorts
)
"plugins/funind/functional_principles_types.ml" 363 12329 12335 "plugins/funind/functional_principles_types.ml" 363 12329 12344
type(
  Term.sorts array
)
ident(
  def new_sorts "plugins/funind/functional_principles_types.ml" 368 12452 12454 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 364 12347 12357 "plugins/funind/functional_principles_types.ml" 364 12347 12362
type(
  Term.sorts array option
)
ident(
  int_ref sorts "plugins/funind/functional_principles_types.ml" 357 12182 12201 "plugins/funind/functional_principles_types.ml" 357 12182 12206
)
"plugins/funind/functional_principles_types.ml" 365 12368 12376 "plugins/funind/functional_principles_types.ml" 365 12368 12380
type(
  Term.sorts array option
)
"plugins/funind/functional_principles_types.ml" 365 12368 12384 "plugins/funind/functional_principles_types.ml" 365 12368 12394
type(
  int -> Term.sorts -> Term.sorts array
)
ident(
  ext_ref Array.make
)
"plugins/funind/functional_principles_types.ml" 365 12368 12396 "plugins/funind/functional_principles_types.ml" 365 12368 12408
type(
  Names.constant array -> int
)
ident(
  ext_ref Array.length
)
"plugins/funind/functional_principles_types.ml" 365 12368 12409 "plugins/funind/functional_principles_types.ml" 365 12368 12413
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 357 12182 12222 "plugins/funind/functional_principles_types.ml" 357 12182 12226
)
"plugins/funind/functional_principles_types.ml" 365 12368 12395 "plugins/funind/functional_principles_types.ml" 365 12368 12414
type(
  int
)
"plugins/funind/functional_principles_types.ml" 365 12368 12415 "plugins/funind/functional_principles_types.ml" 365 12368 12426
type(
  Term.sorts
)
ident(
  int_ref type_sort "plugins/funind/functional_principles_types.ml" 362 12274 12280 "plugins/funind/functional_principles_types.ml" 362 12274 12289
)
"plugins/funind/functional_principles_types.ml" 365 12368 12384 "plugins/funind/functional_principles_types.ml" 365 12368 12426
type(
  Term.sorts array
)
"plugins/funind/functional_principles_types.ml" 366 12427 12440 "plugins/funind/functional_principles_types.ml" 366 12427 12441
type(
  Term.sorts array
)
ident(
  def a "plugins/funind/functional_principles_types.ml" 366 12427 12445 "plugins/funind/functional_principles_types.ml" 366 12427 12446
)
"plugins/funind/functional_principles_types.ml" 366 12427 12435 "plugins/funind/functional_principles_types.ml" 366 12427 12441
type(
  Term.sorts array option
)
"plugins/funind/functional_principles_types.ml" 366 12427 12445 "plugins/funind/functional_principles_types.ml" 366 12427 12446
type(
  Term.sorts array
)
ident(
  int_ref a "plugins/funind/functional_principles_types.ml" 366 12427 12440 "plugins/funind/functional_principles_types.ml" 366 12427 12441
)
"plugins/funind/functional_principles_types.ml" 364 12347 12351 "plugins/funind/functional_principles_types.ml" 366 12427 12446
type(
  Term.sorts array
)
"plugins/funind/functional_principles_types.ml" 368 12452 12458 "plugins/funind/functional_principles_types.ml" 368 12452 12477
type(
  Names.identifier
)
ident(
  def base_new_princ_name "plugins/funind/functional_principles_types.ml" 375 12695 12697 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 368 12452 12478 "plugins/funind/functional_principles_types.ml" 368 12452 12492
type(
  Names.identifier
)
ident(
  def new_princ_name "plugins/funind/functional_principles_types.ml" 375 12695 12697 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 368 12452 12458 "plugins/funind/functional_principles_types.ml" 368 12452 12492
type(
  Names.identifier * Names.identifier
)
"plugins/funind/functional_principles_types.ml" 369 12495 12505 "plugins/funind/functional_principles_types.ml" 369 12495 12519
type(
  Names.identifier option
)
ident(
  int_ref new_princ_name "plugins/funind/functional_principles_types.ml" 357 12182 12207 "plugins/funind/functional_principles_types.ml" 357 12182 12221
)
"plugins/funind/functional_principles_types.ml" 370 12525 12538 "plugins/funind/functional_principles_types.ml" 370 12525 12542
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 370 12525 12546 "plugins/funind/functional_principles_types.ml" 370 12525 12551
)
"plugins/funind/functional_principles_types.ml" 370 12525 12533 "plugins/funind/functional_principles_types.ml" 370 12525 12542
type(
  Names.identifier option
)
"plugins/funind/functional_principles_types.ml" 370 12525 12546 "plugins/funind/functional_principles_types.ml" 370 12525 12548
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 370 12525 12538 "plugins/funind/functional_principles_types.ml" 370 12525 12542
)
"plugins/funind/functional_principles_types.ml" 370 12525 12549 "plugins/funind/functional_principles_types.ml" 370 12525 12551
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 370 12525 12538 "plugins/funind/functional_principles_types.ml" 370 12525 12542
)
"plugins/funind/functional_principles_types.ml" 370 12525 12546 "plugins/funind/functional_principles_types.ml" 370 12525 12551
type(
  Names.identifier * Names.identifier
)
"plugins/funind/functional_principles_types.ml" 371 12552 12560 "plugins/funind/functional_principles_types.ml" 371 12552 12564
type(
  Names.identifier option
)
"plugins/funind/functional_principles_types.ml" 372 12568 12575 "plugins/funind/functional_principles_types.ml" 372 12568 12582
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 372 12568 12585 "plugins/funind/functional_principles_types.ml" 372 12568 12596
type(
  Names.label -> Names.identifier
)
ident(
  ext_ref Names.id_of_label
)
"plugins/funind/functional_principles_types.ml" 372 12568 12598 "plugins/funind/functional_principles_types.ml" 372 12568 12607
type(
  Names.constant -> Names.label
)
ident(
  ext_ref Names.con_label
)
"plugins/funind/functional_principles_types.ml" 372 12568 12608 "plugins/funind/functional_principles_types.ml" 372 12568 12609
type(
  Names.constant
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 361 12252 12258 "plugins/funind/functional_principles_types.ml" 361 12252 12259
)
"plugins/funind/functional_principles_types.ml" 372 12568 12597 "plugins/funind/functional_principles_types.ml" 372 12568 12610
call(
  stack
)
type(
  Names.label
)
"plugins/funind/functional_principles_types.ml" 372 12568 12585 "plugins/funind/functional_principles_types.ml" 372 12568 12610
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 373 12614 12617 "plugins/funind/functional_principles_types.ml" 373 12614 12624
type(
  Names.identifier
)
ident(
  int_ref id_of_f "plugins/funind/functional_principles_types.ml" 372 12568 12575 "plugins/funind/functional_principles_types.ml" 372 12568 12582
)
"plugins/funind/functional_principles_types.ml" 373 12614 12625 "plugins/funind/functional_principles_types.ml" 373 12614 12654
type(
  Names.identifier -> Term.sorts_family -> Names.identifier
)
ident(
  ext_ref Indrec.make_elimination_ident
)
"plugins/funind/functional_principles_types.ml" 373 12614 12655 "plugins/funind/functional_principles_types.ml" 373 12614 12662
type(
  Names.identifier
)
ident(
  int_ref id_of_f "plugins/funind/functional_principles_types.ml" 372 12568 12575 "plugins/funind/functional_principles_types.ml" 372 12568 12582
)
"plugins/funind/functional_principles_types.ml" 373 12614 12664 "plugins/funind/functional_principles_types.ml" 373 12614 12678
type(
  Term.sorts -> Term.sorts_family
)
ident(
  ext_ref Term.family_of_sort
)
"plugins/funind/functional_principles_types.ml" 373 12614 12679 "plugins/funind/functional_principles_types.ml" 373 12614 12688
type(
  Term.sorts
)
ident(
  int_ref type_sort "plugins/funind/functional_principles_types.ml" 362 12274 12280 "plugins/funind/functional_principles_types.ml" 362 12274 12289
)
"plugins/funind/functional_principles_types.ml" 373 12614 12663 "plugins/funind/functional_principles_types.ml" 373 12614 12689
call(
  stack
)
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 373 12614 12625 "plugins/funind/functional_principles_types.ml" 373 12614 12689
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 373 12614 12617 "plugins/funind/functional_principles_types.ml" 373 12614 12689
type(
  Names.identifier * Names.identifier
)
"plugins/funind/functional_principles_types.ml" 372 12568 12571 "plugins/funind/functional_principles_types.ml" 373 12614 12689
type(
  Names.identifier * Names.identifier
)
"plugins/funind/functional_principles_types.ml" 369 12495 12499 "plugins/funind/functional_principles_types.ml" 373 12614 12689
type(
  Names.identifier * Names.identifier
)
"plugins/funind/functional_principles_types.ml" 375 12695 12701 "plugins/funind/functional_principles_types.ml" 375 12695 12706
type(
  Names.identifier list ref
)
ident(
  def names "plugins/funind/functional_principles_types.ml" 376 12733 12735 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 375 12695 12709 "plugins/funind/functional_principles_types.ml" 375 12695 12712
type(
  Names.identifier list -> Names.identifier list ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/functional_principles_types.ml" 375 12695 12714 "plugins/funind/functional_principles_types.ml" 375 12695 12728
type(
  Names.identifier
)
ident(
  int_ref new_princ_name "plugins/funind/functional_principles_types.ml" 368 12452 12478 "plugins/funind/functional_principles_types.ml" 368 12452 12492
)
"plugins/funind/functional_principles_types.ml" 375 12695 12713 "plugins/funind/functional_principles_types.ml" 375 12695 12729
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 375 12695 12709 "plugins/funind/functional_principles_types.ml" 375 12695 12729
type(
  Names.identifier list ref
)
"plugins/funind/functional_principles_types.ml" 376 12733 12739 "plugins/funind/functional_principles_types.ml" 376 12733 12743
type(
  Term.types -> 'b -> 'c -> unit
)
ident(
  def hook "plugins/funind/functional_principles_types.ml" 407 13663 13665 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 376 12733 12744 "plugins/funind/functional_principles_types.ml" 376 12733 12762
type(
  Term.types
)
ident(
  def new_principle_type "plugins/funind/functional_principles_types.ml" 376 12733 12763 "plugins/funind/functional_principles_types.ml" 405 13627 13657
)
"plugins/funind/functional_principles_types.ml" 376 12733 12763 "plugins/funind/functional_principles_types.ml" 376 12733 12764
type(
  'b
)
"plugins/funind/functional_principles_types.ml" 376 12733 12765 "plugins/funind/functional_principles_types.ml" 376 12733 12766
type(
  'c
)
"plugins/funind/functional_principles_types.ml" 377 12770 12777 "plugins/funind/functional_principles_types.ml" 377 12770 12782
type(
  Term.sorts array option
)
ident(
  int_ref sorts "plugins/funind/functional_principles_types.ml" 357 12182 12201 "plugins/funind/functional_principles_types.ml" 357 12182 12206
)
"plugins/funind/functional_principles_types.ml" 377 12770 12783 "plugins/funind/functional_principles_types.ml" 377 12770 12784
type(
  Term.sorts array option -> Term.sorts array option -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_types.ml" 377 12770 12785 "plugins/funind/functional_principles_types.ml" 377 12770 12789
type(
  Term.sorts array option
)
"plugins/funind/functional_principles_types.ml" 377 12770 12777 "plugins/funind/functional_principles_types.ml" 377 12770 12789
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 380 12858 12868 "plugins/funind/functional_principles_types.ml" 380 12858 12886
type(
  Term.sorts_family -> unit
)
"plugins/funind/functional_principles_types.ml" 380 12858 12887 "plugins/funind/functional_principles_types.ml" 380 12858 12895
type(
  Term.sorts_family
)
ident(
  def fam_sort "plugins/funind/functional_principles_types.ml" 381 12898 12899 "plugins/funind/functional_principles_types.ml" 402 13560 13584
)
"plugins/funind/functional_principles_types.ml" 381 12898 12903 "plugins/funind/functional_principles_types.ml" 381 12898 12904
type(
  Term.sorts
)
"plugins/funind/functional_principles_types.ml" 381 12898 12907 "plugins/funind/functional_principles_types.ml" 381 12898 12933
type(
  Term.sorts_family -> Term.sorts
)
ident(
  ext_ref Termops.new_sort_in_family
)
"plugins/funind/functional_principles_types.ml" 381 12898 12934 "plugins/funind/functional_principles_types.ml" 381 12898 12942
type(
  Term.sorts_family
)
ident(
  int_ref fam_sort "plugins/funind/functional_principles_types.ml" 380 12858 12887 "plugins/funind/functional_principles_types.ml" 380 12858 12895
)
"plugins/funind/functional_principles_types.ml" 381 12898 12907 "plugins/funind/functional_principles_types.ml" 381 12898 12942
call(
  stack
)
type(
  Term.sorts
)
"plugins/funind/functional_principles_types.ml" 382 12946 12951 "plugins/funind/functional_principles_types.ml" 382 12946 12955
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 382 12946 12958 "plugins/funind/functional_principles_types.ml" 382 12946 12987
type(
  Names.identifier -> Term.sorts_family -> Names.identifier
)
ident(
  ext_ref Indrec.make_elimination_ident
)
"plugins/funind/functional_principles_types.ml" 382 12946 12988 "plugins/funind/functional_principles_types.ml" 382 12946 13007
type(
  Names.identifier
)
ident(
  int_ref base_new_princ_name "plugins/funind/functional_principles_types.ml" 368 12452 12458 "plugins/funind/functional_principles_types.ml" 368 12452 12477
)
"plugins/funind/functional_principles_types.ml" 382 12946 13008 "plugins/funind/functional_principles_types.ml" 382 12946 13016
type(
  Term.sorts_family
)
ident(
  int_ref fam_sort "plugins/funind/functional_principles_types.ml" 380 12858 12887 "plugins/funind/functional_principles_types.ml" 380 12858 12895
)
"plugins/funind/functional_principles_types.ml" 382 12946 12958 "plugins/funind/functional_principles_types.ml" 382 12946 13016
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 383 13020 13025 "plugins/funind/functional_principles_types.ml" 383 13020 13030
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 383 13020 13033 "plugins/funind/functional_principles_types.ml" 383 13020 13053
type(
  Term.sorts -> Term.types -> Names.identifier -> Term.constr
)
ident(
  int_ref change_property_sort "plugins/funind/functional_principles_types.ml" 278 9798 9802 "plugins/funind/functional_principles_types.ml" 278 9798 9822
)
"plugins/funind/functional_principles_types.ml" 383 13020 13054 "plugins/funind/functional_principles_types.ml" 383 13020 13055
type(
  Term.sorts
)
ident(
  int_ref s "plugins/funind/functional_principles_types.ml" 381 12898 12903 "plugins/funind/functional_principles_types.ml" 381 12898 12904
)
"plugins/funind/functional_principles_types.ml" 383 13020 13056 "plugins/funind/functional_principles_types.ml" 383 13020 13074
type(
  Term.types
)
ident(
  int_ref new_principle_type "plugins/funind/functional_principles_types.ml" 376 12733 12744 "plugins/funind/functional_principles_types.ml" 376 12733 12762
)
"plugins/funind/functional_principles_types.ml" 383 13020 13075 "plugins/funind/functional_principles_types.ml" 383 13020 13089
type(
  Names.identifier
)
ident(
  int_ref new_princ_name "plugins/funind/functional_principles_types.ml" 368 12452 12478 "plugins/funind/functional_principles_types.ml" 368 12452 12492
)
"plugins/funind/functional_principles_types.ml" 383 13020 13033 "plugins/funind/functional_principles_types.ml" 383 13020 13089
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 385 13162 13167 "plugins/funind/functional_principles_types.ml" 385 13162 13169
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 386 13172 13196 "plugins/funind/functional_principles_types.ml" 386 13172 13201
type(
  Term.constr
)
ident(
  int_ref value "plugins/funind/functional_principles_types.ml" 383 13020 13025 "plugins/funind/functional_principles_types.ml" 383 13020 13030
)
"plugins/funind/functional_principles_types.ml" 387 13203 13227 "plugins/funind/functional_principles_types.ml" 387 13203 13231
type(
  Term.types option
)
"plugins/funind/functional_principles_types.ml" 388 13233 13259 "plugins/funind/functional_principles_types.ml" 388 13233 13264
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 389 13266 13291 "plugins/funind/functional_principles_types.ml" 389 13266 13314
type(
  unit -> bool
)
ident(
  ext_ref Flags.boxed_definitions
)
"plugins/funind/functional_principles_types.ml" 389 13266 13314 "plugins/funind/functional_principles_types.ml" 389 13266 13316
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 389 13266 13291 "plugins/funind/functional_principles_types.ml" 389 13266 13316
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 386 13172 13175 "plugins/funind/functional_principles_types.ml" 390 13317 13321
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 392 13326 13327 "plugins/funind/functional_principles_types.ml" 392 13326 13333
type(
  Names.constant -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"plugins/funind/functional_principles_types.ml" 393 13335 13338 "plugins/funind/functional_principles_types.ml" 393 13335 13362
type(
  Names.identifier -> Declare.constant_declaration -> Names.constant
)
ident(
  ext_ref Declare.declare_constant
)
"plugins/funind/functional_principles_types.ml" 394 13363 13368 "plugins/funind/functional_principles_types.ml" 394 13363 13372
type(
  Names.identifier
)
ident(
  int_ref name "plugins/funind/functional_principles_types.ml" 382 12946 12951 "plugins/funind/functional_principles_types.ml" 382 12946 12955
)
"plugins/funind/functional_principles_types.ml" 395 13373 13403 "plugins/funind/functional_principles_types.ml" 395 13373 13405
type(
  Entries.definition_entry
)
ident(
  int_ref ce "plugins/funind/functional_principles_types.ml" 385 13162 13167 "plugins/funind/functional_principles_types.ml" 385 13162 13169
)
"plugins/funind/functional_principles_types.ml" 395 13373 13379 "plugins/funind/functional_principles_types.ml" 395 13373 13405
type(
  Entries.constant_entry
)
"plugins/funind/functional_principles_types.ml" 396 13407 13437 "plugins/funind/functional_principles_types.ml" 396 13407 13456
type(
  Decl_kinds.definition_object_kind
)
"plugins/funind/functional_principles_types.ml" 396 13407 13413 "plugins/funind/functional_principles_types.ml" 396 13407 13456
type(
  Decl_kinds.logical_kind
)
"plugins/funind/functional_principles_types.ml" 395 13373 13378 "plugins/funind/functional_principles_types.ml" 397 13457 13463
type(
  Declare.constant_declaration
)
"plugins/funind/functional_principles_types.ml" 392 13326 13333 "plugins/funind/functional_principles_types.ml" 398 13464 13466
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 392 13326 13327 "plugins/funind/functional_principles_types.ml" 398 13464 13466
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 399 13468 13469 "plugins/funind/functional_principles_types.ml" 399 13468 13485
type(
  (Names.identifier -> unit) -> Names.identifier -> unit
)
ident(
  ext_ref Flags.if_verbose
)
"plugins/funind/functional_principles_types.ml" 400 13486 13494 "plugins/funind/functional_principles_types.ml" 400 13486 13496
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 400 13486 13500 "plugins/funind/functional_principles_types.ml" 400 13486 13549
)
"plugins/funind/functional_principles_types.ml" 400 13486 13500 "plugins/funind/functional_principles_types.ml" 400 13486 13508
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msgnl
)
"plugins/funind/functional_principles_types.ml" 400 13486 13510 "plugins/funind/functional_principles_types.ml" 400 13486 13524
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_id
)
"plugins/funind/functional_principles_types.ml" 400 13486 13525 "plugins/funind/functional_principles_types.ml" 400 13486 13527
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 400 13486 13494 "plugins/funind/functional_principles_types.ml" 400 13486 13496
)
"plugins/funind/functional_principles_types.ml" 400 13486 13510 "plugins/funind/functional_principles_types.ml" 400 13486 13527
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 400 13486 13528 "plugins/funind/functional_principles_types.ml" 400 13486 13530
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 400 13486 13531 "plugins/funind/functional_principles_types.ml" 400 13486 13534
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 400 13486 13535 "plugins/funind/functional_principles_types.ml" 400 13486 13548
type(
  string
)
"plugins/funind/functional_principles_types.ml" 400 13486 13531 "plugins/funind/functional_principles_types.ml" 400 13486 13548
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 400 13486 13509 "plugins/funind/functional_principles_types.ml" 400 13486 13549
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 400 13486 13500 "plugins/funind/functional_principles_types.ml" 400 13486 13549
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 400 13486 13489 "plugins/funind/functional_principles_types.ml" 400 13486 13550
type(
  Names.identifier -> unit
)
"plugins/funind/functional_principles_types.ml" 401 13551 13554 "plugins/funind/functional_principles_types.ml" 401 13551 13558
type(
  Names.identifier
)
ident(
  int_ref name "plugins/funind/functional_principles_types.ml" 382 12946 12951 "plugins/funind/functional_principles_types.ml" 382 12946 12955
)
"plugins/funind/functional_principles_types.ml" 399 13468 13469 "plugins/funind/functional_principles_types.ml" 401 13551 13558
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 402 13560 13561 "plugins/funind/functional_principles_types.ml" 402 13560 13566
type(
  Names.identifier list ref
)
ident(
  int_ref names "plugins/funind/functional_principles_types.ml" 375 12695 12701 "plugins/funind/functional_principles_types.ml" 375 12695 12706
)
"plugins/funind/functional_principles_types.ml" 402 13560 13567 "plugins/funind/functional_principles_types.ml" 402 13560 13569
type(
  Names.identifier list ref -> Names.identifier list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/functional_principles_types.ml" 402 13560 13570 "plugins/funind/functional_principles_types.ml" 402 13560 13574
type(
  Names.identifier
)
ident(
  int_ref name "plugins/funind/functional_principles_types.ml" 382 12946 12951 "plugins/funind/functional_principles_types.ml" 382 12946 12955
)
"plugins/funind/functional_principles_types.ml" 402 13560 13578 "plugins/funind/functional_principles_types.ml" 402 13560 13579
type(
  Names.identifier list ref -> Names.identifier list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_types.ml" 402 13560 13579 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  Names.identifier list ref
)
ident(
  int_ref names "plugins/funind/functional_principles_types.ml" 375 12695 12701 "plugins/funind/functional_principles_types.ml" 375 12695 12706
)
"plugins/funind/functional_principles_types.ml" 402 13560 13578 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 402 13560 13570 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  Names.identifier list
)
"plugins/funind/functional_principles_types.ml" 402 13560 13561 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 399 13468 13469 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 392 13326 13327 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 385 13162 13163 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 383 13020 13021 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 382 12946 12947 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 381 12898 12899 "plugins/funind/functional_principles_types.ml" 402 13560 13584
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 404 13594 13600 "plugins/funind/functional_principles_types.ml" 404 13594 13618
type(
  Term.sorts_family -> unit
)
ident(
  int_ref register_with_sort "plugins/funind/functional_principles_types.ml" 380 12858 12868 "plugins/funind/functional_principles_types.ml" 380 12858 12886
)
"plugins/funind/functional_principles_types.ml" 404 13594 13619 "plugins/funind/functional_principles_types.ml" 404 13594 13625
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 404 13594 13600 "plugins/funind/functional_principles_types.ml" 404 13594 13625
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 405 13627 13633 "plugins/funind/functional_principles_types.ml" 405 13627 13651
type(
  Term.sorts_family -> unit
)
ident(
  int_ref register_with_sort "plugins/funind/functional_principles_types.ml" 380 12858 12868 "plugins/funind/functional_principles_types.ml" 380 12858 12886
)
"plugins/funind/functional_principles_types.ml" 405 13627 13652 "plugins/funind/functional_principles_types.ml" 405 13627 13657
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 405 13627 13633 "plugins/funind/functional_principles_types.ml" 405 13627 13657
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 404 13594 13600 "plugins/funind/functional_principles_types.ml" 405 13627 13657
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 380 12858 12864 "plugins/funind/functional_principles_types.ml" 405 13627 13657
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 377 12770 12774 "plugins/funind/functional_principles_types.ml" 405 13627 13657
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 407 13663 13670 "plugins/funind/functional_principles_types.ml" 407 13663 13672
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 413 13881 13883 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 407 13663 13674 "plugins/funind/functional_principles_types.ml" 407 13663 13679
type(
  Entries.definition_entry
)
ident(
  def entry "plugins/funind/functional_principles_types.ml" 413 13881 13883 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 407 13663 13680 "plugins/funind/functional_principles_types.ml" 407 13663 13686
type(
  Decl_kinds.goal_kind
)
ident(
  def g_kind "plugins/funind/functional_principles_types.ml" 413 13881 13883 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 407 13663 13687 "plugins/funind/functional_principles_types.ml" 407 13663 13691
type(
  Tacexpr.declaration_hook
)
ident(
  def hook "plugins/funind/functional_principles_types.ml" 413 13881 13883 "plugins/funind/functional_principles_types.ml" 413 13881 13926
)
"plugins/funind/functional_principles_types.ml" 407 13663 13673 "plugins/funind/functional_principles_types.ml" 407 13663 13692
type(
  Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook
)
"plugins/funind/functional_principles_types.ml" 407 13663 13669 "plugins/funind/functional_principles_types.ml" 407 13663 13693
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 408 13696 13700 "plugins/funind/functional_principles_types.ml" 408 13696 13726
type(
  'a ->
  Term.types ->
  Term.sorts array ->
  Names.constant array ->
  int ->
  (Term.constr array -> int -> Tacmach.tactic) ->
  (Term.types -> Tacexpr.declaration_hook) ->
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
ident(
  int_ref build_functional_principle "plugins/funind/functional_principles_types.ml" 320 10845 10849 "plugins/funind/functional_principles_types.ml" 320 10845 10875
)
"plugins/funind/functional_principles_types.ml" 408 13696 13727 "plugins/funind/functional_principles_types.ml" 408 13696 13744
type(
  'a
)
ident(
  int_ref interactive_proof "plugins/funind/functional_principles_types.ml" 356 12160 12164 "plugins/funind/functional_principles_types.ml" 356 12160 12181
)
"plugins/funind/functional_principles_types.ml" 408 13696 13745 "plugins/funind/functional_principles_types.ml" 408 13696 13759
type(
  Term.types
)
ident(
  int_ref old_princ_type "plugins/funind/functional_principles_types.ml" 357 12182 12186 "plugins/funind/functional_principles_types.ml" 357 12182 12200
)
"plugins/funind/functional_principles_types.ml" 408 13696 13760 "plugins/funind/functional_principles_types.ml" 408 13696 13769
type(
  Term.sorts array
)
ident(
  int_ref new_sorts "plugins/funind/functional_principles_types.ml" 363 12329 12335 "plugins/funind/functional_principles_types.ml" 363 12329 12344
)
"plugins/funind/functional_principles_types.ml" 408 13696 13770 "plugins/funind/functional_principles_types.ml" 408 13696 13774
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 357 12182 12222 "plugins/funind/functional_principles_types.ml" 357 12182 12226
)
"plugins/funind/functional_principles_types.ml" 408 13696 13775 "plugins/funind/functional_principles_types.ml" 408 13696 13776
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 357 12182 12227 "plugins/funind/functional_principles_types.ml" 357 12182 12228
)
"plugins/funind/functional_principles_types.ml" 408 13696 13777 "plugins/funind/functional_principles_types.ml" 408 13696 13786
type(
  Term.constr array -> int -> Tacmach.tactic
)
ident(
  int_ref proof_tac "plugins/funind/functional_principles_types.ml" 357 12182 12229 "plugins/funind/functional_principles_types.ml" 357 12182 12238
)
"plugins/funind/functional_principles_types.ml" 408 13696 13787 "plugins/funind/functional_principles_types.ml" 408 13696 13791
type(
  Term.types -> Tacexpr.declaration_hook
)
ident(
  int_ref hook "plugins/funind/functional_principles_types.ml" 376 12733 12739 "plugins/funind/functional_principles_types.ml" 376 12733 12743
)
"plugins/funind/functional_principles_types.ml" 408 13696 13700 "plugins/funind/functional_principles_types.ml" 408 13696 13791
call(
  stack
)
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 413 13881 13883 "plugins/funind/functional_principles_types.ml" 413 13881 13887
type(
  bool ->
  Names.identifier ->
  Entries.definition_entry ->
  Decl_kinds.goal_kind -> Tacexpr.declaration_hook -> unit
)
ident(
  ext_ref Indfun_common.save
)
"plugins/funind/functional_principles_types.ml" 413 13881 13888 "plugins/funind/functional_principles_types.ml" 413 13881 13893
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 413 13881 13894 "plugins/funind/functional_principles_types.ml" 413 13881 13908
type(
  Names.identifier
)
ident(
  int_ref new_princ_name "plugins/funind/functional_principles_types.ml" 368 12452 12478 "plugins/funind/functional_principles_types.ml" 368 12452 12492
)
"plugins/funind/functional_principles_types.ml" 413 13881 13909 "plugins/funind/functional_principles_types.ml" 413 13881 13914
type(
  Entries.definition_entry
)
ident(
  int_ref entry "plugins/funind/functional_principles_types.ml" 407 13663 13674 "plugins/funind/functional_principles_types.ml" 407 13663 13679
)
"plugins/funind/functional_principles_types.ml" 413 13881 13915 "plugins/funind/functional_principles_types.ml" 413 13881 13921
type(
  Decl_kinds.goal_kind
)
ident(
  int_ref g_kind "plugins/funind/functional_principles_types.ml" 407 13663 13680 "plugins/funind/functional_principles_types.ml" 407 13663 13686
)
"plugins/funind/functional_principles_types.ml" 413 13881 13922 "plugins/funind/functional_principles_types.ml" 413 13881 13926
type(
  Tacexpr.declaration_hook
)
ident(
  int_ref hook "plugins/funind/functional_principles_types.ml" 407 13663 13687 "plugins/funind/functional_principles_types.ml" 407 13663 13691
)
"plugins/funind/functional_principles_types.ml" 413 13881 13883 "plugins/funind/functional_principles_types.ml" 413 13881 13926
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 407 13663 13665 "plugins/funind/functional_principles_types.ml" 413 13881 13926
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 376 12733 12735 "plugins/funind/functional_principles_types.ml" 413 13881 13926
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 375 12695 12697 "plugins/funind/functional_principles_types.ml" 413 13881 13926
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 368 12452 12454 "plugins/funind/functional_principles_types.ml" 413 13881 13926
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 363 12329 12331 "plugins/funind/functional_principles_types.ml" 413 13881 13926
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 362 12274 12276 "plugins/funind/functional_principles_types.ml" 413 13881 13926
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 361 12252 12254 "plugins/funind/functional_principles_types.ml" 413 13881 13926
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 414 13927 13934 "plugins/funind/functional_principles_types.ml" 414 13927 13935
type(
  exn
)
ident(
  def e "plugins/funind/functional_principles_types.ml" 415 13939 13943 "plugins/funind/functional_principles_types.ml" 429 14306 14313
)
"plugins/funind/functional_principles_types.ml" 418 13966 13973 "plugins/funind/functional_principles_types.ml" 418 13966 13975
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 419 14014 14017 "plugins/funind/functional_principles_types.ml" 425 14235 14245
)
"plugins/funind/functional_principles_types.ml" 418 13966 13978 "plugins/funind/functional_principles_types.ml" 418 13966 14007
type(
  unit -> Names.identifier
)
ident(
  ext_ref Pfedit.get_current_proof_name
)
"plugins/funind/functional_principles_types.ml" 418 13966 14008 "plugins/funind/functional_principles_types.ml" 418 13966 14010
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 418 13966 13978 "plugins/funind/functional_principles_types.ml" 418 13966 14010
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 419 14014 14021 "plugins/funind/functional_principles_types.ml" 419 14014 14022
type(
  string
)
ident(
  def s "plugins/funind/functional_principles_types.ml" 420 14044 14047 "plugins/funind/functional_principles_types.ml" 425 14235 14245
)
"plugins/funind/functional_principles_types.ml" 419 14014 14025 "plugins/funind/functional_principles_types.ml" 419 14014 14037
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/functional_principles_types.ml" 419 14014 14038 "plugins/funind/functional_principles_types.ml" 419 14014 14040
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 418 13966 13973 "plugins/funind/functional_principles_types.ml" 418 13966 13975
)
"plugins/funind/functional_principles_types.ml" 419 14014 14025 "plugins/funind/functional_principles_types.ml" 419 14014 14040
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_types.ml" 420 14044 14051 "plugins/funind/functional_principles_types.ml" 420 14044 14052
type(
  int
)
ident(
  def n "plugins/funind/functional_principles_types.ml" 421 14100 14103 "plugins/funind/functional_principles_types.ml" 425 14235 14245
)
"plugins/funind/functional_principles_types.ml" 420 14044 14055 "plugins/funind/functional_principles_types.ml" 420 14044 14068
type(
  string -> int
)
ident(
  ext_ref String.length
)
"plugins/funind/functional_principles_types.ml" 420 14044 14069 "plugins/funind/functional_principles_types.ml" 420 14044 14096
type(
  string
)
"plugins/funind/functional_principles_types.ml" 420 14044 14055 "plugins/funind/functional_principles_types.ml" 420 14044 14096
type(
  int
)
"plugins/funind/functional_principles_types.ml" 421 14100 14106 "plugins/funind/functional_principles_types.ml" 421 14100 14119
type(
  string -> int
)
ident(
  ext_ref String.length
)
"plugins/funind/functional_principles_types.ml" 421 14100 14120 "plugins/funind/functional_principles_types.ml" 421 14100 14121
type(
  string
)
ident(
  int_ref s "plugins/funind/functional_principles_types.ml" 419 14014 14021 "plugins/funind/functional_principles_types.ml" 419 14014 14022
)
"plugins/funind/functional_principles_types.ml" 421 14100 14106 "plugins/funind/functional_principles_types.ml" 421 14100 14121
type(
  int
)
"plugins/funind/functional_principles_types.ml" 421 14100 14122 "plugins/funind/functional_principles_types.ml" 421 14100 14124
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"plugins/funind/functional_principles_types.ml" 421 14100 14125 "plugins/funind/functional_principles_types.ml" 421 14100 14126
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_types.ml" 420 14044 14051 "plugins/funind/functional_principles_types.ml" 420 14044 14052
)
"plugins/funind/functional_principles_types.ml" 421 14100 14106 "plugins/funind/functional_principles_types.ml" 421 14100 14126
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 422 14127 14138 "plugins/funind/functional_principles_types.ml" 422 14127 14148
type(
  string -> int -> int -> string
)
ident(
  ext_ref String.sub
)
"plugins/funind/functional_principles_types.ml" 422 14127 14149 "plugins/funind/functional_principles_types.ml" 422 14127 14150
type(
  string
)
ident(
  int_ref s "plugins/funind/functional_principles_types.ml" 419 14014 14021 "plugins/funind/functional_principles_types.ml" 419 14014 14022
)
"plugins/funind/functional_principles_types.ml" 422 14127 14151 "plugins/funind/functional_principles_types.ml" 422 14127 14152
type(
  int
)
"plugins/funind/functional_principles_types.ml" 422 14127 14153 "plugins/funind/functional_principles_types.ml" 422 14127 14154
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_types.ml" 420 14044 14051 "plugins/funind/functional_principles_types.ml" 420 14044 14052
)
"plugins/funind/functional_principles_types.ml" 422 14127 14138 "plugins/funind/functional_principles_types.ml" 422 14127 14154
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_types.ml" 422 14127 14155 "plugins/funind/functional_principles_types.ml" 422 14127 14156
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_types.ml" 422 14127 14157 "plugins/funind/functional_principles_types.ml" 422 14127 14184
type(
  string
)
"plugins/funind/functional_principles_types.ml" 422 14127 14138 "plugins/funind/functional_principles_types.ml" 422 14127 14184
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 423 14185 14193 "plugins/funind/functional_principles_types.ml" 423 14185 14220
type(
  unit -> unit
)
ident(
  ext_ref Pfedit.delete_current_proof
)
"plugins/funind/functional_principles_types.ml" 423 14185 14221 "plugins/funind/functional_principles_types.ml" 423 14185 14223
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 423 14185 14193 "plugins/funind/functional_principles_types.ml" 423 14185 14223
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 424 14224 14232 "plugins/funind/functional_principles_types.ml" 424 14224 14234
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 422 14127 14135 "plugins/funind/functional_principles_types.ml" 424 14224 14234
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 425 14235 14243 "plugins/funind/functional_principles_types.ml" 425 14235 14245
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 421 14100 14103 "plugins/funind/functional_principles_types.ml" 425 14235 14245
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 420 14044 14047 "plugins/funind/functional_principles_types.ml" 425 14235 14245
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 419 14014 14017 "plugins/funind/functional_principles_types.ml" 425 14235 14245
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 418 13966 13969 "plugins/funind/functional_principles_types.ml" 425 14235 14245
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 426 14246 14252 "plugins/funind/functional_principles_types.ml" 426 14246 14253
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 426 14246 14257 "plugins/funind/functional_principles_types.ml" 426 14246 14259
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 416 13949 13955 "plugins/funind/functional_principles_types.ml" 427 14260 14269
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 428 14271 14277 "plugins/funind/functional_principles_types.ml" 428 14271 14282
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 428 14271 14303 "plugins/funind/functional_principles_types.ml" 428 14271 14304
type(
  exn
)
ident(
  int_ref e "plugins/funind/functional_principles_types.ml" 414 13927 13934 "plugins/funind/functional_principles_types.ml" 414 13927 13935
)
"plugins/funind/functional_principles_types.ml" 428 14271 14283 "plugins/funind/functional_principles_types.ml" 428 14271 14305
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 428 14271 14277 "plugins/funind/functional_principles_types.ml" 428 14271 14305
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 415 13939 13943 "plugins/funind/functional_principles_types.ml" 429 14306 14313
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 359 12245 12247 "plugins/funind/functional_principles_types.ml" 429 14306 14313
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 435 14355 14359 "plugins/funind/functional_principles_types.ml" 435 14355 14376
type(
  Names.module_path ->
  Names.dir_path -> Names.constant -> (Names.constant * int) array
)
ident(
  def get_funs_constant "plugins/funind/functional_principles_types.ml" 504 16371 16371 --
)
"plugins/funind/functional_principles_types.ml" 435 14355 14377 "plugins/funind/functional_principles_types.ml" 435 14355 14379
type(
  Names.module_path
)
ident(
  def mp "plugins/funind/functional_principles_types.ml" 435 14355 14380 "plugins/funind/functional_principles_types.ml" 502 16358 16369
)
"plugins/funind/functional_principles_types.ml" 435 14355 14380 "plugins/funind/functional_principles_types.ml" 435 14355 14382
type(
  Names.dir_path
)
ident(
  def dp "plugins/funind/functional_principles_types.ml" 436 14385 14387 "plugins/funind/functional_principles_types.ml" 502 16358 16369
)
"plugins/funind/functional_principles_types.ml" 436 14385 14395 "plugins/funind/functional_principles_types.ml" 436 14385 14412
type(
  Names.constant -> Term.constr -> (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 436 14385 14413 "plugins/funind/functional_principles_types.ml" 436 14385 14418
type(
  Names.constant
)
ident(
  def const "plugins/funind/functional_principles_types.ml" 436 14385 14419 "plugins/funind/functional_principles_types.ml" 449 14728 14752
)
"plugins/funind/functional_principles_types.ml" 436 14385 14419 "plugins/funind/functional_principles_types.ml" 436 14385 14420
type(
  Term.constr
)
ident(
  def e "plugins/funind/functional_principles_types.ml" 436 14385 14421 "plugins/funind/functional_principles_types.ml" 449 14728 14752
)
"plugins/funind/functional_principles_types.ml" 437 14452 14462 "plugins/funind/functional_principles_types.ml" 437 14452 14474
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 437 14452 14477 "plugins/funind/functional_principles_types.ml" 437 14452 14486
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Term.strip_lam
)
"plugins/funind/functional_principles_types.ml" 437 14452 14487 "plugins/funind/functional_principles_types.ml" 437 14452 14488
type(
  Term.constr
)
ident(
  int_ref e "plugins/funind/functional_principles_types.ml" 436 14385 14419 "plugins/funind/functional_principles_types.ml" 436 14385 14420
)
"plugins/funind/functional_principles_types.ml" 437 14452 14475 "plugins/funind/functional_principles_types.ml" 437 14452 14490
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 437 14452 14462 "plugins/funind/functional_principles_types.ml" 437 14452 14490
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 438 14496 14509 "plugins/funind/functional_principles_types.ml" 438 14496 14510
type(
  int array * int
)
"plugins/funind/functional_principles_types.ml" 438 14496 14512 "plugins/funind/functional_principles_types.ml" 438 14496 14514
type(
  Names.name array
)
ident(
  def na "plugins/funind/functional_principles_types.ml" 439 14525 14528 "plugins/funind/functional_principles_types.ml" 448 14720 14727
)
"plugins/funind/functional_principles_types.ml" 438 14496 14515 "plugins/funind/functional_principles_types.ml" 438 14496 14516
type(
  Term.types array
)
"plugins/funind/functional_principles_types.ml" 438 14496 14517 "plugins/funind/functional_principles_types.ml" 438 14496 14518
type(
  Term.constr array
)
"plugins/funind/functional_principles_types.ml" 438 14496 14511 "plugins/funind/functional_principles_types.ml" 438 14496 14519
type(
  (Term.constr, Term.types) Term.prec_declaration
)
"plugins/funind/functional_principles_types.ml" 438 14496 14507 "plugins/funind/functional_principles_types.ml" 438 14496 14521
type(
  (Term.constr, Term.types) Term.pfixpoint
)
"plugins/funind/functional_principles_types.ml" 438 14496 14504 "plugins/funind/functional_principles_types.ml" 438 14496 14521
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 439 14525 14528 "plugins/funind/functional_principles_types.ml" 439 14525 14538
type(
  (int -> Names.name -> Names.constant * int) ->
  Names.name array -> (Names.constant * int) array
)
ident(
  ext_ref Array.mapi
)
"plugins/funind/functional_principles_types.ml" 440 14539 14549 "plugins/funind/functional_principles_types.ml" 440 14539 14550
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_types.ml" 440 14539 14551 "plugins/funind/functional_principles_types.ml" 446 14682 14712
)
"plugins/funind/functional_principles_types.ml" 440 14539 14551 "plugins/funind/functional_principles_types.ml" 440 14539 14553
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_types.ml" 441 14557 14565 "plugins/funind/functional_principles_types.ml" 446 14682 14712
)
"plugins/funind/functional_principles_types.ml" 441 14557 14571 "plugins/funind/functional_principles_types.ml" 441 14557 14573
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_types.ml" 440 14539 14551 "plugins/funind/functional_principles_types.ml" 440 14539 14553
)
"plugins/funind/functional_principles_types.ml" 442 14579 14589 "plugins/funind/functional_principles_types.ml" 442 14579 14591
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 443 14595 14602 "plugins/funind/functional_principles_types.ml" 444 14649 14663
)
"plugins/funind/functional_principles_types.ml" 442 14579 14584 "plugins/funind/functional_principles_types.ml" 442 14579 14591
type(
  Names.name
)
"plugins/funind/functional_principles_types.ml" 443 14595 14606 "plugins/funind/functional_principles_types.ml" 443 14595 14611
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 443 14595 14614 "plugins/funind/functional_principles_types.ml" 443 14595 14622
type(
  Names.module_path -> Names.dir_path -> Names.label -> Names.constant
)
ident(
  ext_ref Names.make_con
)
"plugins/funind/functional_principles_types.ml" 443 14595 14623 "plugins/funind/functional_principles_types.ml" 443 14595 14625
type(
  Names.module_path
)
ident(
  int_ref mp "plugins/funind/functional_principles_types.ml" 435 14355 14377 "plugins/funind/functional_principles_types.ml" 435 14355 14379
)
"plugins/funind/functional_principles_types.ml" 443 14595 14626 "plugins/funind/functional_principles_types.ml" 443 14595 14628
type(
  Names.dir_path
)
ident(
  int_ref dp "plugins/funind/functional_principles_types.ml" 435 14355 14380 "plugins/funind/functional_principles_types.ml" 435 14355 14382
)
"plugins/funind/functional_principles_types.ml" 443 14595 14630 "plugins/funind/functional_principles_types.ml" 443 14595 14641
type(
  Names.identifier -> Names.label
)
ident(
  ext_ref Names.label_of_id
)
"plugins/funind/functional_principles_types.ml" 443 14595 14642 "plugins/funind/functional_principles_types.ml" 443 14595 14644
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 442 14579 14589 "plugins/funind/functional_principles_types.ml" 442 14579 14591
)
"plugins/funind/functional_principles_types.ml" 443 14595 14629 "plugins/funind/functional_principles_types.ml" 443 14595 14645
call(
  stack
)
type(
  Names.label
)
"plugins/funind/functional_principles_types.ml" 443 14595 14614 "plugins/funind/functional_principles_types.ml" 443 14595 14645
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 444 14649 14656 "plugins/funind/functional_principles_types.ml" 444 14649 14661
type(
  Names.constant
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 443 14595 14606 "plugins/funind/functional_principles_types.ml" 443 14595 14611
)
"plugins/funind/functional_principles_types.ml" 444 14649 14662 "plugins/funind/functional_principles_types.ml" 444 14649 14663
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 440 14539 14549 "plugins/funind/functional_principles_types.ml" 440 14539 14550
)
"plugins/funind/functional_principles_types.ml" 444 14649 14656 "plugins/funind/functional_principles_types.ml" 444 14649 14663
type(
  Names.constant * int
)
"plugins/funind/functional_principles_types.ml" 443 14595 14602 "plugins/funind/functional_principles_types.ml" 444 14649 14663
type(
  Names.constant * int
)
"plugins/funind/functional_principles_types.ml" 445 14664 14669 "plugins/funind/functional_principles_types.ml" 445 14664 14678
type(
  Names.name
)
"plugins/funind/functional_principles_types.ml" 446 14682 14689 "plugins/funind/functional_principles_types.ml" 446 14682 14696
type(
  string -> Names.constant * int
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_types.ml" 446 14682 14697 "plugins/funind/functional_principles_types.ml" 446 14682 14712
type(
  string
)
"plugins/funind/functional_principles_types.ml" 446 14682 14689 "plugins/funind/functional_principles_types.ml" 446 14682 14712
call(
  tail
)
type(
  Names.constant * int
)
"plugins/funind/functional_principles_types.ml" 441 14557 14565 "plugins/funind/functional_principles_types.ml" 446 14682 14712
type(
  Names.constant * int
)
"plugins/funind/functional_principles_types.ml" 440 14539 14544 "plugins/funind/functional_principles_types.ml" 447 14713 14719
type(
  int -> Names.name -> Names.constant * int
)
"plugins/funind/functional_principles_types.ml" 448 14720 14725 "plugins/funind/functional_principles_types.ml" 448 14720 14727
type(
  Names.name array
)
ident(
  int_ref na "plugins/funind/functional_principles_types.ml" 438 14496 14512 "plugins/funind/functional_principles_types.ml" 438 14496 14514
)
"plugins/funind/functional_principles_types.ml" 439 14525 14528 "plugins/funind/functional_principles_types.ml" 448 14720 14727
call(
  tail
)
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 449 14728 14736 "plugins/funind/functional_principles_types.ml" 449 14728 14737
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 449 14728 14743 "plugins/funind/functional_principles_types.ml" 449 14728 14748
type(
  Names.constant
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 436 14385 14413 "plugins/funind/functional_principles_types.ml" 436 14385 14418
)
"plugins/funind/functional_principles_types.ml" 449 14728 14749 "plugins/funind/functional_principles_types.ml" 449 14728 14750
type(
  int
)
"plugins/funind/functional_principles_types.ml" 449 14728 14743 "plugins/funind/functional_principles_types.ml" 449 14728 14750
type(
  Names.constant * int
)
"plugins/funind/functional_principles_types.ml" 449 14728 14741 "plugins/funind/functional_principles_types.ml" 449 14728 14752
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 437 14452 14456 "plugins/funind/functional_principles_types.ml" 449 14728 14752
type(
  (Names.constant * int) array
)
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 451 14758 14769 "plugins/funind/functional_principles_types.ml" 451 14758 14774
type(
  Names.constant
)
ident(
  def const "plugins/funind/functional_principles_types.ml" 452 14778 14782 "plugins/funind/functional_principles_types.ml" 502 16358 16369
)
"plugins/funind/functional_principles_types.ml" 452 14778 14786 "plugins/funind/functional_principles_types.ml" 452 14778 14804
type(
  Names.constant -> Term.constr
)
"plugins/funind/functional_principles_types.ml" 452 14778 14805 "plugins/funind/functional_principles_types.ml" 452 14778 14810
type(
  Names.constant
)
ident(
  def const "plugins/funind/functional_principles_types.ml" 453 14813 14819 "plugins/funind/functional_principles_types.ml" 463 15082 15144
)
"plugins/funind/functional_principles_types.ml" 453 14813 14826 "plugins/funind/functional_principles_types.ml" 453 14813 14848
type(
  Names.constant -> Declarations.constant_body
)
ident(
  ext_ref Global.lookup_constant
)
"plugins/funind/functional_principles_types.ml" 453 14813 14849 "plugins/funind/functional_principles_types.ml" 453 14813 14854
type(
  Names.constant
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 452 14778 14805 "plugins/funind/functional_principles_types.ml" 452 14778 14810
)
"plugins/funind/functional_principles_types.ml" 453 14813 14825 "plugins/funind/functional_principles_types.ml" 453 14813 14856
call(
  stack
)
type(
  Declarations.constant_body
)
"plugins/funind/functional_principles_types.ml" 453 14813 14825 "plugins/funind/functional_principles_types.ml" 453 14813 14867
type(
  Declarations.constr_substituted option
)
"plugins/funind/functional_principles_types.ml" 454 14873 14881 "plugins/funind/functional_principles_types.ml" 454 14873 14882
type(
  Declarations.constr_substituted
)
ident(
  def b "plugins/funind/functional_principles_types.ml" 455 14886 14891 "plugins/funind/functional_principles_types.ml" 462 15072 15081
)
"plugins/funind/functional_principles_types.ml" 454 14873 14876 "plugins/funind/functional_principles_types.ml" 454 14873 14882
type(
  Declarations.constr_substituted option
)
"plugins/funind/functional_principles_types.ml" 455 14886 14895 "plugins/funind/functional_principles_types.ml" 455 14886 14899
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 455 14886 14902 "plugins/funind/functional_principles_types.ml" 455 14886 14907
type(
  Declarations.constr_substituted -> Term.constr
)
ident(
  ext_ref Declarations.force
)
"plugins/funind/functional_principles_types.ml" 455 14886 14908 "plugins/funind/functional_principles_types.ml" 455 14886 14909
type(
  Declarations.constr_substituted
)
ident(
  int_ref b "plugins/funind/functional_principles_types.ml" 454 14873 14881 "plugins/funind/functional_principles_types.ml" 454 14873 14882
)
"plugins/funind/functional_principles_types.ml" 455 14886 14902 "plugins/funind/functional_principles_types.ml" 455 14886 14909
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 456 14913 14922 "plugins/funind/functional_principles_types.ml" 456 14913 14926
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 456 14913 14929 "plugins/funind/functional_principles_types.ml" 456 14913 14950
type(
  Closure.RedFlags.reds -> Reductionops.reduction_function
)
ident(
  ext_ref Tacred.cbv_norm_flags
)
"plugins/funind/functional_principles_types.ml" 457 14951 14959 "plugins/funind/functional_principles_types.ml" 457 14951 14983
type(
  Closure.RedFlags.red_kind list -> Closure.RedFlags.reds
)
ident(
  ext_ref Closure.RedFlags.mkflags
)
"plugins/funind/functional_principles_types.ml" 457 14951 14985 "plugins/funind/functional_principles_types.ml" 457 14951 15007
type(
  Closure.RedFlags.red_kind
)
ident(
  ext_ref Closure.RedFlags.fZETA
)
"plugins/funind/functional_principles_types.ml" 457 14951 14984 "plugins/funind/functional_principles_types.ml" 457 14951 15008
type(
  Closure.RedFlags.red_kind list
)
"plugins/funind/functional_principles_types.ml" 457 14951 14958 "plugins/funind/functional_principles_types.ml" 457 14951 15009
call(
  stack
)
type(
  Closure.RedFlags.reds
)
"plugins/funind/functional_principles_types.ml" 458 15010 15018 "plugins/funind/functional_principles_types.ml" 458 15010 15028
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_types.ml" 458 15010 15029 "plugins/funind/functional_principles_types.ml" 458 15010 15031
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 458 15010 15017 "plugins/funind/functional_principles_types.ml" 458 15010 15032
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 459 15033 15040 "plugins/funind/functional_principles_types.ml" 459 15033 15051
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_types.ml" 460 15052 15059 "plugins/funind/functional_principles_types.ml" 460 15052 15063
type(
  Term.constr
)
ident(
  int_ref body "plugins/funind/functional_principles_types.ml" 455 14886 14895 "plugins/funind/functional_principles_types.ml" 455 14886 14899
)
"plugins/funind/functional_principles_types.ml" 456 14913 14929 "plugins/funind/functional_principles_types.ml" 460 15052 15063
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 462 15072 15077 "plugins/funind/functional_principles_types.ml" 462 15072 15081
type(
  Term.constr
)
ident(
  int_ref body "plugins/funind/functional_principles_types.ml" 456 14913 14922 "plugins/funind/functional_principles_types.ml" 456 14913 14926
)
"plugins/funind/functional_principles_types.ml" 456 14913 14918 "plugins/funind/functional_principles_types.ml" 462 15072 15081
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 455 14886 14891 "plugins/funind/functional_principles_types.ml" 462 15072 15081
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 463 15082 15085 "plugins/funind/functional_principles_types.ml" 463 15082 15089
type(
  Declarations.constr_substituted option
)
"plugins/funind/functional_principles_types.ml" 463 15082 15093 "plugins/funind/functional_principles_types.ml" 463 15082 15098
type(
  string -> Term.constr
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_types.ml" 463 15082 15099 "plugins/funind/functional_principles_types.ml" 463 15082 15144
type(
  string
)
"plugins/funind/functional_principles_types.ml" 463 15082 15093 "plugins/funind/functional_principles_types.ml" 463 15082 15144
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 453 14813 14819 "plugins/funind/functional_principles_types.ml" 463 15082 15144
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 465 15152 15160 "plugins/funind/functional_principles_types.ml" 465 15152 15161
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 465 15152 15164 "plugins/funind/functional_principles_types.ml" 465 15152 15182
type(
  Names.constant -> Term.constr
)
ident(
  int_ref find_constant_body "plugins/funind/functional_principles_types.ml" 452 14778 14786 "plugins/funind/functional_principles_types.ml" 452 14778 14804
)
"plugins/funind/functional_principles_types.ml" 465 15152 15183 "plugins/funind/functional_principles_types.ml" 465 15152 15188
type(
  Names.constant
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 451 14758 14769 "plugins/funind/functional_principles_types.ml" 451 14758 14774
)
"plugins/funind/functional_principles_types.ml" 465 15152 15164 "plugins/funind/functional_principles_types.ml" 465 15152 15188
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 466 15192 15200 "plugins/funind/functional_principles_types.ml" 466 15192 15207
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 466 15192 15210 "plugins/funind/functional_principles_types.ml" 466 15192 15227
type(
  Names.constant -> Term.constr -> (Names.constant * int) array
)
ident(
  int_ref get_funs_constant "plugins/funind/functional_principles_types.ml" 436 14385 14395 "plugins/funind/functional_principles_types.ml" 436 14385 14412
)
"plugins/funind/functional_principles_types.ml" 466 15192 15228 "plugins/funind/functional_principles_types.ml" 466 15192 15233
type(
  Names.constant
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 451 14758 14769 "plugins/funind/functional_principles_types.ml" 451 14758 14774
)
"plugins/funind/functional_principles_types.ml" 466 15192 15234 "plugins/funind/functional_principles_types.ml" 466 15192 15235
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 465 15152 15160 "plugins/funind/functional_principles_types.ml" 465 15152 15161
)
"plugins/funind/functional_principles_types.ml" 466 15192 15210 "plugins/funind/functional_principles_types.ml" 466 15192 15235
call(
  stack
)
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 471 15365 15373 "plugins/funind/functional_principles_types.ml" 471 15365 15381
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 471 15365 15384 "plugins/funind/functional_principles_types.ml" 471 15365 15392
type(
  (Names.constant -> Term.constr) -> Names.constant list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 471 15365 15393 "plugins/funind/functional_principles_types.ml" 471 15365 15411
type(
  Names.constant -> Term.constr
)
ident(
  int_ref find_constant_body "plugins/funind/functional_principles_types.ml" 452 14778 14786 "plugins/funind/functional_principles_types.ml" 452 14778 14804
)
"plugins/funind/functional_principles_types.ml" 471 15365 15413 "plugins/funind/functional_principles_types.ml" 471 15365 15426
type(
  Names.constant array -> Names.constant list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/functional_principles_types.ml" 471 15365 15428 "plugins/funind/functional_principles_types.ml" 471 15365 15437
type(
  (Names.constant * int -> Names.constant) ->
  (Names.constant * int) array -> Names.constant array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_types.ml" 471 15365 15438 "plugins/funind/functional_principles_types.ml" 471 15365 15441
type(
  Names.constant * int -> Names.constant
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_types.ml" 471 15365 15442 "plugins/funind/functional_principles_types.ml" 471 15365 15449
type(
  (Names.constant * int) array
)
ident(
  int_ref l_const "plugins/funind/functional_principles_types.ml" 466 15192 15200 "plugins/funind/functional_principles_types.ml" 466 15192 15207
)
"plugins/funind/functional_principles_types.ml" 471 15365 15427 "plugins/funind/functional_principles_types.ml" 471 15365 15450
call(
  stack
)
type(
  Names.constant array
)
"plugins/funind/functional_principles_types.ml" 471 15365 15412 "plugins/funind/functional_principles_types.ml" 471 15365 15451
call(
  stack
)
type(
  Names.constant list
)
"plugins/funind/functional_principles_types.ml" 471 15365 15384 "plugins/funind/functional_principles_types.ml" 471 15365 15451
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 472 15455 15463 "plugins/funind/functional_principles_types.ml" 472 15455 15471
type(
  (Names.name * Term.constr) list list
)
"plugins/funind/functional_principles_types.ml" 472 15455 15472 "plugins/funind/functional_principles_types.ml" 472 15455 15479
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 472 15455 15463 "plugins/funind/functional_principles_types.ml" 472 15455 15479
type(
  (Names.name * Term.constr) list list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 472 15455 15482 "plugins/funind/functional_principles_types.ml" 472 15455 15492
type(
  ((Names.name * Term.constr) list * Term.constr) list ->
  (Names.name * Term.constr) list list * Term.constr list
)
ident(
  ext_ref List.split
)
"plugins/funind/functional_principles_types.ml" 472 15455 15494 "plugins/funind/functional_principles_types.ml" 472 15455 15502
type(
  (Term.constr -> (Names.name * Term.constr) list * Term.constr) ->
  Term.constr list -> ((Names.name * Term.constr) list * Term.constr) list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 472 15455 15503 "plugins/funind/functional_principles_types.ml" 472 15455 15516
type(
  Term.constr -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_lam
)
"plugins/funind/functional_principles_types.ml" 472 15455 15517 "plugins/funind/functional_principles_types.ml" 472 15455 15525
type(
  Term.constr list
)
ident(
  int_ref l_bodies "plugins/funind/functional_principles_types.ml" 471 15365 15373 "plugins/funind/functional_principles_types.ml" 471 15365 15381
)
"plugins/funind/functional_principles_types.ml" 472 15455 15493 "plugins/funind/functional_principles_types.ml" 472 15455 15526
call(
  stack
)
type(
  ((Names.name * Term.constr) list * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 472 15455 15482 "plugins/funind/functional_principles_types.ml" 472 15455 15526
call(
  stack
)
type(
  (Names.name * Term.constr) list list * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 474 15571 15579 "plugins/funind/functional_principles_types.ml" 474 15571 15592
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 475 15595 15605 "plugins/funind/functional_principles_types.ml" 475 15595 15617
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 475 15595 15620 "plugins/funind/functional_principles_types.ml" 475 15595 15627
type(
  (Names.name * Term.constr) list list -> (Names.name * Term.constr) list
)
ident(
  ext_ref List.hd
)
"plugins/funind/functional_principles_types.ml" 475 15595 15628 "plugins/funind/functional_principles_types.ml" 475 15595 15636
type(
  (Names.name * Term.constr) list list
)
ident(
  int_ref l_params "plugins/funind/functional_principles_types.ml" 472 15455 15463 "plugins/funind/functional_principles_types.ml" 472 15455 15471
)
"plugins/funind/functional_principles_types.ml" 475 15595 15620 "plugins/funind/functional_principles_types.ml" 475 15595 15636
call(
  stack
)
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_types.ml" 476 15641 15647 "plugins/funind/functional_principles_types.ml" 476 15641 15656
type(
  ((Names.name * Term.constr) list -> unit) ->
  (Names.name * Term.constr) list list -> unit
)
ident(
  ext_ref List.iter
)
"plugins/funind/functional_principles_types.ml" 477 15657 15663 "plugins/funind/functional_principles_types.ml" 477 15657 15669
type(
  (Names.name * Term.constr) list
)
ident(
  def params "plugins/funind/functional_principles_types.ml" 478 15673 15677 "plugins/funind/functional_principles_types.ml" 479 15710 15754
)
"plugins/funind/functional_principles_types.ml" 478 15673 15680 "plugins/funind/functional_principles_types.ml" 478 15673 15683
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_types.ml" 478 15673 15685 "plugins/funind/functional_principles_types.ml" 478 15673 15688
type(
  (Names.name * Term.constr) list -> (Names.name * Term.constr) list -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_types.ml" 478 15673 15689 "plugins/funind/functional_principles_types.ml" 478 15673 15701
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref first_params "plugins/funind/functional_principles_types.ml" 475 15595 15605 "plugins/funind/functional_principles_types.ml" 475 15595 15617
)
"plugins/funind/functional_principles_types.ml" 478 15673 15702 "plugins/funind/functional_principles_types.ml" 478 15673 15708
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref params "plugins/funind/functional_principles_types.ml" 477 15657 15663 "plugins/funind/functional_principles_types.ml" 477 15657 15669
)
"plugins/funind/functional_principles_types.ml" 478 15673 15684 "plugins/funind/functional_principles_types.ml" 478 15673 15709
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 478 15673 15680 "plugins/funind/functional_principles_types.ml" 478 15673 15709
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 479 15710 15719 "plugins/funind/functional_principles_types.ml" 479 15710 15724
type(
  string -> unit
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_types.ml" 479 15710 15725 "plugins/funind/functional_principles_types.ml" 479 15710 15754
type(
  string
)
"plugins/funind/functional_principles_types.ml" 479 15710 15719 "plugins/funind/functional_principles_types.ml" 479 15710 15754
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 478 15673 15677 "plugins/funind/functional_principles_types.ml" 479 15710 15754
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 477 15657 15658 "plugins/funind/functional_principles_types.ml" 480 15755 15757
type(
  (Names.name * Term.constr) list -> unit
)
"plugins/funind/functional_principles_types.ml" 481 15758 15759 "plugins/funind/functional_principles_types.ml" 481 15758 15767
type(
  (Names.name * Term.constr) list list
)
ident(
  int_ref l_params "plugins/funind/functional_principles_types.ml" 472 15455 15463 "plugins/funind/functional_principles_types.ml" 472 15455 15471
)
"plugins/funind/functional_principles_types.ml" 476 15641 15647 "plugins/funind/functional_principles_types.ml" 481 15758 15767
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 475 15595 15601 "plugins/funind/functional_principles_types.ml" 481 15758 15767
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 484 15819 15827 "plugins/funind/functional_principles_types.ml" 484 15819 15840
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 486 15853 15858 "plugins/funind/functional_principles_types.ml" 486 15853 15870
type(
  bool ->
  Term.constr ->
  int array * Names.name array * Term.types array * Term.constr array
)
ident(
  def extract_info "plugins/funind/functional_principles_types.ml" 494 16094 16095 "plugins/funind/functional_principles_types.ml" 499 16300 16325
)
"plugins/funind/functional_principles_types.ml" 486 15853 15871 "plugins/funind/functional_principles_types.ml" 486 15853 15879
type(
  bool
)
ident(
  def is_first "plugins/funind/functional_principles_types.ml" 486 15853 15880 "plugins/funind/functional_principles_types.ml" 492 16047 16089
)
"plugins/funind/functional_principles_types.ml" 486 15853 15880 "plugins/funind/functional_principles_types.ml" 486 15853 15884
type(
  Term.constr
)
ident(
  def body "plugins/funind/functional_principles_types.ml" 487 15887 15890 "plugins/funind/functional_principles_types.ml" 492 16047 16089
)
"plugins/funind/functional_principles_types.ml" 487 15887 15896 "plugins/funind/functional_principles_types.ml" 487 15887 15908
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 487 15887 15909 "plugins/funind/functional_principles_types.ml" 487 15887 15913
type(
  Term.constr
)
ident(
  int_ref body "plugins/funind/functional_principles_types.ml" 486 15853 15880 "plugins/funind/functional_principles_types.ml" 486 15853 15884
)
"plugins/funind/functional_principles_types.ml" 487 15887 15896 "plugins/funind/functional_principles_types.ml" 487 15887 15913
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 488 15919 15931 "plugins/funind/functional_principles_types.ml" 488 15919 15935
type(
  int array
)
ident(
  def idxs "plugins/funind/functional_principles_types.ml" 488 15919 15954 "plugins/funind/functional_principles_types.ml" 488 15919 15969
)
"plugins/funind/functional_principles_types.ml" 488 15919 15936 "plugins/funind/functional_principles_types.ml" 488 15919 15937
type(
  int
)
"plugins/funind/functional_principles_types.ml" 488 15919 15930 "plugins/funind/functional_principles_types.ml" 488 15919 15938
type(
  int array * int
)
"plugins/funind/functional_principles_types.ml" 488 15919 15940 "plugins/funind/functional_principles_types.ml" 488 15919 15942
type(
  Names.name array
)
ident(
  def na "plugins/funind/functional_principles_types.ml" 488 15919 15954 "plugins/funind/functional_principles_types.ml" 488 15919 15969
)
"plugins/funind/functional_principles_types.ml" 488 15919 15943 "plugins/funind/functional_principles_types.ml" 488 15919 15945
type(
  Term.types array
)
ident(
  def ta "plugins/funind/functional_principles_types.ml" 488 15919 15954 "plugins/funind/functional_principles_types.ml" 488 15919 15969
)
"plugins/funind/functional_principles_types.ml" 488 15919 15946 "plugins/funind/functional_principles_types.ml" 488 15919 15948
type(
  Term.constr array
)
ident(
  def ca "plugins/funind/functional_principles_types.ml" 488 15919 15954 "plugins/funind/functional_principles_types.ml" 488 15919 15969
)
"plugins/funind/functional_principles_types.ml" 488 15919 15939 "plugins/funind/functional_principles_types.ml" 488 15919 15949
type(
  (Term.constr, Term.types) Term.prec_declaration
)
"plugins/funind/functional_principles_types.ml" 488 15919 15929 "plugins/funind/functional_principles_types.ml" 488 15919 15950
type(
  (Term.constr, Term.types) Term.pfixpoint
)
"plugins/funind/functional_principles_types.ml" 488 15919 15926 "plugins/funind/functional_principles_types.ml" 488 15919 15950
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 488 15919 15955 "plugins/funind/functional_principles_types.ml" 488 15919 15959
type(
  int array
)
ident(
  int_ref idxs "plugins/funind/functional_principles_types.ml" 488 15919 15931 "plugins/funind/functional_principles_types.ml" 488 15919 15935
)
"plugins/funind/functional_principles_types.ml" 488 15919 15960 "plugins/funind/functional_principles_types.ml" 488 15919 15962
type(
  Names.name array
)
ident(
  int_ref na "plugins/funind/functional_principles_types.ml" 488 15919 15940 "plugins/funind/functional_principles_types.ml" 488 15919 15942
)
"plugins/funind/functional_principles_types.ml" 488 15919 15963 "plugins/funind/functional_principles_types.ml" 488 15919 15965
type(
  Term.types array
)
ident(
  int_ref ta "plugins/funind/functional_principles_types.ml" 488 15919 15943 "plugins/funind/functional_principles_types.ml" 488 15919 15945
)
"plugins/funind/functional_principles_types.ml" 488 15919 15966 "plugins/funind/functional_principles_types.ml" 488 15919 15968
type(
  Term.constr array
)
ident(
  int_ref ca "plugins/funind/functional_principles_types.ml" 488 15919 15946 "plugins/funind/functional_principles_types.ml" 488 15919 15948
)
"plugins/funind/functional_principles_types.ml" 488 15919 15954 "plugins/funind/functional_principles_types.ml" 488 15919 15969
type(
  int array * Names.name array * Term.types array * Term.constr array
)
"plugins/funind/functional_principles_types.ml" 489 15970 15977 "plugins/funind/functional_principles_types.ml" 489 15970 15978
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_types.ml" 490 15982 15987 "plugins/funind/functional_principles_types.ml" 490 15982 15995
type(
  bool
)
ident(
  int_ref is_first "plugins/funind/functional_principles_types.ml" 486 15853 15871 "plugins/funind/functional_principles_types.ml" 486 15853 15879
)
"plugins/funind/functional_principles_types.ml" 490 15982 15996 "plugins/funind/functional_principles_types.ml" 490 15982 15998
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_types.ml" 490 15982 16000 "plugins/funind/functional_principles_types.ml" 490 15982 16011
type(
  Term.constr list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_types.ml" 490 15982 16012 "plugins/funind/functional_principles_types.ml" 490 15982 16020
type(
  Term.constr list
)
ident(
  int_ref l_bodies "plugins/funind/functional_principles_types.ml" 471 15365 15373 "plugins/funind/functional_principles_types.ml" 471 15365 15381
)
"plugins/funind/functional_principles_types.ml" 490 15982 16000 "plugins/funind/functional_principles_types.ml" 490 15982 16020
type(
  int
)
"plugins/funind/functional_principles_types.ml" 490 15982 16021 "plugins/funind/functional_principles_types.ml" 490 15982 16022
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_types.ml" 490 15982 16023 "plugins/funind/functional_principles_types.ml" 490 15982 16024
type(
  int
)
"plugins/funind/functional_principles_types.ml" 490 15982 15999 "plugins/funind/functional_principles_types.ml" 490 15982 16025
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 490 15982 15987 "plugins/funind/functional_principles_types.ml" 490 15982 16025
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 491 16026 16033 "plugins/funind/functional_principles_types.ml" 491 16026 16038
type(
  exn -> int array * Names.name array * Term.types array * Term.constr array
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 491 16026 16039 "plugins/funind/functional_principles_types.ml" 491 16026 16046
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 491 16026 16033 "plugins/funind/functional_principles_types.ml" 491 16026 16046
type(
  int array * Names.name array * Term.types array * Term.constr array
)
"plugins/funind/functional_principles_types.ml" 492 16047 16054 "plugins/funind/functional_principles_types.ml" 492 16047 16059
type(
  string ->
  int array * Names.name array * Term.types array * Term.constr array
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_types.ml" 492 16047 16060 "plugins/funind/functional_principles_types.ml" 492 16047 16089
type(
  string
)
"plugins/funind/functional_principles_types.ml" 492 16047 16054 "plugins/funind/functional_principles_types.ml" 492 16047 16089
type(
  int array * Names.name array * Term.types array * Term.constr array
)
"plugins/funind/functional_principles_types.ml" 490 15982 15984 "plugins/funind/functional_principles_types.ml" 492 16047 16089
type(
  int array * Names.name array * Term.types array * Term.constr array
)
"plugins/funind/functional_principles_types.ml" 487 15887 15890 "plugins/funind/functional_principles_types.ml" 492 16047 16089
type(
  int array * Names.name array * Term.types array * Term.constr array
)
"plugins/funind/functional_principles_types.ml" 494 16094 16099 "plugins/funind/functional_principles_types.ml" 494 16094 16110
type(
  int array * Names.name array * Term.types array * Term.constr array
)
ident(
  def first_infos "plugins/funind/functional_principles_types.ml" 495 16153 16154 "plugins/funind/functional_principles_types.ml" 499 16300 16325
)
"plugins/funind/functional_principles_types.ml" 494 16094 16113 "plugins/funind/functional_principles_types.ml" 494 16094 16125
type(
  bool ->
  Term.constr ->
  int array * Names.name array * Term.types array * Term.constr array
)
ident(
  int_ref extract_info "plugins/funind/functional_principles_types.ml" 486 15853 15858 "plugins/funind/functional_principles_types.ml" 486 15853 15870
)
"plugins/funind/functional_principles_types.ml" 494 16094 16126 "plugins/funind/functional_principles_types.ml" 494 16094 16130
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 494 16094 16132 "plugins/funind/functional_principles_types.ml" 494 16094 16139
type(
  Term.constr list -> Term.constr
)
ident(
  ext_ref List.hd
)
"plugins/funind/functional_principles_types.ml" 494 16094 16140 "plugins/funind/functional_principles_types.ml" 494 16094 16148
type(
  Term.constr list
)
ident(
  int_ref l_bodies "plugins/funind/functional_principles_types.ml" 471 15365 15373 "plugins/funind/functional_principles_types.ml" 471 15365 15381
)
"plugins/funind/functional_principles_types.ml" 494 16094 16131 "plugins/funind/functional_principles_types.ml" 494 16094 16149
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 494 16094 16113 "plugins/funind/functional_principles_types.ml" 494 16094 16149
call(
  stack
)
type(
  int array * Names.name array * Term.types array * Term.constr array
)
"plugins/funind/functional_principles_types.ml" 495 16153 16158 "plugins/funind/functional_principles_types.ml" 495 16153 16163
type(
  Term.constr -> unit
)
ident(
  def check "plugins/funind/functional_principles_types.ml" 499 16300 16301 "plugins/funind/functional_principles_types.ml" 499 16300 16325
)
"plugins/funind/functional_principles_types.ml" 495 16153 16164 "plugins/funind/functional_principles_types.ml" 495 16153 16168
type(
  Term.constr
)
ident(
  def body "plugins/funind/functional_principles_types.ml" 496 16199 16202 "plugins/funind/functional_principles_types.ml" 497 16251 16295
)
"plugins/funind/functional_principles_types.ml" 496 16199 16205 "plugins/funind/functional_principles_types.ml" 496 16199 16208
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_types.ml" 496 16199 16210 "plugins/funind/functional_principles_types.ml" 496 16199 16221
type(
  int array * Names.name array * Term.types array * Term.constr array
)
ident(
  int_ref first_infos "plugins/funind/functional_principles_types.ml" 494 16094 16099 "plugins/funind/functional_principles_types.ml" 494 16094 16110
)
"plugins/funind/functional_principles_types.ml" 496 16199 16222 "plugins/funind/functional_principles_types.ml" 496 16199 16223
type(
  int array * Names.name array * Term.types array * Term.constr array ->
  int array * Names.name array * Term.types array * Term.constr array -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_types.ml" 496 16199 16225 "plugins/funind/functional_principles_types.ml" 496 16199 16237
type(
  bool ->
  Term.constr ->
  int array * Names.name array * Term.types array * Term.constr array
)
ident(
  int_ref extract_info "plugins/funind/functional_principles_types.ml" 486 15853 15858 "plugins/funind/functional_principles_types.ml" 486 15853 15870
)
"plugins/funind/functional_principles_types.ml" 496 16199 16238 "plugins/funind/functional_principles_types.ml" 496 16199 16243
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 496 16199 16244 "plugins/funind/functional_principles_types.ml" 496 16199 16248
type(
  Term.constr
)
ident(
  int_ref body "plugins/funind/functional_principles_types.ml" 495 16153 16164 "plugins/funind/functional_principles_types.ml" 495 16153 16168
)
"plugins/funind/functional_principles_types.ml" 496 16199 16224 "plugins/funind/functional_principles_types.ml" 496 16199 16249
call(
  stack
)
type(
  int array * Names.name array * Term.types array * Term.constr array
)
"plugins/funind/functional_principles_types.ml" 496 16199 16209 "plugins/funind/functional_principles_types.ml" 496 16199 16250
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 496 16199 16205 "plugins/funind/functional_principles_types.ml" 496 16199 16250
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 497 16251 16260 "plugins/funind/functional_principles_types.ml" 497 16251 16265
type(
  string -> unit
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_types.ml" 497 16251 16266 "plugins/funind/functional_principles_types.ml" 497 16251 16295
type(
  string
)
"plugins/funind/functional_principles_types.ml" 497 16251 16260 "plugins/funind/functional_principles_types.ml" 497 16251 16295
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 496 16199 16202 "plugins/funind/functional_principles_types.ml" 497 16251 16295
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 499 16300 16301 "plugins/funind/functional_principles_types.ml" 499 16300 16310
type(
  (Term.constr -> unit) -> Term.constr list -> unit
)
ident(
  ext_ref List.iter
)
"plugins/funind/functional_principles_types.ml" 499 16300 16311 "plugins/funind/functional_principles_types.ml" 499 16300 16316
type(
  Term.constr -> unit
)
ident(
  int_ref check "plugins/funind/functional_principles_types.ml" 495 16153 16158 "plugins/funind/functional_principles_types.ml" 495 16153 16163
)
"plugins/funind/functional_principles_types.ml" 499 16300 16317 "plugins/funind/functional_principles_types.ml" 499 16300 16325
type(
  Term.constr list
)
ident(
  int_ref l_bodies "plugins/funind/functional_principles_types.ml" 471 15365 15373 "plugins/funind/functional_principles_types.ml" 471 15365 15381
)
"plugins/funind/functional_principles_types.ml" 499 16300 16301 "plugins/funind/functional_principles_types.ml" 499 16300 16325
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 495 16153 16154 "plugins/funind/functional_principles_types.ml" 499 16300 16325
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 494 16094 16095 "plugins/funind/functional_principles_types.ml" 499 16300 16325
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 486 15853 15854 "plugins/funind/functional_principles_types.ml" 499 16300 16325
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 500 16326 16337 "plugins/funind/functional_principles_types.ml" 500 16326 16344
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 500 16326 16348 "plugins/funind/functional_principles_types.ml" 500 16326 16350
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 485 15843 15849 "plugins/funind/functional_principles_types.ml" 500 16326 16350
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 502 16358 16362 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  (Names.constant * int) array
)
ident(
  int_ref l_const "plugins/funind/functional_principles_types.ml" 466 15192 15200 "plugins/funind/functional_principles_types.ml" 466 15192 15207
)
"plugins/funind/functional_principles_types.ml" 484 15819 15823 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 474 15571 15575 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 472 15455 15459 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 471 15365 15369 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 466 15192 15196 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 465 15152 15156 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 452 14778 14782 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 451 14758 14760 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  Names.constant -> (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 436 14385 14387 "plugins/funind/functional_principles_types.ml" 502 16358 16369
type(
  Names.constant -> (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 507 16425 16429 "plugins/funind/functional_principles_types.ml" 507 16425 16440
type(
  (Names.constant * Rawterm.rawsort) list -> Entries.definition_entry list
)
ident(
  def make_scheme "plugins/funind/functional_principles_types.ml" 653 20737 20737 --
)
"plugins/funind/functional_principles_types.ml" 507 16425 16442 "plugins/funind/functional_principles_types.ml" 507 16425 16445
type(
  (Names.constant * Rawterm.rawsort) list
)
ident(
  def fas "plugins/funind/functional_principles_types.ml" 507 16425 16481 "plugins/funind/functional_principles_types.ml" 651 20712 20735
)
"plugins/funind/functional_principles_types.ml" 508 16515 16521 "plugins/funind/functional_principles_types.ml" 508 16515 16524
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 508 16515 16527 "plugins/funind/functional_principles_types.ml" 508 16515 16537
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_types.ml" 508 16515 16538 "plugins/funind/functional_principles_types.ml" 508 16515 16540
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 508 16515 16527 "plugins/funind/functional_principles_types.ml" 508 16515 16540
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 509 16541 16547 "plugins/funind/functional_principles_types.ml" 509 16541 16552
type(
  Evd.evar_map
)
"plugins/funind/functional_principles_types.ml" 509 16541 16555 "plugins/funind/functional_principles_types.ml" 509 16541 16564
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_types.ml" 510 16568 16574 "plugins/funind/functional_principles_types.ml" 510 16568 16578
type(
  Names.constant list
)
"plugins/funind/functional_principles_types.ml" 510 16568 16581 "plugins/funind/functional_principles_types.ml" 510 16568 16589
type(
  (Names.constant * Rawterm.rawsort -> Names.constant) ->
  (Names.constant * Rawterm.rawsort) list -> Names.constant list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 510 16568 16590 "plugins/funind/functional_principles_types.ml" 510 16568 16593
type(
  Names.constant * Rawterm.rawsort -> Names.constant
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_types.ml" 510 16568 16594 "plugins/funind/functional_principles_types.ml" 510 16568 16597
type(
  (Names.constant * Rawterm.rawsort) list
)
ident(
  int_ref fas "plugins/funind/functional_principles_types.ml" 507 16425 16442 "plugins/funind/functional_principles_types.ml" 507 16425 16445
)
"plugins/funind/functional_principles_types.ml" 510 16568 16581 "plugins/funind/functional_principles_types.ml" 510 16568 16597
call(
  stack
)
type(
  Names.constant list
)
"plugins/funind/functional_principles_types.ml" 511 16601 16607 "plugins/funind/functional_principles_types.ml" 511 16601 16616
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 511 16601 16619 "plugins/funind/functional_principles_types.ml" 511 16601 16626
type(
  Names.constant list -> Names.constant
)
ident(
  ext_ref List.hd
)
"plugins/funind/functional_principles_types.ml" 511 16601 16627 "plugins/funind/functional_principles_types.ml" 511 16601 16631
type(
  Names.constant list
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 510 16568 16574 "plugins/funind/functional_principles_types.ml" 510 16568 16578
)
"plugins/funind/functional_principles_types.ml" 511 16601 16619 "plugins/funind/functional_principles_types.ml" 511 16601 16631
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 514 16637 16643 "plugins/funind/functional_principles_types.ml" 514 16637 16650
type(
  Names.module_path
)
"plugins/funind/functional_principles_types.ml" 514 16637 16651 "plugins/funind/functional_principles_types.ml" 514 16637 16658
type(
  Names.dir_path
)
"plugins/funind/functional_principles_types.ml" 514 16637 16659 "plugins/funind/functional_principles_types.ml" 514 16637 16660
type(
  Names.label
)
"plugins/funind/functional_principles_types.ml" 514 16637 16643 "plugins/funind/functional_principles_types.ml" 514 16637 16660
type(
  Names.module_path * Names.dir_path * Names.label
)
"plugins/funind/functional_principles_types.ml" 514 16637 16663 "plugins/funind/functional_principles_types.ml" 514 16637 16677
type(
  Names.constant -> Names.module_path * Names.dir_path * Names.label
)
ident(
  ext_ref Names.repr_con
)
"plugins/funind/functional_principles_types.ml" 514 16637 16678 "plugins/funind/functional_principles_types.ml" 514 16637 16687
type(
  Names.constant
)
ident(
  int_ref first_fun "plugins/funind/functional_principles_types.ml" 511 16601 16607 "plugins/funind/functional_principles_types.ml" 511 16601 16616
)
"plugins/funind/functional_principles_types.ml" 514 16637 16663 "plugins/funind/functional_principles_types.ml" 514 16637 16687
call(
  stack
)
type(
  Names.module_path * Names.dir_path * Names.label
)
"plugins/funind/functional_principles_types.ml" 515 16691 16697 "plugins/funind/functional_principles_types.ml" 515 16691 16709
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 517 16720 16726 "plugins/funind/functional_principles_types.ml" 517 16720 16729
type(
  Names.inductive -> Names.mutual_inductive
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_types.ml" 517 16720 16731 "plugins/funind/functional_principles_types.ml" 517 16720 16750
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/functional_principles_types.ml" 517 16720 16752 "plugins/funind/functional_principles_types.ml" 517 16720 16761
type(
  Names.constant
)
ident(
  int_ref first_fun "plugins/funind/functional_principles_types.ml" 511 16601 16607 "plugins/funind/functional_principles_types.ml" 511 16601 16616
)
"plugins/funind/functional_principles_types.ml" 517 16720 16730 "plugins/funind/functional_principles_types.ml" 517 16720 16762
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/functional_principles_types.ml" 517 16720 16730 "plugins/funind/functional_principles_types.ml" 517 16720 16772
type(
  Names.inductive
)
"plugins/funind/functional_principles_types.ml" 517 16720 16726 "plugins/funind/functional_principles_types.ml" 517 16720 16772
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 518 16773 16782 "plugins/funind/functional_principles_types.ml" 518 16773 16791
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 518 16773 16795 "plugins/funind/functional_principles_types.ml" 518 16773 16800
type(
  exn -> Names.mutual_inductive
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 518 16773 16801 "plugins/funind/functional_principles_types.ml" 518 16773 16815
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 518 16773 16795 "plugins/funind/functional_principles_types.ml" 518 16773 16815
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 516 16712 16716 "plugins/funind/functional_principles_types.ml" 518 16773 16815
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 520 16821 16827 "plugins/funind/functional_principles_types.ml" 520 16821 16850
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 520 16821 16853 "plugins/funind/functional_principles_types.ml" 520 16821 16870
type(
  Names.module_path ->
  Names.dir_path -> Names.constant -> (Names.constant * int) array
)
ident(
  int_ref get_funs_constant "plugins/funind/functional_principles_types.ml" 435 14355 14359 "plugins/funind/functional_principles_types.ml" 435 14355 14376
)
"plugins/funind/functional_principles_types.ml" 520 16821 16871 "plugins/funind/functional_principles_types.ml" 520 16821 16878
type(
  Names.module_path
)
ident(
  int_ref funs_mp "plugins/funind/functional_principles_types.ml" 514 16637 16643 "plugins/funind/functional_principles_types.ml" 514 16637 16650
)
"plugins/funind/functional_principles_types.ml" 520 16821 16879 "plugins/funind/functional_principles_types.ml" 520 16821 16886
type(
  Names.dir_path
)
ident(
  int_ref funs_dp "plugins/funind/functional_principles_types.ml" 514 16637 16651 "plugins/funind/functional_principles_types.ml" 514 16637 16658
)
"plugins/funind/functional_principles_types.ml" 520 16821 16887 "plugins/funind/functional_principles_types.ml" 520 16821 16896
type(
  Names.constant
)
ident(
  int_ref first_fun "plugins/funind/functional_principles_types.ml" 511 16601 16607 "plugins/funind/functional_principles_types.ml" 511 16601 16616
)
"plugins/funind/functional_principles_types.ml" 520 16821 16853 "plugins/funind/functional_principles_types.ml" 520 16821 16896
call(
  stack
)
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 521 16900 16906 "plugins/funind/functional_principles_types.ml" 521 16900 16921
type(
  Names.constant array
)
"plugins/funind/functional_principles_types.ml" 521 16900 16924 "plugins/funind/functional_principles_types.ml" 521 16900 16933
type(
  (Names.constant * int -> Names.constant) ->
  (Names.constant * int) array -> Names.constant array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_types.ml" 521 16900 16934 "plugins/funind/functional_principles_types.ml" 521 16900 16937
type(
  Names.constant * int -> Names.constant
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_types.ml" 521 16900 16938 "plugins/funind/functional_principles_types.ml" 521 16900 16961
type(
  (Names.constant * int) array
)
ident(
  int_ref this_block_funs_indexes "plugins/funind/functional_principles_types.ml" 520 16821 16827 "plugins/funind/functional_principles_types.ml" 520 16821 16850
)
"plugins/funind/functional_principles_types.ml" 521 16900 16924 "plugins/funind/functional_principles_types.ml" 521 16900 16961
call(
  stack
)
type(
  Names.constant array
)
"plugins/funind/functional_principles_types.ml" 522 16965 16971 "plugins/funind/functional_principles_types.ml" 522 16965 16980
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 522 16965 16983 "plugins/funind/functional_principles_types.ml" 522 16965 16989
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 523 16993 16999 "plugins/funind/functional_principles_types.ml" 523 16993 17011
type(
  int list
)
"plugins/funind/functional_principles_types.ml" 524 17014 17022 "plugins/funind/functional_principles_types.ml" 524 17014 17045
type(
  (Names.constant * int) list
)
"plugins/funind/functional_principles_types.ml" 524 17014 17048 "plugins/funind/functional_principles_types.ml" 524 17014 17061
type(
  (Names.constant * int) array -> (Names.constant * int) list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/functional_principles_types.ml" 524 17014 17062 "plugins/funind/functional_principles_types.ml" 524 17014 17085
type(
  (Names.constant * int) array
)
ident(
  int_ref this_block_funs_indexes "plugins/funind/functional_principles_types.ml" 520 16821 16827 "plugins/funind/functional_principles_types.ml" 520 16821 16850
)
"plugins/funind/functional_principles_types.ml" 524 17014 17048 "plugins/funind/functional_principles_types.ml" 524 17014 17085
call(
  stack
)
type(
  (Names.constant * int) list
)
"plugins/funind/functional_principles_types.ml" 525 17089 17093 "plugins/funind/functional_principles_types.ml" 525 17089 17101
type(
  (Names.constant -> int) -> Names.constant list -> int list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 526 17102 17118 "plugins/funind/functional_principles_types.ml" 526 17102 17123
type(
  Names.constant
)
ident(
  def const "plugins/funind/functional_principles_types.ml" 526 17102 17127 "plugins/funind/functional_principles_types.ml" 526 17102 17167
)
"plugins/funind/functional_principles_types.ml" 526 17102 17127 "plugins/funind/functional_principles_types.ml" 526 17102 17137
type(
  Names.constant -> (Names.constant * int) list -> int
)
ident(
  ext_ref List.assoc
)
"plugins/funind/functional_principles_types.ml" 526 17102 17138 "plugins/funind/functional_principles_types.ml" 526 17102 17143
type(
  Names.constant
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 526 17102 17118 "plugins/funind/functional_principles_types.ml" 526 17102 17123
)
"plugins/funind/functional_principles_types.ml" 526 17102 17144 "plugins/funind/functional_principles_types.ml" 526 17102 17167
type(
  (Names.constant * int) list
)
ident(
  int_ref this_block_funs_indexes "plugins/funind/functional_principles_types.ml" 524 17014 17022 "plugins/funind/functional_principles_types.ml" 524 17014 17045
)
"plugins/funind/functional_principles_types.ml" 526 17102 17127 "plugins/funind/functional_principles_types.ml" 526 17102 17167
call(
  tail
)
type(
  int
)
"plugins/funind/functional_principles_types.ml" 526 17102 17108 "plugins/funind/functional_principles_types.ml" 526 17102 17168
type(
  Names.constant -> int
)
"plugins/funind/functional_principles_types.ml" 527 17169 17175 "plugins/funind/functional_principles_types.ml" 527 17169 17179
type(
  Names.constant list
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 510 16568 16574 "plugins/funind/functional_principles_types.ml" 510 16568 16578
)
"plugins/funind/functional_principles_types.ml" 525 17089 17093 "plugins/funind/functional_principles_types.ml" 527 17169 17179
call(
  stack
)
type(
  int list
)
"plugins/funind/functional_principles_types.ml" 524 17014 17018 "plugins/funind/functional_principles_types.ml" 527 17169 17179
type(
  int list
)
"plugins/funind/functional_principles_types.ml" 529 17185 17191 "plugins/funind/functional_principles_types.ml" 529 17185 17199
type(
  ((Names.mutual_inductive * int) * bool * Term.sorts_family) list
)
"plugins/funind/functional_principles_types.ml" 530 17202 17206 "plugins/funind/functional_principles_types.ml" 530 17202 17214
type(
  (int -> (Names.mutual_inductive * int) * bool * Term.sorts_family) ->
  int list ->
  ((Names.mutual_inductive * int) * bool * Term.sorts_family) list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 531 17215 17226 "plugins/funind/functional_principles_types.ml" 531 17215 17231
type(
  int
)
ident(
  def idx "plugins/funind/functional_principles_types.ml" 532 17235 17237 "plugins/funind/functional_principles_types.ml" 533 17267 17287
)
"plugins/funind/functional_principles_types.ml" 532 17235 17241 "plugins/funind/functional_principles_types.ml" 532 17235 17244
type(
  Names.mutual_inductive * int
)
"plugins/funind/functional_principles_types.ml" 532 17235 17247 "plugins/funind/functional_principles_types.ml" 532 17235 17259
type(
  Names.mutual_inductive
)
ident(
  int_ref first_fun_kn "plugins/funind/functional_principles_types.ml" 515 16691 16697 "plugins/funind/functional_principles_types.ml" 515 16691 16709
)
"plugins/funind/functional_principles_types.ml" 532 17235 17260 "plugins/funind/functional_principles_types.ml" 532 17235 17263
type(
  int
)
ident(
  int_ref idx "plugins/funind/functional_principles_types.ml" 531 17215 17226 "plugins/funind/functional_principles_types.ml" 531 17215 17231
)
"plugins/funind/functional_principles_types.ml" 532 17235 17247 "plugins/funind/functional_principles_types.ml" 532 17235 17263
type(
  Names.mutual_inductive * int
)
"plugins/funind/functional_principles_types.ml" 533 17267 17269 "plugins/funind/functional_principles_types.ml" 533 17267 17272
type(
  Names.mutual_inductive * int
)
ident(
  int_ref ind "plugins/funind/functional_principles_types.ml" 532 17235 17241 "plugins/funind/functional_principles_types.ml" 532 17235 17244
)
"plugins/funind/functional_principles_types.ml" 533 17267 17273 "plugins/funind/functional_principles_types.ml" 533 17267 17277
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 533 17267 17278 "plugins/funind/functional_principles_types.ml" 533 17267 17287
type(
  Term.sorts_family
)
ident(
  int_ref prop_sort "plugins/funind/functional_principles_types.ml" 522 16965 16971 "plugins/funind/functional_principles_types.ml" 522 16965 16980
)
"plugins/funind/functional_principles_types.ml" 533 17267 17269 "plugins/funind/functional_principles_types.ml" 533 17267 17287
type(
  (Names.mutual_inductive * int) * bool * Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 532 17235 17237 "plugins/funind/functional_principles_types.ml" 533 17267 17287
type(
  (Names.mutual_inductive * int) * bool * Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 531 17215 17221 "plugins/funind/functional_principles_types.ml" 534 17288 17295
type(
  int -> (Names.mutual_inductive * int) * bool * Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 535 17296 17302 "plugins/funind/functional_principles_types.ml" 535 17296 17314
type(
  int list
)
ident(
  int_ref funs_indexes "plugins/funind/functional_principles_types.ml" 523 16993 16999 "plugins/funind/functional_principles_types.ml" 523 16993 17011
)
"plugins/funind/functional_principles_types.ml" 530 17202 17206 "plugins/funind/functional_principles_types.ml" 535 17296 17314
call(
  stack
)
type(
  ((Names.mutual_inductive * int) * bool * Term.sorts_family) list
)
"plugins/funind/functional_principles_types.ml" 537 17320 17326 "plugins/funind/functional_principles_types.ml" 537 17320 17335
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 538 17338 17342 "plugins/funind/functional_principles_types.ml" 538 17338 17350
type(
  (Term.constr -> Term.types) -> Term.constr list -> Term.types list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 539 17351 17358 "plugins/funind/functional_principles_types.ml" 539 17351 17372
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.types
)
ident(
  ext_ref Typing.type_of
)
"plugins/funind/functional_principles_types.ml" 539 17351 17373 "plugins/funind/functional_principles_types.ml" 539 17351 17376
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 508 16515 16521 "plugins/funind/functional_principles_types.ml" 508 16515 16524
)
"plugins/funind/functional_principles_types.ml" 539 17351 17377 "plugins/funind/functional_principles_types.ml" 539 17351 17382
type(
  Evd.evar_map
)
ident(
  int_ref sigma "plugins/funind/functional_principles_types.ml" 509 16541 16547 "plugins/funind/functional_principles_types.ml" 509 16541 16552
)
"plugins/funind/functional_principles_types.ml" 539 17351 17357 "plugins/funind/functional_principles_types.ml" 539 17351 17383
call(
  stack
)
type(
  Term.constr -> Term.types
)
"plugins/funind/functional_principles_types.ml" 540 17384 17391 "plugins/funind/functional_principles_types.ml" 540 17384 17427
type(
  Environ.env ->
  Evd.evar_map ->
  (Names.inductive * Indrec.dep_flag * Term.sorts_family) list ->
  Term.constr list
)
ident(
  ext_ref Indrec.build_mutual_induction_scheme
)
"plugins/funind/functional_principles_types.ml" 540 17384 17428 "plugins/funind/functional_principles_types.ml" 540 17384 17431
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 508 16515 16521 "plugins/funind/functional_principles_types.ml" 508 16515 16524
)
"plugins/funind/functional_principles_types.ml" 540 17384 17432 "plugins/funind/functional_principles_types.ml" 540 17384 17437
type(
  Evd.evar_map
)
ident(
  int_ref sigma "plugins/funind/functional_principles_types.ml" 509 16541 16547 "plugins/funind/functional_principles_types.ml" 509 16541 16552
)
"plugins/funind/functional_principles_types.ml" 540 17384 17438 "plugins/funind/functional_principles_types.ml" 540 17384 17446
type(
  (Names.inductive * Indrec.dep_flag * Term.sorts_family) list
)
ident(
  int_ref ind_list "plugins/funind/functional_principles_types.ml" 529 17185 17191 "plugins/funind/functional_principles_types.ml" 529 17185 17199
)
"plugins/funind/functional_principles_types.ml" 540 17384 17390 "plugins/funind/functional_principles_types.ml" 540 17384 17447
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 538 17338 17342 "plugins/funind/functional_principles_types.ml" 540 17384 17447
call(
  stack
)
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 542 17453 17459 "plugins/funind/functional_principles_types.ml" 542 17453 17460
type(
  int ref
)
"plugins/funind/functional_principles_types.ml" 542 17453 17463 "plugins/funind/functional_principles_types.ml" 542 17453 17466
type(
  int -> int ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/functional_principles_types.ml" 542 17453 17467 "plugins/funind/functional_principles_types.ml" 542 17453 17471
type(
  int
)
"plugins/funind/functional_principles_types.ml" 542 17453 17463 "plugins/funind/functional_principles_types.ml" 542 17453 17471
type(
  int ref
)
"plugins/funind/functional_principles_types.ml" 543 17475 17481 "plugins/funind/functional_principles_types.ml" 543 17475 17486
type(
  Term.sorts list
)
"plugins/funind/functional_principles_types.ml" 544 17489 17493 "plugins/funind/functional_principles_types.ml" 544 17489 17505
type(
  (Names.constant * Rawterm.rawsort -> Term.sorts) ->
  (Names.constant * Rawterm.rawsort) list -> Term.sorts list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_types.ml" 544 17489 17512 "plugins/funind/functional_principles_types.ml" 544 17489 17513
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 544 17489 17514 "plugins/funind/functional_principles_types.ml" 544 17489 17515
type(
  Rawterm.rawsort
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 545 17520 17522 "plugins/funind/functional_principles_types.ml" 545 17520 17586
)
"plugins/funind/functional_principles_types.ml" 544 17489 17511 "plugins/funind/functional_principles_types.ml" 544 17489 17516
type(
  Names.constant * Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 545 17520 17522 "plugins/funind/functional_principles_types.ml" 545 17520 17548
type(
  Term.sorts_family -> Term.sorts
)
ident(
  ext_ref Termops.new_sort_in_family
)
"plugins/funind/functional_principles_types.ml" 545 17520 17550 "plugins/funind/functional_principles_types.ml" 545 17520 17583
type(
  Rawterm.rawsort -> Term.sorts_family
)
ident(
  ext_ref Pretyping.interp_elimination_sort
)
"plugins/funind/functional_principles_types.ml" 545 17520 17584 "plugins/funind/functional_principles_types.ml" 545 17520 17585
type(
  Rawterm.rawsort
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 544 17489 17514 "plugins/funind/functional_principles_types.ml" 544 17489 17515
)
"plugins/funind/functional_principles_types.ml" 545 17520 17549 "plugins/funind/functional_principles_types.ml" 545 17520 17586
call(
  stack
)
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 545 17520 17522 "plugins/funind/functional_principles_types.ml" 545 17520 17586
call(
  tail
)
type(
  Term.sorts
)
"plugins/funind/functional_principles_types.ml" 544 17489 17506 "plugins/funind/functional_principles_types.ml" 546 17587 17594
type(
  Names.constant * Rawterm.rawsort -> Term.sorts
)
"plugins/funind/functional_principles_types.ml" 547 17595 17601 "plugins/funind/functional_principles_types.ml" 547 17595 17604
type(
  (Names.constant * Rawterm.rawsort) list
)
ident(
  int_ref fas "plugins/funind/functional_principles_types.ml" 507 16425 16442 "plugins/funind/functional_principles_types.ml" 507 16425 16445
)
"plugins/funind/functional_principles_types.ml" 544 17489 17493 "plugins/funind/functional_principles_types.ml" 547 17595 17604
call(
  stack
)
type(
  Term.sorts list
)
"plugins/funind/functional_principles_types.ml" 550 17657 17663 "plugins/funind/functional_principles_types.ml" 550 17657 17673
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 550 17657 17674 "plugins/funind/functional_principles_types.ml" 550 17657 17691
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 550 17657 17663 "plugins/funind/functional_principles_types.ml" 550 17657 17691
type(
  Term.types * Term.types list
)
"plugins/funind/functional_principles_types.ml" 551 17694 17704 "plugins/funind/functional_principles_types.ml" 551 17694 17713
type(
  Term.types list
)
ident(
  int_ref l_schemes "plugins/funind/functional_principles_types.ml" 537 17320 17326 "plugins/funind/functional_principles_types.ml" 537 17320 17335
)
"plugins/funind/functional_principles_types.ml" 552 17719 17720 "plugins/funind/functional_principles_types.ml" 552 17719 17721
type(
  Term.types
)
ident(
  def s "plugins/funind/functional_principles_types.ml" 552 17719 17736 "plugins/funind/functional_principles_types.ml" 552 17719 17747
)
"plugins/funind/functional_principles_types.ml" 552 17719 17723 "plugins/funind/functional_principles_types.ml" 552 17719 17732
type(
  Term.types list
)
ident(
  def l_schemes "plugins/funind/functional_principles_types.ml" 552 17719 17736 "plugins/funind/functional_principles_types.ml" 552 17719 17747
)
"plugins/funind/functional_principles_types.ml" 552 17719 17720 "plugins/funind/functional_principles_types.ml" 552 17719 17732
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 552 17719 17736 "plugins/funind/functional_principles_types.ml" 552 17719 17737
type(
  Term.types
)
ident(
  int_ref s "plugins/funind/functional_principles_types.ml" 552 17719 17720 "plugins/funind/functional_principles_types.ml" 552 17719 17721
)
"plugins/funind/functional_principles_types.ml" 552 17719 17738 "plugins/funind/functional_principles_types.ml" 552 17719 17747
type(
  Term.types list
)
ident(
  int_ref l_schemes "plugins/funind/functional_principles_types.ml" 552 17719 17723 "plugins/funind/functional_principles_types.ml" 552 17719 17732
)
"plugins/funind/functional_principles_types.ml" 552 17719 17736 "plugins/funind/functional_principles_types.ml" 552 17719 17747
type(
  Term.types * Term.types list
)
"plugins/funind/functional_principles_types.ml" 553 17748 17756 "plugins/funind/functional_principles_types.ml" 553 17748 17757
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 553 17748 17761 "plugins/funind/functional_principles_types.ml" 553 17748 17768
type(
  string -> Term.types * Term.types list
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_types.ml" 553 17748 17769 "plugins/funind/functional_principles_types.ml" 553 17748 17771
type(
  string
)
"plugins/funind/functional_principles_types.ml" 553 17748 17761 "plugins/funind/functional_principles_types.ml" 553 17748 17771
call(
  stack
)
type(
  Term.types * Term.types list
)
"plugins/funind/functional_principles_types.ml" 551 17694 17698 "plugins/funind/functional_principles_types.ml" 553 17748 17771
type(
  Term.types * Term.types list
)
"plugins/funind/functional_principles_types.ml" 555 17777 17784 "plugins/funind/functional_principles_types.ml" 555 17777 17785
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 555 17777 17787 "plugins/funind/functional_principles_types.ml" 555 17777 17792
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 555 17777 17793 "plugins/funind/functional_principles_types.ml" 555 17777 17794
type(
  Decl_kinds.goal_kind
)
"plugins/funind/functional_principles_types.ml" 555 17777 17795 "plugins/funind/functional_principles_types.ml" 555 17777 17796
type(
  Tacexpr.declaration_hook
)
"plugins/funind/functional_principles_types.ml" 555 17777 17786 "plugins/funind/functional_principles_types.ml" 555 17777 17797
type(
  Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook
)
"plugins/funind/functional_principles_types.ml" 555 17777 17783 "plugins/funind/functional_principles_types.ml" 555 17777 17798
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 557 17809 17815 "plugins/funind/functional_principles_types.ml" 557 17809 17841
type(
  bool ->
  Term.types ->
  Term.sorts array ->
  Names.constant array ->
  int ->
  (Term.constr array -> int -> Tacmach.tactic) ->
  (Term.types -> Tacexpr.declaration_hook) ->
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
ident(
  int_ref build_functional_principle "plugins/funind/functional_principles_types.ml" 320 10845 10849 "plugins/funind/functional_principles_types.ml" 320 10845 10875
)
"plugins/funind/functional_principles_types.ml" 557 17809 17842 "plugins/funind/functional_principles_types.ml" 557 17809 17847
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 558 17848 17849 "plugins/funind/functional_principles_types.ml" 558 17848 17859
type(
  Term.types
)
ident(
  int_ref first_type "plugins/funind/functional_principles_types.ml" 550 17657 17663 "plugins/funind/functional_principles_types.ml" 550 17657 17673
)
"plugins/funind/functional_principles_types.ml" 559 17860 17862 "plugins/funind/functional_principles_types.ml" 559 17860 17875
type(
  Term.sorts list -> Term.sorts array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/functional_principles_types.ml" 559 17860 17876 "plugins/funind/functional_principles_types.ml" 559 17860 17881
type(
  Term.sorts list
)
ident(
  int_ref sorts "plugins/funind/functional_principles_types.ml" 543 17475 17481 "plugins/funind/functional_principles_types.ml" 543 17475 17486
)
"plugins/funind/functional_principles_types.ml" 559 17860 17861 "plugins/funind/functional_principles_types.ml" 559 17860 17882
call(
  stack
)
type(
  Term.sorts array
)
"plugins/funind/functional_principles_types.ml" 560 17883 17884 "plugins/funind/functional_principles_types.ml" 560 17883 17899
type(
  Names.constant array
)
ident(
  int_ref this_block_funs "plugins/funind/functional_principles_types.ml" 521 16900 16906 "plugins/funind/functional_principles_types.ml" 521 16900 16921
)
"plugins/funind/functional_principles_types.ml" 561 17900 17901 "plugins/funind/functional_principles_types.ml" 561 17900 17902
type(
  int
)
"plugins/funind/functional_principles_types.ml" 562 17903 17905 "plugins/funind/functional_principles_types.ml" 562 17903 17927
type(
  bool ->
  int -> Names.constant array -> Term.constr array -> int -> Tacmach.tactic
)
ident(
  ext_ref Functional_principles_proofs.prove_princ_for_struct
)
"plugins/funind/functional_principles_types.ml" 562 17903 17928 "plugins/funind/functional_principles_types.ml" 562 17903 17933
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 562 17903 17934 "plugins/funind/functional_principles_types.ml" 562 17903 17935
type(
  int
)
"plugins/funind/functional_principles_types.ml" 562 17903 17937 "plugins/funind/functional_principles_types.ml" 562 17903 17950
type(
  Names.constant list -> Names.constant array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/functional_principles_types.ml" 562 17903 17951 "plugins/funind/functional_principles_types.ml" 562 17903 17955
type(
  Names.constant list
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 510 16568 16574 "plugins/funind/functional_principles_types.ml" 510 16568 16578
)
"plugins/funind/functional_principles_types.ml" 562 17903 17936 "plugins/funind/functional_principles_types.ml" 562 17903 17956
call(
  stack
)
type(
  Names.constant array
)
"plugins/funind/functional_principles_types.ml" 562 17903 17904 "plugins/funind/functional_principles_types.ml" 562 17903 17957
call(
  stack
)
type(
  Term.constr array -> int -> Tacmach.tactic
)
"plugins/funind/functional_principles_types.ml" 563 17958 17964 "plugins/funind/functional_principles_types.ml" 563 17958 17965
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 563 17958 17966 "plugins/funind/functional_principles_types.ml" 563 17958 17967
type(
  Decl_kinds.locality
)
"plugins/funind/functional_principles_types.ml" 563 17958 17968 "plugins/funind/functional_principles_types.ml" 563 17958 17969
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_types.ml" 563 17958 17973 "plugins/funind/functional_principles_types.ml" 563 17958 17975
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 563 17958 17959 "plugins/funind/functional_principles_types.ml" 563 17958 17976
type(
  Term.types -> Tacexpr.declaration_hook
)
"plugins/funind/functional_principles_types.ml" 557 17809 17815 "plugins/funind/functional_principles_types.ml" 563 17958 17976
call(
  stack
)
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 564 17977 17984 "plugins/funind/functional_principles_types.ml" 564 17977 17985
type(
  exn
)
ident(
  def e "plugins/funind/functional_principles_types.ml" 565 17989 17993 "plugins/funind/functional_principles_types.ml" 579 18356 18363
)
"plugins/funind/functional_principles_types.ml" 568 18016 18023 "plugins/funind/functional_principles_types.ml" 568 18016 18025
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 569 18064 18067 "plugins/funind/functional_principles_types.ml" 575 18285 18295
)
"plugins/funind/functional_principles_types.ml" 568 18016 18028 "plugins/funind/functional_principles_types.ml" 568 18016 18057
type(
  unit -> Names.identifier
)
ident(
  ext_ref Pfedit.get_current_proof_name
)
"plugins/funind/functional_principles_types.ml" 568 18016 18058 "plugins/funind/functional_principles_types.ml" 568 18016 18060
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 568 18016 18028 "plugins/funind/functional_principles_types.ml" 568 18016 18060
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 569 18064 18071 "plugins/funind/functional_principles_types.ml" 569 18064 18072
type(
  string
)
ident(
  def s "plugins/funind/functional_principles_types.ml" 570 18094 18097 "plugins/funind/functional_principles_types.ml" 575 18285 18295
)
"plugins/funind/functional_principles_types.ml" 569 18064 18075 "plugins/funind/functional_principles_types.ml" 569 18064 18087
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/functional_principles_types.ml" 569 18064 18088 "plugins/funind/functional_principles_types.ml" 569 18064 18090
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 568 18016 18023 "plugins/funind/functional_principles_types.ml" 568 18016 18025
)
"plugins/funind/functional_principles_types.ml" 569 18064 18075 "plugins/funind/functional_principles_types.ml" 569 18064 18090
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_types.ml" 570 18094 18101 "plugins/funind/functional_principles_types.ml" 570 18094 18102
type(
  int
)
ident(
  def n "plugins/funind/functional_principles_types.ml" 571 18150 18153 "plugins/funind/functional_principles_types.ml" 575 18285 18295
)
"plugins/funind/functional_principles_types.ml" 570 18094 18105 "plugins/funind/functional_principles_types.ml" 570 18094 18118
type(
  string -> int
)
ident(
  ext_ref String.length
)
"plugins/funind/functional_principles_types.ml" 570 18094 18119 "plugins/funind/functional_principles_types.ml" 570 18094 18146
type(
  string
)
"plugins/funind/functional_principles_types.ml" 570 18094 18105 "plugins/funind/functional_principles_types.ml" 570 18094 18146
type(
  int
)
"plugins/funind/functional_principles_types.ml" 571 18150 18156 "plugins/funind/functional_principles_types.ml" 571 18150 18169
type(
  string -> int
)
ident(
  ext_ref String.length
)
"plugins/funind/functional_principles_types.ml" 571 18150 18170 "plugins/funind/functional_principles_types.ml" 571 18150 18171
type(
  string
)
ident(
  int_ref s "plugins/funind/functional_principles_types.ml" 569 18064 18071 "plugins/funind/functional_principles_types.ml" 569 18064 18072
)
"plugins/funind/functional_principles_types.ml" 571 18150 18156 "plugins/funind/functional_principles_types.ml" 571 18150 18171
type(
  int
)
"plugins/funind/functional_principles_types.ml" 571 18150 18172 "plugins/funind/functional_principles_types.ml" 571 18150 18174
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"plugins/funind/functional_principles_types.ml" 571 18150 18175 "plugins/funind/functional_principles_types.ml" 571 18150 18176
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_types.ml" 570 18094 18101 "plugins/funind/functional_principles_types.ml" 570 18094 18102
)
"plugins/funind/functional_principles_types.ml" 571 18150 18156 "plugins/funind/functional_principles_types.ml" 571 18150 18176
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 572 18177 18188 "plugins/funind/functional_principles_types.ml" 572 18177 18198
type(
  string -> int -> int -> string
)
ident(
  ext_ref String.sub
)
"plugins/funind/functional_principles_types.ml" 572 18177 18199 "plugins/funind/functional_principles_types.ml" 572 18177 18200
type(
  string
)
ident(
  int_ref s "plugins/funind/functional_principles_types.ml" 569 18064 18071 "plugins/funind/functional_principles_types.ml" 569 18064 18072
)
"plugins/funind/functional_principles_types.ml" 572 18177 18201 "plugins/funind/functional_principles_types.ml" 572 18177 18202
type(
  int
)
"plugins/funind/functional_principles_types.ml" 572 18177 18203 "plugins/funind/functional_principles_types.ml" 572 18177 18204
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_types.ml" 570 18094 18101 "plugins/funind/functional_principles_types.ml" 570 18094 18102
)
"plugins/funind/functional_principles_types.ml" 572 18177 18188 "plugins/funind/functional_principles_types.ml" 572 18177 18204
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_types.ml" 572 18177 18205 "plugins/funind/functional_principles_types.ml" 572 18177 18206
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_types.ml" 572 18177 18207 "plugins/funind/functional_principles_types.ml" 572 18177 18234
type(
  string
)
"plugins/funind/functional_principles_types.ml" 572 18177 18188 "plugins/funind/functional_principles_types.ml" 572 18177 18234
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 573 18235 18243 "plugins/funind/functional_principles_types.ml" 573 18235 18270
type(
  unit -> unit
)
ident(
  ext_ref Pfedit.delete_current_proof
)
"plugins/funind/functional_principles_types.ml" 573 18235 18271 "plugins/funind/functional_principles_types.ml" 573 18235 18273
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 573 18235 18243 "plugins/funind/functional_principles_types.ml" 573 18235 18273
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 574 18274 18282 "plugins/funind/functional_principles_types.ml" 574 18274 18284
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 572 18177 18185 "plugins/funind/functional_principles_types.ml" 574 18274 18284
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 575 18285 18293 "plugins/funind/functional_principles_types.ml" 575 18285 18295
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 571 18150 18153 "plugins/funind/functional_principles_types.ml" 575 18285 18295
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 570 18094 18097 "plugins/funind/functional_principles_types.ml" 575 18285 18295
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 569 18064 18067 "plugins/funind/functional_principles_types.ml" 575 18285 18295
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 568 18016 18019 "plugins/funind/functional_principles_types.ml" 575 18285 18295
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 576 18296 18302 "plugins/funind/functional_principles_types.ml" 576 18296 18303
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 576 18296 18307 "plugins/funind/functional_principles_types.ml" 576 18296 18309
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 566 17999 18005 "plugins/funind/functional_principles_types.ml" 577 18310 18319
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 578 18321 18327 "plugins/funind/functional_principles_types.ml" 578 18321 18332
type(
  exn ->
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 578 18321 18353 "plugins/funind/functional_principles_types.ml" 578 18321 18354
type(
  exn
)
ident(
  int_ref e "plugins/funind/functional_principles_types.ml" 564 17977 17984 "plugins/funind/functional_principles_types.ml" 564 17977 17985
)
"plugins/funind/functional_principles_types.ml" 578 18321 18333 "plugins/funind/functional_principles_types.ml" 578 18321 18355
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 578 18321 18327 "plugins/funind/functional_principles_types.ml" 578 18321 18355
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 565 17989 17993 "plugins/funind/functional_principles_types.ml" 579 18356 18363
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 556 17801 17805 "plugins/funind/functional_principles_types.ml" 579 18356 18363
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 582 18370 18372 "plugins/funind/functional_principles_types.ml" 582 18370 18376
type(
  int ref -> unit
)
ident(
  ext_ref Pervasives.incr
)
"plugins/funind/functional_principles_types.ml" 582 18370 18377 "plugins/funind/functional_principles_types.ml" 582 18370 18378
type(
  int ref
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 542 17453 17459 "plugins/funind/functional_principles_types.ml" 542 17453 17460
)
"plugins/funind/functional_principles_types.ml" 582 18370 18372 "plugins/funind/functional_principles_types.ml" 582 18370 18378
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 583 18380 18386 "plugins/funind/functional_principles_types.ml" 583 18380 18393
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 584 18396 18404 "plugins/funind/functional_principles_types.ml" 584 18396 18410
type(
  Indfun_common.function_info
)
"plugins/funind/functional_principles_types.ml" 584 18396 18413 "plugins/funind/functional_principles_types.ml" 584 18396 18432
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/functional_principles_types.ml" 584 18396 18433 "plugins/funind/functional_principles_types.ml" 584 18396 18448
type(
  Names.constant array
)
ident(
  int_ref this_block_funs "plugins/funind/functional_principles_types.ml" 521 16900 16906 "plugins/funind/functional_principles_types.ml" 521 16900 16921
)
"plugins/funind/functional_principles_types.ml" 584 18396 18450 "plugins/funind/functional_principles_types.ml" 584 18396 18451
type(
  int
)
"plugins/funind/functional_principles_types.ml" 584 18396 18433 "plugins/funind/functional_principles_types.ml" 584 18396 18452
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 584 18396 18413 "plugins/funind/functional_principles_types.ml" 584 18396 18452
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/functional_principles_types.ml" 586 18464 18474 "plugins/funind/functional_principles_types.ml" 586 18464 18482
type(
  Names.constant
)
ident(
  def equation "plugins/funind/functional_principles_types.ml" 587 18522 18528 "plugins/funind/functional_principles_types.ml" 587 18522 18587
)
"plugins/funind/functional_principles_types.ml" 586 18464 18486 "plugins/funind/functional_principles_types.ml" 586 18464 18496
type(
  Names.constant option -> Names.constant
)
ident(
  ext_ref Option.get
)
"plugins/funind/functional_principles_types.ml" 586 18464 18497 "plugins/funind/functional_principles_types.ml" 586 18464 18503
type(
  Indfun_common.function_info
)
ident(
  int_ref finfos "plugins/funind/functional_principles_types.ml" 584 18396 18404 "plugins/funind/functional_principles_types.ml" 584 18396 18410
)
"plugins/funind/functional_principles_types.ml" 586 18464 18497 "plugins/funind/functional_principles_types.ml" 586 18464 18518
type(
  Names.constant option
)
"plugins/funind/functional_principles_types.ml" 586 18464 18486 "plugins/funind/functional_principles_types.ml" 586 18464 18518
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 587 18522 18529 "plugins/funind/functional_principles_types.ml" 587 18522 18551
type(
  Names.constant -> Declarations.constant_body
)
ident(
  ext_ref Global.lookup_constant
)
"plugins/funind/functional_principles_types.ml" 587 18522 18552 "plugins/funind/functional_principles_types.ml" 587 18522 18560
type(
  Names.constant
)
ident(
  int_ref equation "plugins/funind/functional_principles_types.ml" 586 18464 18474 "plugins/funind/functional_principles_types.ml" 586 18464 18482
)
"plugins/funind/functional_principles_types.ml" 587 18522 18528 "plugins/funind/functional_principles_types.ml" 587 18522 18561
call(
  stack
)
type(
  Declarations.constant_body
)
"plugins/funind/functional_principles_types.ml" 587 18522 18528 "plugins/funind/functional_principles_types.ml" 587 18522 18587
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 586 18464 18470 "plugins/funind/functional_principles_types.ml" 587 18522 18587
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 588 18588 18597 "plugins/funind/functional_principles_types.ml" 588 18588 18610
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 589 18645 18651 "plugins/funind/functional_principles_types.ml" 589 18645 18656
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 585 18456 18460 "plugins/funind/functional_principles_types.ml" 589 18645 18656
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 584 18396 18400 "plugins/funind/functional_principles_types.ml" 589 18645 18656
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 591 18662 18668 "plugins/funind/functional_principles_types.ml" 591 18662 18673
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 591 18662 18677 "plugins/funind/functional_principles_types.ml" 591 18662 18682
type(
  Entries.definition_entry
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 555 17777 17787 "plugins/funind/functional_principles_types.ml" 555 17777 17792
)
"plugins/funind/functional_principles_types.ml" 591 18662 18709 "plugins/funind/functional_principles_types.ml" 591 18662 18716
type(
  bool
)
ident(
  int_ref opacity "plugins/funind/functional_principles_types.ml" 583 18380 18386 "plugins/funind/functional_principles_types.ml" 583 18380 18393
)
"plugins/funind/functional_principles_types.ml" 591 18662 18676 "plugins/funind/functional_principles_types.ml" 591 18662 18718
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 593 18758 18763 "plugins/funind/functional_principles_types.ml" 593 18758 18780
type(
  Term.types list
)
ident(
  int_ref other_princ_types "plugins/funind/functional_principles_types.ml" 550 17657 17674 "plugins/funind/functional_principles_types.ml" 550 17657 17691
)
"plugins/funind/functional_principles_types.ml" 593 18758 18781 "plugins/funind/functional_principles_types.ml" 593 18758 18782
type(
  Term.types list -> Term.types list -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_types.ml" 593 18758 18783 "plugins/funind/functional_principles_types.ml" 593 18758 18785
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 593 18758 18763 "plugins/funind/functional_principles_types.ml" 593 18758 18785
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 595 18793 18798 "plugins/funind/functional_principles_types.ml" 595 18793 18803
type(
  Entries.definition_entry
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 591 18662 18668 "plugins/funind/functional_principles_types.ml" 591 18662 18673
)
"plugins/funind/functional_principles_types.ml" 595 18793 18797 "plugins/funind/functional_principles_types.ml" 595 18793 18804
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 597 18812 18820 "plugins/funind/functional_principles_types.ml" 597 18812 18841
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 598 18844 18854 "plugins/funind/functional_principles_types.ml" 598 18844 18858
type(
  Term.constr array
)
"plugins/funind/functional_principles_types.ml" 598 18844 18861 "plugins/funind/functional_principles_types.ml" 598 18844 18870
type(
  (Names.constant -> Term.constr) ->
  Names.constant array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_types.ml" 598 18844 18871 "plugins/funind/functional_principles_types.ml" 598 18844 18878
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/functional_principles_types.ml" 598 18844 18879 "plugins/funind/functional_principles_types.ml" 598 18844 18894
type(
  Names.constant array
)
ident(
  int_ref this_block_funs "plugins/funind/functional_principles_types.ml" 521 16900 16906 "plugins/funind/functional_principles_types.ml" 521 16900 16921
)
"plugins/funind/functional_principles_types.ml" 598 18844 18861 "plugins/funind/functional_principles_types.ml" 598 18844 18894
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_types.ml" 599 18898 18908 "plugins/funind/functional_principles_types.ml" 599 18898 18913
type(
  Term.sorts array
)
"plugins/funind/functional_principles_types.ml" 599 18898 18916 "plugins/funind/functional_principles_types.ml" 599 18898 18929
type(
  Term.sorts list -> Term.sorts array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/functional_principles_types.ml" 599 18898 18930 "plugins/funind/functional_principles_types.ml" 599 18898 18935
type(
  Term.sorts list
)
ident(
  int_ref sorts "plugins/funind/functional_principles_types.ml" 543 17475 17481 "plugins/funind/functional_principles_types.ml" 543 17475 17486
)
"plugins/funind/functional_principles_types.ml" 599 18898 18916 "plugins/funind/functional_principles_types.ml" 599 18898 18935
call(
  stack
)
type(
  Term.sorts array
)
"plugins/funind/functional_principles_types.ml" 600 18939 18945 "plugins/funind/functional_principles_types.ml" 600 18939 18953
type(
  (Term.types -> Term.types) -> Term.types list -> Term.types list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 600 18939 18955 "plugins/funind/functional_principles_types.ml" 600 18939 18986
type(
  Term.constr array -> Term.sorts array -> Term.types -> Term.types
)
ident(
  int_ref compute_new_princ_type_from_rel "plugins/funind/functional_principles_types.ml" 62 1873 1877 "plugins/funind/functional_principles_types.ml" 62 1873 1908
)
"plugins/funind/functional_principles_types.ml" 600 18939 18987 "plugins/funind/functional_principles_types.ml" 600 18939 18991
type(
  Term.constr array
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 598 18844 18854 "plugins/funind/functional_principles_types.ml" 598 18844 18858
)
"plugins/funind/functional_principles_types.ml" 600 18939 18992 "plugins/funind/functional_principles_types.ml" 600 18939 18997
type(
  Term.sorts array
)
ident(
  int_ref sorts "plugins/funind/functional_principles_types.ml" 599 18898 18908 "plugins/funind/functional_principles_types.ml" 599 18898 18913
)
"plugins/funind/functional_principles_types.ml" 600 18939 18954 "plugins/funind/functional_principles_types.ml" 600 18939 18998
call(
  stack
)
type(
  Term.types -> Term.types
)
"plugins/funind/functional_principles_types.ml" 600 18939 18999 "plugins/funind/functional_principles_types.ml" 600 18939 19016
type(
  Term.types list
)
ident(
  int_ref other_princ_types "plugins/funind/functional_principles_types.ml" 550 17657 17674 "plugins/funind/functional_principles_types.ml" 550 17657 17691
)
"plugins/funind/functional_principles_types.ml" 600 18939 18945 "plugins/funind/functional_principles_types.ml" 600 18939 19016
call(
  stack
)
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 599 18898 18904 "plugins/funind/functional_principles_types.ml" 600 18939 19016
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 598 18844 18850 "plugins/funind/functional_principles_types.ml" 600 18939 19016
type(
  Term.types list
)
"plugins/funind/functional_principles_types.ml" 602 19024 19032 "plugins/funind/functional_principles_types.ml" 602 19024 19048
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 602 19024 19049 "plugins/funind/functional_principles_types.ml" 602 19024 19065
type(
  Term.types option
)
"plugins/funind/functional_principles_types.ml" 602 19024 19032 "plugins/funind/functional_principles_types.ml" 602 19024 19065
type(
  Term.constr * Term.types option
)
"plugins/funind/functional_principles_types.ml" 602 19024 19068 "plugins/funind/functional_principles_types.ml" 602 19024 19073
type(
  Entries.definition_entry
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 591 18662 18668 "plugins/funind/functional_principles_types.ml" 591 18662 18673
)
"plugins/funind/functional_principles_types.ml" 602 19024 19068 "plugins/funind/functional_principles_types.ml" 602 19024 19098
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 602 19024 19100 "plugins/funind/functional_principles_types.ml" 602 19024 19105
type(
  Entries.definition_entry
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 591 18662 18668 "plugins/funind/functional_principles_types.ml" 591 18662 18673
)
"plugins/funind/functional_principles_types.ml" 602 19024 19100 "plugins/funind/functional_principles_types.ml" 602 19024 19130
type(
  Term.types option
)
"plugins/funind/functional_principles_types.ml" 602 19024 19068 "plugins/funind/functional_principles_types.ml" 602 19024 19130
type(
  Term.constr * Term.types option
)
"plugins/funind/functional_principles_types.ml" 603 19134 19142 "plugins/funind/functional_principles_types.ml" 603 19134 19146
type(
  Term.rel_context
)
"plugins/funind/functional_principles_types.ml" 603 19134 19147 "plugins/funind/functional_principles_types.ml" 603 19134 19150
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 603 19134 19142 "plugins/funind/functional_principles_types.ml" 603 19134 19150
type(
  Term.rel_context * Term.constr
)
"plugins/funind/functional_principles_types.ml" 603 19134 19153 "plugins/funind/functional_principles_types.ml" 603 19134 19172
type(
  Term.constr -> Term.rel_context * Term.constr
)
ident(
  ext_ref Term.decompose_lam_assum
)
"plugins/funind/functional_principles_types.ml" 603 19134 19173 "plugins/funind/functional_principles_types.ml" 603 19134 19189
type(
  Term.constr
)
ident(
  int_ref first_princ_body "plugins/funind/functional_principles_types.ml" 602 19024 19032 "plugins/funind/functional_principles_types.ml" 602 19024 19048
)
"plugins/funind/functional_principles_types.ml" 603 19134 19153 "plugins/funind/functional_principles_types.ml" 603 19134 19189
call(
  stack
)
type(
  Term.rel_context * Term.constr
)
"plugins/funind/functional_principles_types.ml" 604 19239 19248 "plugins/funind/functional_principles_types.ml" 604 19239 19252
type(
  int array
)
"plugins/funind/functional_principles_types.ml" 604 19239 19253 "plugins/funind/functional_principles_types.ml" 604 19239 19254
type(
  int
)
"plugins/funind/functional_principles_types.ml" 604 19239 19247 "plugins/funind/functional_principles_types.ml" 604 19239 19255
type(
  int array * int
)
"plugins/funind/functional_principles_types.ml" 604 19239 19257 "plugins/funind/functional_principles_types.ml" 604 19239 19258
type(
  Names.name array
)
"plugins/funind/functional_principles_types.ml" 604 19239 19259 "plugins/funind/functional_principles_types.ml" 604 19239 19261
type(
  Term.types array
)
"plugins/funind/functional_principles_types.ml" 604 19239 19262 "plugins/funind/functional_principles_types.ml" 604 19239 19263
type(
  Term.constr array
)
"plugins/funind/functional_principles_types.ml" 604 19239 19257 "plugins/funind/functional_principles_types.ml" 604 19239 19263
type(
  Term.rec_declaration
)
"plugins/funind/functional_principles_types.ml" 604 19239 19256 "plugins/funind/functional_principles_types.ml" 604 19239 19272
type(
  Term.rec_declaration
)
"plugins/funind/functional_principles_types.ml" 604 19239 19247 "plugins/funind/functional_principles_types.ml" 604 19239 19272
type(
  Term.fixpoint
)
"plugins/funind/functional_principles_types.ml" 604 19239 19275 "plugins/funind/functional_principles_types.ml" 604 19239 19282
type(
  Term.constr -> Term.fixpoint
)
ident(
  ext_ref Term.destFix
)
"plugins/funind/functional_principles_types.ml" 604 19239 19283 "plugins/funind/functional_principles_types.ml" 604 19239 19286
type(
  Term.constr
)
ident(
  int_ref fix "plugins/funind/functional_principles_types.ml" 603 19134 19147 "plugins/funind/functional_principles_types.ml" 603 19134 19150
)
"plugins/funind/functional_principles_types.ml" 604 19239 19275 "plugins/funind/functional_principles_types.ml" 604 19239 19286
call(
  stack
)
type(
  Term.fixpoint
)
"plugins/funind/functional_principles_types.ml" 605 19290 19298 "plugins/funind/functional_principles_types.ml" 605 19290 19310
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 606 19313 19319 "plugins/funind/functional_principles_types.ml" 606 19313 19327
type(
  (Term.types -> Entries.definition_entry) ->
  Term.types list -> Entries.definition_entry list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 607 19374 19380 "plugins/funind/functional_principles_types.ml" 607 19374 19391
type(
  Term.types
)
ident(
  def scheme_type "plugins/funind/functional_principles_types.ml" 608 19395 19399 "plugins/funind/functional_principles_types.ml" 647 20663 20668
)
"plugins/funind/functional_principles_types.ml" 608 19395 19399 "plugins/funind/functional_principles_types.ml" 608 19395 19403
type(
  int ref -> unit
)
ident(
  ext_ref Pervasives.incr
)
"plugins/funind/functional_principles_types.ml" 608 19395 19404 "plugins/funind/functional_principles_types.ml" 608 19395 19405
type(
  int ref
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 542 17453 17459 "plugins/funind/functional_principles_types.ml" 542 17453 17460
)
"plugins/funind/functional_principles_types.ml" 608 19395 19399 "plugins/funind/functional_principles_types.ml" 608 19395 19405
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 609 19407 19411 "plugins/funind/functional_principles_types.ml" 609 19407 19418
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/functional_principles_types.ml" 54 1742 1746 "plugins/funind/functional_principles_types.ml" 54 1742 1753
)
"plugins/funind/functional_principles_types.ml" 609 19407 19420 "plugins/funind/functional_principles_types.ml" 609 19407 19438
type(
  Term.types -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/functional_principles_types.ml" 609 19407 19439 "plugins/funind/functional_principles_types.ml" 609 19407 19450
type(
  Term.types
)
ident(
  int_ref scheme_type "plugins/funind/functional_principles_types.ml" 607 19374 19380 "plugins/funind/functional_principles_types.ml" 607 19374 19391
)
"plugins/funind/functional_principles_types.ml" 609 19407 19419 "plugins/funind/functional_principles_types.ml" 609 19407 19451
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 609 19407 19411 "plugins/funind/functional_principles_types.ml" 609 19407 19451
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 610 19453 19461 "plugins/funind/functional_principles_types.ml" 610 19453 19471
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 610 19453 19475 "plugins/funind/functional_principles_types.ml" 610 19453 19491
type(
  Term.types -> Term.types
)
ident(
  ext_ref Term.strip_prod_assum
)
"plugins/funind/functional_principles_types.ml" 610 19453 19492 "plugins/funind/functional_principles_types.ml" 610 19453 19503
type(
  Term.types
)
ident(
  int_ref scheme_type "plugins/funind/functional_principles_types.ml" 607 19374 19380 "plugins/funind/functional_principles_types.ml" 607 19374 19391
)
"plugins/funind/functional_principles_types.ml" 610 19453 19474 "plugins/funind/functional_principles_types.ml" 610 19453 19504
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 611 19508 19516 "plugins/funind/functional_principles_types.ml" 611 19508 19525
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 611 19508 19528 "plugins/funind/functional_principles_types.ml" 611 19508 19535
type(
  Term.constr list -> Term.constr
)
ident(
  ext_ref List.hd
)
"plugins/funind/functional_principles_types.ml" 611 19508 19537 "plugins/funind/functional_principles_types.ml" 611 19508 19545
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_types.ml" 611 19508 19547 "plugins/funind/functional_principles_types.ml" 611 19508 19550
type(
  Term.constr * Term.constr list -> Term.constr list
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/functional_principles_types.ml" 611 19508 19552 "plugins/funind/functional_principles_types.ml" 611 19508 19565
type(
  Term.types -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_types.ml" 611 19508 19566 "plugins/funind/functional_principles_types.ml" 611 19508 19576
type(
  Term.types
)
ident(
  int_ref type_concl "plugins/funind/functional_principles_types.ml" 610 19453 19461 "plugins/funind/functional_principles_types.ml" 610 19453 19471
)
"plugins/funind/functional_principles_types.ml" 611 19508 19551 "plugins/funind/functional_principles_types.ml" 611 19508 19577
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 611 19508 19546 "plugins/funind/functional_principles_types.ml" 611 19508 19578
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 611 19508 19536 "plugins/funind/functional_principles_types.ml" 611 19508 19579
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 611 19508 19528 "plugins/funind/functional_principles_types.ml" 611 19508 19579
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 612 19583 19591 "plugins/funind/functional_principles_types.ml" 612 19583 19592
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 612 19583 19595 "plugins/funind/functional_principles_types.ml" 612 19583 19598
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_types.ml" 612 19583 19600 "plugins/funind/functional_principles_types.ml" 612 19583 19613
type(
  Term.constr -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_types.ml" 612 19583 19614 "plugins/funind/functional_principles_types.ml" 612 19583 19623
type(
  Term.constr
)
ident(
  int_ref applied_f "plugins/funind/functional_principles_types.ml" 611 19508 19516 "plugins/funind/functional_principles_types.ml" 611 19508 19525
)
"plugins/funind/functional_principles_types.ml" 612 19583 19599 "plugins/funind/functional_principles_types.ml" 612 19583 19624
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 612 19583 19595 "plugins/funind/functional_principles_types.ml" 612 19583 19624
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 614 19719 19725 "plugins/funind/functional_principles_types.ml" 614 19719 19736
type(
  (int -> Term.types -> unit) -> Term.types array -> unit
)
ident(
  ext_ref Array.iteri
)
"plugins/funind/functional_principles_types.ml" 615 19737 19748 "plugins/funind/functional_principles_types.ml" 615 19737 19749
type(
  int
)
ident(
  def j "plugins/funind/functional_principles_types.ml" 615 19737 19750 "plugins/funind/functional_principles_types.ml" 622 19994 20021
)
"plugins/funind/functional_principles_types.ml" 615 19737 19750 "plugins/funind/functional_principles_types.ml" 615 19737 19751
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_types.ml" 616 19755 19757 "plugins/funind/functional_principles_types.ml" 622 19994 20021
)
"plugins/funind/functional_principles_types.ml" 616 19755 19761 "plugins/funind/functional_principles_types.ml" 616 19755 19762
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 616 19755 19767 "plugins/funind/functional_principles_types.ml" 616 19755 19783
type(
  Term.types -> Term.types
)
ident(
  ext_ref Term.strip_prod_assum
)
"plugins/funind/functional_principles_types.ml" 616 19755 19784 "plugins/funind/functional_principles_types.ml" 616 19755 19785
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 615 19737 19750 "plugins/funind/functional_principles_types.ml" 615 19737 19751
)
"plugins/funind/functional_principles_types.ml" 616 19755 19766 "plugins/funind/functional_principles_types.ml" 616 19755 19786
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 617 19790 19796 "plugins/funind/functional_principles_types.ml" 617 19790 19805
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 617 19790 19808 "plugins/funind/functional_principles_types.ml" 617 19790 19815
type(
  Term.constr list -> Term.constr
)
ident(
  ext_ref List.hd
)
"plugins/funind/functional_principles_types.ml" 617 19790 19817 "plugins/funind/functional_principles_types.ml" 617 19790 19825
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_types.ml" 617 19790 19827 "plugins/funind/functional_principles_types.ml" 617 19790 19830
type(
  Term.constr * Term.constr list -> Term.constr list
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/functional_principles_types.ml" 617 19790 19832 "plugins/funind/functional_principles_types.ml" 617 19790 19845
type(
  Term.types -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_types.ml" 617 19790 19846 "plugins/funind/functional_principles_types.ml" 617 19790 19847
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_types.ml" 616 19755 19761 "plugins/funind/functional_principles_types.ml" 616 19755 19762
)
"plugins/funind/functional_principles_types.ml" 617 19790 19831 "plugins/funind/functional_principles_types.ml" 617 19790 19848
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 617 19790 19826 "plugins/funind/functional_principles_types.ml" 617 19790 19849
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 617 19790 19816 "plugins/funind/functional_principles_types.ml" 617 19790 19850
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_types.ml" 617 19790 19808 "plugins/funind/functional_principles_types.ml" 617 19790 19850
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 618 19854 19860 "plugins/funind/functional_principles_types.ml" 618 19854 19861
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 618 19854 19864 "plugins/funind/functional_principles_types.ml" 618 19854 19867
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_types.ml" 618 19854 19869 "plugins/funind/functional_principles_types.ml" 618 19854 19882
type(
  Term.constr -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_types.ml" 618 19854 19883 "plugins/funind/functional_principles_types.ml" 618 19854 19892
type(
  Term.constr
)
ident(
  int_ref applied_g "plugins/funind/functional_principles_types.ml" 617 19790 19796 "plugins/funind/functional_principles_types.ml" 617 19790 19805
)
"plugins/funind/functional_principles_types.ml" 618 19854 19868 "plugins/funind/functional_principles_types.ml" 618 19854 19893
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_types.ml" 618 19854 19864 "plugins/funind/functional_principles_types.ml" 618 19854 19893
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 619 19897 19902 "plugins/funind/functional_principles_types.ml" 619 19897 19911
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_types.ml" 619 19897 19912 "plugins/funind/functional_principles_types.ml" 619 19897 19913
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 612 19583 19591 "plugins/funind/functional_principles_types.ml" 612 19583 19592
)
"plugins/funind/functional_principles_types.ml" 619 19897 19914 "plugins/funind/functional_principles_types.ml" 619 19897 19915
type(
  Term.constr
)
ident(
  int_ref g "plugins/funind/functional_principles_types.ml" 618 19854 19860 "plugins/funind/functional_principles_types.ml" 618 19854 19861
)
"plugins/funind/functional_principles_types.ml" 619 19897 19902 "plugins/funind/functional_principles_types.ml" 619 19897 19915
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 620 19916 19923 "plugins/funind/functional_principles_types.ml" 620 19916 19928
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 620 19916 19941 "plugins/funind/functional_principles_types.ml" 620 19916 19942
type(
  int
)
ident(
  int_ref j "plugins/funind/functional_principles_types.ml" 615 19737 19748 "plugins/funind/functional_principles_types.ml" 615 19737 19749
)
"plugins/funind/functional_principles_types.ml" 620 19916 19929 "plugins/funind/functional_principles_types.ml" 620 19916 19943
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 620 19916 19923 "plugins/funind/functional_principles_types.ml" 620 19916 19943
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 619 19897 19899 "plugins/funind/functional_principles_types.ml" 620 19916 19943
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 621 19945 19947 "plugins/funind/functional_principles_types.ml" 621 19945 19954
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/functional_principles_types.ml" 54 1742 1746 "plugins/funind/functional_principles_types.ml" 54 1742 1753
)
"plugins/funind/functional_principles_types.ml" 621 19945 19956 "plugins/funind/functional_principles_types.ml" 621 19945 19974
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/functional_principles_types.ml" 621 19945 19975 "plugins/funind/functional_principles_types.ml" 621 19945 19976
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 612 19583 19591 "plugins/funind/functional_principles_types.ml" 612 19583 19592
)
"plugins/funind/functional_principles_types.ml" 621 19945 19956 "plugins/funind/functional_principles_types.ml" 621 19945 19976
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 621 19945 19977 "plugins/funind/functional_principles_types.ml" 621 19945 19979
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 621 19945 19980 "plugins/funind/functional_principles_types.ml" 621 19945 19983
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 621 19945 19984 "plugins/funind/functional_principles_types.ml" 621 19945 19990
type(
  string
)
"plugins/funind/functional_principles_types.ml" 621 19945 19980 "plugins/funind/functional_principles_types.ml" 621 19945 19990
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 621 19945 19956 "plugins/funind/functional_principles_types.ml" 621 19945 19990
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 621 19945 19991 "plugins/funind/functional_principles_types.ml" 621 19945 19993
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 622 19994 20000 "plugins/funind/functional_principles_types.ml" 622 19994 20018
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/functional_principles_types.ml" 622 19994 20019 "plugins/funind/functional_principles_types.ml" 622 19994 20020
type(
  Term.constr
)
ident(
  int_ref g "plugins/funind/functional_principles_types.ml" 618 19854 19860 "plugins/funind/functional_principles_types.ml" 618 19854 19861
)
"plugins/funind/functional_principles_types.ml" 622 19994 20000 "plugins/funind/functional_principles_types.ml" 622 19994 20020
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 621 19945 19955 "plugins/funind/functional_principles_types.ml" 622 19994 20021
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 621 19945 19947 "plugins/funind/functional_principles_types.ml" 622 19994 20021
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 619 19897 19899 "plugins/funind/functional_principles_types.ml" 622 19994 20021
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 618 19854 19856 "plugins/funind/functional_principles_types.ml" 622 19994 20021
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 617 19790 19792 "plugins/funind/functional_principles_types.ml" 622 19994 20021
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 616 19755 19757 "plugins/funind/functional_principles_types.ml" 622 19994 20021
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 615 19737 19743 "plugins/funind/functional_principles_types.ml" 624 20023 20030
type(
  int -> Term.types -> unit
)
"plugins/funind/functional_principles_types.ml" 625 20031 20037 "plugins/funind/functional_principles_types.ml" 625 20031 20039
type(
  Term.types array
)
ident(
  int_ref ta "plugins/funind/functional_principles_types.ml" 604 19239 19259 "plugins/funind/functional_principles_types.ml" 604 19239 19261
)
"plugins/funind/functional_principles_types.ml" 614 19719 19725 "plugins/funind/functional_principles_types.ml" 625 20031 20039
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 629 20167 20178 "plugins/funind/functional_principles_types.ml" 629 20167 20179
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 629 20167 20181 "plugins/funind/functional_principles_types.ml" 629 20167 20186
type(
  Entries.definition_entry
)
ident(
  def const "plugins/funind/functional_principles_types.ml" 639 20418 20424 "plugins/funind/functional_principles_types.ml" 639 20418 20429
)
"plugins/funind/functional_principles_types.ml" 629 20167 20187 "plugins/funind/functional_principles_types.ml" 629 20167 20188
type(
  Decl_kinds.goal_kind
)
"plugins/funind/functional_principles_types.ml" 629 20167 20189 "plugins/funind/functional_principles_types.ml" 629 20167 20190
type(
  Tacexpr.declaration_hook
)
"plugins/funind/functional_principles_types.ml" 629 20167 20180 "plugins/funind/functional_principles_types.ml" 629 20167 20191
type(
  Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook
)
"plugins/funind/functional_principles_types.ml" 629 20167 20177 "plugins/funind/functional_principles_types.ml" 629 20167 20192
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 630 20195 20203 "plugins/funind/functional_principles_types.ml" 630 20195 20229
type(
  bool ->
  Term.types ->
  Term.sorts array ->
  Names.constant array ->
  int ->
  (Term.constr array -> int -> Tacmach.tactic) ->
  (Term.types -> Tacexpr.declaration_hook) ->
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
ident(
  int_ref build_functional_principle "plugins/funind/functional_principles_types.ml" 320 10845 10849 "plugins/funind/functional_principles_types.ml" 320 10845 10875
)
"plugins/funind/functional_principles_types.ml" 631 20230 20233 "plugins/funind/functional_principles_types.ml" 631 20230 20238
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 632 20239 20243 "plugins/funind/functional_principles_types.ml" 632 20239 20251
type(
  Term.types list -> int -> Term.types
)
ident(
  ext_ref List.nth
)
"plugins/funind/functional_principles_types.ml" 632 20239 20252 "plugins/funind/functional_principles_types.ml" 632 20239 20269
type(
  Term.types list
)
ident(
  int_ref other_princ_types "plugins/funind/functional_principles_types.ml" 550 17657 17674 "plugins/funind/functional_principles_types.ml" 550 17657 17691
)
"plugins/funind/functional_principles_types.ml" 632 20239 20271 "plugins/funind/functional_principles_types.ml" 632 20239 20272
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_types.ml" 632 20239 20272 "plugins/funind/functional_principles_types.ml" 632 20239 20273
type(
  int ref
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 542 17453 17459 "plugins/funind/functional_principles_types.ml" 542 17453 17460
)
"plugins/funind/functional_principles_types.ml" 632 20239 20271 "plugins/funind/functional_principles_types.ml" 632 20239 20273
type(
  int
)
"plugins/funind/functional_principles_types.ml" 632 20239 20274 "plugins/funind/functional_principles_types.ml" 632 20239 20275
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_types.ml" 632 20239 20276 "plugins/funind/functional_principles_types.ml" 632 20239 20277
type(
  int
)
"plugins/funind/functional_principles_types.ml" 632 20239 20270 "plugins/funind/functional_principles_types.ml" 632 20239 20278
type(
  int
)
"plugins/funind/functional_principles_types.ml" 632 20239 20242 "plugins/funind/functional_principles_types.ml" 632 20239 20279
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 633 20280 20284 "plugins/funind/functional_principles_types.ml" 633 20280 20297
type(
  Term.sorts list -> Term.sorts array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/functional_principles_types.ml" 633 20280 20298 "plugins/funind/functional_principles_types.ml" 633 20280 20303
type(
  Term.sorts list
)
ident(
  int_ref sorts "plugins/funind/functional_principles_types.ml" 543 17475 17481 "plugins/funind/functional_principles_types.ml" 543 17475 17486
)
"plugins/funind/functional_principles_types.ml" 633 20280 20283 "plugins/funind/functional_principles_types.ml" 633 20280 20304
call(
  stack
)
type(
  Term.sorts array
)
"plugins/funind/functional_principles_types.ml" 634 20305 20308 "plugins/funind/functional_principles_types.ml" 634 20305 20323
type(
  Names.constant array
)
ident(
  int_ref this_block_funs "plugins/funind/functional_principles_types.ml" 521 16900 16906 "plugins/funind/functional_principles_types.ml" 521 16900 16921
)
"plugins/funind/functional_principles_types.ml" 635 20324 20327 "plugins/funind/functional_principles_types.ml" 635 20324 20328
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_types.ml" 635 20324 20328 "plugins/funind/functional_principles_types.ml" 635 20324 20329
type(
  int ref
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 542 17453 17459 "plugins/funind/functional_principles_types.ml" 542 17453 17460
)
"plugins/funind/functional_principles_types.ml" 635 20324 20327 "plugins/funind/functional_principles_types.ml" 635 20324 20329
type(
  int
)
"plugins/funind/functional_principles_types.ml" 636 20330 20334 "plugins/funind/functional_principles_types.ml" 636 20330 20356
type(
  bool ->
  int -> Names.constant array -> Term.constr array -> int -> Tacmach.tactic
)
ident(
  ext_ref Functional_principles_proofs.prove_princ_for_struct
)
"plugins/funind/functional_principles_types.ml" 636 20330 20357 "plugins/funind/functional_principles_types.ml" 636 20330 20362
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 636 20330 20363 "plugins/funind/functional_principles_types.ml" 636 20330 20364
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_types.ml" 636 20330 20364 "plugins/funind/functional_principles_types.ml" 636 20330 20365
type(
  int ref
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 542 17453 17459 "plugins/funind/functional_principles_types.ml" 542 17453 17460
)
"plugins/funind/functional_principles_types.ml" 636 20330 20363 "plugins/funind/functional_principles_types.ml" 636 20330 20365
type(
  int
)
"plugins/funind/functional_principles_types.ml" 636 20330 20367 "plugins/funind/functional_principles_types.ml" 636 20330 20380
type(
  Names.constant list -> Names.constant array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/functional_principles_types.ml" 636 20330 20381 "plugins/funind/functional_principles_types.ml" 636 20330 20385
type(
  Names.constant list
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 510 16568 16574 "plugins/funind/functional_principles_types.ml" 510 16568 16578
)
"plugins/funind/functional_principles_types.ml" 636 20330 20366 "plugins/funind/functional_principles_types.ml" 636 20330 20386
call(
  stack
)
type(
  Names.constant array
)
"plugins/funind/functional_principles_types.ml" 636 20330 20333 "plugins/funind/functional_principles_types.ml" 636 20330 20387
call(
  stack
)
type(
  Term.constr array -> int -> Tacmach.tactic
)
"plugins/funind/functional_principles_types.ml" 637 20388 20396 "plugins/funind/functional_principles_types.ml" 637 20388 20397
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 637 20388 20398 "plugins/funind/functional_principles_types.ml" 637 20388 20399
type(
  Decl_kinds.locality
)
"plugins/funind/functional_principles_types.ml" 637 20388 20400 "plugins/funind/functional_principles_types.ml" 637 20388 20401
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_types.ml" 637 20388 20405 "plugins/funind/functional_principles_types.ml" 637 20388 20407
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 637 20388 20391 "plugins/funind/functional_principles_types.ml" 637 20388 20408
type(
  Term.types -> Tacexpr.declaration_hook
)
"plugins/funind/functional_principles_types.ml" 630 20195 20203 "plugins/funind/functional_principles_types.ml" 637 20388 20408
call(
  stack
)
type(
  Names.identifier *
  (Entries.definition_entry * Decl_kinds.goal_kind * Tacexpr.declaration_hook)
)
"plugins/funind/functional_principles_types.ml" 639 20418 20424 "plugins/funind/functional_principles_types.ml" 639 20418 20429
type(
  Entries.definition_entry
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 629 20167 20181 "plugins/funind/functional_principles_types.ml" 629 20167 20186
)
"plugins/funind/functional_principles_types.ml" 629 20167 20173 "plugins/funind/functional_principles_types.ml" 639 20418 20429
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 614 19719 19725 "plugins/funind/functional_principles_types.ml" 639 20418 20429
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 640 20430 20448 "plugins/funind/functional_principles_types.ml" 640 20430 20449
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_types.ml" 641 20453 20457 "plugins/funind/functional_principles_types.ml" 647 20663 20668
)
"plugins/funind/functional_principles_types.ml" 640 20430 20437 "plugins/funind/functional_principles_types.ml" 640 20430 20449
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 641 20453 20461 "plugins/funind/functional_principles_types.ml" 641 20453 20471
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 642 20474 20480 "plugins/funind/functional_principles_types.ml" 642 20474 20508
type(
  init:Term.constr -> Term.rel_context -> Term.constr
)
ident(
  ext_ref Termops.it_mkLambda_or_LetIn
)
"plugins/funind/functional_principles_types.ml" 642 20474 20516 "plugins/funind/functional_principles_types.ml" 642 20474 20521
type(
  Term.fixpoint -> Term.constr
)
ident(
  ext_ref Term.mkFix
)
"plugins/funind/functional_principles_types.ml" 642 20474 20523 "plugins/funind/functional_principles_types.ml" 642 20474 20527
type(
  int array
)
ident(
  int_ref idxs "plugins/funind/functional_principles_types.ml" 604 19239 19248 "plugins/funind/functional_principles_types.ml" 604 19239 19252
)
"plugins/funind/functional_principles_types.ml" 642 20474 20528 "plugins/funind/functional_principles_types.ml" 642 20474 20529
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_types.ml" 640 20430 20448 "plugins/funind/functional_principles_types.ml" 640 20430 20449
)
"plugins/funind/functional_principles_types.ml" 642 20474 20522 "plugins/funind/functional_principles_types.ml" 642 20474 20530
type(
  int array * int
)
"plugins/funind/functional_principles_types.ml" 642 20474 20531 "plugins/funind/functional_principles_types.ml" 642 20474 20535
type(
  Term.rec_declaration
)
ident(
  int_ref decl "plugins/funind/functional_principles_types.ml" 604 19239 19256 "plugins/funind/functional_principles_types.ml" 604 19239 19272
)
"plugins/funind/functional_principles_types.ml" 642 20474 20521 "plugins/funind/functional_principles_types.ml" 642 20474 20536
type(
  Term.fixpoint
)
"plugins/funind/functional_principles_types.ml" 642 20474 20515 "plugins/funind/functional_principles_types.ml" 642 20474 20537
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 642 20474 20538 "plugins/funind/functional_principles_types.ml" 642 20474 20542
type(
  Term.rel_context
)
ident(
  int_ref ctxt "plugins/funind/functional_principles_types.ml" 603 19134 19142 "plugins/funind/functional_principles_types.ml" 603 19134 19146
)
"plugins/funind/functional_principles_types.ml" 642 20474 20480 "plugins/funind/functional_principles_types.ml" 642 20474 20542
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 644 20550 20555 "plugins/funind/functional_principles_types.ml" 644 20550 20560
type(
  Entries.definition_entry
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 591 18662 18668 "plugins/funind/functional_principles_types.ml" 591 18662 18673
)
"plugins/funind/functional_principles_types.ml" 645 20566 20600 "plugins/funind/functional_principles_types.ml" 645 20566 20610
type(
  Term.constr
)
ident(
  int_ref princ_body "plugins/funind/functional_principles_types.ml" 641 20453 20461 "plugins/funind/functional_principles_types.ml" 641 20453 20471
)
"plugins/funind/functional_principles_types.ml" 646 20612 20651 "plugins/funind/functional_principles_types.ml" 646 20612 20662
type(
  Term.types
)
ident(
  int_ref scheme_type "plugins/funind/functional_principles_types.ml" 607 19374 19380 "plugins/funind/functional_principles_types.ml" 607 19374 19391
)
"plugins/funind/functional_principles_types.ml" 646 20612 20646 "plugins/funind/functional_principles_types.ml" 646 20612 20662
type(
  Term.types option
)
"plugins/funind/functional_principles_types.ml" 644 20550 20554 "plugins/funind/functional_principles_types.ml" 647 20663 20668
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 641 20453 20457 "plugins/funind/functional_principles_types.ml" 647 20663 20668
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 613 19628 19632 "plugins/funind/functional_principles_types.ml" 647 20663 20668
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 612 19583 19587 "plugins/funind/functional_principles_types.ml" 647 20663 20668
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 611 19508 19512 "plugins/funind/functional_principles_types.ml" 647 20663 20668
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 610 19453 19457 "plugins/funind/functional_principles_types.ml" 647 20663 20668
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 609 19407 19411 "plugins/funind/functional_principles_types.ml" 647 20663 20668
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 608 19395 19399 "plugins/funind/functional_principles_types.ml" 647 20663 20668
type(
  Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 607 19374 19375 "plugins/funind/functional_principles_types.ml" 648 20669 20676
type(
  Term.types -> Entries.definition_entry
)
"plugins/funind/functional_principles_types.ml" 649 20677 20683 "plugins/funind/functional_principles_types.ml" 649 20677 20704
type(
  Term.types list
)
ident(
  int_ref other_fun_princ_types "plugins/funind/functional_principles_types.ml" 597 18812 18820 "plugins/funind/functional_principles_types.ml" 597 18812 18841
)
"plugins/funind/functional_principles_types.ml" 606 19313 19319 "plugins/funind/functional_principles_types.ml" 649 20677 20704
call(
  stack
)
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 651 20712 20716 "plugins/funind/functional_principles_types.ml" 651 20712 20721
type(
  Entries.definition_entry
)
ident(
  int_ref const "plugins/funind/functional_principles_types.ml" 591 18662 18668 "plugins/funind/functional_principles_types.ml" 591 18662 18673
)
"plugins/funind/functional_principles_types.ml" 651 20712 20723 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
ident(
  int_ref other_result "plugins/funind/functional_principles_types.ml" 605 19290 19298 "plugins/funind/functional_principles_types.ml" 605 19290 19310
)
"plugins/funind/functional_principles_types.ml" 651 20712 20716 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 605 19290 19294 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 604 19239 19243 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 603 19134 19138 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 602 19024 19028 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 597 18812 18816 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 593 18758 18760 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 591 18662 18664 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 583 18380 18382 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 582 18370 18372 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 555 17777 17779 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 550 17657 17659 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 543 17475 17477 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 542 17453 17455 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 537 17320 17322 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 529 17185 17187 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 523 16993 16995 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 522 16965 16967 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 521 16900 16902 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 520 16821 16823 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 515 16691 16693 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 514 16637 16639 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 511 16601 16603 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 510 16568 16570 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 508 16515 16517 "plugins/funind/functional_principles_types.ml" 651 20712 20735
type(
  Entries.definition_entry list
)
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 653 20737 20741 "plugins/funind/functional_principles_types.ml" 653 20737 20753
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list -> unit
)
ident(
  def build_scheme "plugins/funind/functional_principles_types.ml" 687 21520 21520 --
)
"plugins/funind/functional_principles_types.ml" 653 20737 20754 "plugins/funind/functional_principles_types.ml" 653 20737 20757
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
ident(
  def fas "plugins/funind/functional_principles_types.ml" 654 20760 20762 "plugins/funind/functional_principles_types.ml" 683 21492 21516
)
"plugins/funind/functional_principles_types.ml" 654 20760 20762 "plugins/funind/functional_principles_types.ml" 654 20760 20776
type(
  unit -> unit
)
ident(
  ext_ref Dumpglob.pause
)
"plugins/funind/functional_principles_types.ml" 654 20760 20777 "plugins/funind/functional_principles_types.ml" 654 20760 20779
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 654 20760 20762 "plugins/funind/functional_principles_types.ml" 654 20760 20779
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 655 20781 20787 "plugins/funind/functional_principles_types.ml" 655 20781 20799
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 656 20802 20806 "plugins/funind/functional_principles_types.ml" 656 20802 20817
type(
  (Names.constant * Rawterm.rawsort) list -> Entries.definition_entry list
)
ident(
  int_ref make_scheme "plugins/funind/functional_principles_types.ml" 507 16425 16429 "plugins/funind/functional_principles_types.ml" 507 16425 16440
)
"plugins/funind/functional_principles_types.ml" 657 20818 20825 "plugins/funind/functional_principles_types.ml" 657 20818 20833
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort ->
   Names.constant * Rawterm.rawsort) ->
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list ->
  (Names.constant * Rawterm.rawsort) list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_types.ml" 658 20834 20842 "plugins/funind/functional_principles_types.ml" 658 20834 20843
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 658 20834 20844 "plugins/funind/functional_principles_types.ml" 658 20834 20845
type(
  Libnames.reference
)
ident(
  def f "plugins/funind/functional_principles_types.ml" 659 20855 20860 "plugins/funind/functional_principles_types.ml" 667 21127 21152
)
"plugins/funind/functional_principles_types.ml" 658 20834 20846 "plugins/funind/functional_principles_types.ml" 658 20834 20850
type(
  Rawterm.rawsort
)
ident(
  def sort "plugins/funind/functional_principles_types.ml" 659 20855 20860 "plugins/funind/functional_principles_types.ml" 667 21127 21152
)
"plugins/funind/functional_principles_types.ml" 658 20834 20841 "plugins/funind/functional_principles_types.ml" 658 20834 20851
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 659 20855 20864 "plugins/funind/functional_principles_types.ml" 659 20855 20877
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 661 20891 20899 "plugins/funind/functional_principles_types.ml" 661 20891 20913
type(
  Libnames.reference -> Libnames.global_reference
)
ident(
  ext_ref Nametab.global
)
"plugins/funind/functional_principles_types.ml" 661 20891 20914 "plugins/funind/functional_principles_types.ml" 661 20891 20915
type(
  Libnames.reference
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 658 20834 20844 "plugins/funind/functional_principles_types.ml" 658 20834 20845
)
"plugins/funind/functional_principles_types.ml" 661 20891 20899 "plugins/funind/functional_principles_types.ml" 661 20891 20915
call(
  stack
)
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_types.ml" 662 20921 20945 "plugins/funind/functional_principles_types.ml" 662 20921 20946
type(
  Names.constant
)
ident(
  def c "plugins/funind/functional_principles_types.ml" 662 20921 20950 "plugins/funind/functional_principles_types.ml" 662 20921 20951
)
"plugins/funind/functional_principles_types.ml" 662 20921 20927 "plugins/funind/functional_principles_types.ml" 662 20921 20946
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_types.ml" 662 20921 20950 "plugins/funind/functional_principles_types.ml" 662 20921 20951
type(
  Names.constant
)
ident(
  int_ref c "plugins/funind/functional_principles_types.ml" 662 20921 20945 "plugins/funind/functional_principles_types.ml" 662 20921 20946
)
"plugins/funind/functional_principles_types.ml" 663 20952 20958 "plugins/funind/functional_principles_types.ml" 663 20952 20959
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_types.ml" 663 20952 20963 "plugins/funind/functional_principles_types.ml" 663 20952 20973
type(
  string -> Names.constant
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_types.ml" 663 20952 20974 "plugins/funind/functional_principles_types.ml" 663 20952 21025
type(
  string
)
"plugins/funind/functional_principles_types.ml" 663 20952 20963 "plugins/funind/functional_principles_types.ml" 663 20952 21025
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 661 20891 20893 "plugins/funind/functional_principles_types.ml" 663 20952 21025
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 664 21026 21038 "plugins/funind/functional_principles_types.ml" 664 21026 21047
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 665 21051 21059 "plugins/funind/functional_principles_types.ml" 665 21051 21069
type(
  string -> Names.constant
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_types.ml" 665 21051 21071 "plugins/funind/functional_principles_types.ml" 665 21051 21085
type(
  string
)
"plugins/funind/functional_principles_types.ml" 665 21051 21085 "plugins/funind/functional_principles_types.ml" 665 21051 21086
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/functional_principles_types.ml" 665 21051 21087 "plugins/funind/functional_principles_types.ml" 665 21051 21115
type(
  Libnames.reference -> string
)
ident(
  ext_ref Libnames.string_of_reference
)
"plugins/funind/functional_principles_types.ml" 665 21051 21116 "plugins/funind/functional_principles_types.ml" 665 21051 21117
type(
  Libnames.reference
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 658 20834 20844 "plugins/funind/functional_principles_types.ml" 658 20834 20845
)
"plugins/funind/functional_principles_types.ml" 665 21051 21087 "plugins/funind/functional_principles_types.ml" 665 21051 21117
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_types.ml" 665 21051 21070 "plugins/funind/functional_principles_types.ml" 665 21051 21118
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_types.ml" 665 21051 21059 "plugins/funind/functional_principles_types.ml" 665 21051 21118
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 660 20880 20887 "plugins/funind/functional_principles_types.ml" 665 21051 21118
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 667 21127 21133 "plugins/funind/functional_principles_types.ml" 667 21127 21146
type(
  Names.constant
)
ident(
  int_ref f_as_constant "plugins/funind/functional_principles_types.ml" 659 20855 20864 "plugins/funind/functional_principles_types.ml" 659 20855 20877
)
"plugins/funind/functional_principles_types.ml" 667 21127 21147 "plugins/funind/functional_principles_types.ml" 667 21127 21151
type(
  Rawterm.rawsort
)
ident(
  int_ref sort "plugins/funind/functional_principles_types.ml" 658 20834 20846 "plugins/funind/functional_principles_types.ml" 658 20834 20850
)
"plugins/funind/functional_principles_types.ml" 667 21127 21132 "plugins/funind/functional_principles_types.ml" 667 21127 21152
type(
  Names.constant * Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 659 20855 20860 "plugins/funind/functional_principles_types.ml" 667 21127 21152
type(
  Names.constant * Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 658 20834 20836 "plugins/funind/functional_principles_types.ml" 668 21153 21156
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort ->
  Names.constant * Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 669 21157 21159 "plugins/funind/functional_principles_types.ml" 669 21157 21162
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
ident(
  int_ref fas "plugins/funind/functional_principles_types.ml" 653 20737 20754 "plugins/funind/functional_principles_types.ml" 653 20737 20757
)
"plugins/funind/functional_principles_types.ml" 657 20818 20824 "plugins/funind/functional_principles_types.ml" 670 21163 21170
call(
  stack
)
type(
  (Names.constant * Rawterm.rawsort) list
)
"plugins/funind/functional_principles_types.ml" 656 20802 20806 "plugins/funind/functional_principles_types.ml" 670 21163 21170
call(
  stack
)
type(
  Entries.definition_entry list
)
"plugins/funind/functional_principles_types.ml" 672 21176 21178 "plugins/funind/functional_principles_types.ml" 672 21176 21188
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort ->
   Entries.definition_entry -> unit) ->
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list ->
  Entries.definition_entry list -> unit
)
ident(
  ext_ref List.iter2
)
"plugins/funind/functional_principles_types.ml" 673 21189 21199 "plugins/funind/functional_principles_types.ml" 673 21189 21207
type(
  Names.identifier
)
ident(
  def princ_id "plugins/funind/functional_principles_types.ml" 673 21189 21213 "plugins/funind/functional_principles_types.ml" 679 21387 21459
)
"plugins/funind/functional_principles_types.ml" 673 21189 21208 "plugins/funind/functional_principles_types.ml" 673 21189 21209
type(
  Libnames.reference
)
"plugins/funind/functional_principles_types.ml" 673 21189 21210 "plugins/funind/functional_principles_types.ml" 673 21189 21211
type(
  Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 673 21189 21198 "plugins/funind/functional_principles_types.ml" 673 21189 21212
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 673 21189 21213 "plugins/funind/functional_principles_types.ml" 673 21189 21222
type(
  Entries.definition_entry
)
ident(
  def def_entry "plugins/funind/functional_principles_types.ml" 674 21226 21233 "plugins/funind/functional_principles_types.ml" 679 21387 21459
)
"plugins/funind/functional_principles_types.ml" 674 21226 21233 "plugins/funind/functional_principles_types.ml" 674 21226 21239
type(
  Names.constant -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"plugins/funind/functional_principles_types.ml" 675 21240 21243 "plugins/funind/functional_principles_types.ml" 675 21240 21267
type(
  Names.identifier -> Declare.constant_declaration -> Names.constant
)
ident(
  ext_ref Declare.declare_constant
)
"plugins/funind/functional_principles_types.ml" 676 21268 21273 "plugins/funind/functional_principles_types.ml" 676 21268 21281
type(
  Names.identifier
)
ident(
  int_ref princ_id "plugins/funind/functional_principles_types.ml" 673 21189 21199 "plugins/funind/functional_principles_types.ml" 673 21189 21207
)
"plugins/funind/functional_principles_types.ml" 677 21282 21312 "plugins/funind/functional_principles_types.ml" 677 21282 21321
type(
  Entries.definition_entry
)
ident(
  int_ref def_entry "plugins/funind/functional_principles_types.ml" 673 21189 21213 "plugins/funind/functional_principles_types.ml" 673 21189 21222
)
"plugins/funind/functional_principles_types.ml" 677 21282 21288 "plugins/funind/functional_principles_types.ml" 677 21282 21321
type(
  Entries.constant_entry
)
"plugins/funind/functional_principles_types.ml" 677 21282 21341 "plugins/funind/functional_principles_types.ml" 677 21282 21359
type(
  Decl_kinds.theorem_kind
)
"plugins/funind/functional_principles_types.ml" 677 21282 21322 "plugins/funind/functional_principles_types.ml" 677 21282 21359
type(
  Decl_kinds.logical_kind
)
"plugins/funind/functional_principles_types.ml" 677 21282 21287 "plugins/funind/functional_principles_types.ml" 677 21282 21360
type(
  Declare.constant_declaration
)
"plugins/funind/functional_principles_types.ml" 675 21240 21242 "plugins/funind/functional_principles_types.ml" 677 21282 21361
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 674 21226 21233 "plugins/funind/functional_principles_types.ml" 677 21282 21361
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 678 21363 21370 "plugins/funind/functional_principles_types.ml" 678 21363 21386
type(
  (Names.identifier -> unit) -> Names.identifier -> unit
)
ident(
  ext_ref Flags.if_verbose
)
"plugins/funind/functional_principles_types.ml" 679 21387 21394 "plugins/funind/functional_principles_types.ml" 679 21387 21396
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_types.ml" 679 21387 21400 "plugins/funind/functional_principles_types.ml" 679 21387 21449
)
"plugins/funind/functional_principles_types.ml" 679 21387 21400 "plugins/funind/functional_principles_types.ml" 679 21387 21408
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msgnl
)
"plugins/funind/functional_principles_types.ml" 679 21387 21410 "plugins/funind/functional_principles_types.ml" 679 21387 21424
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_id
)
"plugins/funind/functional_principles_types.ml" 679 21387 21425 "plugins/funind/functional_principles_types.ml" 679 21387 21427
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_types.ml" 679 21387 21394 "plugins/funind/functional_principles_types.ml" 679 21387 21396
)
"plugins/funind/functional_principles_types.ml" 679 21387 21410 "plugins/funind/functional_principles_types.ml" 679 21387 21427
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 679 21387 21428 "plugins/funind/functional_principles_types.ml" 679 21387 21430
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_types.ml" 679 21387 21431 "plugins/funind/functional_principles_types.ml" 679 21387 21434
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_types.ml" 679 21387 21435 "plugins/funind/functional_principles_types.ml" 679 21387 21448
type(
  string
)
"plugins/funind/functional_principles_types.ml" 679 21387 21431 "plugins/funind/functional_principles_types.ml" 679 21387 21448
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 679 21387 21409 "plugins/funind/functional_principles_types.ml" 679 21387 21449
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_types.ml" 679 21387 21400 "plugins/funind/functional_principles_types.ml" 679 21387 21449
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 679 21387 21389 "plugins/funind/functional_principles_types.ml" 679 21387 21450
type(
  Names.identifier -> unit
)
"plugins/funind/functional_principles_types.ml" 679 21387 21451 "plugins/funind/functional_principles_types.ml" 679 21387 21459
type(
  Names.identifier
)
ident(
  int_ref princ_id "plugins/funind/functional_principles_types.ml" 673 21189 21199 "plugins/funind/functional_principles_types.ml" 673 21189 21207
)
"plugins/funind/functional_principles_types.ml" 678 21363 21370 "plugins/funind/functional_principles_types.ml" 679 21387 21459
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 674 21226 21233 "plugins/funind/functional_principles_types.ml" 679 21387 21459
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 673 21189 21193 "plugins/funind/functional_principles_types.ml" 680 21460 21465
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort ->
  Entries.definition_entry -> unit
)
"plugins/funind/functional_principles_types.ml" 681 21466 21470 "plugins/funind/functional_principles_types.ml" 681 21466 21473
type(
  (Names.identifier * Libnames.reference * Rawterm.rawsort) list
)
ident(
  int_ref fas "plugins/funind/functional_principles_types.ml" 653 20737 20754 "plugins/funind/functional_principles_types.ml" 653 20737 20757
)
"plugins/funind/functional_principles_types.ml" 682 21474 21478 "plugins/funind/functional_principles_types.ml" 682 21474 21490
type(
  Entries.definition_entry list
)
ident(
  int_ref bodies_types "plugins/funind/functional_principles_types.ml" 655 20781 20787 "plugins/funind/functional_principles_types.ml" 655 20781 20799
)
"plugins/funind/functional_principles_types.ml" 672 21176 21178 "plugins/funind/functional_principles_types.ml" 682 21474 21490
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 683 21492 21496 "plugins/funind/functional_principles_types.ml" 683 21492 21513
type(
  unit -> unit
)
ident(
  ext_ref Dumpglob.continue
)
"plugins/funind/functional_principles_types.ml" 683 21492 21514 "plugins/funind/functional_principles_types.ml" 683 21492 21516
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 683 21492 21496 "plugins/funind/functional_principles_types.ml" 683 21492 21516
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 672 21176 21178 "plugins/funind/functional_principles_types.ml" 683 21492 21516
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 655 20781 20783 "plugins/funind/functional_principles_types.ml" 683 21492 21516
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 654 20760 20762 "plugins/funind/functional_principles_types.ml" 683 21492 21516
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 687 21520 21524 "plugins/funind/functional_principles_types.ml" 687 21520 21541
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort -> unit
)
ident(
  def build_case_scheme "plugins/funind/functional_principles_types.ml" 737 23244 23248 --
)
"plugins/funind/functional_principles_types.ml" 687 21520 21542 "plugins/funind/functional_principles_types.ml" 687 21520 21544
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
ident(
  def fa "plugins/funind/functional_principles_types.ml" 688 21547 21549 "plugins/funind/functional_principles_types.ml" 737 23244 23248
)
"plugins/funind/functional_principles_types.ml" 688 21547 21553 "plugins/funind/functional_principles_types.ml" 688 21547 21556
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 688 21547 21559 "plugins/funind/functional_principles_types.ml" 688 21547 21569
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_types.ml" 688 21547 21570 "plugins/funind/functional_principles_types.ml" 688 21547 21572
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 688 21547 21559 "plugins/funind/functional_principles_types.ml" 688 21547 21572
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_types.ml" 689 21573 21579 "plugins/funind/functional_principles_types.ml" 689 21573 21584
type(
  Evd.evar_map
)
"plugins/funind/functional_principles_types.ml" 689 21573 21587 "plugins/funind/functional_principles_types.ml" 689 21573 21596
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_types.ml" 693 21684 21690 "plugins/funind/functional_principles_types.ml" 693 21684 21694
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 693 21684 21704 "plugins/funind/functional_principles_types.ml" 693 21684 21705
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 693 21684 21706 "plugins/funind/functional_principles_types.ml" 693 21684 21707
type(
  Libnames.reference
)
ident(
  def f "plugins/funind/functional_principles_types.ml" 694 21714 21717 "plugins/funind/functional_principles_types.ml" 696 21787 21851
)
"plugins/funind/functional_principles_types.ml" 693 21684 21708 "plugins/funind/functional_principles_types.ml" 693 21684 21709
type(
  Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 693 21684 21703 "plugins/funind/functional_principles_types.ml" 693 21684 21710
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 694 21714 21721 "plugins/funind/functional_principles_types.ml" 694 21714 21746
type(
  Libnames.global_reference -> Term.constr
)
ident(
  ext_ref Libnames.constr_of_global
)
"plugins/funind/functional_principles_types.ml" 694 21714 21748 "plugins/funind/functional_principles_types.ml" 694 21714 21762
type(
  Libnames.reference -> Libnames.global_reference
)
ident(
  ext_ref Nametab.global
)
"plugins/funind/functional_principles_types.ml" 694 21714 21763 "plugins/funind/functional_principles_types.ml" 694 21714 21764
type(
  Libnames.reference
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 693 21684 21706 "plugins/funind/functional_principles_types.ml" 693 21684 21707
)
"plugins/funind/functional_principles_types.ml" 694 21714 21747 "plugins/funind/functional_principles_types.ml" 694 21714 21765
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_types.ml" 694 21714 21721 "plugins/funind/functional_principles_types.ml" 694 21714 21765
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 695 21766 21774 "plugins/funind/functional_principles_types.ml" 695 21766 21783
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 696 21787 21792 "plugins/funind/functional_principles_types.ml" 696 21787 21802
type(
  string -> Term.constr
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_types.ml" 696 21787 21804 "plugins/funind/functional_principles_types.ml" 696 21787 21818
type(
  string
)
"plugins/funind/functional_principles_types.ml" 696 21787 21818 "plugins/funind/functional_principles_types.ml" 696 21787 21819
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/functional_principles_types.ml" 696 21787 21820 "plugins/funind/functional_principles_types.ml" 696 21787 21848
type(
  Libnames.reference -> string
)
ident(
  ext_ref Libnames.string_of_reference
)
"plugins/funind/functional_principles_types.ml" 696 21787 21849 "plugins/funind/functional_principles_types.ml" 696 21787 21850
type(
  Libnames.reference
)
ident(
  int_ref f "plugins/funind/functional_principles_types.ml" 693 21684 21706 "plugins/funind/functional_principles_types.ml" 693 21684 21707
)
"plugins/funind/functional_principles_types.ml" 696 21787 21820 "plugins/funind/functional_principles_types.ml" 696 21787 21850
type(
  string
)
"plugins/funind/functional_principles_types.ml" 696 21787 21803 "plugins/funind/functional_principles_types.ml" 696 21787 21851
type(
  string
)
"plugins/funind/functional_principles_types.ml" 696 21787 21792 "plugins/funind/functional_principles_types.ml" 696 21787 21851
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 694 21714 21717 "plugins/funind/functional_principles_types.ml" 696 21787 21851
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 693 21684 21698 "plugins/funind/functional_principles_types.ml" 696 21787 21852
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort -> Term.constr
)
"plugins/funind/functional_principles_types.ml" 696 21787 21853 "plugins/funind/functional_principles_types.ml" 696 21787 21855
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
ident(
  int_ref fa "plugins/funind/functional_principles_types.ml" 687 21520 21542 "plugins/funind/functional_principles_types.ml" 687 21520 21544
)
"plugins/funind/functional_principles_types.ml" 693 21684 21698 "plugins/funind/functional_principles_types.ml" 696 21787 21855
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 697 21859 21865 "plugins/funind/functional_principles_types.ml" 697 21859 21874
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 697 21859 21877 "plugins/funind/functional_principles_types.ml" 697 21859 21886
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/functional_principles_types.ml" 697 21859 21888 "plugins/funind/functional_principles_types.ml" 697 21859 21892
type(
  Term.constr
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 693 21684 21690 "plugins/funind/functional_principles_types.ml" 693 21684 21694
)
"plugins/funind/functional_principles_types.ml" 697 21859 21877 "plugins/funind/functional_principles_types.ml" 697 21859 21892
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 699 21897 21903 "plugins/funind/functional_principles_types.ml" 699 21897 21910
type(
  Names.module_path
)
"plugins/funind/functional_principles_types.ml" 699 21897 21911 "plugins/funind/functional_principles_types.ml" 699 21897 21918
type(
  Names.dir_path
)
"plugins/funind/functional_principles_types.ml" 699 21897 21919 "plugins/funind/functional_principles_types.ml" 699 21897 21920
type(
  Names.label
)
"plugins/funind/functional_principles_types.ml" 699 21897 21903 "plugins/funind/functional_principles_types.ml" 699 21897 21920
type(
  Names.module_path * Names.dir_path * Names.label
)
"plugins/funind/functional_principles_types.ml" 699 21897 21923 "plugins/funind/functional_principles_types.ml" 699 21897 21937
type(
  Names.constant -> Names.module_path * Names.dir_path * Names.label
)
ident(
  ext_ref Names.repr_con
)
"plugins/funind/functional_principles_types.ml" 699 21897 21938 "plugins/funind/functional_principles_types.ml" 699 21897 21947
type(
  Names.constant
)
ident(
  int_ref first_fun "plugins/funind/functional_principles_types.ml" 697 21859 21865 "plugins/funind/functional_principles_types.ml" 697 21859 21874
)
"plugins/funind/functional_principles_types.ml" 699 21897 21923 "plugins/funind/functional_principles_types.ml" 699 21897 21947
call(
  stack
)
type(
  Names.module_path * Names.dir_path * Names.label
)
"plugins/funind/functional_principles_types.ml" 700 21951 21957 "plugins/funind/functional_principles_types.ml" 700 21951 21969
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 700 21951 21976 "plugins/funind/functional_principles_types.ml" 700 21951 21979
type(
  Names.inductive -> Names.mutual_inductive
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_types.ml" 700 21951 21981 "plugins/funind/functional_principles_types.ml" 700 21951 22000
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/functional_principles_types.ml" 700 21951 22002 "plugins/funind/functional_principles_types.ml" 700 21951 22011
type(
  Names.constant
)
ident(
  int_ref first_fun "plugins/funind/functional_principles_types.ml" 697 21859 21865 "plugins/funind/functional_principles_types.ml" 697 21859 21874
)
"plugins/funind/functional_principles_types.ml" 700 21951 21980 "plugins/funind/functional_principles_types.ml" 700 21951 22012
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/functional_principles_types.ml" 700 21951 21980 "plugins/funind/functional_principles_types.ml" 700 21951 22022
type(
  Names.inductive
)
"plugins/funind/functional_principles_types.ml" 700 21951 21976 "plugins/funind/functional_principles_types.ml" 700 21951 22022
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 700 21951 22028 "plugins/funind/functional_principles_types.ml" 700 21951 22037
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 700 21951 22041 "plugins/funind/functional_principles_types.ml" 700 21951 22046
type(
  exn -> Names.mutual_inductive
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_types.ml" 700 21951 22047 "plugins/funind/functional_principles_types.ml" 700 21951 22061
type(
  exn
)
"plugins/funind/functional_principles_types.ml" 700 21951 22041 "plugins/funind/functional_principles_types.ml" 700 21951 22061
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 700 21951 21972 "plugins/funind/functional_principles_types.ml" 700 21951 22061
type(
  Names.mutual_inductive
)
"plugins/funind/functional_principles_types.ml" 704 22068 22074 "plugins/funind/functional_principles_types.ml" 704 22068 22097
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 704 22068 22100 "plugins/funind/functional_principles_types.ml" 704 22068 22117
type(
  Names.module_path ->
  Names.dir_path -> Names.constant -> (Names.constant * int) array
)
ident(
  int_ref get_funs_constant "plugins/funind/functional_principles_types.ml" 435 14355 14359 "plugins/funind/functional_principles_types.ml" 435 14355 14376
)
"plugins/funind/functional_principles_types.ml" 704 22068 22118 "plugins/funind/functional_principles_types.ml" 704 22068 22125
type(
  Names.module_path
)
ident(
  int_ref funs_mp "plugins/funind/functional_principles_types.ml" 699 21897 21903 "plugins/funind/functional_principles_types.ml" 699 21897 21910
)
"plugins/funind/functional_principles_types.ml" 704 22068 22126 "plugins/funind/functional_principles_types.ml" 704 22068 22133
type(
  Names.dir_path
)
ident(
  int_ref funs_dp "plugins/funind/functional_principles_types.ml" 699 21897 21911 "plugins/funind/functional_principles_types.ml" 699 21897 21918
)
"plugins/funind/functional_principles_types.ml" 704 22068 22134 "plugins/funind/functional_principles_types.ml" 704 22068 22143
type(
  Names.constant
)
ident(
  int_ref first_fun "plugins/funind/functional_principles_types.ml" 697 21859 21865 "plugins/funind/functional_principles_types.ml" 697 21859 21874
)
"plugins/funind/functional_principles_types.ml" 704 22068 22100 "plugins/funind/functional_principles_types.ml" 704 22068 22143
call(
  stack
)
type(
  (Names.constant * int) array
)
"plugins/funind/functional_principles_types.ml" 705 22147 22153 "plugins/funind/functional_principles_types.ml" 705 22147 22168
type(
  Names.constant array
)
"plugins/funind/functional_principles_types.ml" 705 22147 22171 "plugins/funind/functional_principles_types.ml" 705 22147 22180
type(
  (Names.constant * int -> Names.constant) ->
  (Names.constant * int) array -> Names.constant array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_types.ml" 705 22147 22181 "plugins/funind/functional_principles_types.ml" 705 22147 22184
type(
  Names.constant * int -> Names.constant
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_types.ml" 705 22147 22185 "plugins/funind/functional_principles_types.ml" 705 22147 22208
type(
  (Names.constant * int) array
)
ident(
  int_ref this_block_funs_indexes "plugins/funind/functional_principles_types.ml" 704 22068 22074 "plugins/funind/functional_principles_types.ml" 704 22068 22097
)
"plugins/funind/functional_principles_types.ml" 705 22147 22171 "plugins/funind/functional_principles_types.ml" 705 22147 22208
call(
  stack
)
type(
  Names.constant array
)
"plugins/funind/functional_principles_types.ml" 706 22212 22218 "plugins/funind/functional_principles_types.ml" 706 22212 22227
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 706 22212 22230 "plugins/funind/functional_principles_types.ml" 706 22212 22236
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 707 22240 22246 "plugins/funind/functional_principles_types.ml" 707 22240 22258
type(
  int
)
"plugins/funind/functional_principles_types.ml" 708 22261 22269 "plugins/funind/functional_principles_types.ml" 708 22261 22292
type(
  (Names.constant * int) list
)
"plugins/funind/functional_principles_types.ml" 708 22261 22295 "plugins/funind/functional_principles_types.ml" 708 22261 22308
type(
  (Names.constant * int) array -> (Names.constant * int) list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/functional_principles_types.ml" 708 22261 22309 "plugins/funind/functional_principles_types.ml" 708 22261 22332
type(
  (Names.constant * int) array
)
ident(
  int_ref this_block_funs_indexes "plugins/funind/functional_principles_types.ml" 704 22068 22074 "plugins/funind/functional_principles_types.ml" 704 22068 22097
)
"plugins/funind/functional_principles_types.ml" 708 22261 22295 "plugins/funind/functional_principles_types.ml" 708 22261 22332
call(
  stack
)
type(
  (Names.constant * int) list
)
"plugins/funind/functional_principles_types.ml" 709 22336 22340 "plugins/funind/functional_principles_types.ml" 709 22336 22350
type(
  Names.constant -> (Names.constant * int) list -> int
)
ident(
  ext_ref List.assoc
)
"plugins/funind/functional_principles_types.ml" 709 22336 22352 "plugins/funind/functional_principles_types.ml" 709 22336 22361
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/functional_principles_types.ml" 709 22336 22362 "plugins/funind/functional_principles_types.ml" 709 22336 22366
type(
  Term.constr
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 693 21684 21690 "plugins/funind/functional_principles_types.ml" 693 21684 21694
)
"plugins/funind/functional_principles_types.ml" 709 22336 22351 "plugins/funind/functional_principles_types.ml" 709 22336 22367
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 709 22336 22368 "plugins/funind/functional_principles_types.ml" 709 22336 22391
type(
  (Names.constant * int) list
)
ident(
  int_ref this_block_funs_indexes "plugins/funind/functional_principles_types.ml" 708 22261 22269 "plugins/funind/functional_principles_types.ml" 708 22261 22292
)
"plugins/funind/functional_principles_types.ml" 709 22336 22340 "plugins/funind/functional_principles_types.ml" 709 22336 22391
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_types.ml" 708 22261 22265 "plugins/funind/functional_principles_types.ml" 709 22336 22391
type(
  int
)
"plugins/funind/functional_principles_types.ml" 711 22397 22403 "plugins/funind/functional_principles_types.ml" 711 22397 22410
type(
  (Names.mutual_inductive * int) * Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 712 22413 22419 "plugins/funind/functional_principles_types.ml" 712 22413 22422
type(
  Names.mutual_inductive * int
)
"plugins/funind/functional_principles_types.ml" 712 22413 22425 "plugins/funind/functional_principles_types.ml" 712 22413 22437
type(
  Names.mutual_inductive
)
ident(
  int_ref first_fun_kn "plugins/funind/functional_principles_types.ml" 700 21951 21957 "plugins/funind/functional_principles_types.ml" 700 21951 21969
)
"plugins/funind/functional_principles_types.ml" 712 22413 22438 "plugins/funind/functional_principles_types.ml" 712 22413 22450
type(
  int
)
ident(
  int_ref funs_indexes "plugins/funind/functional_principles_types.ml" 707 22240 22246 "plugins/funind/functional_principles_types.ml" 707 22240 22258
)
"plugins/funind/functional_principles_types.ml" 712 22413 22425 "plugins/funind/functional_principles_types.ml" 712 22413 22450
type(
  Names.mutual_inductive * int
)
"plugins/funind/functional_principles_types.ml" 713 22454 22456 "plugins/funind/functional_principles_types.ml" 713 22454 22459
type(
  Names.mutual_inductive * int
)
ident(
  int_ref ind "plugins/funind/functional_principles_types.ml" 712 22413 22419 "plugins/funind/functional_principles_types.ml" 712 22413 22422
)
"plugins/funind/functional_principles_types.ml" 713 22454 22460 "plugins/funind/functional_principles_types.ml" 713 22454 22469
type(
  Term.sorts_family
)
ident(
  int_ref prop_sort "plugins/funind/functional_principles_types.ml" 706 22212 22218 "plugins/funind/functional_principles_types.ml" 706 22212 22227
)
"plugins/funind/functional_principles_types.ml" 713 22454 22456 "plugins/funind/functional_principles_types.ml" 713 22454 22469
type(
  (Names.mutual_inductive * int) * Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 712 22413 22415 "plugins/funind/functional_principles_types.ml" 713 22454 22469
type(
  (Names.mutual_inductive * int) * Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 715 22475 22481 "plugins/funind/functional_principles_types.ml" 715 22475 22492
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 715 22475 22497 "plugins/funind/functional_principles_types.ml" 715 22475 22511
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.types
)
ident(
  ext_ref Typing.type_of
)
"plugins/funind/functional_principles_types.ml" 715 22475 22512 "plugins/funind/functional_principles_types.ml" 715 22475 22515
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 688 21547 21553 "plugins/funind/functional_principles_types.ml" 688 21547 21556
)
"plugins/funind/functional_principles_types.ml" 715 22475 22516 "plugins/funind/functional_principles_types.ml" 715 22475 22521
type(
  Evd.evar_map
)
ident(
  int_ref sigma "plugins/funind/functional_principles_types.ml" 689 21573 21579 "plugins/funind/functional_principles_types.ml" 689 21573 21584
)
"plugins/funind/functional_principles_types.ml" 715 22475 22496 "plugins/funind/functional_principles_types.ml" 715 22475 22523
type(
  Term.constr -> Term.types
)
"plugins/funind/functional_principles_types.ml" 715 22475 22531 "plugins/funind/functional_principles_types.ml" 715 22475 22534
type(
  Names.inductive
)
ident(
  def ind "plugins/funind/functional_principles_types.ml" 715 22475 22542 "plugins/funind/functional_principles_types.ml" 715 22475 22600
)
"plugins/funind/functional_principles_types.ml" 715 22475 22535 "plugins/funind/functional_principles_types.ml" 715 22475 22537
type(
  Term.sorts_family
)
ident(
  def sf "plugins/funind/functional_principles_types.ml" 715 22475 22542 "plugins/funind/functional_principles_types.ml" 715 22475 22600
)
"plugins/funind/functional_principles_types.ml" 715 22475 22530 "plugins/funind/functional_principles_types.ml" 715 22475 22538
type(
  Names.inductive * Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 715 22475 22542 "plugins/funind/functional_principles_types.ml" 715 22475 22583
type(
  Environ.env ->
  Evd.evar_map -> Names.inductive -> Term.sorts_family -> Term.constr
)
ident(
  ext_ref Indrec.build_case_analysis_scheme_default
)
"plugins/funind/functional_principles_types.ml" 715 22475 22584 "plugins/funind/functional_principles_types.ml" 715 22475 22587
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_types.ml" 688 21547 21553 "plugins/funind/functional_principles_types.ml" 688 21547 21556
)
"plugins/funind/functional_principles_types.ml" 715 22475 22588 "plugins/funind/functional_principles_types.ml" 715 22475 22593
type(
  Evd.evar_map
)
ident(
  int_ref sigma "plugins/funind/functional_principles_types.ml" 689 21573 21579 "plugins/funind/functional_principles_types.ml" 689 21573 21584
)
"plugins/funind/functional_principles_types.ml" 715 22475 22594 "plugins/funind/functional_principles_types.ml" 715 22475 22597
type(
  Names.inductive
)
ident(
  int_ref ind "plugins/funind/functional_principles_types.ml" 715 22475 22531 "plugins/funind/functional_principles_types.ml" 715 22475 22534
)
"plugins/funind/functional_principles_types.ml" 715 22475 22598 "plugins/funind/functional_principles_types.ml" 715 22475 22600
type(
  Term.sorts_family
)
ident(
  int_ref sf "plugins/funind/functional_principles_types.ml" 715 22475 22535 "plugins/funind/functional_principles_types.ml" 715 22475 22537
)
"plugins/funind/functional_principles_types.ml" 715 22475 22542 "plugins/funind/functional_principles_types.ml" 715 22475 22600
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 715 22475 22525 "plugins/funind/functional_principles_types.ml" 715 22475 22601
type(
  Names.inductive * Term.sorts_family -> Term.constr
)
"plugins/funind/functional_principles_types.ml" 715 22475 22603 "plugins/funind/functional_principles_types.ml" 715 22475 22610
type(
  Names.inductive * Term.sorts_family
)
ident(
  int_ref ind_fun "plugins/funind/functional_principles_types.ml" 711 22397 22403 "plugins/funind/functional_principles_types.ml" 711 22397 22410
)
"plugins/funind/functional_principles_types.ml" 715 22475 22524 "plugins/funind/functional_principles_types.ml" 715 22475 22611
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_types.ml" 715 22475 22496 "plugins/funind/functional_principles_types.ml" 715 22475 22611
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_types.ml" 716 22615 22621 "plugins/funind/functional_principles_types.ml" 716 22615 22626
type(
  Term.sorts
)
"plugins/funind/functional_principles_types.ml" 717 22629 22639 "plugins/funind/functional_principles_types.ml" 717 22629 22640
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 717 22629 22641 "plugins/funind/functional_principles_types.ml" 717 22629 22642
type(
  Libnames.reference
)
"plugins/funind/functional_principles_types.ml" 717 22629 22643 "plugins/funind/functional_principles_types.ml" 717 22629 22644
type(
  Rawterm.rawsort
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 718 22649 22656 "plugins/funind/functional_principles_types.ml" 718 22649 22720
)
"plugins/funind/functional_principles_types.ml" 717 22629 22638 "plugins/funind/functional_principles_types.ml" 717 22629 22645
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 718 22649 22656 "plugins/funind/functional_principles_types.ml" 718 22649 22682
type(
  Term.sorts_family -> Term.sorts
)
ident(
  ext_ref Termops.new_sort_in_family
)
"plugins/funind/functional_principles_types.ml" 718 22649 22684 "plugins/funind/functional_principles_types.ml" 718 22649 22717
type(
  Rawterm.rawsort -> Term.sorts_family
)
ident(
  ext_ref Pretyping.interp_elimination_sort
)
"plugins/funind/functional_principles_types.ml" 718 22649 22718 "plugins/funind/functional_principles_types.ml" 718 22649 22719
type(
  Rawterm.rawsort
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 717 22629 22643 "plugins/funind/functional_principles_types.ml" 717 22629 22644
)
"plugins/funind/functional_principles_types.ml" 718 22649 22683 "plugins/funind/functional_principles_types.ml" 718 22649 22720
type(
  Term.sorts_family
)
"plugins/funind/functional_principles_types.ml" 718 22649 22656 "plugins/funind/functional_principles_types.ml" 718 22649 22720
type(
  Term.sorts
)
"plugins/funind/functional_principles_types.ml" 717 22629 22633 "plugins/funind/functional_principles_types.ml" 719 22721 22726
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort -> Term.sorts
)
"plugins/funind/functional_principles_types.ml" 720 22727 22733 "plugins/funind/functional_principles_types.ml" 720 22727 22735
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
ident(
  int_ref fa "plugins/funind/functional_principles_types.ml" 687 21520 21542 "plugins/funind/functional_principles_types.ml" 687 21520 21544
)
"plugins/funind/functional_principles_types.ml" 717 22629 22633 "plugins/funind/functional_principles_types.ml" 720 22727 22735
call(
  stack
)
type(
  Term.sorts
)
"plugins/funind/functional_principles_types.ml" 722 22741 22747 "plugins/funind/functional_principles_types.ml" 722 22741 22757
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 722 22741 22767 "plugins/funind/functional_principles_types.ml" 722 22741 22768
type(
  Names.identifier
)
ident(
  def x "plugins/funind/functional_principles_types.ml" 722 22741 22777 "plugins/funind/functional_principles_types.ml" 722 22741 22778
)
"plugins/funind/functional_principles_types.ml" 722 22741 22769 "plugins/funind/functional_principles_types.ml" 722 22741 22770
type(
  Libnames.reference
)
"plugins/funind/functional_principles_types.ml" 722 22741 22771 "plugins/funind/functional_principles_types.ml" 722 22741 22772
type(
  Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 722 22741 22766 "plugins/funind/functional_principles_types.ml" 722 22741 22773
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
"plugins/funind/functional_principles_types.ml" 722 22741 22777 "plugins/funind/functional_principles_types.ml" 722 22741 22778
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/functional_principles_types.ml" 722 22741 22767 "plugins/funind/functional_principles_types.ml" 722 22741 22768
)
"plugins/funind/functional_principles_types.ml" 722 22741 22761 "plugins/funind/functional_principles_types.ml" 722 22741 22779
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort -> Names.identifier
)
"plugins/funind/functional_principles_types.ml" 722 22741 22780 "plugins/funind/functional_principles_types.ml" 722 22741 22782
type(
  Names.identifier * Libnames.reference * Rawterm.rawsort
)
ident(
  int_ref fa "plugins/funind/functional_principles_types.ml" 687 21520 21542 "plugins/funind/functional_principles_types.ml" 687 21520 21544
)
"plugins/funind/functional_principles_types.ml" 722 22741 22761 "plugins/funind/functional_principles_types.ml" 722 22741 22782
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_types.ml" 723 22786 22792 "plugins/funind/functional_principles_types.ml" 723 22786 22793
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 728 23038 23042 "plugins/funind/functional_principles_types.ml" 728 23038 23071
type(
  bool ->
  Term.types ->
  Term.sorts array option ->
  Names.identifier option ->
  Names.constant array ->
  int -> (Term.constr array -> int -> Tacmach.tactic) -> unit
)
ident(
  int_ref generate_functional_principle "plugins/funind/functional_principles_types.ml" 355 12126 12130 "plugins/funind/functional_principles_types.ml" 355 12126 12159
)
"plugins/funind/functional_principles_types.ml" 729 23072 23078 "plugins/funind/functional_principles_types.ml" 729 23072 23083
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 730 23084 23090 "plugins/funind/functional_principles_types.ml" 730 23084 23101
type(
  Term.types
)
ident(
  int_ref scheme_type "plugins/funind/functional_principles_types.ml" 715 22475 22481 "plugins/funind/functional_principles_types.ml" 715 22475 22492
)
"plugins/funind/functional_principles_types.ml" 731 23102 23117 "plugins/funind/functional_principles_types.ml" 731 23102 23122
type(
  Term.sorts
)
ident(
  int_ref sorts "plugins/funind/functional_principles_types.ml" 716 22615 22621 "plugins/funind/functional_principles_types.ml" 716 22615 22626
)
"plugins/funind/functional_principles_types.ml" 731 23102 23114 "plugins/funind/functional_principles_types.ml" 731 23102 23125
type(
  Term.sorts array
)
"plugins/funind/functional_principles_types.ml" 731 23102 23108 "plugins/funind/functional_principles_types.ml" 731 23102 23126
type(
  Term.sorts array option
)
"plugins/funind/functional_principles_types.ml" 732 23127 23139 "plugins/funind/functional_principles_types.ml" 732 23127 23149
type(
  Names.identifier
)
ident(
  int_ref princ_name "plugins/funind/functional_principles_types.ml" 722 22741 22747 "plugins/funind/functional_principles_types.ml" 722 22741 22757
)
"plugins/funind/functional_principles_types.ml" 732 23127 23133 "plugins/funind/functional_principles_types.ml" 732 23127 23150
type(
  Names.identifier option
)
"plugins/funind/functional_principles_types.ml" 733 23151 23157 "plugins/funind/functional_principles_types.ml" 733 23151 23172
type(
  Names.constant array
)
ident(
  int_ref this_block_funs "plugins/funind/functional_principles_types.ml" 705 22147 22153 "plugins/funind/functional_principles_types.ml" 705 22147 22168
)
"plugins/funind/functional_principles_types.ml" 734 23173 23179 "plugins/funind/functional_principles_types.ml" 734 23173 23180
type(
  int
)
"plugins/funind/functional_principles_types.ml" 735 23181 23188 "plugins/funind/functional_principles_types.ml" 735 23181 23210
type(
  bool ->
  int -> Names.constant array -> Term.constr array -> int -> Tacmach.tactic
)
ident(
  ext_ref Functional_principles_proofs.prove_princ_for_struct
)
"plugins/funind/functional_principles_types.ml" 735 23181 23211 "plugins/funind/functional_principles_types.ml" 735 23181 23216
type(
  bool
)
"plugins/funind/functional_principles_types.ml" 735 23181 23217 "plugins/funind/functional_principles_types.ml" 735 23181 23218
type(
  int
)
"plugins/funind/functional_principles_types.ml" 735 23181 23221 "plugins/funind/functional_principles_types.ml" 735 23181 23230
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/functional_principles_types.ml" 735 23181 23231 "plugins/funind/functional_principles_types.ml" 735 23181 23235
type(
  Term.constr
)
ident(
  int_ref funs "plugins/funind/functional_principles_types.ml" 693 21684 21690 "plugins/funind/functional_principles_types.ml" 693 21684 21694
)
"plugins/funind/functional_principles_types.ml" 735 23181 23221 "plugins/funind/functional_principles_types.ml" 735 23181 23235
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_types.ml" 735 23181 23219 "plugins/funind/functional_principles_types.ml" 735 23181 23237
type(
  Names.constant array
)
"plugins/funind/functional_principles_types.ml" 735 23181 23187 "plugins/funind/functional_principles_types.ml" 735 23181 23238
call(
  stack
)
type(
  Term.constr array -> int -> Tacmach.tactic
)
"plugins/funind/functional_principles_types.ml" 728 23038 23042 "plugins/funind/functional_principles_types.ml" 735 23181 23238
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 737 23244 23246 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 723 22786 22788 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 722 22741 22743 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 716 22615 22617 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 715 22475 22477 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 711 22397 22399 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 707 22240 22242 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 706 22212 22214 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 705 22147 22149 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 704 22068 22070 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 700 21951 21953 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 699 21897 21899 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 697 21859 21861 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 693 21684 21686 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
"plugins/funind/functional_principles_types.ml" 688 21547 21549 "plugins/funind/functional_principles_types.ml" 737 23244 23248
type(
  unit
)
