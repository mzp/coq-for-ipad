"plugins/funind/invfun.ml" 25 767 771 "plugins/funind/invfun.ml" 25 767 781
type(
  ('a -> Pp.std_ppcmds) ->
  'b * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds
)
ident(
  def pr_binding "plugins/funind/invfun.ml" 30 985 985 --
)
"plugins/funind/invfun.ml" 25 767 782 "plugins/funind/invfun.ml" 25 767 785
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/invfun.ml" 26 789 791 "plugins/funind/invfun.ml" 28 899 983
)
"plugins/funind/invfun.ml" 27 800 806 "plugins/funind/invfun.ml" 27 800 809
type(
  'b
)
ident(
  def loc "plugins/funind/invfun.ml" 27 800 837 "plugins/funind/invfun.ml" 27 800 898
)
"plugins/funind/invfun.ml" 27 800 828 "plugins/funind/invfun.ml" 27 800 830
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 27 800 837 "plugins/funind/invfun.ml" 27 800 898
)
"plugins/funind/invfun.ml" 27 800 811 "plugins/funind/invfun.ml" 27 800 830
type(
  Rawterm.quantified_hypothesis
)
"plugins/funind/invfun.ml" 27 800 832 "plugins/funind/invfun.ml" 27 800 833
type(
  'a
)
ident(
  def c "plugins/funind/invfun.ml" 27 800 837 "plugins/funind/invfun.ml" 27 800 898
)
"plugins/funind/invfun.ml" 27 800 806 "plugins/funind/invfun.ml" 27 800 833
type(
  'b * Rawterm.quantified_hypothesis * 'a
)
"plugins/funind/invfun.ml" 27 800 837 "plugins/funind/invfun.ml" 27 800 840
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.hov
)
"plugins/funind/invfun.ml" 27 800 841 "plugins/funind/invfun.ml" 27 800 842
type(
  int
)
"plugins/funind/invfun.ml" 27 800 844 "plugins/funind/invfun.ml" 27 800 858
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_id
)
"plugins/funind/invfun.ml" 27 800 859 "plugins/funind/invfun.ml" 27 800 861
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 27 800 828 "plugins/funind/invfun.ml" 27 800 830
)
"plugins/funind/invfun.ml" 27 800 844 "plugins/funind/invfun.ml" 27 800 861
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 27 800 862 "plugins/funind/invfun.ml" 27 800 864
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 27 800 865 "plugins/funind/invfun.ml" 27 800 868
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 27 800 869 "plugins/funind/invfun.ml" 27 800 875
type(
  string
)
"plugins/funind/invfun.ml" 27 800 865 "plugins/funind/invfun.ml" 27 800 875
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 27 800 844 "plugins/funind/invfun.ml" 27 800 875
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 27 800 876 "plugins/funind/invfun.ml" 27 800 878
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 27 800 879 "plugins/funind/invfun.ml" 27 800 885
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.cut
)
"plugins/funind/invfun.ml" 27 800 886 "plugins/funind/invfun.ml" 27 800 888
type(
  unit
)
"plugins/funind/invfun.ml" 27 800 879 "plugins/funind/invfun.ml" 27 800 888
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 27 800 844 "plugins/funind/invfun.ml" 27 800 888
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 27 800 889 "plugins/funind/invfun.ml" 27 800 891
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 27 800 892 "plugins/funind/invfun.ml" 27 800 895
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/invfun.ml" 25 767 782 "plugins/funind/invfun.ml" 25 767 785
)
"plugins/funind/invfun.ml" 27 800 896 "plugins/funind/invfun.ml" 27 800 897
type(
  'a
)
ident(
  int_ref c "plugins/funind/invfun.ml" 27 800 832 "plugins/funind/invfun.ml" 27 800 833
)
"plugins/funind/invfun.ml" 27 800 892 "plugins/funind/invfun.ml" 27 800 897
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 27 800 843 "plugins/funind/invfun.ml" 27 800 898
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 27 800 837 "plugins/funind/invfun.ml" 27 800 898
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 28 899 905 "plugins/funind/invfun.ml" 28 899 908
type(
  'b
)
ident(
  def loc "plugins/funind/invfun.ml" 28 899 934 "plugins/funind/invfun.ml" 28 899 983
)
"plugins/funind/invfun.ml" 28 899 926 "plugins/funind/invfun.ml" 28 899 927
type(
  int
)
ident(
  def n "plugins/funind/invfun.ml" 28 899 934 "plugins/funind/invfun.ml" 28 899 983
)
"plugins/funind/invfun.ml" 28 899 910 "plugins/funind/invfun.ml" 28 899 927
type(
  Rawterm.quantified_hypothesis
)
"plugins/funind/invfun.ml" 28 899 929 "plugins/funind/invfun.ml" 28 899 930
type(
  'a
)
ident(
  def c "plugins/funind/invfun.ml" 28 899 934 "plugins/funind/invfun.ml" 28 899 983
)
"plugins/funind/invfun.ml" 28 899 905 "plugins/funind/invfun.ml" 28 899 930
type(
  'b * Rawterm.quantified_hypothesis * 'a
)
"plugins/funind/invfun.ml" 28 899 934 "plugins/funind/invfun.ml" 28 899 937
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.hov
)
"plugins/funind/invfun.ml" 28 899 938 "plugins/funind/invfun.ml" 28 899 939
type(
  int
)
"plugins/funind/invfun.ml" 28 899 941 "plugins/funind/invfun.ml" 28 899 944
type(
  int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.int
)
"plugins/funind/invfun.ml" 28 899 945 "plugins/funind/invfun.ml" 28 899 946
type(
  int
)
ident(
  int_ref n "plugins/funind/invfun.ml" 28 899 926 "plugins/funind/invfun.ml" 28 899 927
)
"plugins/funind/invfun.ml" 28 899 941 "plugins/funind/invfun.ml" 28 899 946
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 28 899 947 "plugins/funind/invfun.ml" 28 899 949
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 28 899 950 "plugins/funind/invfun.ml" 28 899 953
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 28 899 954 "plugins/funind/invfun.ml" 28 899 960
type(
  string
)
"plugins/funind/invfun.ml" 28 899 950 "plugins/funind/invfun.ml" 28 899 960
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 28 899 941 "plugins/funind/invfun.ml" 28 899 960
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 28 899 961 "plugins/funind/invfun.ml" 28 899 963
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 28 899 964 "plugins/funind/invfun.ml" 28 899 970
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.cut
)
"plugins/funind/invfun.ml" 28 899 971 "plugins/funind/invfun.ml" 28 899 973
type(
  unit
)
"plugins/funind/invfun.ml" 28 899 964 "plugins/funind/invfun.ml" 28 899 973
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 28 899 941 "plugins/funind/invfun.ml" 28 899 973
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 28 899 974 "plugins/funind/invfun.ml" 28 899 976
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 28 899 977 "plugins/funind/invfun.ml" 28 899 980
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/invfun.ml" 25 767 782 "plugins/funind/invfun.ml" 25 767 785
)
"plugins/funind/invfun.ml" 28 899 981 "plugins/funind/invfun.ml" 28 899 982
type(
  'a
)
ident(
  int_ref c "plugins/funind/invfun.ml" 28 899 929 "plugins/funind/invfun.ml" 28 899 930
)
"plugins/funind/invfun.ml" 28 899 977 "plugins/funind/invfun.ml" 28 899 982
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 28 899 940 "plugins/funind/invfun.ml" 28 899 983
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 28 899 934 "plugins/funind/invfun.ml" 28 899 983
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 26 789 791 "plugins/funind/invfun.ml" 28 899 983
type(
  'b * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 30 985 989 "plugins/funind/invfun.ml" 30 985 1000
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  def pr_bindings "plugins/funind/invfun.ml" 40 1336 1336 --
)
"plugins/funind/invfun.ml" 30 985 1001 "plugins/funind/invfun.ml" 30 985 1004
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/invfun.ml" 30 985 1005 "plugins/funind/invfun.ml" 37 1302 1333
)
"plugins/funind/invfun.ml" 30 985 1005 "plugins/funind/invfun.ml" 30 985 1009
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prlc "plugins/funind/invfun.ml" 30 985 1012 "plugins/funind/invfun.ml" 37 1302 1333
)
"plugins/funind/invfun.ml" 31 1021 1050 "plugins/funind/invfun.ml" 31 1021 1051
type(
  'a list
)
ident(
  def l "plugins/funind/invfun.ml" 32 1055 1061 "plugins/funind/invfun.ml" 33 1101 1137
)
"plugins/funind/invfun.ml" 31 1021 1025 "plugins/funind/invfun.ml" 31 1021 1051
type(
  'a Rawterm.bindings
)
"plugins/funind/invfun.ml" 32 1055 1061 "plugins/funind/invfun.ml" 32 1055 1064
type(
  int * int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.brk
)
"plugins/funind/invfun.ml" 32 1055 1066 "plugins/funind/invfun.ml" 32 1055 1067
type(
  int
)
"plugins/funind/invfun.ml" 32 1055 1068 "plugins/funind/invfun.ml" 32 1055 1069
type(
  int
)
"plugins/funind/invfun.ml" 32 1055 1065 "plugins/funind/invfun.ml" 32 1055 1070
type(
  int * int
)
"plugins/funind/invfun.ml" 32 1055 1061 "plugins/funind/invfun.ml" 32 1055 1070
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 32 1055 1071 "plugins/funind/invfun.ml" 32 1055 1073
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 32 1055 1074 "plugins/funind/invfun.ml" 32 1055 1077
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 32 1055 1078 "plugins/funind/invfun.ml" 32 1055 1084
type(
  string
)
"plugins/funind/invfun.ml" 32 1055 1074 "plugins/funind/invfun.ml" 32 1055 1084
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 32 1055 1061 "plugins/funind/invfun.ml" 32 1055 1084
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 32 1055 1085 "plugins/funind/invfun.ml" 32 1055 1087
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 32 1055 1088 "plugins/funind/invfun.ml" 32 1055 1091
type(
  int * int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.brk
)
"plugins/funind/invfun.ml" 32 1055 1093 "plugins/funind/invfun.ml" 32 1055 1094
type(
  int
)
"plugins/funind/invfun.ml" 32 1055 1095 "plugins/funind/invfun.ml" 32 1055 1096
type(
  int
)
"plugins/funind/invfun.ml" 32 1055 1092 "plugins/funind/invfun.ml" 32 1055 1097
type(
  int * int
)
"plugins/funind/invfun.ml" 32 1055 1088 "plugins/funind/invfun.ml" 32 1055 1097
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 32 1055 1061 "plugins/funind/invfun.ml" 32 1055 1097
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 32 1055 1098 "plugins/funind/invfun.ml" 32 1055 1100
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 33 1101 1107 "plugins/funind/invfun.ml" 33 1101 1127
type(
  (unit -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a list -> Pp.std_ppcmds
)
ident(
  ext_ref Util.prlist_with_sep
)
"plugins/funind/invfun.ml" 33 1101 1128 "plugins/funind/invfun.ml" 33 1101 1131
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/invfun.ml" 33 1101 1132 "plugins/funind/invfun.ml" 33 1101 1135
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/invfun.ml" 30 985 1001 "plugins/funind/invfun.ml" 30 985 1004
)
"plugins/funind/invfun.ml" 33 1101 1136 "plugins/funind/invfun.ml" 33 1101 1137
type(
  'a list
)
ident(
  int_ref l "plugins/funind/invfun.ml" 31 1021 1050 "plugins/funind/invfun.ml" 31 1021 1051
)
"plugins/funind/invfun.ml" 33 1101 1107 "plugins/funind/invfun.ml" 33 1101 1137
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 32 1055 1061 "plugins/funind/invfun.ml" 33 1101 1137
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 34 1138 1167 "plugins/funind/invfun.ml" 34 1138 1168
type(
  'a Rawterm.explicit_bindings
)
ident(
  def l "plugins/funind/invfun.ml" 35 1172 1178 "plugins/funind/invfun.ml" 36 1218 1301
)
"plugins/funind/invfun.ml" 34 1138 1142 "plugins/funind/invfun.ml" 34 1138 1168
type(
  'a Rawterm.bindings
)
"plugins/funind/invfun.ml" 35 1172 1178 "plugins/funind/invfun.ml" 35 1172 1181
type(
  int * int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.brk
)
"plugins/funind/invfun.ml" 35 1172 1183 "plugins/funind/invfun.ml" 35 1172 1184
type(
  int
)
"plugins/funind/invfun.ml" 35 1172 1185 "plugins/funind/invfun.ml" 35 1172 1186
type(
  int
)
"plugins/funind/invfun.ml" 35 1172 1182 "plugins/funind/invfun.ml" 35 1172 1187
type(
  int * int
)
"plugins/funind/invfun.ml" 35 1172 1178 "plugins/funind/invfun.ml" 35 1172 1187
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 35 1172 1188 "plugins/funind/invfun.ml" 35 1172 1190
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 35 1172 1191 "plugins/funind/invfun.ml" 35 1172 1194
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 35 1172 1195 "plugins/funind/invfun.ml" 35 1172 1201
type(
  string
)
"plugins/funind/invfun.ml" 35 1172 1191 "plugins/funind/invfun.ml" 35 1172 1201
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 35 1172 1178 "plugins/funind/invfun.ml" 35 1172 1201
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 35 1172 1202 "plugins/funind/invfun.ml" 35 1172 1204
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 35 1172 1205 "plugins/funind/invfun.ml" 35 1172 1208
type(
  int * int -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.brk
)
"plugins/funind/invfun.ml" 35 1172 1210 "plugins/funind/invfun.ml" 35 1172 1211
type(
  int
)
"plugins/funind/invfun.ml" 35 1172 1212 "plugins/funind/invfun.ml" 35 1172 1213
type(
  int
)
"plugins/funind/invfun.ml" 35 1172 1209 "plugins/funind/invfun.ml" 35 1172 1214
type(
  int * int
)
"plugins/funind/invfun.ml" 35 1172 1205 "plugins/funind/invfun.ml" 35 1172 1214
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 35 1172 1178 "plugins/funind/invfun.ml" 35 1172 1214
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 35 1172 1215 "plugins/funind/invfun.ml" 35 1172 1217
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 36 1218 1226 "plugins/funind/invfun.ml" 36 1218 1246
type(
  (unit -> Pp.std_ppcmds) ->
  (Util.loc * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds) ->
  'a Rawterm.explicit_bindings -> Pp.std_ppcmds
)
ident(
  ext_ref Util.prlist_with_sep
)
"plugins/funind/invfun.ml" 36 1218 1247 "plugins/funind/invfun.ml" 36 1218 1250
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.spc
)
"plugins/funind/invfun.ml" 36 1218 1256 "plugins/funind/invfun.ml" 36 1218 1257
type(
  Util.loc * Rawterm.quantified_hypothesis * 'a
)
ident(
  def b "plugins/funind/invfun.ml" 36 1218 1261 "plugins/funind/invfun.ml" 36 1218 1298
)
"plugins/funind/invfun.ml" 36 1218 1261 "plugins/funind/invfun.ml" 36 1218 1264
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 36 1218 1264 "plugins/funind/invfun.ml" 36 1218 1267
type(
  string
)
"plugins/funind/invfun.ml" 36 1218 1261 "plugins/funind/invfun.ml" 36 1218 1267
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 36 1218 1268 "plugins/funind/invfun.ml" 36 1218 1270
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 36 1218 1271 "plugins/funind/invfun.ml" 36 1218 1281
type(
  ('a -> Pp.std_ppcmds) ->
  Util.loc * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds
)
ident(
  int_ref pr_binding "plugins/funind/invfun.ml" 25 767 771 "plugins/funind/invfun.ml" 25 767 781
)
"plugins/funind/invfun.ml" 36 1218 1282 "plugins/funind/invfun.ml" 36 1218 1286
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prlc "plugins/funind/invfun.ml" 30 985 1005 "plugins/funind/invfun.ml" 30 985 1009
)
"plugins/funind/invfun.ml" 36 1218 1287 "plugins/funind/invfun.ml" 36 1218 1288
type(
  Util.loc * Rawterm.quantified_hypothesis * 'a
)
ident(
  int_ref b "plugins/funind/invfun.ml" 36 1218 1256 "plugins/funind/invfun.ml" 36 1218 1257
)
"plugins/funind/invfun.ml" 36 1218 1271 "plugins/funind/invfun.ml" 36 1218 1288
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 36 1218 1261 "plugins/funind/invfun.ml" 36 1218 1288
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 36 1218 1289 "plugins/funind/invfun.ml" 36 1218 1291
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 36 1218 1292 "plugins/funind/invfun.ml" 36 1218 1295
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 36 1218 1295 "plugins/funind/invfun.ml" 36 1218 1298
type(
  string
)
"plugins/funind/invfun.ml" 36 1218 1292 "plugins/funind/invfun.ml" 36 1218 1298
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 36 1218 1261 "plugins/funind/invfun.ml" 36 1218 1298
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 36 1218 1251 "plugins/funind/invfun.ml" 36 1218 1299
type(
  Util.loc * Rawterm.quantified_hypothesis * 'a -> Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 36 1218 1300 "plugins/funind/invfun.ml" 36 1218 1301
type(
  'a Rawterm.explicit_bindings
)
ident(
  int_ref l "plugins/funind/invfun.ml" 34 1138 1167 "plugins/funind/invfun.ml" 34 1138 1168
)
"plugins/funind/invfun.ml" 36 1218 1226 "plugins/funind/invfun.ml" 36 1218 1301
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 35 1172 1178 "plugins/funind/invfun.ml" 36 1218 1301
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 37 1302 1306 "plugins/funind/invfun.ml" 37 1302 1324
type(
  'a Rawterm.bindings
)
"plugins/funind/invfun.ml" 37 1302 1328 "plugins/funind/invfun.ml" 37 1302 1330
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/invfun.ml" 37 1302 1331 "plugins/funind/invfun.ml" 37 1302 1333
type(
  unit
)
"plugins/funind/invfun.ml" 37 1302 1328 "plugins/funind/invfun.ml" 37 1302 1333
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 30 985 1012 "plugins/funind/invfun.ml" 37 1302 1333
type(
  'a Rawterm.bindings -> Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 40 1336 1340 "plugins/funind/invfun.ml" 40 1336 1356
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  def pr_with_bindings "plugins/funind/invfun.ml" 45 1420 1420 --
)
"plugins/funind/invfun.ml" 40 1336 1357 "plugins/funind/invfun.ml" 40 1336 1360
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/invfun.ml" 40 1336 1361 "plugins/funind/invfun.ml" 41 1375 1416
)
"plugins/funind/invfun.ml" 40 1336 1361 "plugins/funind/invfun.ml" 40 1336 1365
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prlc "plugins/funind/invfun.ml" 40 1336 1366 "plugins/funind/invfun.ml" 41 1375 1416
)
"plugins/funind/invfun.ml" 40 1336 1367 "plugins/funind/invfun.ml" 40 1336 1368
type(
  'a
)
ident(
  def c "plugins/funind/invfun.ml" 41 1375 1377 "plugins/funind/invfun.ml" 41 1375 1416
)
"plugins/funind/invfun.ml" 40 1336 1369 "plugins/funind/invfun.ml" 40 1336 1371
type(
  'a Rawterm.bindings
)
ident(
  def bl "plugins/funind/invfun.ml" 41 1375 1377 "plugins/funind/invfun.ml" 41 1375 1416
)
"plugins/funind/invfun.ml" 40 1336 1366 "plugins/funind/invfun.ml" 40 1336 1372
type(
  'a * 'a Rawterm.bindings
)
"plugins/funind/invfun.ml" 41 1375 1377 "plugins/funind/invfun.ml" 41 1375 1380
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/invfun.ml" 40 1336 1357 "plugins/funind/invfun.ml" 40 1336 1360
)
"plugins/funind/invfun.ml" 41 1375 1381 "plugins/funind/invfun.ml" 41 1375 1382
type(
  'a
)
ident(
  int_ref c "plugins/funind/invfun.ml" 40 1336 1367 "plugins/funind/invfun.ml" 40 1336 1368
)
"plugins/funind/invfun.ml" 41 1375 1377 "plugins/funind/invfun.ml" 41 1375 1382
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 41 1375 1383 "plugins/funind/invfun.ml" 41 1375 1385
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 41 1375 1386 "plugins/funind/invfun.ml" 41 1375 1388
type(
  int -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.hv
)
"plugins/funind/invfun.ml" 41 1375 1389 "plugins/funind/invfun.ml" 41 1375 1390
type(
  int
)
"plugins/funind/invfun.ml" 41 1375 1392 "plugins/funind/invfun.ml" 41 1375 1403
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  int_ref pr_bindings "plugins/funind/invfun.ml" 30 985 989 "plugins/funind/invfun.ml" 30 985 1000
)
"plugins/funind/invfun.ml" 41 1375 1404 "plugins/funind/invfun.ml" 41 1375 1407
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/invfun.ml" 40 1336 1357 "plugins/funind/invfun.ml" 40 1336 1360
)
"plugins/funind/invfun.ml" 41 1375 1408 "plugins/funind/invfun.ml" 41 1375 1412
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prlc "plugins/funind/invfun.ml" 40 1336 1361 "plugins/funind/invfun.ml" 40 1336 1365
)
"plugins/funind/invfun.ml" 41 1375 1413 "plugins/funind/invfun.ml" 41 1375 1415
type(
  'a Rawterm.bindings
)
ident(
  int_ref bl "plugins/funind/invfun.ml" 40 1336 1369 "plugins/funind/invfun.ml" 40 1336 1371
)
"plugins/funind/invfun.ml" 41 1375 1391 "plugins/funind/invfun.ml" 41 1375 1416
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 41 1375 1386 "plugins/funind/invfun.ml" 41 1375 1416
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 41 1375 1377 "plugins/funind/invfun.ml" 41 1375 1416
call(
  tail
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 45 1420 1424 "plugins/funind/invfun.ml" 45 1420 1446
type(
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  def pr_constr_with_binding "plugins/funind/invfun.ml" 49 1548 1548 --
)
"plugins/funind/invfun.ml" 45 1420 1447 "plugins/funind/invfun.ml" 45 1420 1450
type(
  'a -> Pp.std_ppcmds
)
ident(
  def prc "plugins/funind/invfun.ml" 45 1420 1451 "plugins/funind/invfun.ml" 46 1477 1511
)
"plugins/funind/invfun.ml" 45 1420 1452 "plugins/funind/invfun.ml" 45 1420 1453
type(
  'a
)
ident(
  def c "plugins/funind/invfun.ml" 45 1420 1458 "plugins/funind/invfun.ml" 46 1477 1511
)
"plugins/funind/invfun.ml" 45 1420 1454 "plugins/funind/invfun.ml" 45 1420 1456
type(
  'a Rawterm.bindings
)
ident(
  def bl "plugins/funind/invfun.ml" 45 1420 1458 "plugins/funind/invfun.ml" 46 1477 1511
)
"plugins/funind/invfun.ml" 45 1420 1451 "plugins/funind/invfun.ml" 45 1420 1457
type(
  'a * 'a Rawterm.bindings
)
"plugins/funind/invfun.ml" 46 1477 1479 "plugins/funind/invfun.ml" 46 1477 1495
type(
  ('a -> Pp.std_ppcmds) ->
  ('a -> Pp.std_ppcmds) -> 'a * 'a Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  int_ref pr_with_bindings "plugins/funind/invfun.ml" 40 1336 1340 "plugins/funind/invfun.ml" 40 1336 1356
)
"plugins/funind/invfun.ml" 46 1477 1496 "plugins/funind/invfun.ml" 46 1477 1499
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/invfun.ml" 45 1420 1447 "plugins/funind/invfun.ml" 45 1420 1450
)
"plugins/funind/invfun.ml" 46 1477 1500 "plugins/funind/invfun.ml" 46 1477 1503
type(
  'a -> Pp.std_ppcmds
)
ident(
  int_ref prc "plugins/funind/invfun.ml" 45 1420 1447 "plugins/funind/invfun.ml" 45 1420 1450
)
"plugins/funind/invfun.ml" 46 1477 1506 "plugins/funind/invfun.ml" 46 1477 1507
type(
  'a
)
ident(
  int_ref c "plugins/funind/invfun.ml" 45 1420 1452 "plugins/funind/invfun.ml" 45 1420 1453
)
"plugins/funind/invfun.ml" 46 1477 1508 "plugins/funind/invfun.ml" 46 1477 1510
type(
  'a Rawterm.bindings
)
ident(
  int_ref bl "plugins/funind/invfun.ml" 45 1420 1454 "plugins/funind/invfun.ml" 45 1420 1456
)
"plugins/funind/invfun.ml" 46 1477 1505 "plugins/funind/invfun.ml" 46 1477 1511
type(
  'a * 'a Rawterm.bindings
)
"plugins/funind/invfun.ml" 46 1477 1479 "plugins/funind/invfun.ml" 46 1477 1511
call(
  tail
)
type(
  Pp.std_ppcmds
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 49 1548 1552 "plugins/funind/invfun.ml" 49 1548 1557
type(
  Pp.std_ppcmds -> unit
)
ident(
  def msgnl "plugins/funind/invfun.ml" 51 1570 1570 --
)
"plugins/funind/invfun.ml" 49 1548 1560 "plugins/funind/invfun.ml" 49 1548 1568
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msgnl
)
"plugins/funind/invfun.ml" 51 1570 1574 "plugins/funind/invfun.ml" 51 1570 1581
type(
  Pp.std_ppcmds -> unit
)
ident(
  def observe "plugins/funind/invfun.ml" 56 1640 1640 --
)
"plugins/funind/invfun.ml" 51 1570 1582 "plugins/funind/invfun.ml" 51 1570 1586
type(
  Pp.std_ppcmds
)
ident(
  def strm "plugins/funind/invfun.ml" 52 1589 1591 "plugins/funind/invfun.ml" 54 1629 1638
)
"plugins/funind/invfun.ml" 52 1589 1594 "plugins/funind/invfun.ml" 52 1589 1604
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/invfun.ml" 52 1589 1605 "plugins/funind/invfun.ml" 52 1589 1607
type(
  unit
)
"plugins/funind/invfun.ml" 52 1589 1594 "plugins/funind/invfun.ml" 52 1589 1607
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 53 1608 1615 "plugins/funind/invfun.ml" 53 1608 1623
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msgnl
)
"plugins/funind/invfun.ml" 53 1608 1624 "plugins/funind/invfun.ml" 53 1608 1628
type(
  Pp.std_ppcmds
)
ident(
  int_ref strm "plugins/funind/invfun.ml" 51 1570 1582 "plugins/funind/invfun.ml" 51 1570 1586
)
"plugins/funind/invfun.ml" 53 1608 1615 "plugins/funind/invfun.ml" 53 1608 1628
call(
  tail
)
type(
  unit
)
"plugins/funind/invfun.ml" 54 1629 1636 "plugins/funind/invfun.ml" 54 1629 1638
type(
  unit
)
"plugins/funind/invfun.ml" 52 1589 1591 "plugins/funind/invfun.ml" 54 1629 1638
type(
  unit
)
"plugins/funind/invfun.ml" 56 1640 1644 "plugins/funind/invfun.ml" 56 1640 1654
type(
  Pp.std_ppcmds -> unit
)
ident(
  def observennl "plugins/funind/invfun.ml" 62 1737 1737 --
)
"plugins/funind/invfun.ml" 56 1640 1655 "plugins/funind/invfun.ml" 56 1640 1659
type(
  Pp.std_ppcmds
)
ident(
  def strm "plugins/funind/invfun.ml" 57 1662 1664 "plugins/funind/invfun.ml" 59 1725 1734
)
"plugins/funind/invfun.ml" 57 1662 1667 "plugins/funind/invfun.ml" 57 1662 1677
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/invfun.ml" 57 1662 1678 "plugins/funind/invfun.ml" 57 1662 1680
type(
  unit
)
"plugins/funind/invfun.ml" 57 1662 1667 "plugins/funind/invfun.ml" 57 1662 1680
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 58 1681 1694 "plugins/funind/invfun.ml" 58 1681 1700
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msg
)
"plugins/funind/invfun.ml" 58 1681 1701 "plugins/funind/invfun.ml" 58 1681 1705
type(
  Pp.std_ppcmds
)
ident(
  int_ref strm "plugins/funind/invfun.ml" 56 1640 1655 "plugins/funind/invfun.ml" 56 1640 1659
)
"plugins/funind/invfun.ml" 58 1681 1694 "plugins/funind/invfun.ml" 58 1681 1705
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 58 1681 1706 "plugins/funind/invfun.ml" 58 1681 1717
type(
  unit -> unit
)
ident(
  ext_ref Pp.pp_flush
)
"plugins/funind/invfun.ml" 58 1681 1718 "plugins/funind/invfun.ml" 58 1681 1720
type(
  unit
)
"plugins/funind/invfun.ml" 58 1681 1706 "plugins/funind/invfun.ml" 58 1681 1720
call(
  tail
)
type(
  unit
)
"plugins/funind/invfun.ml" 58 1681 1688 "plugins/funind/invfun.ml" 58 1681 1724
type(
  unit
)
"plugins/funind/invfun.ml" 59 1725 1732 "plugins/funind/invfun.ml" 59 1725 1734
type(
  unit
)
"plugins/funind/invfun.ml" 57 1662 1664 "plugins/funind/invfun.ml" 59 1725 1734
type(
  unit
)
"plugins/funind/invfun.ml" 62 1737 1741 "plugins/funind/invfun.ml" 62 1737 1755
type(
  Pp.std_ppcmds ->
  (Proof_type.goal Tacmach.sigma -> 'a) ->
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def do_observe_tac "plugins/funind/invfun.ml" 72 2085 2085 --
)
"plugins/funind/invfun.ml" 62 1737 1756 "plugins/funind/invfun.ml" 62 1737 1757
type(
  Pp.std_ppcmds
)
ident(
  def s "plugins/funind/invfun.ml" 62 1737 1758 "plugins/funind/invfun.ml" 69 2069 2080
)
"plugins/funind/invfun.ml" 62 1737 1758 "plugins/funind/invfun.ml" 62 1737 1761
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def tac "plugins/funind/invfun.ml" 62 1737 1762 "plugins/funind/invfun.ml" 69 2069 2080
)
"plugins/funind/invfun.ml" 62 1737 1762 "plugins/funind/invfun.ml" 62 1737 1763
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 63 1766 1768 "plugins/funind/invfun.ml" 69 2069 2080
)
"plugins/funind/invfun.ml" 63 1766 1772 "plugins/funind/invfun.ml" 63 1766 1776
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 63 1766 1790 "plugins/funind/invfun.ml" 63 1766 1805
type(
  Proof_type.goal -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_goal
)
"plugins/funind/invfun.ml" 63 1766 1807 "plugins/funind/invfun.ml" 63 1766 1813
type(
  Proof_type.goal Tacmach.sigma -> Proof_type.goal
)
ident(
  ext_ref Tacmach.sig_it
)
"plugins/funind/invfun.ml" 63 1766 1814 "plugins/funind/invfun.ml" 63 1766 1815
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 62 1737 1762 "plugins/funind/invfun.ml" 62 1737 1763
)
"plugins/funind/invfun.ml" 63 1766 1806 "plugins/funind/invfun.ml" 63 1766 1816
call(
  stack
)
type(
  Proof_type.goal
)
"plugins/funind/invfun.ml" 63 1766 1789 "plugins/funind/invfun.ml" 63 1766 1817
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 63 1766 1823 "plugins/funind/invfun.ml" 63 1766 1824
type(
  exn
)
"plugins/funind/invfun.ml" 63 1766 1828 "plugins/funind/invfun.ml" 63 1766 1840
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 63 1766 1779 "plugins/funind/invfun.ml" 63 1766 1844
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 65 1854 1862 "plugins/funind/invfun.ml" 65 1854 1863
type(
  'a
)
ident(
  def v "plugins/funind/invfun.ml" 65 1854 1875 "plugins/funind/invfun.ml" 65 1854 1935
)
"plugins/funind/invfun.ml" 65 1854 1866 "plugins/funind/invfun.ml" 65 1854 1869
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref tac "plugins/funind/invfun.ml" 62 1737 1758 "plugins/funind/invfun.ml" 62 1737 1761
)
"plugins/funind/invfun.ml" 65 1854 1870 "plugins/funind/invfun.ml" 65 1854 1871
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 62 1737 1762 "plugins/funind/invfun.ml" 62 1737 1763
)
"plugins/funind/invfun.ml" 65 1854 1866 "plugins/funind/invfun.ml" 65 1854 1871
call(
  stack
)
type(
  'a
)
"plugins/funind/invfun.ml" 65 1854 1875 "plugins/funind/invfun.ml" 65 1854 1880
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref msgnl "plugins/funind/invfun.ml" 49 1548 1552 "plugins/funind/invfun.ml" 49 1548 1557
)
"plugins/funind/invfun.ml" 65 1854 1882 "plugins/funind/invfun.ml" 65 1854 1886
type(
  Pp.std_ppcmds
)
ident(
  int_ref goal "plugins/funind/invfun.ml" 63 1766 1772 "plugins/funind/invfun.ml" 63 1766 1776
)
"plugins/funind/invfun.ml" 65 1854 1887 "plugins/funind/invfun.ml" 65 1854 1889
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 65 1854 1890 "plugins/funind/invfun.ml" 65 1854 1893
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/invfun.ml" 65 1854 1894 "plugins/funind/invfun.ml" 65 1854 1896
type(
  unit
)
"plugins/funind/invfun.ml" 65 1854 1890 "plugins/funind/invfun.ml" 65 1854 1896
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 65 1854 1882 "plugins/funind/invfun.ml" 65 1854 1896
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 65 1854 1897 "plugins/funind/invfun.ml" 65 1854 1899
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 65 1854 1900 "plugins/funind/invfun.ml" 65 1854 1901
type(
  Pp.std_ppcmds
)
ident(
  int_ref s "plugins/funind/invfun.ml" 62 1737 1756 "plugins/funind/invfun.ml" 62 1737 1757
)
"plugins/funind/invfun.ml" 65 1854 1882 "plugins/funind/invfun.ml" 65 1854 1901
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 65 1854 1902 "plugins/funind/invfun.ml" 65 1854 1904
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 65 1854 1905 "plugins/funind/invfun.ml" 65 1854 1908
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 65 1854 1909 "plugins/funind/invfun.ml" 65 1854 1912
type(
  string
)
"plugins/funind/invfun.ml" 65 1854 1904 "plugins/funind/invfun.ml" 65 1854 1913
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 65 1854 1882 "plugins/funind/invfun.ml" 65 1854 1913
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 65 1854 1913 "plugins/funind/invfun.ml" 65 1854 1915
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 65 1854 1916 "plugins/funind/invfun.ml" 65 1854 1919
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 65 1854 1920 "plugins/funind/invfun.ml" 65 1854 1930
type(
  string
)
"plugins/funind/invfun.ml" 65 1854 1915 "plugins/funind/invfun.ml" 65 1854 1931
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 65 1854 1881 "plugins/funind/invfun.ml" 65 1854 1932
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 65 1854 1875 "plugins/funind/invfun.ml" 65 1854 1932
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 65 1854 1934 "plugins/funind/invfun.ml" 65 1854 1935
type(
  'a
)
ident(
  int_ref v "plugins/funind/invfun.ml" 65 1854 1862 "plugins/funind/invfun.ml" 65 1854 1863
)
"plugins/funind/invfun.ml" 65 1854 1875 "plugins/funind/invfun.ml" 65 1854 1935
type(
  'a
)
"plugins/funind/invfun.ml" 65 1854 1858 "plugins/funind/invfun.ml" 65 1854 1935
type(
  'a
)
"plugins/funind/invfun.ml" 66 1936 1943 "plugins/funind/invfun.ml" 66 1936 1944
type(
  exn
)
ident(
  def e "plugins/funind/invfun.ml" 67 1948 1952 "plugins/funind/invfun.ml" 69 2069 2080
)
"plugins/funind/invfun.ml" 67 1948 1952 "plugins/funind/invfun.ml" 67 1948 1957
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref msgnl "plugins/funind/invfun.ml" 49 1548 1552 "plugins/funind/invfun.ml" 49 1548 1557
)
"plugins/funind/invfun.ml" 67 1948 1959 "plugins/funind/invfun.ml" 67 1948 1962
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 67 1948 1963 "plugins/funind/invfun.ml" 67 1948 1977
type(
  string
)
"plugins/funind/invfun.ml" 67 1948 1959 "plugins/funind/invfun.ml" 67 1948 1977
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 67 1948 1977 "plugins/funind/invfun.ml" 67 1948 1979
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 67 1948 1980 "plugins/funind/invfun.ml" 67 1948 1981
type(
  Pp.std_ppcmds
)
ident(
  int_ref s "plugins/funind/invfun.ml" 62 1737 1756 "plugins/funind/invfun.ml" 62 1737 1757
)
"plugins/funind/invfun.ml" 67 1948 1959 "plugins/funind/invfun.ml" 67 1948 1981
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 67 1948 1981 "plugins/funind/invfun.ml" 67 1948 1983
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 67 1948 1983 "plugins/funind/invfun.ml" 67 1948 1986
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 67 1948 1987 "plugins/funind/invfun.ml" 67 1948 2007
type(
  string
)
"plugins/funind/invfun.ml" 67 1948 1983 "plugins/funind/invfun.ml" 67 1948 2007
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 67 1948 1959 "plugins/funind/invfun.ml" 67 1948 2007
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 67 1948 2008 "plugins/funind/invfun.ml" 67 1948 2010
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 68 2011 2017 "plugins/funind/invfun.ml" 68 2011 2036
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
"plugins/funind/invfun.ml" 68 2011 2037 "plugins/funind/invfun.ml" 68 2011 2038
type(
  exn
)
ident(
  int_ref e "plugins/funind/invfun.ml" 66 1936 1943 "plugins/funind/invfun.ml" 66 1936 1944
)
"plugins/funind/invfun.ml" 68 2011 2017 "plugins/funind/invfun.ml" 68 2011 2038
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 67 1948 1959 "plugins/funind/invfun.ml" 68 2011 2038
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 68 2011 2039 "plugins/funind/invfun.ml" 68 2011 2041
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 68 2011 2042 "plugins/funind/invfun.ml" 68 2011 2045
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 68 2011 2046 "plugins/funind/invfun.ml" 68 2011 2057
type(
  string
)
"plugins/funind/invfun.ml" 68 2011 2042 "plugins/funind/invfun.ml" 68 2011 2057
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 67 1948 1959 "plugins/funind/invfun.ml" 68 2011 2057
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 68 2011 2058 "plugins/funind/invfun.ml" 68 2011 2060
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 68 2011 2061 "plugins/funind/invfun.ml" 68 2011 2065
type(
  Pp.std_ppcmds
)
ident(
  int_ref goal "plugins/funind/invfun.ml" 63 1766 1772 "plugins/funind/invfun.ml" 63 1766 1776
)
"plugins/funind/invfun.ml" 67 1948 1958 "plugins/funind/invfun.ml" 68 2011 2067
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 67 1948 1952 "plugins/funind/invfun.ml" 68 2011 2067
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 69 2069 2073 "plugins/funind/invfun.ml" 69 2069 2078
type(
  exn -> 'a
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/invfun.ml" 69 2069 2079 "plugins/funind/invfun.ml" 69 2069 2080
type(
  exn
)
ident(
  int_ref e "plugins/funind/invfun.ml" 66 1936 1943 "plugins/funind/invfun.ml" 66 1936 1944
)
"plugins/funind/invfun.ml" 69 2069 2073 "plugins/funind/invfun.ml" 69 2069 2080
type(
  'a
)
"plugins/funind/invfun.ml" 67 1948 1952 "plugins/funind/invfun.ml" 69 2069 2080
type(
  'a
)
"plugins/funind/invfun.ml" 64 1848 1850 "plugins/funind/invfun.ml" 69 2069 2080
type(
  'a
)
"plugins/funind/invfun.ml" 63 1766 1768 "plugins/funind/invfun.ml" 69 2069 2080
type(
  'a
)
"plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
type(
  string ->
  (Proof_type.goal Tacmach.sigma -> 'a) ->
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def observe_tac "plugins/funind/invfun.ml" 78 2228 2228 --
)
"plugins/funind/invfun.ml" 72 2085 2101 "plugins/funind/invfun.ml" 72 2085 2102
type(
  string
)
ident(
  def s "plugins/funind/invfun.ml" 72 2085 2103 "plugins/funind/invfun.ml" 75 2166 2178
)
"plugins/funind/invfun.ml" 72 2085 2103 "plugins/funind/invfun.ml" 72 2085 2106
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def tac "plugins/funind/invfun.ml" 72 2085 2107 "plugins/funind/invfun.ml" 75 2166 2178
)
"plugins/funind/invfun.ml" 72 2085 2107 "plugins/funind/invfun.ml" 72 2085 2108
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 73 2111 2113 "plugins/funind/invfun.ml" 75 2166 2178
)
"plugins/funind/invfun.ml" 73 2111 2116 "plugins/funind/invfun.ml" 73 2111 2126
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/invfun.ml" 73 2111 2127 "plugins/funind/invfun.ml" 73 2111 2129
type(
  unit
)
"plugins/funind/invfun.ml" 73 2111 2116 "plugins/funind/invfun.ml" 73 2111 2129
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 74 2130 2137 "plugins/funind/invfun.ml" 74 2130 2151
type(
  Pp.std_ppcmds ->
  (Proof_type.goal Tacmach.sigma -> 'a) ->
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref do_observe_tac "plugins/funind/invfun.ml" 62 1737 1741 "plugins/funind/invfun.ml" 62 1737 1755
)
"plugins/funind/invfun.ml" 74 2130 2153 "plugins/funind/invfun.ml" 74 2130 2156
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 74 2130 2157 "plugins/funind/invfun.ml" 74 2130 2158
type(
  string
)
ident(
  int_ref s "plugins/funind/invfun.ml" 72 2085 2101 "plugins/funind/invfun.ml" 72 2085 2102
)
"plugins/funind/invfun.ml" 74 2130 2152 "plugins/funind/invfun.ml" 74 2130 2159
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 74 2130 2160 "plugins/funind/invfun.ml" 74 2130 2163
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref tac "plugins/funind/invfun.ml" 72 2085 2103 "plugins/funind/invfun.ml" 72 2085 2106
)
"plugins/funind/invfun.ml" 74 2130 2164 "plugins/funind/invfun.ml" 74 2130 2165
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 72 2085 2107 "plugins/funind/invfun.ml" 72 2085 2108
)
"plugins/funind/invfun.ml" 74 2130 2137 "plugins/funind/invfun.ml" 74 2130 2165
call(
  tail
)
type(
  'a
)
"plugins/funind/invfun.ml" 75 2166 2173 "plugins/funind/invfun.ml" 75 2166 2176
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref tac "plugins/funind/invfun.ml" 72 2085 2103 "plugins/funind/invfun.ml" 72 2085 2106
)
"plugins/funind/invfun.ml" 75 2166 2177 "plugins/funind/invfun.ml" 75 2166 2178
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 72 2085 2107 "plugins/funind/invfun.ml" 72 2085 2108
)
"plugins/funind/invfun.ml" 75 2166 2173 "plugins/funind/invfun.ml" 75 2166 2178
call(
  tail
)
type(
  'a
)
"plugins/funind/invfun.ml" 73 2111 2113 "plugins/funind/invfun.ml" 75 2166 2178
type(
  'a
)
"plugins/funind/invfun.ml" 78 2228 2232 "plugins/funind/invfun.ml" 78 2228 2239
type(
  Term.types -> Term.constr
)
ident(
  def nf_zeta "plugins/funind/invfun.ml" 85 2448 2448 --
)
"plugins/funind/invfun.ml" 79 2242 2244 "plugins/funind/invfun.ml" 79 2242 2272
type(
  Closure.RedFlags.reds -> Reductionops.reduction_function
)
ident(
  ext_ref Reductionops.clos_norm_flags
)
"plugins/funind/invfun.ml" 79 2242 2275 "plugins/funind/invfun.ml" 79 2242 2299
type(
  Closure.RedFlags.red_kind list -> Closure.RedFlags.reds
)
ident(
  ext_ref Closure.RedFlags.mkflags
)
"plugins/funind/invfun.ml" 79 2242 2301 "plugins/funind/invfun.ml" 79 2242 2323
type(
  Closure.RedFlags.red_kind
)
ident(
  ext_ref Closure.RedFlags.fZETA
)
"plugins/funind/invfun.ml" 79 2242 2300 "plugins/funind/invfun.ml" 79 2242 2324
type(
  Closure.RedFlags.red_kind list
)
"plugins/funind/invfun.ml" 79 2242 2274 "plugins/funind/invfun.ml" 79 2242 2325
call(
  stack
)
type(
  Closure.RedFlags.reds
)
"plugins/funind/invfun.ml" 80 2326 2330 "plugins/funind/invfun.ml" 80 2326 2347
type(
  Environ.env
)
ident(
  ext_ref Environ.empty_env
)
"plugins/funind/invfun.ml" 81 2348 2352 "plugins/funind/invfun.ml" 81 2348 2361
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/invfun.ml" 79 2242 2244 "plugins/funind/invfun.ml" 81 2348 2361
call(
  stack
)
type(
  Term.types -> Term.constr
)
"plugins/funind/invfun.ml" 85 2448 2452 "plugins/funind/invfun.ml" 85 2448 2464
type(
  Names.identifier -> Term.constr
)
ident(
  def id_to_constr "plugins/funind/invfun.ml" 103 3258 3258 --
)
"plugins/funind/invfun.ml" 85 2448 2465 "plugins/funind/invfun.ml" 85 2448 2467
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 86 2470 2472 "plugins/funind/invfun.ml" 89 2543 2609
)
"plugins/funind/invfun.ml" 87 2476 2480 "plugins/funind/invfun.ml" 87 2476 2502
type(
  Environ.env -> Names.identifier -> Term.constr
)
ident(
  ext_ref Tacinterp.constr_of_id
)
"plugins/funind/invfun.ml" 87 2476 2504 "plugins/funind/invfun.ml" 87 2476 2514
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/invfun.ml" 87 2476 2515 "plugins/funind/invfun.ml" 87 2476 2517
type(
  unit
)
"plugins/funind/invfun.ml" 87 2476 2503 "plugins/funind/invfun.ml" 87 2476 2518
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 87 2476 2520 "plugins/funind/invfun.ml" 87 2476 2522
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 85 2448 2465 "plugins/funind/invfun.ml" 85 2448 2467
)
"plugins/funind/invfun.ml" 87 2476 2480 "plugins/funind/invfun.ml" 87 2476 2522
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 88 2523 2530 "plugins/funind/invfun.ml" 88 2523 2539
type(
  exn
)
"plugins/funind/invfun.ml" 89 2543 2547 "plugins/funind/invfun.ml" 89 2543 2552
type(
  exn -> Term.constr
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/invfun.ml" 89 2543 2565 "plugins/funind/invfun.ml" 89 2543 2567
type(
  string
)
"plugins/funind/invfun.ml" 89 2543 2568 "plugins/funind/invfun.ml" 89 2543 2571
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 89 2543 2572 "plugins/funind/invfun.ml" 89 2543 2586
type(
  string
)
"plugins/funind/invfun.ml" 89 2543 2568 "plugins/funind/invfun.ml" 89 2543 2586
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 89 2543 2587 "plugins/funind/invfun.ml" 89 2543 2589
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 89 2543 2590 "plugins/funind/invfun.ml" 89 2543 2604
type(
  Names.identifier -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_id
)
"plugins/funind/invfun.ml" 89 2543 2605 "plugins/funind/invfun.ml" 89 2543 2607
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 85 2448 2465 "plugins/funind/invfun.ml" 85 2448 2467
)
"plugins/funind/invfun.ml" 89 2543 2590 "plugins/funind/invfun.ml" 89 2543 2607
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 89 2543 2568 "plugins/funind/invfun.ml" 89 2543 2607
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 89 2543 2553 "plugins/funind/invfun.ml" 89 2543 2609
type(
  exn
)
"plugins/funind/invfun.ml" 89 2543 2547 "plugins/funind/invfun.ml" 89 2543 2609
type(
  Term.constr
)
"plugins/funind/invfun.ml" 86 2470 2472 "plugins/funind/invfun.ml" 89 2543 2609
type(
  Term.constr
)
"plugins/funind/invfun.ml" 103 3258 3262 "plugins/funind/invfun.ml" 103 3258 3275
type(
  bool ->
  Names.constant ->
  Term.constr -> 'a -> Term.rel_declaration list * Term.constr
)
ident(
  def generate_type "plugins/funind/invfun.ml" 173 6089 6089 --
)
"plugins/funind/invfun.ml" 103 3258 3276 "plugins/funind/invfun.ml" 103 3258 3282
type(
  bool
)
ident(
  def g_to_f "plugins/funind/invfun.ml" 103 3258 3283 "plugins/funind/invfun.ml" 165 5841 5914
)
"plugins/funind/invfun.ml" 103 3258 3283 "plugins/funind/invfun.ml" 103 3258 3284
type(
  Names.constant
)
ident(
  def f "plugins/funind/invfun.ml" 103 3258 3285 "plugins/funind/invfun.ml" 165 5841 5914
)
"plugins/funind/invfun.ml" 103 3258 3285 "plugins/funind/invfun.ml" 103 3258 3290
type(
  Term.constr
)
ident(
  def graph "plugins/funind/invfun.ml" 103 3258 3291 "plugins/funind/invfun.ml" 165 5841 5914
)
"plugins/funind/invfun.ml" 103 3258 3291 "plugins/funind/invfun.ml" 103 3258 3292
type(
  'a
)
ident(
  def i "plugins/funind/invfun.ml" 105 3392 3394 "plugins/funind/invfun.ml" 165 5841 5914
)
"plugins/funind/invfun.ml" 105 3392 3398 "plugins/funind/invfun.ml" 105 3392 3409
type(
  Term.types
)
"plugins/funind/invfun.ml" 105 3392 3412 "plugins/funind/invfun.ml" 105 3392 3439
type(
  Environ.env -> Inductive.mind_specif -> Term.types
)
ident(
  ext_ref Inductive.type_of_inductive
)
"plugins/funind/invfun.ml" 105 3392 3441 "plugins/funind/invfun.ml" 105 3392 3451
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/invfun.ml" 105 3392 3451 "plugins/funind/invfun.ml" 105 3392 3453
type(
  unit
)
"plugins/funind/invfun.ml" 105 3392 3440 "plugins/funind/invfun.ml" 105 3392 3454
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 105 3392 3456 "plugins/funind/invfun.ml" 105 3392 3479
type(
  Names.inductive -> Inductive.mind_specif
)
ident(
  ext_ref Global.lookup_inductive
)
"plugins/funind/invfun.ml" 105 3392 3481 "plugins/funind/invfun.ml" 105 3392 3488
type(
  Term.constr -> Names.inductive
)
ident(
  ext_ref Term.destInd
)
"plugins/funind/invfun.ml" 105 3392 3489 "plugins/funind/invfun.ml" 105 3392 3494
type(
  Term.constr
)
ident(
  int_ref graph "plugins/funind/invfun.ml" 103 3258 3285 "plugins/funind/invfun.ml" 103 3258 3290
)
"plugins/funind/invfun.ml" 105 3392 3480 "plugins/funind/invfun.ml" 105 3392 3495
call(
  stack
)
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 105 3392 3455 "plugins/funind/invfun.ml" 105 3392 3496
call(
  stack
)
type(
  Inductive.mind_specif
)
"plugins/funind/invfun.ml" 105 3392 3412 "plugins/funind/invfun.ml" 105 3392 3496
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 106 3501 3507 "plugins/funind/invfun.ml" 106 3501 3511
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 106 3501 3512 "plugins/funind/invfun.ml" 106 3501 3513
type(
  Term.types
)
"plugins/funind/invfun.ml" 106 3501 3507 "plugins/funind/invfun.ml" 106 3501 3513
type(
  Term.rel_context * Term.types
)
"plugins/funind/invfun.ml" 106 3501 3516 "plugins/funind/invfun.ml" 106 3501 3536
type(
  Term.types -> Term.rel_context * Term.types
)
ident(
  ext_ref Term.decompose_prod_assum
)
"plugins/funind/invfun.ml" 106 3501 3537 "plugins/funind/invfun.ml" 106 3501 3548
type(
  Term.types
)
ident(
  int_ref graph_arity "plugins/funind/invfun.ml" 105 3392 3398 "plugins/funind/invfun.ml" 105 3392 3409
)
"plugins/funind/invfun.ml" 106 3501 3516 "plugins/funind/invfun.ml" 106 3501 3548
call(
  stack
)
type(
  Term.rel_context * Term.types
)
"plugins/funind/invfun.ml" 107 3552 3558 "plugins/funind/invfun.ml" 107 3552 3566
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 107 3552 3567 "plugins/funind/invfun.ml" 107 3552 3575
type(
  Term.types
)
"plugins/funind/invfun.ml" 107 3552 3558 "plugins/funind/invfun.ml" 107 3552 3575
type(
  Term.rel_declaration list * Term.types
)
"plugins/funind/invfun.ml" 108 3578 3588 "plugins/funind/invfun.ml" 108 3578 3592
type(
  Term.rel_context
)
ident(
  int_ref ctxt "plugins/funind/invfun.ml" 106 3501 3507 "plugins/funind/invfun.ml" 106 3501 3511
)
"plugins/funind/invfun.ml" 109 3598 3606 "plugins/funind/invfun.ml" 109 3598 3608
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 109 3598 3612 "plugins/funind/invfun.ml" 109 3598 3613
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 109 3598 3611 "plugins/funind/invfun.ml" 109 3598 3614
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 109 3598 3606 "plugins/funind/invfun.ml" 109 3598 3614
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 109 3598 3618 "plugins/funind/invfun.ml" 109 3598 3625
type(
  string -> Term.rel_declaration list * Term.types
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/invfun.ml" 109 3598 3626 "plugins/funind/invfun.ml" 109 3598 3647
type(
  string
)
"plugins/funind/invfun.ml" 109 3598 3618 "plugins/funind/invfun.ml" 109 3598 3647
call(
  stack
)
type(
  Term.rel_declaration list * Term.types
)
"plugins/funind/invfun.ml" 110 3648 3657 "plugins/funind/invfun.ml" 110 3648 3658
type(
  Names.name
)
"plugins/funind/invfun.ml" 110 3648 3659 "plugins/funind/invfun.ml" 110 3648 3660
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 110 3648 3661 "plugins/funind/invfun.ml" 110 3648 3669
type(
  Term.types
)
ident(
  def res_type "plugins/funind/invfun.ml" 110 3648 3684 "plugins/funind/invfun.ml" 110 3648 3701
)
"plugins/funind/invfun.ml" 110 3648 3656 "plugins/funind/invfun.ml" 110 3648 3670
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 110 3648 3672 "plugins/funind/invfun.ml" 110 3648 3680
type(
  Term.rel_declaration list
)
ident(
  def fun_ctxt "plugins/funind/invfun.ml" 110 3648 3684 "plugins/funind/invfun.ml" 110 3648 3701
)
"plugins/funind/invfun.ml" 110 3648 3656 "plugins/funind/invfun.ml" 110 3648 3680
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 110 3648 3684 "plugins/funind/invfun.ml" 110 3648 3692
type(
  Term.rel_declaration list
)
ident(
  int_ref fun_ctxt "plugins/funind/invfun.ml" 110 3648 3672 "plugins/funind/invfun.ml" 110 3648 3680
)
"plugins/funind/invfun.ml" 110 3648 3693 "plugins/funind/invfun.ml" 110 3648 3701
type(
  Term.types
)
ident(
  int_ref res_type "plugins/funind/invfun.ml" 110 3648 3661 "plugins/funind/invfun.ml" 110 3648 3669
)
"plugins/funind/invfun.ml" 110 3648 3684 "plugins/funind/invfun.ml" 110 3648 3701
type(
  Term.rel_declaration list * Term.types
)
"plugins/funind/invfun.ml" 108 3578 3582 "plugins/funind/invfun.ml" 110 3648 3701
type(
  Term.rel_declaration list * Term.types
)
"plugins/funind/invfun.ml" 112 3707 3713 "plugins/funind/invfun.ml" 112 3707 3720
type(
  int
)
"plugins/funind/invfun.ml" 112 3707 3723 "plugins/funind/invfun.ml" 112 3707 3734
type(
  Term.rel_declaration list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/invfun.ml" 112 3707 3735 "plugins/funind/invfun.ml" 112 3707 3743
type(
  Term.rel_declaration list
)
ident(
  int_ref fun_ctxt "plugins/funind/invfun.ml" 107 3552 3558 "plugins/funind/invfun.ml" 107 3552 3566
)
"plugins/funind/invfun.ml" 112 3707 3723 "plugins/funind/invfun.ml" 112 3707 3743
call(
  stack
)
type(
  int
)
"plugins/funind/invfun.ml" 113 3747 3753 "plugins/funind/invfun.ml" 113 3747 3767
type(
  int ref -> 'b * 'c option * 'd -> Term.constr
)
"plugins/funind/invfun.ml" 113 3747 3768 "plugins/funind/invfun.ml" 113 3747 3769
type(
  int ref
)
ident(
  def i "plugins/funind/invfun.ml" 113 3747 3770 "plugins/funind/invfun.ml" 116 3855 3913
)
"plugins/funind/invfun.ml" 113 3747 3770 "plugins/funind/invfun.ml" 113 3747 3774
type(
  'b * 'c option * 'd
)
ident(
  def decl "plugins/funind/invfun.ml" 114 3777 3781 "plugins/funind/invfun.ml" 116 3855 3913
)
"plugins/funind/invfun.ml" 114 3777 3787 "plugins/funind/invfun.ml" 114 3777 3791
type(
  'b * 'c option * 'd
)
ident(
  int_ref decl "plugins/funind/invfun.ml" 113 3747 3770 "plugins/funind/invfun.ml" 113 3747 3774
)
"plugins/funind/invfun.ml" 115 3797 3806 "plugins/funind/invfun.ml" 115 3797 3807
type(
  'b
)
"plugins/funind/invfun.ml" 115 3797 3813 "plugins/funind/invfun.ml" 115 3797 3814
type(
  'c
)
"plugins/funind/invfun.ml" 115 3797 3808 "plugins/funind/invfun.ml" 115 3797 3814
type(
  'c option
)
"plugins/funind/invfun.ml" 115 3797 3815 "plugins/funind/invfun.ml" 115 3797 3816
type(
  'd
)
"plugins/funind/invfun.ml" 115 3797 3805 "plugins/funind/invfun.ml" 115 3797 3817
type(
  'b * 'c option * 'd
)
"plugins/funind/invfun.ml" 115 3797 3821 "plugins/funind/invfun.ml" 115 3797 3825
type(
  int ref -> unit
)
ident(
  ext_ref Pervasives.incr
)
"plugins/funind/invfun.ml" 115 3797 3826 "plugins/funind/invfun.ml" 115 3797 3827
type(
  int ref
)
ident(
  int_ref i "plugins/funind/invfun.ml" 113 3747 3768 "plugins/funind/invfun.ml" 113 3747 3769
)
"plugins/funind/invfun.ml" 115 3797 3821 "plugins/funind/invfun.ml" 115 3797 3827
type(
  unit
)
"plugins/funind/invfun.ml" 115 3797 3829 "plugins/funind/invfun.ml" 115 3797 3837
type(
  string -> Term.constr
)
ident(
  ext_ref Pervasives.failwith
)
"plugins/funind/invfun.ml" 115 3797 3838 "plugins/funind/invfun.ml" 115 3797 3854
type(
  string
)
"plugins/funind/invfun.ml" 115 3797 3829 "plugins/funind/invfun.ml" 115 3797 3854
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 115 3797 3821 "plugins/funind/invfun.ml" 115 3797 3854
type(
  Term.constr
)
"plugins/funind/invfun.ml" 116 3855 3863 "plugins/funind/invfun.ml" 116 3855 3864
type(
  'b * 'c option * 'd
)
"plugins/funind/invfun.ml" 116 3855 3872 "plugins/funind/invfun.ml" 116 3855 3873
type(
  int
)
"plugins/funind/invfun.ml" 116 3855 3876 "plugins/funind/invfun.ml" 116 3855 3877
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 116 3855 3877 "plugins/funind/invfun.ml" 116 3855 3878
type(
  int ref
)
ident(
  int_ref i "plugins/funind/invfun.ml" 113 3747 3768 "plugins/funind/invfun.ml" 113 3747 3769
)
"plugins/funind/invfun.ml" 116 3855 3876 "plugins/funind/invfun.ml" 116 3855 3878
type(
  int
)
"plugins/funind/invfun.ml" 116 3855 3882 "plugins/funind/invfun.ml" 116 3855 3886
type(
  int ref -> unit
)
ident(
  ext_ref Pervasives.incr
)
"plugins/funind/invfun.ml" 116 3855 3887 "plugins/funind/invfun.ml" 116 3855 3888
type(
  int ref
)
ident(
  int_ref i "plugins/funind/invfun.ml" 113 3747 3768 "plugins/funind/invfun.ml" 113 3747 3769
)
"plugins/funind/invfun.ml" 116 3855 3882 "plugins/funind/invfun.ml" 116 3855 3888
type(
  unit
)
"plugins/funind/invfun.ml" 116 3855 3889 "plugins/funind/invfun.ml" 116 3855 3894
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/invfun.ml" 116 3855 3896 "plugins/funind/invfun.ml" 116 3855 3903
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/invfun.ml" 112 3707 3713 "plugins/funind/invfun.ml" 112 3707 3720
)
"plugins/funind/invfun.ml" 116 3855 3904 "plugins/funind/invfun.ml" 116 3855 3905
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/invfun.ml" 116 3855 3906 "plugins/funind/invfun.ml" 116 3855 3907
type(
  int
)
ident(
  int_ref j "plugins/funind/invfun.ml" 116 3855 3872 "plugins/funind/invfun.ml" 116 3855 3873
)
"plugins/funind/invfun.ml" 116 3855 3896 "plugins/funind/invfun.ml" 116 3855 3907
type(
  int
)
"plugins/funind/invfun.ml" 116 3855 3909 "plugins/funind/invfun.ml" 116 3855 3910
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/invfun.ml" 116 3855 3911 "plugins/funind/invfun.ml" 116 3855 3912
type(
  int
)
"plugins/funind/invfun.ml" 116 3855 3895 "plugins/funind/invfun.ml" 116 3855 3913
type(
  int
)
"plugins/funind/invfun.ml" 116 3855 3889 "plugins/funind/invfun.ml" 116 3855 3913
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 116 3855 3882 "plugins/funind/invfun.ml" 116 3855 3913
type(
  Term.constr
)
"plugins/funind/invfun.ml" 116 3855 3868 "plugins/funind/invfun.ml" 116 3855 3913
type(
  Term.constr
)
"plugins/funind/invfun.ml" 114 3777 3781 "plugins/funind/invfun.ml" 116 3855 3913
type(
  Term.constr
)
"plugins/funind/invfun.ml" 119 3969 3975 "plugins/funind/invfun.ml" 119 3969 3981
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 120 3984 3988 "plugins/funind/invfun.ml" 120 3984 4019
type(
  Names.identifier -> Names.identifier list -> Names.identifier
)
ident(
  ext_ref Namegen.next_ident_away_in_goal
)
"plugins/funind/invfun.ml" 121 4020 4027 "plugins/funind/invfun.ml" 121 4020 4039
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 121 4020 4040 "plugins/funind/invfun.ml" 121 4020 4045
type(
  string
)
"plugins/funind/invfun.ml" 121 4020 4026 "plugins/funind/invfun.ml" 121 4020 4046
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 122 4047 4054 "plugins/funind/invfun.ml" 122 4047 4065
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_declaration list -> Names.identifier list
)
ident(
  ext_ref Util.map_succeed
)
"plugins/funind/invfun.ml" 122 4047 4082 "plugins/funind/invfun.ml" 122 4047 4084
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 122 4047 4093 "plugins/funind/invfun.ml" 122 4047 4095
)
"plugins/funind/invfun.ml" 122 4047 4077 "plugins/funind/invfun.ml" 122 4047 4084
type(
  Names.name
)
"plugins/funind/invfun.ml" 122 4047 4085 "plugins/funind/invfun.ml" 122 4047 4086
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 122 4047 4087 "plugins/funind/invfun.ml" 122 4047 4088
type(
  Term.types
)
"plugins/funind/invfun.ml" 122 4047 4076 "plugins/funind/invfun.ml" 122 4047 4089
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 122 4047 4093 "plugins/funind/invfun.ml" 122 4047 4095
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 122 4047 4082 "plugins/funind/invfun.ml" 122 4047 4084
)
"plugins/funind/invfun.ml" 122 4047 4099 "plugins/funind/invfun.ml" 122 4047 4108
type(
  Names.name
)
"plugins/funind/invfun.ml" 122 4047 4109 "plugins/funind/invfun.ml" 122 4047 4110
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 122 4047 4111 "plugins/funind/invfun.ml" 122 4047 4112
type(
  Term.types
)
"plugins/funind/invfun.ml" 122 4047 4098 "plugins/funind/invfun.ml" 122 4047 4113
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 122 4047 4117 "plugins/funind/invfun.ml" 122 4047 4125
type(
  string -> Names.identifier
)
ident(
  ext_ref Pervasives.failwith
)
"plugins/funind/invfun.ml" 122 4047 4126 "plugins/funind/invfun.ml" 122 4047 4128
type(
  string
)
"plugins/funind/invfun.ml" 122 4047 4117 "plugins/funind/invfun.ml" 122 4047 4128
call(
  tail
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 122 4047 4066 "plugins/funind/invfun.ml" 122 4047 4129
type(
  Term.rel_declaration -> Names.identifier
)
"plugins/funind/invfun.ml" 122 4047 4130 "plugins/funind/invfun.ml" 122 4047 4138
type(
  Term.rel_declaration list
)
ident(
  int_ref fun_ctxt "plugins/funind/invfun.ml" 107 3552 3558 "plugins/funind/invfun.ml" 107 3552 3566
)
"plugins/funind/invfun.ml" 122 4047 4053 "plugins/funind/invfun.ml" 122 4047 4139
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 120 3984 3988 "plugins/funind/invfun.ml" 122 4047 4139
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 124 4145 4151 "plugins/funind/invfun.ml" 124 4145 4156
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 125 4159 4163 "plugins/funind/invfun.ml" 125 4159 4194
type(
  Names.identifier -> Names.identifier list -> Names.identifier
)
ident(
  ext_ref Namegen.next_ident_away_in_goal
)
"plugins/funind/invfun.ml" 126 4195 4202 "plugins/funind/invfun.ml" 126 4195 4214
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 126 4195 4215 "plugins/funind/invfun.ml" 126 4195 4219
type(
  string
)
"plugins/funind/invfun.ml" 126 4195 4201 "plugins/funind/invfun.ml" 126 4195 4220
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 127 4221 4228 "plugins/funind/invfun.ml" 127 4221 4234
type(
  Names.identifier
)
ident(
  int_ref res_id "plugins/funind/invfun.ml" 119 3969 3975 "plugins/funind/invfun.ml" 119 3969 3981
)
"plugins/funind/invfun.ml" 127 4221 4237 "plugins/funind/invfun.ml" 127 4221 4248
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_declaration list -> Names.identifier list
)
ident(
  ext_ref Util.map_succeed
)
"plugins/funind/invfun.ml" 127 4221 4265 "plugins/funind/invfun.ml" 127 4221 4267
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 127 4221 4276 "plugins/funind/invfun.ml" 127 4221 4278
)
"plugins/funind/invfun.ml" 127 4221 4260 "plugins/funind/invfun.ml" 127 4221 4267
type(
  Names.name
)
"plugins/funind/invfun.ml" 127 4221 4268 "plugins/funind/invfun.ml" 127 4221 4269
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 127 4221 4270 "plugins/funind/invfun.ml" 127 4221 4271
type(
  Term.types
)
"plugins/funind/invfun.ml" 127 4221 4259 "plugins/funind/invfun.ml" 127 4221 4272
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 127 4221 4276 "plugins/funind/invfun.ml" 127 4221 4278
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 127 4221 4265 "plugins/funind/invfun.ml" 127 4221 4267
)
"plugins/funind/invfun.ml" 127 4221 4282 "plugins/funind/invfun.ml" 127 4221 4291
type(
  Names.name
)
"plugins/funind/invfun.ml" 127 4221 4292 "plugins/funind/invfun.ml" 127 4221 4293
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 127 4221 4294 "plugins/funind/invfun.ml" 127 4221 4295
type(
  Term.types
)
"plugins/funind/invfun.ml" 127 4221 4281 "plugins/funind/invfun.ml" 127 4221 4296
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 127 4221 4300 "plugins/funind/invfun.ml" 127 4221 4308
type(
  string -> Names.identifier
)
ident(
  ext_ref Pervasives.failwith
)
"plugins/funind/invfun.ml" 127 4221 4309 "plugins/funind/invfun.ml" 127 4221 4321
type(
  string
)
"plugins/funind/invfun.ml" 127 4221 4300 "plugins/funind/invfun.ml" 127 4221 4321
call(
  tail
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 127 4221 4249 "plugins/funind/invfun.ml" 127 4221 4322
type(
  Term.rel_declaration -> Names.identifier
)
"plugins/funind/invfun.ml" 127 4221 4323 "plugins/funind/invfun.ml" 127 4221 4331
type(
  Term.rel_declaration list
)
ident(
  int_ref fun_ctxt "plugins/funind/invfun.ml" 107 3552 3558 "plugins/funind/invfun.ml" 107 3552 3566
)
"plugins/funind/invfun.ml" 127 4221 4236 "plugins/funind/invfun.ml" 127 4221 4332
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 127 4221 4227 "plugins/funind/invfun.ml" 127 4221 4333
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 125 4159 4163 "plugins/funind/invfun.ml" 127 4221 4333
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 130 4413 4419 "plugins/funind/invfun.ml" 130 4413 4431
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 131 4434 4442 "plugins/funind/invfun.ml" 131 4434 4443
type(
  int ref
)
"plugins/funind/invfun.ml" 131 4434 4446 "plugins/funind/invfun.ml" 131 4434 4449
type(
  int -> int ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/invfun.ml" 131 4434 4450 "plugins/funind/invfun.ml" 131 4434 4451
type(
  int
)
"plugins/funind/invfun.ml" 131 4434 4446 "plugins/funind/invfun.ml" 131 4434 4451
type(
  int ref
)
"plugins/funind/invfun.ml" 132 4455 4459 "plugins/funind/invfun.ml" 132 4455 4472
type(
  Term.constr list -> Term.constr array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/invfun.ml" 132 4455 4475 "plugins/funind/invfun.ml" 132 4455 4486
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_declaration list -> Term.constr list
)
ident(
  ext_ref Util.map_succeed
)
"plugins/funind/invfun.ml" 132 4455 4488 "plugins/funind/invfun.ml" 132 4455 4502
type(
  int ref -> Term.rel_declaration -> Term.constr
)
ident(
  int_ref args_from_decl "plugins/funind/invfun.ml" 113 3747 3753 "plugins/funind/invfun.ml" 113 3747 3767
)
"plugins/funind/invfun.ml" 132 4455 4503 "plugins/funind/invfun.ml" 132 4455 4504
type(
  int ref
)
ident(
  int_ref i "plugins/funind/invfun.ml" 131 4434 4442 "plugins/funind/invfun.ml" 131 4434 4443
)
"plugins/funind/invfun.ml" 132 4455 4487 "plugins/funind/invfun.ml" 132 4455 4505
call(
  stack
)
type(
  Term.rel_declaration -> Term.constr
)
"plugins/funind/invfun.ml" 132 4455 4507 "plugins/funind/invfun.ml" 132 4455 4515
type(
  Term.rel_declaration list -> Term.rel_declaration list
)
ident(
  ext_ref List.rev
)
"plugins/funind/invfun.ml" 132 4455 4516 "plugins/funind/invfun.ml" 132 4455 4524
type(
  Term.rel_declaration list
)
ident(
  int_ref fun_ctxt "plugins/funind/invfun.ml" 107 3552 3558 "plugins/funind/invfun.ml" 107 3552 3566
)
"plugins/funind/invfun.ml" 132 4455 4506 "plugins/funind/invfun.ml" 132 4455 4525
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 132 4455 4473 "plugins/funind/invfun.ml" 132 4455 4527
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 132 4455 4459 "plugins/funind/invfun.ml" 132 4455 4527
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 131 4434 4438 "plugins/funind/invfun.ml" 132 4455 4527
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 134 4533 4539 "plugins/funind/invfun.ml" 134 4533 4551
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 134 4533 4554 "plugins/funind/invfun.ml" 134 4533 4563
type(
  (Term.constr -> Term.constr) -> Term.constr array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/invfun.ml" 134 4533 4564 "plugins/funind/invfun.ml" 134 4533 4575
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/invfun.ml" 134 4533 4576 "plugins/funind/invfun.ml" 134 4533 4588
type(
  Term.constr array
)
ident(
  int_ref args_as_rels "plugins/funind/invfun.ml" 130 4413 4419 "plugins/funind/invfun.ml" 130 4413 4431
)
"plugins/funind/invfun.ml" 134 4533 4554 "plugins/funind/invfun.ml" 134 4533 4588
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 139 4727 4733 "plugins/funind/invfun.ml" 139 4727 4749
type(
  Term.constr
)
"plugins/funind/invfun.ml" 140 4752 4756 "plugins/funind/invfun.ml" 140 4752 4761
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/invfun.ml" 140 4752 4762 "plugins/funind/invfun.ml" 140 4752 4781
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_eq
)
"plugins/funind/invfun.ml" 140 4752 4782 "plugins/funind/invfun.ml" 140 4752 4784
type(
  unit
)
"plugins/funind/invfun.ml" 140 4752 4762 "plugins/funind/invfun.ml" 140 4752 4784
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 140 4752 4787 "plugins/funind/invfun.ml" 140 4752 4791
type(
  int -> Term.types -> Term.constr
)
ident(
  ext_ref Term.lift
)
"plugins/funind/invfun.ml" 140 4752 4792 "plugins/funind/invfun.ml" 140 4752 4793
type(
  int
)
"plugins/funind/invfun.ml" 140 4752 4794 "plugins/funind/invfun.ml" 140 4752 4802
type(
  Term.types
)
ident(
  int_ref res_type "plugins/funind/invfun.ml" 107 3552 3567 "plugins/funind/invfun.ml" 107 3552 3575
)
"plugins/funind/invfun.ml" 140 4752 4787 "plugins/funind/invfun.ml" 140 4752 4802
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 140 4752 4803 "plugins/funind/invfun.ml" 140 4752 4808
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/invfun.ml" 140 4752 4809 "plugins/funind/invfun.ml" 140 4752 4810
type(
  int
)
"plugins/funind/invfun.ml" 140 4752 4803 "plugins/funind/invfun.ml" 140 4752 4810
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 140 4752 4811 "plugins/funind/invfun.ml" 140 4752 4816
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/invfun.ml" 140 4752 4817 "plugins/funind/invfun.ml" 140 4752 4818
type(
  int
)
"plugins/funind/invfun.ml" 140 4752 4811 "plugins/funind/invfun.ml" 140 4752 4818
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 140 4752 4785 "plugins/funind/invfun.ml" 140 4752 4820
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 140 4752 4761 "plugins/funind/invfun.ml" 140 4752 4821
type(
  Term.constr * Term.constr array
)
"plugins/funind/invfun.ml" 140 4752 4756 "plugins/funind/invfun.ml" 140 4752 4821
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 146 4979 4985 "plugins/funind/invfun.ml" 146 4979 4998
type(
  Term.constr
)
"plugins/funind/invfun.ml" 147 5001 5009 "plugins/funind/invfun.ml" 147 5001 5029
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 148 5032 5042 "plugins/funind/invfun.ml" 148 5032 5043
type(
  int ref
)
"plugins/funind/invfun.ml" 148 5032 5046 "plugins/funind/invfun.ml" 148 5032 5049
type(
  int -> int ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/invfun.ml" 148 5032 5050 "plugins/funind/invfun.ml" 148 5032 5051
type(
  int
)
"plugins/funind/invfun.ml" 148 5032 5046 "plugins/funind/invfun.ml" 148 5032 5051
type(
  int ref
)
"plugins/funind/invfun.ml" 149 5055 5061 "plugins/funind/invfun.ml" 149 5055 5074
type(
  Term.constr list -> Term.constr array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/invfun.ml" 149 5055 5077 "plugins/funind/invfun.ml" 149 5055 5088
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_declaration list -> Term.constr list
)
ident(
  ext_ref Util.map_succeed
)
"plugins/funind/invfun.ml" 149 5055 5090 "plugins/funind/invfun.ml" 149 5055 5104
type(
  int ref -> Term.rel_declaration -> Term.constr
)
ident(
  int_ref args_from_decl "plugins/funind/invfun.ml" 113 3747 3753 "plugins/funind/invfun.ml" 113 3747 3767
)
"plugins/funind/invfun.ml" 149 5055 5105 "plugins/funind/invfun.ml" 149 5055 5106
type(
  int ref
)
ident(
  int_ref i "plugins/funind/invfun.ml" 148 5032 5042 "plugins/funind/invfun.ml" 148 5032 5043
)
"plugins/funind/invfun.ml" 149 5055 5089 "plugins/funind/invfun.ml" 149 5055 5107
call(
  stack
)
type(
  Term.rel_declaration -> Term.constr
)
"plugins/funind/invfun.ml" 149 5055 5109 "plugins/funind/invfun.ml" 149 5055 5117
type(
  Term.rel_declaration list -> Term.rel_declaration list
)
ident(
  ext_ref List.rev
)
"plugins/funind/invfun.ml" 149 5055 5125 "plugins/funind/invfun.ml" 149 5055 5131
type(
  Names.identifier
)
ident(
  int_ref res_id "plugins/funind/invfun.ml" 119 3969 3975 "plugins/funind/invfun.ml" 119 3969 3981
)
"plugins/funind/invfun.ml" 149 5055 5120 "plugins/funind/invfun.ml" 149 5055 5131
type(
  Names.name
)
"plugins/funind/invfun.ml" 149 5055 5132 "plugins/funind/invfun.ml" 149 5055 5136
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 149 5055 5137 "plugins/funind/invfun.ml" 149 5055 5145
type(
  Term.types
)
ident(
  int_ref res_type "plugins/funind/invfun.ml" 107 3552 3567 "plugins/funind/invfun.ml" 107 3552 3575
)
"plugins/funind/invfun.ml" 149 5055 5119 "plugins/funind/invfun.ml" 149 5055 5146
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 149 5055 5148 "plugins/funind/invfun.ml" 149 5055 5156
type(
  Term.rel_declaration list
)
ident(
  int_ref fun_ctxt "plugins/funind/invfun.ml" 107 3552 3558 "plugins/funind/invfun.ml" 107 3552 3566
)
"plugins/funind/invfun.ml" 149 5055 5118 "plugins/funind/invfun.ml" 149 5055 5157
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 149 5055 5108 "plugins/funind/invfun.ml" 149 5055 5158
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 149 5055 5075 "plugins/funind/invfun.ml" 149 5055 5161
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 149 5055 5061 "plugins/funind/invfun.ml" 149 5055 5161
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 148 5032 5038 "plugins/funind/invfun.ml" 149 5055 5161
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 151 5169 5177 "plugins/funind/invfun.ml" 151 5169 5197
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 152 5200 5206 "plugins/funind/invfun.ml" 152 5200 5216
type(
  (int -> Term.constr -> Term.constr) ->
  Term.constr array -> Term.constr array
)
ident(
  ext_ref Array.mapi
)
"plugins/funind/invfun.ml" 152 5200 5222 "plugins/funind/invfun.ml" 152 5200 5223
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 152 5200 5224 "plugins/funind/invfun.ml" 152 5200 5295
)
"plugins/funind/invfun.ml" 152 5200 5224 "plugins/funind/invfun.ml" 152 5200 5225
type(
  Term.constr
)
ident(
  def c "plugins/funind/invfun.ml" 152 5200 5229 "plugins/funind/invfun.ml" 152 5200 5295
)
"plugins/funind/invfun.ml" 152 5200 5232 "plugins/funind/invfun.ml" 152 5200 5233
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 152 5200 5222 "plugins/funind/invfun.ml" 152 5200 5223
)
"plugins/funind/invfun.ml" 152 5200 5234 "plugins/funind/invfun.ml" 152 5200 5236
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"plugins/funind/invfun.ml" 152 5200 5237 "plugins/funind/invfun.ml" 152 5200 5249
type(
  Term.constr array -> int
)
ident(
  ext_ref Array.length
)
"plugins/funind/invfun.ml" 152 5200 5250 "plugins/funind/invfun.ml" 152 5200 5270
type(
  Term.constr array
)
ident(
  int_ref args_and_res_as_rels "plugins/funind/invfun.ml" 147 5001 5009 "plugins/funind/invfun.ml" 147 5001 5029
)
"plugins/funind/invfun.ml" 152 5200 5237 "plugins/funind/invfun.ml" 152 5200 5270
type(
  int
)
"plugins/funind/invfun.ml" 152 5200 5271 "plugins/funind/invfun.ml" 152 5200 5272
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/invfun.ml" 152 5200 5273 "plugins/funind/invfun.ml" 152 5200 5274
type(
  int
)
"plugins/funind/invfun.ml" 152 5200 5237 "plugins/funind/invfun.ml" 152 5200 5274
type(
  int
)
"plugins/funind/invfun.ml" 152 5200 5232 "plugins/funind/invfun.ml" 152 5200 5274
type(
  bool
)
"plugins/funind/invfun.ml" 152 5200 5280 "plugins/funind/invfun.ml" 152 5200 5284
type(
  int -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.lift
)
"plugins/funind/invfun.ml" 152 5200 5285 "plugins/funind/invfun.ml" 152 5200 5286
type(
  int
)
"plugins/funind/invfun.ml" 152 5200 5287 "plugins/funind/invfun.ml" 152 5200 5288
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/invfun.ml" 152 5200 5224 "plugins/funind/invfun.ml" 152 5200 5225
)
"plugins/funind/invfun.ml" 152 5200 5280 "plugins/funind/invfun.ml" 152 5200 5288
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 152 5200 5294 "plugins/funind/invfun.ml" 152 5200 5295
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/invfun.ml" 152 5200 5224 "plugins/funind/invfun.ml" 152 5200 5225
)
"plugins/funind/invfun.ml" 152 5200 5229 "plugins/funind/invfun.ml" 152 5200 5295
type(
  Term.constr
)
"plugins/funind/invfun.ml" 152 5200 5217 "plugins/funind/invfun.ml" 152 5200 5296
type(
  int -> Term.constr -> Term.constr
)
"plugins/funind/invfun.ml" 152 5200 5297 "plugins/funind/invfun.ml" 152 5200 5317
type(
  Term.constr array
)
ident(
  int_ref args_and_res_as_rels "plugins/funind/invfun.ml" 147 5001 5009 "plugins/funind/invfun.ml" 147 5001 5029
)
"plugins/funind/invfun.ml" 152 5200 5206 "plugins/funind/invfun.ml" 152 5200 5317
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 154 5325 5329 "plugins/funind/invfun.ml" 154 5325 5334
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/invfun.ml" 154 5325 5335 "plugins/funind/invfun.ml" 154 5325 5340
type(
  Term.constr
)
ident(
  int_ref graph "plugins/funind/invfun.ml" 103 3258 3285 "plugins/funind/invfun.ml" 103 3258 3290
)
"plugins/funind/invfun.ml" 154 5325 5341 "plugins/funind/invfun.ml" 154 5325 5361
type(
  Term.constr array
)
ident(
  int_ref args_and_res_as_rels "plugins/funind/invfun.ml" 151 5169 5177 "plugins/funind/invfun.ml" 151 5169 5197
)
"plugins/funind/invfun.ml" 154 5325 5334 "plugins/funind/invfun.ml" 154 5325 5362
type(
  Term.constr * Term.constr array
)
"plugins/funind/invfun.ml" 154 5325 5329 "plugins/funind/invfun.ml" 154 5325 5362
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 151 5169 5173 "plugins/funind/invfun.ml" 154 5325 5362
type(
  Term.constr
)
"plugins/funind/invfun.ml" 147 5001 5005 "plugins/funind/invfun.ml" 154 5325 5362
type(
  Term.constr
)
"plugins/funind/invfun.ml" 159 5537 5543 "plugins/funind/invfun.ml" 159 5537 5551
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 160 5554 5564 "plugins/funind/invfun.ml" 160 5554 5570
type(
  Names.identifier
)
ident(
  int_ref res_id "plugins/funind/invfun.ml" 119 3969 3975 "plugins/funind/invfun.ml" 119 3969 3981
)
"plugins/funind/invfun.ml" 160 5554 5559 "plugins/funind/invfun.ml" 160 5554 5570
type(
  Names.name
)
"plugins/funind/invfun.ml" 160 5554 5571 "plugins/funind/invfun.ml" 160 5554 5575
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 160 5554 5576 "plugins/funind/invfun.ml" 160 5554 5580
type(
  int -> Term.types -> Term.types
)
ident(
  ext_ref Term.lift
)
"plugins/funind/invfun.ml" 160 5554 5581 "plugins/funind/invfun.ml" 160 5554 5582
type(
  int
)
"plugins/funind/invfun.ml" 160 5554 5583 "plugins/funind/invfun.ml" 160 5554 5591
type(
  Term.types
)
ident(
  int_ref res_type "plugins/funind/invfun.ml" 107 3552 3567 "plugins/funind/invfun.ml" 107 3552 3575
)
"plugins/funind/invfun.ml" 160 5554 5576 "plugins/funind/invfun.ml" 160 5554 5591
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 160 5554 5558 "plugins/funind/invfun.ml" 160 5554 5592
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 160 5554 5600 "plugins/funind/invfun.ml" 160 5554 5605
type(
  Names.identifier
)
ident(
  int_ref fv_id "plugins/funind/invfun.ml" 124 4145 4151 "plugins/funind/invfun.ml" 124 4145 4156
)
"plugins/funind/invfun.ml" 160 5554 5595 "plugins/funind/invfun.ml" 160 5554 5605
type(
  Names.name
)
"plugins/funind/invfun.ml" 160 5554 5612 "plugins/funind/invfun.ml" 160 5554 5617
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/invfun.ml" 160 5554 5618 "plugins/funind/invfun.ml" 160 5554 5625
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/invfun.ml" 160 5554 5626 "plugins/funind/invfun.ml" 160 5554 5627
type(
  Names.constant
)
ident(
  int_ref f "plugins/funind/invfun.ml" 103 3258 3283 "plugins/funind/invfun.ml" 103 3258 3284
)
"plugins/funind/invfun.ml" 160 5554 5618 "plugins/funind/invfun.ml" 160 5554 5627
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 160 5554 5628 "plugins/funind/invfun.ml" 160 5554 5640
type(
  Term.constr array
)
ident(
  int_ref args_as_rels "plugins/funind/invfun.ml" 134 4533 4539 "plugins/funind/invfun.ml" 134 4533 4551
)
"plugins/funind/invfun.ml" 160 5554 5617 "plugins/funind/invfun.ml" 160 5554 5641
type(
  Term.constr * Term.constr array
)
"plugins/funind/invfun.ml" 160 5554 5611 "plugins/funind/invfun.ml" 160 5554 5642
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 160 5554 5606 "plugins/funind/invfun.ml" 160 5554 5642
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 160 5554 5643 "plugins/funind/invfun.ml" 160 5554 5651
type(
  Term.types
)
ident(
  int_ref res_type "plugins/funind/invfun.ml" 107 3552 3567 "plugins/funind/invfun.ml" 107 3552 3575
)
"plugins/funind/invfun.ml" 160 5554 5594 "plugins/funind/invfun.ml" 160 5554 5652
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 160 5554 5654 "plugins/funind/invfun.ml" 160 5554 5662
type(
  Term.rel_declaration list
)
ident(
  int_ref fun_ctxt "plugins/funind/invfun.ml" 107 3552 3558 "plugins/funind/invfun.ml" 107 3552 3566
)
"plugins/funind/invfun.ml" 160 5554 5594 "plugins/funind/invfun.ml" 160 5554 5662
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 160 5554 5558 "plugins/funind/invfun.ml" 160 5554 5662
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 163 5755 5760 "plugins/funind/invfun.ml" 163 5755 5766
type(
  bool
)
ident(
  int_ref g_to_f "plugins/funind/invfun.ml" 103 3258 3276 "plugins/funind/invfun.ml" 103 3258 3282
)
"plugins/funind/invfun.ml" 164 5767 5775 "plugins/funind/invfun.ml" 164 5767 5784
type(
  Names.name
)
"plugins/funind/invfun.ml" 164 5767 5785 "plugins/funind/invfun.ml" 164 5767 5789
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 164 5767 5790 "plugins/funind/invfun.ml" 164 5767 5803
type(
  Term.types
)
ident(
  int_ref graph_applied "plugins/funind/invfun.ml" 146 4979 4985 "plugins/funind/invfun.ml" 146 4979 4998
)
"plugins/funind/invfun.ml" 164 5767 5774 "plugins/funind/invfun.ml" 164 5767 5804
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 164 5767 5806 "plugins/funind/invfun.ml" 164 5767 5814
type(
  Term.rel_declaration list
)
ident(
  int_ref pre_ctxt "plugins/funind/invfun.ml" 159 5537 5543 "plugins/funind/invfun.ml" 159 5537 5551
)
"plugins/funind/invfun.ml" 164 5767 5774 "plugins/funind/invfun.ml" 164 5767 5814
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 164 5767 5816 "plugins/funind/invfun.ml" 164 5767 5820
type(
  int -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.lift
)
"plugins/funind/invfun.ml" 164 5767 5821 "plugins/funind/invfun.ml" 164 5767 5822
type(
  int
)
"plugins/funind/invfun.ml" 164 5767 5823 "plugins/funind/invfun.ml" 164 5767 5839
type(
  Term.constr
)
ident(
  int_ref res_eq_f_of_args "plugins/funind/invfun.ml" 139 4727 4733 "plugins/funind/invfun.ml" 139 4727 4749
)
"plugins/funind/invfun.ml" 164 5767 5815 "plugins/funind/invfun.ml" 164 5767 5840
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 164 5767 5774 "plugins/funind/invfun.ml" 164 5767 5840
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 165 5841 5849 "plugins/funind/invfun.ml" 165 5841 5858
type(
  Names.name
)
"plugins/funind/invfun.ml" 165 5841 5859 "plugins/funind/invfun.ml" 165 5841 5863
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 165 5841 5864 "plugins/funind/invfun.ml" 165 5841 5880
type(
  Term.types
)
ident(
  int_ref res_eq_f_of_args "plugins/funind/invfun.ml" 139 4727 4733 "plugins/funind/invfun.ml" 139 4727 4749
)
"plugins/funind/invfun.ml" 165 5841 5848 "plugins/funind/invfun.ml" 165 5841 5881
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 165 5841 5883 "plugins/funind/invfun.ml" 165 5841 5891
type(
  Term.rel_declaration list
)
ident(
  int_ref pre_ctxt "plugins/funind/invfun.ml" 159 5537 5543 "plugins/funind/invfun.ml" 159 5537 5551
)
"plugins/funind/invfun.ml" 165 5841 5848 "plugins/funind/invfun.ml" 165 5841 5891
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 165 5841 5893 "plugins/funind/invfun.ml" 165 5841 5897
type(
  int -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.lift
)
"plugins/funind/invfun.ml" 165 5841 5898 "plugins/funind/invfun.ml" 165 5841 5899
type(
  int
)
"plugins/funind/invfun.ml" 165 5841 5900 "plugins/funind/invfun.ml" 165 5841 5913
type(
  Term.constr
)
ident(
  int_ref graph_applied "plugins/funind/invfun.ml" 146 4979 4985 "plugins/funind/invfun.ml" 146 4979 4998
)
"plugins/funind/invfun.ml" 165 5841 5892 "plugins/funind/invfun.ml" 165 5841 5914
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 165 5841 5848 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 163 5755 5757 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 159 5537 5539 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 146 4979 4981 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 139 4727 4729 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 134 4533 4535 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 130 4413 4415 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 124 4145 4147 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 119 3969 3971 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 113 3747 3749 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 112 3707 3709 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 107 3552 3554 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 106 3501 3503 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 105 3392 3394 "plugins/funind/invfun.ml" 165 5841 5914
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 173 6089 6093 "plugins/funind/invfun.ml" 173 6089 6117
type(
  Term.constr -> Term.constr * Term.types
)
ident(
  def find_induction_principle "plugins/funind/invfun.ml" 206 6984 6984 --
)
"plugins/funind/invfun.ml" 173 6089 6118 "plugins/funind/invfun.ml" 173 6089 6119
type(
  Term.constr
)
ident(
  def f "plugins/funind/invfun.ml" 174 6122 6124 "plugins/funind/invfun.ml" 184 6487 6502
)
"plugins/funind/invfun.ml" 174 6122 6128 "plugins/funind/invfun.ml" 174 6122 6141
type(
  Names.constant
)
"plugins/funind/invfun.ml" 174 6122 6151 "plugins/funind/invfun.ml" 174 6122 6163
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 174 6122 6164 "plugins/funind/invfun.ml" 174 6122 6165
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/invfun.ml" 173 6089 6118 "plugins/funind/invfun.ml" 173 6089 6119
)
"plugins/funind/invfun.ml" 174 6122 6151 "plugins/funind/invfun.ml" 174 6122 6165
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 175 6171 6183 "plugins/funind/invfun.ml" 175 6171 6185
type(
  Names.constant
)
ident(
  def c' "plugins/funind/invfun.ml" 175 6171 6189 "plugins/funind/invfun.ml" 175 6171 6191
)
"plugins/funind/invfun.ml" 175 6171 6177 "plugins/funind/invfun.ml" 175 6171 6185
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 175 6171 6189 "plugins/funind/invfun.ml" 175 6171 6191
type(
  Names.constant
)
ident(
  int_ref c' "plugins/funind/invfun.ml" 175 6171 6183 "plugins/funind/invfun.ml" 175 6171 6185
)
"plugins/funind/invfun.ml" 176 6192 6198 "plugins/funind/invfun.ml" 176 6192 6199
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 176 6192 6203 "plugins/funind/invfun.ml" 176 6192 6208
type(
  string -> Names.constant
)
ident(
  ext_ref Util.error
)
"plugins/funind/invfun.ml" 176 6192 6209 "plugins/funind/invfun.ml" 176 6192 6239
type(
  string
)
"plugins/funind/invfun.ml" 176 6192 6203 "plugins/funind/invfun.ml" 176 6192 6239
type(
  Names.constant
)
"plugins/funind/invfun.ml" 174 6122 6145 "plugins/funind/invfun.ml" 176 6192 6239
type(
  Names.constant
)
"plugins/funind/invfun.ml" 178 6245 6251 "plugins/funind/invfun.ml" 178 6245 6256
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 178 6245 6259 "plugins/funind/invfun.ml" 178 6245 6278
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/invfun.ml" 178 6245 6279 "plugins/funind/invfun.ml" 178 6245 6292
type(
  Names.constant
)
ident(
  int_ref f_as_constant "plugins/funind/invfun.ml" 174 6122 6128 "plugins/funind/invfun.ml" 174 6122 6141
)
"plugins/funind/invfun.ml" 178 6245 6259 "plugins/funind/invfun.ml" 178 6245 6292
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 179 6296 6304 "plugins/funind/invfun.ml" 179 6296 6309
type(
  Indfun_common.function_info
)
ident(
  int_ref infos "plugins/funind/invfun.ml" 178 6245 6251 "plugins/funind/invfun.ml" 178 6245 6256
)
"plugins/funind/invfun.ml" 179 6296 6304 "plugins/funind/invfun.ml" 179 6296 6320
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 180 6326 6332 "plugins/funind/invfun.ml" 180 6326 6336
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 180 6326 6340 "plugins/funind/invfun.ml" 180 6326 6345
type(
  exn -> Term.constr * Term.types
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/invfun.ml" 180 6326 6346 "plugins/funind/invfun.ml" 180 6326 6355
type(
  exn
)
"plugins/funind/invfun.ml" 180 6326 6340 "plugins/funind/invfun.ml" 180 6326 6355
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 181 6356 6367 "plugins/funind/invfun.ml" 181 6356 6377
type(
  Names.constant
)
ident(
  def rect_lemma "plugins/funind/invfun.ml" 182 6381 6382 "plugins/funind/invfun.ml" 184 6487 6502
)
"plugins/funind/invfun.ml" 181 6356 6362 "plugins/funind/invfun.ml" 181 6356 6377
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 182 6381 6386 "plugins/funind/invfun.ml" 182 6381 6396
type(
  Term.constr
)
"plugins/funind/invfun.ml" 182 6381 6399 "plugins/funind/invfun.ml" 182 6381 6406
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/invfun.ml" 182 6381 6407 "plugins/funind/invfun.ml" 182 6381 6417
type(
  Names.constant
)
ident(
  int_ref rect_lemma "plugins/funind/invfun.ml" 181 6356 6367 "plugins/funind/invfun.ml" 181 6356 6377
)
"plugins/funind/invfun.ml" 182 6381 6399 "plugins/funind/invfun.ml" 182 6381 6417
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 183 6421 6426 "plugins/funind/invfun.ml" 183 6421 6429
type(
  Term.types
)
"plugins/funind/invfun.ml" 183 6421 6432 "plugins/funind/invfun.ml" 183 6421 6446
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.types
)
ident(
  ext_ref Typing.type_of
)
"plugins/funind/invfun.ml" 183 6421 6448 "plugins/funind/invfun.ml" 183 6421 6458
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/invfun.ml" 183 6421 6459 "plugins/funind/invfun.ml" 183 6421 6461
type(
  unit
)
"plugins/funind/invfun.ml" 183 6421 6447 "plugins/funind/invfun.ml" 183 6421 6462
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 183 6421 6463 "plugins/funind/invfun.ml" 183 6421 6472
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/invfun.ml" 183 6421 6473 "plugins/funind/invfun.ml" 183 6421 6483
type(
  Term.constr
)
ident(
  int_ref rect_lemma "plugins/funind/invfun.ml" 182 6381 6386 "plugins/funind/invfun.ml" 182 6381 6396
)
"plugins/funind/invfun.ml" 183 6421 6432 "plugins/funind/invfun.ml" 183 6421 6483
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 184 6487 6488 "plugins/funind/invfun.ml" 184 6487 6498
type(
  Term.constr
)
ident(
  int_ref rect_lemma "plugins/funind/invfun.ml" 182 6381 6386 "plugins/funind/invfun.ml" 182 6381 6396
)
"plugins/funind/invfun.ml" 184 6487 6499 "plugins/funind/invfun.ml" 184 6487 6502
type(
  Term.types
)
ident(
  int_ref typ "plugins/funind/invfun.ml" 183 6421 6426 "plugins/funind/invfun.ml" 183 6421 6429
)
"plugins/funind/invfun.ml" 184 6487 6488 "plugins/funind/invfun.ml" 184 6487 6502
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 183 6421 6422 "plugins/funind/invfun.ml" 184 6487 6502
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 182 6381 6382 "plugins/funind/invfun.ml" 184 6487 6502
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 179 6296 6298 "plugins/funind/invfun.ml" 184 6487 6502
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 178 6245 6247 "plugins/funind/invfun.ml" 184 6487 6502
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 174 6122 6124 "plugins/funind/invfun.ml" 184 6487 6502
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 206 6984 6992 "plugins/funind/invfun.ml" 206 6984 7009
type(
  Names.identifier -> Names.identifier list -> int -> Names.identifier list
)
ident(
  def generate_fresh_id "plugins/funind/invfun.ml" 206 6984 6984 --
)
"plugins/funind/invfun.ml" 206 6984 7010 "plugins/funind/invfun.ml" 206 6984 7011
type(
  Names.identifier
)
ident(
  def x "plugins/funind/invfun.ml" 206 6984 7012 "plugins/funind/invfun.ml" 211 7107 7157
)
"plugins/funind/invfun.ml" 206 6984 7012 "plugins/funind/invfun.ml" 206 6984 7017
type(
  Names.identifier list
)
ident(
  def avoid "plugins/funind/invfun.ml" 206 6984 7018 "plugins/funind/invfun.ml" 211 7107 7157
)
"plugins/funind/invfun.ml" 206 6984 7018 "plugins/funind/invfun.ml" 206 6984 7019
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 207 7022 7024 "plugins/funind/invfun.ml" 211 7107 7157
)
"plugins/funind/invfun.ml" 207 7022 7027 "plugins/funind/invfun.ml" 207 7022 7028
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 206 6984 7018 "plugins/funind/invfun.ml" 206 6984 7019
)
"plugins/funind/invfun.ml" 207 7022 7029 "plugins/funind/invfun.ml" 207 7022 7031
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( == )
)
"plugins/funind/invfun.ml" 207 7022 7032 "plugins/funind/invfun.ml" 207 7022 7033
type(
  int
)
"plugins/funind/invfun.ml" 207 7022 7027 "plugins/funind/invfun.ml" 207 7022 7033
type(
  bool
)
"plugins/funind/invfun.ml" 208 7034 7041 "plugins/funind/invfun.ml" 208 7034 7043
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 210 7051 7059 "plugins/funind/invfun.ml" 210 7051 7061
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 210 7051 7064 "plugins/funind/invfun.ml" 210 7051 7095
type(
  Names.identifier -> Names.identifier list -> Names.identifier
)
ident(
  ext_ref Namegen.next_ident_away_in_goal
)
"plugins/funind/invfun.ml" 210 7051 7096 "plugins/funind/invfun.ml" 210 7051 7097
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/invfun.ml" 206 6984 7010 "plugins/funind/invfun.ml" 206 6984 7011
)
"plugins/funind/invfun.ml" 210 7051 7098 "plugins/funind/invfun.ml" 210 7051 7103
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/invfun.ml" 206 6984 7012 "plugins/funind/invfun.ml" 206 6984 7017
)
"plugins/funind/invfun.ml" 210 7051 7064 "plugins/funind/invfun.ml" 210 7051 7103
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 211 7107 7111 "plugins/funind/invfun.ml" 211 7107 7113
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 210 7051 7059 "plugins/funind/invfun.ml" 210 7051 7061
)
"plugins/funind/invfun.ml" 211 7107 7116 "plugins/funind/invfun.ml" 211 7107 7133
type(
  Names.identifier -> Names.identifier list -> int -> Names.identifier list
)
ident(
  int_ref generate_fresh_id "plugins/funind/invfun.ml" 206 6984 6992 "plugins/funind/invfun.ml" 206 6984 7009
)
"plugins/funind/invfun.ml" 211 7107 7134 "plugins/funind/invfun.ml" 211 7107 7135
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/invfun.ml" 206 6984 7010 "plugins/funind/invfun.ml" 206 6984 7011
)
"plugins/funind/invfun.ml" 211 7107 7137 "plugins/funind/invfun.ml" 211 7107 7139
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 210 7051 7059 "plugins/funind/invfun.ml" 210 7051 7061
)
"plugins/funind/invfun.ml" 211 7107 7141 "plugins/funind/invfun.ml" 211 7107 7146
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/invfun.ml" 206 6984 7012 "plugins/funind/invfun.ml" 206 6984 7017
)
"plugins/funind/invfun.ml" 211 7107 7136 "plugins/funind/invfun.ml" 211 7107 7147
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 211 7107 7149 "plugins/funind/invfun.ml" 211 7107 7153
type(
  int -> int
)
ident(
  ext_ref Pervasives.pred
)
"plugins/funind/invfun.ml" 211 7107 7154 "plugins/funind/invfun.ml" 211 7107 7155
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 206 6984 7018 "plugins/funind/invfun.ml" 206 6984 7019
)
"plugins/funind/invfun.ml" 211 7107 7148 "plugins/funind/invfun.ml" 211 7107 7156
type(
  int
)
"plugins/funind/invfun.ml" 211 7107 7115 "plugins/funind/invfun.ml" 211 7107 7157
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 211 7107 7111 "plugins/funind/invfun.ml" 211 7107 7157
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 210 7051 7055 "plugins/funind/invfun.ml" 211 7107 7157
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 207 7022 7024 "plugins/funind/invfun.ml" 211 7107 7157
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 238 8271 8275 "plugins/funind/invfun.ml" 238 8271 8292
type(
  (bool ->
   Term.constr ->
   (Term.constr * Term.constr Rawterm.bindings) option ->
   (Util.loc * Genarg.intro_pattern_expr) option ->
   Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Term.constr array ->
  Term.constr array ->
  (Term.constr * Term.types) array ->
  ('a * (Term.rel_declaration list * Term.types)) array ->
  int -> Tacmach.tactic
)
ident(
  def prove_fun_correct "plugins/funind/invfun.ml" 466 16517 16517 --
)
"plugins/funind/invfun.ml" 238 8271 8293 "plugins/funind/invfun.ml" 238 8271 8313
type(
  bool ->
  Term.constr ->
  (Term.constr * Term.constr Rawterm.bindings) option ->
  (Util.loc * Genarg.intro_pattern_expr) option ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def functional_induction "plugins/funind/invfun.ml" 238 8271 8314 "plugins/funind/invfun.ml" 461 16406 16413
)
"plugins/funind/invfun.ml" 238 8271 8314 "plugins/funind/invfun.ml" 238 8271 8325
type(
  Term.constr array
)
ident(
  def funs_constr "plugins/funind/invfun.ml" 238 8271 8326 "plugins/funind/invfun.ml" 461 16406 16413
)
"plugins/funind/invfun.ml" 238 8271 8326 "plugins/funind/invfun.ml" 238 8271 8339
type(
  Term.constr array
)
ident(
  def graphs_constr "plugins/funind/invfun.ml" 238 8271 8340 "plugins/funind/invfun.ml" 461 16406 16413
)
"plugins/funind/invfun.ml" 238 8271 8340 "plugins/funind/invfun.ml" 238 8271 8347
type(
  (Term.constr * Term.types) array
)
ident(
  def schemes "plugins/funind/invfun.ml" 238 8271 8348 "plugins/funind/invfun.ml" 461 16406 16413
)
"plugins/funind/invfun.ml" 238 8271 8348 "plugins/funind/invfun.ml" 238 8271 8366
type(
  ('a * (Term.rel_declaration list * Term.types)) array
)
ident(
  def lemmas_types_infos "plugins/funind/invfun.ml" 238 8271 8367 "plugins/funind/invfun.ml" 461 16406 16413
)
"plugins/funind/invfun.ml" 238 8271 8367 "plugins/funind/invfun.ml" 238 8271 8368
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 238 8271 8369 "plugins/funind/invfun.ml" 461 16406 16413
)
"plugins/funind/invfun.ml" 239 8380 8386 "plugins/funind/invfun.ml" 239 8380 8387
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 244 8627 8631 "plugins/funind/invfun.ml" 461 16406 16413
)
"plugins/funind/invfun.ml" 244 8627 8635 "plugins/funind/invfun.ml" 244 8627 8641
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 245 8644 8650 "plugins/funind/invfun.ml" 245 8644 8659
type(
  ('a * (Term.rel_declaration list * Term.types) -> Term.constr) ->
  ('a * (Term.rel_declaration list * Term.types)) array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/invfun.ml" 246 8660 8667 "plugins/funind/invfun.ml" 246 8660 8668
type(
  'a
)
"plugins/funind/invfun.ml" 246 8660 8670 "plugins/funind/invfun.ml" 246 8660 8674
type(
  Term.rel_declaration list
)
ident(
  def ctxt "plugins/funind/invfun.ml" 247 8686 8690 "plugins/funind/invfun.ml" 252 8887 8910
)
"plugins/funind/invfun.ml" 246 8660 8675 "plugins/funind/invfun.ml" 246 8660 8680
type(
  Term.types
)
ident(
  def concl "plugins/funind/invfun.ml" 247 8686 8690 "plugins/funind/invfun.ml" 252 8887 8910
)
"plugins/funind/invfun.ml" 246 8660 8669 "plugins/funind/invfun.ml" 246 8660 8681
type(
  Term.rel_declaration list * Term.types
)
"plugins/funind/invfun.ml" 246 8660 8666 "plugins/funind/invfun.ml" 246 8660 8682
type(
  'a * (Term.rel_declaration list * Term.types)
)
"plugins/funind/invfun.ml" 247 8686 8696 "plugins/funind/invfun.ml" 247 8686 8700
type(
  Term.rel_declaration list
)
ident(
  int_ref ctxt "plugins/funind/invfun.ml" 246 8660 8670 "plugins/funind/invfun.ml" 246 8660 8674
)
"plugins/funind/invfun.ml" 248 8706 8714 "plugins/funind/invfun.ml" 248 8706 8716
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 248 8706 8720 "plugins/funind/invfun.ml" 248 8706 8721
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 248 8706 8719 "plugins/funind/invfun.ml" 248 8706 8722
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 248 8706 8714 "plugins/funind/invfun.ml" 248 8706 8722
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 248 8706 8726 "plugins/funind/invfun.ml" 248 8706 8727
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 248 8706 8728 "plugins/funind/invfun.ml" 248 8706 8729
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 248 8706 8725 "plugins/funind/invfun.ml" 248 8706 8730
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 248 8706 8714 "plugins/funind/invfun.ml" 248 8706 8730
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 248 8706 8734 "plugins/funind/invfun.ml" 248 8706 8741
type(
  string -> Term.constr
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/invfun.ml" 248 8706 8742 "plugins/funind/invfun.ml" 248 8706 8755
type(
  string
)
"plugins/funind/invfun.ml" 248 8706 8734 "plugins/funind/invfun.ml" 248 8706 8755
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 249 8756 8764 "plugins/funind/invfun.ml" 249 8756 8768
type(
  Term.rel_declaration
)
ident(
  def hres "plugins/funind/invfun.ml" 250 8792 8795 "plugins/funind/invfun.ml" 252 8887 8910
)
"plugins/funind/invfun.ml" 249 8756 8770 "plugins/funind/invfun.ml" 249 8756 8773
type(
  Term.rel_declaration
)
ident(
  def res "plugins/funind/invfun.ml" 250 8792 8795 "plugins/funind/invfun.ml" 252 8887 8910
)
"plugins/funind/invfun.ml" 249 8756 8776 "plugins/funind/invfun.ml" 249 8756 8777
type(
  Names.name
)
ident(
  def x "plugins/funind/invfun.ml" 250 8792 8795 "plugins/funind/invfun.ml" 252 8887 8910
)
"plugins/funind/invfun.ml" 249 8756 8778 "plugins/funind/invfun.ml" 249 8756 8779
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 249 8756 8780 "plugins/funind/invfun.ml" 249 8756 8781
type(
  Term.types
)
ident(
  def t "plugins/funind/invfun.ml" 250 8792 8795 "plugins/funind/invfun.ml" 252 8887 8910
)
"plugins/funind/invfun.ml" 249 8756 8775 "plugins/funind/invfun.ml" 249 8756 8782
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 249 8756 8784 "plugins/funind/invfun.ml" 249 8756 8788
type(
  Term.rel_declaration list
)
ident(
  def ctxt "plugins/funind/invfun.ml" 250 8792 8795 "plugins/funind/invfun.ml" 252 8887 8910
)
"plugins/funind/invfun.ml" 249 8756 8775 "plugins/funind/invfun.ml" 249 8756 8788
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 249 8756 8770 "plugins/funind/invfun.ml" 249 8756 8788
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 249 8756 8764 "plugins/funind/invfun.ml" 249 8756 8788
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 250 8792 8795 "plugins/funind/invfun.ml" 250 8792 8823
type(
  init:Term.types -> Term.rel_context -> Term.constr
)
ident(
  ext_ref Termops.it_mkLambda_or_LetIn
)
"plugins/funind/invfun.ml" 251 8824 8836 "plugins/funind/invfun.ml" 251 8824 8862
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/invfun.ml" 251 8824 8869 "plugins/funind/invfun.ml" 251 8824 8874
type(
  Term.types
)
ident(
  int_ref concl "plugins/funind/invfun.ml" 246 8660 8675 "plugins/funind/invfun.ml" 246 8660 8680
)
"plugins/funind/invfun.ml" 251 8824 8876 "plugins/funind/invfun.ml" 251 8824 8880
type(
  Term.rel_declaration
)
ident(
  int_ref hres "plugins/funind/invfun.ml" 249 8756 8764 "plugins/funind/invfun.ml" 249 8756 8768
)
"plugins/funind/invfun.ml" 251 8824 8881 "plugins/funind/invfun.ml" 251 8824 8884
type(
  Term.rel_declaration
)
ident(
  int_ref res "plugins/funind/invfun.ml" 249 8756 8770 "plugins/funind/invfun.ml" 249 8756 8773
)
"plugins/funind/invfun.ml" 251 8824 8875 "plugins/funind/invfun.ml" 251 8824 8885
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 251 8824 8835 "plugins/funind/invfun.ml" 251 8824 8886
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 252 8887 8894 "plugins/funind/invfun.ml" 252 8887 8895
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/invfun.ml" 249 8756 8776 "plugins/funind/invfun.ml" 249 8756 8777
)
"plugins/funind/invfun.ml" 252 8887 8896 "plugins/funind/invfun.ml" 252 8887 8900
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 252 8887 8901 "plugins/funind/invfun.ml" 252 8887 8902
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/invfun.ml" 249 8756 8780 "plugins/funind/invfun.ml" 249 8756 8781
)
"plugins/funind/invfun.ml" 252 8887 8893 "plugins/funind/invfun.ml" 252 8887 8903
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 252 8887 8905 "plugins/funind/invfun.ml" 252 8887 8909
type(
  Term.rel_declaration list
)
ident(
  int_ref ctxt "plugins/funind/invfun.ml" 249 8756 8784 "plugins/funind/invfun.ml" 249 8756 8788
)
"plugins/funind/invfun.ml" 252 8887 8892 "plugins/funind/invfun.ml" 252 8887 8910
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 250 8792 8795 "plugins/funind/invfun.ml" 252 8887 8910
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 247 8686 8690 "plugins/funind/invfun.ml" 252 8887 8910
type(
  Term.constr
)
"plugins/funind/invfun.ml" 246 8660 8661 "plugins/funind/invfun.ml" 253 8911 8913
type(
  'a * (Term.rel_declaration list * Term.types) -> Term.constr
)
"plugins/funind/invfun.ml" 254 8914 8915 "plugins/funind/invfun.ml" 254 8914 8933
type(
  ('a * (Term.rel_declaration list * Term.types)) array
)
ident(
  int_ref lemmas_types_infos "plugins/funind/invfun.ml" 238 8271 8348 "plugins/funind/invfun.ml" 238 8271 8366
)
"plugins/funind/invfun.ml" 245 8644 8650 "plugins/funind/invfun.ml" 254 8914 8933
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 257 8997 9005 "plugins/funind/invfun.ml" 257 8997 9014
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 257 8997 9017 "plugins/funind/invfun.ml" 257 8997 9024
type(
  Term.constr -> Names.inductive
)
ident(
  ext_ref Term.destInd
)
"plugins/funind/invfun.ml" 257 8997 9025 "plugins/funind/invfun.ml" 257 8997 9038
type(
  Term.constr array
)
ident(
  int_ref graphs_constr "plugins/funind/invfun.ml" 238 8271 8326 "plugins/funind/invfun.ml" 238 8271 8339
)
"plugins/funind/invfun.ml" 257 8997 9040 "plugins/funind/invfun.ml" 257 8997 9041
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 238 8271 8367 "plugins/funind/invfun.ml" 238 8271 8368
)
"plugins/funind/invfun.ml" 257 8997 9025 "plugins/funind/invfun.ml" 257 8997 9042
type(
  Term.constr
)
"plugins/funind/invfun.ml" 257 8997 9017 "plugins/funind/invfun.ml" 257 8997 9042
call(
  stack
)
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 258 9046 9054 "plugins/funind/invfun.ml" 258 9046 9056
type(
  Names.mutual_inductive
)
"plugins/funind/invfun.ml" 258 9046 9059 "plugins/funind/invfun.ml" 258 9046 9062
type(
  Names.inductive -> Names.mutual_inductive
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 258 9046 9063 "plugins/funind/invfun.ml" 258 9046 9072
type(
  Names.inductive
)
ident(
  int_ref graph_ind "plugins/funind/invfun.ml" 257 8997 9005 "plugins/funind/invfun.ml" 257 8997 9014
)
"plugins/funind/invfun.ml" 258 9046 9059 "plugins/funind/invfun.ml" 258 9046 9072
type(
  Names.mutual_inductive
)
"plugins/funind/invfun.ml" 259 9076 9084 "plugins/funind/invfun.ml" 259 9076 9087
type(
  Declarations.mutual_inductive_body
)
"plugins/funind/invfun.ml" 259 9076 9088 "plugins/funind/invfun.ml" 259 9076 9089
type(
  Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 259 9076 9084 "plugins/funind/invfun.ml" 259 9076 9089
type(
  Declarations.mutual_inductive_body * Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 259 9076 9092 "plugins/funind/invfun.ml" 259 9076 9115
type(
  Names.inductive ->
  Declarations.mutual_inductive_body * Declarations.one_inductive_body
)
ident(
  ext_ref Global.lookup_inductive
)
"plugins/funind/invfun.ml" 259 9076 9116 "plugins/funind/invfun.ml" 259 9076 9125
type(
  Names.inductive
)
ident(
  int_ref graph_ind "plugins/funind/invfun.ml" 257 8997 9005 "plugins/funind/invfun.ml" 257 8997 9014
)
"plugins/funind/invfun.ml" 259 9076 9092 "plugins/funind/invfun.ml" 259 9076 9125
call(
  stack
)
type(
  Declarations.mutual_inductive_body * Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 261 9201 9209 "plugins/funind/invfun.ml" 261 9201 9220
type(
  Term.constr
)
"plugins/funind/invfun.ml" 261 9201 9221 "plugins/funind/invfun.ml" 261 9201 9231
type(
  Term.types
)
"plugins/funind/invfun.ml" 261 9201 9209 "plugins/funind/invfun.ml" 261 9201 9231
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 261 9201 9234 "plugins/funind/invfun.ml" 261 9201 9241
type(
  (Term.constr * Term.types) array
)
ident(
  int_ref schemes "plugins/funind/invfun.ml" 238 8271 8340 "plugins/funind/invfun.ml" 238 8271 8347
)
"plugins/funind/invfun.ml" 261 9201 9243 "plugins/funind/invfun.ml" 261 9201 9244
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 238 8271 8367 "plugins/funind/invfun.ml" 238 8271 8368
)
"plugins/funind/invfun.ml" 261 9201 9234 "plugins/funind/invfun.ml" 261 9201 9245
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 262 9249 9257 "plugins/funind/invfun.ml" 262 9249 9267
type(
  Term.constr
)
"plugins/funind/invfun.ml" 262 9249 9271 "plugins/funind/invfun.ml" 262 9249 9278
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_zeta "plugins/funind/invfun.ml" 78 2228 2232 "plugins/funind/invfun.ml" 78 2228 2239
)
"plugins/funind/invfun.ml" 262 9249 9279 "plugins/funind/invfun.ml" 262 9249 9289
type(
  Term.types
)
ident(
  int_ref princ_type "plugins/funind/invfun.ml" 261 9201 9221 "plugins/funind/invfun.ml" 261 9201 9231
)
"plugins/funind/invfun.ml" 262 9249 9271 "plugins/funind/invfun.ml" 262 9249 9289
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 263 9293 9301 "plugins/funind/invfun.ml" 263 9293 9312
type(
  Tactics.elim_scheme
)
"plugins/funind/invfun.ml" 263 9293 9315 "plugins/funind/invfun.ml" 263 9293 9339
type(
  ?elimc:Term.constr Rawterm.with_bindings ->
  Term.types -> Tactics.elim_scheme
)
ident(
  ext_ref Tactics.compute_elim_sig
)
"plugins/funind/invfun.ml" 263 9293 9340 "plugins/funind/invfun.ml" 263 9293 9350
type(
  Term.types
)
ident(
  int_ref princ_type "plugins/funind/invfun.ml" 262 9249 9257 "plugins/funind/invfun.ml" 262 9249 9267
)
"plugins/funind/invfun.ml" 263 9293 9315 "plugins/funind/invfun.ml" 263 9293 9350
call(
  stack
)
type(
  Tactics.elim_scheme
)
"plugins/funind/invfun.ml" 265 9426 9434 "plugins/funind/invfun.ml" 265 9426 9445
type(
  int
)
"plugins/funind/invfun.ml" 265 9426 9448 "plugins/funind/invfun.ml" 265 9426 9455
type(
  Term.types -> int
)
ident(
  ext_ref Term.nb_prod
)
"plugins/funind/invfun.ml" 265 9426 9457 "plugins/funind/invfun.ml" 265 9426 9465
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/invfun.ml" 265 9426 9466 "plugins/funind/invfun.ml" 265 9426 9467
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 239 8380 8386 "plugins/funind/invfun.ml" 239 8380 8387
)
"plugins/funind/invfun.ml" 265 9426 9456 "plugins/funind/invfun.ml" 265 9426 9468
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 265 9426 9448 "plugins/funind/invfun.ml" 265 9426 9468
call(
  stack
)
type(
  int
)
"plugins/funind/invfun.ml" 265 9426 9470 "plugins/funind/invfun.ml" 265 9426 9471
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/invfun.ml" 265 9426 9472 "plugins/funind/invfun.ml" 265 9426 9473
type(
  int
)
"plugins/funind/invfun.ml" 265 9426 9448 "plugins/funind/invfun.ml" 265 9426 9473
type(
  int
)
"plugins/funind/invfun.ml" 266 9478 9486 "plugins/funind/invfun.ml" 266 9478 9496
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 266 9478 9499 "plugins/funind/invfun.ml" 266 9478 9516
type(
  Names.identifier -> Names.identifier list -> int -> Names.identifier list
)
ident(
  int_ref generate_fresh_id "plugins/funind/invfun.ml" 206 6984 6992 "plugins/funind/invfun.ml" 206 6984 7009
)
"plugins/funind/invfun.ml" 266 9478 9518 "plugins/funind/invfun.ml" 266 9478 9530
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 266 9478 9531 "plugins/funind/invfun.ml" 266 9478 9534
type(
  string
)
"plugins/funind/invfun.ml" 266 9478 9517 "plugins/funind/invfun.ml" 266 9478 9535
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 266 9478 9536 "plugins/funind/invfun.ml" 266 9478 9538
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 266 9478 9539 "plugins/funind/invfun.ml" 266 9478 9550
type(
  int
)
ident(
  int_ref nb_fun_args "plugins/funind/invfun.ml" 265 9426 9434 "plugins/funind/invfun.ml" 265 9426 9445
)
"plugins/funind/invfun.ml" 266 9478 9499 "plugins/funind/invfun.ml" 266 9478 9550
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 267 9554 9562 "plugins/funind/invfun.ml" 267 9554 9565
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 267 9554 9568 "plugins/funind/invfun.ml" 267 9554 9578
type(
  Names.identifier list
)
ident(
  int_ref args_names "plugins/funind/invfun.ml" 266 9478 9486 "plugins/funind/invfun.ml" 266 9478 9496
)
"plugins/funind/invfun.ml" 267 9554 9578 "plugins/funind/invfun.ml" 267 9554 9579
type(
  Names.identifier list -> Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/invfun.ml" 267 9554 9580 "plugins/funind/invfun.ml" 267 9554 9594
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/invfun.ml" 267 9554 9595 "plugins/funind/invfun.ml" 267 9554 9596
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 239 8380 8386 "plugins/funind/invfun.ml" 239 8380 8387
)
"plugins/funind/invfun.ml" 267 9554 9579 "plugins/funind/invfun.ml" 267 9554 9597
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 267 9554 9568 "plugins/funind/invfun.ml" 267 9554 9597
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 272 9788 9796 "plugins/funind/invfun.ml" 272 9788 9808
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 272 9788 9811 "plugins/funind/invfun.ml" 272 9788 9842
type(
  Names.identifier -> Names.identifier list -> Names.identifier
)
ident(
  ext_ref Namegen.next_ident_away_in_goal
)
"plugins/funind/invfun.ml" 272 9788 9844 "plugins/funind/invfun.ml" 272 9788 9856
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 272 9788 9857 "plugins/funind/invfun.ml" 272 9788 9864
type(
  string
)
"plugins/funind/invfun.ml" 272 9788 9843 "plugins/funind/invfun.ml" 272 9788 9865
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 272 9788 9866 "plugins/funind/invfun.ml" 272 9788 9869
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 267 9554 9562 "plugins/funind/invfun.ml" 267 9554 9565
)
"plugins/funind/invfun.ml" 272 9788 9811 "plugins/funind/invfun.ml" 272 9788 9869
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 273 9873 9881 "plugins/funind/invfun.ml" 273 9873 9884
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 273 9873 9887 "plugins/funind/invfun.ml" 273 9873 9899
type(
  Names.identifier
)
ident(
  int_ref principle_id "plugins/funind/invfun.ml" 272 9788 9796 "plugins/funind/invfun.ml" 272 9788 9808
)
"plugins/funind/invfun.ml" 273 9873 9903 "plugins/funind/invfun.ml" 273 9873 9906
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 267 9554 9562 "plugins/funind/invfun.ml" 267 9554 9565
)
"plugins/funind/invfun.ml" 273 9873 9887 "plugins/funind/invfun.ml" 273 9873 9906
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 275 9957 9965 "plugins/funind/invfun.ml" 275 9957 9973
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 275 9957 9976 "plugins/funind/invfun.ml" 275 9957 9984
type(
  Term.rel_context -> Term.rel_declaration list
)
ident(
  ext_ref List.rev
)
"plugins/funind/invfun.ml" 275 9957 9985 "plugins/funind/invfun.ml" 275 9957 9996
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_infos "plugins/funind/invfun.ml" 263 9293 9301 "plugins/funind/invfun.ml" 263 9293 9312
)
"plugins/funind/invfun.ml" 275 9957 9985 "plugins/funind/invfun.ml" 275 9957 10005
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 275 9957 9976 "plugins/funind/invfun.ml" 275 9957 10005
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 277 10064 10072 "plugins/funind/invfun.ml" 277 10064 10082
type(
  (Util.loc * Genarg.intro_pattern_expr) list list
)
"plugins/funind/invfun.ml" 278 10085 10091 "plugins/funind/invfun.ml" 278 10085 10099
type(
  (Term.rel_declaration -> (Util.loc * Genarg.intro_pattern_expr) list) ->
  Term.rel_declaration list ->
  (Util.loc * Genarg.intro_pattern_expr) list list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 279 10100 10107 "plugins/funind/invfun.ml" 279 10100 10108
type(
  Names.name
)
"plugins/funind/invfun.ml" 279 10100 10109 "plugins/funind/invfun.ml" 279 10100 10110
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 279 10100 10111 "plugins/funind/invfun.ml" 279 10100 10118
type(
  Term.types
)
ident(
  def br_type "plugins/funind/invfun.ml" 280 10123 10127 "plugins/funind/invfun.ml" 282 10191 10290
)
"plugins/funind/invfun.ml" 279 10100 10106 "plugins/funind/invfun.ml" 279 10100 10119
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 280 10123 10127 "plugins/funind/invfun.ml" 280 10123 10135
type(
  (Names.identifier -> Util.loc * Genarg.intro_pattern_expr) ->
  Names.identifier list -> (Util.loc * Genarg.intro_pattern_expr) list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 281 10136 10147 "plugins/funind/invfun.ml" 281 10136 10149
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 281 10136 10153 "plugins/funind/invfun.ml" 281 10136 10189
)
"plugins/funind/invfun.ml" 281 10136 10153 "plugins/funind/invfun.ml" 281 10136 10162
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/invfun.ml" 281 10136 10187 "plugins/funind/invfun.ml" 281 10136 10189
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 281 10136 10147 "plugins/funind/invfun.ml" 281 10136 10149
)
"plugins/funind/invfun.ml" 281 10136 10164 "plugins/funind/invfun.ml" 281 10136 10189
type(
  Genarg.intro_pattern_expr
)
"plugins/funind/invfun.ml" 281 10136 10153 "plugins/funind/invfun.ml" 281 10136 10189
type(
  Util.loc * Genarg.intro_pattern_expr
)
"plugins/funind/invfun.ml" 281 10136 10142 "plugins/funind/invfun.ml" 281 10136 10190
type(
  Names.identifier -> Util.loc * Genarg.intro_pattern_expr
)
"plugins/funind/invfun.ml" 282 10191 10198 "plugins/funind/invfun.ml" 282 10191 10215
type(
  Names.identifier -> Names.identifier list -> int -> Names.identifier list
)
ident(
  int_ref generate_fresh_id "plugins/funind/invfun.ml" 206 6984 6992 "plugins/funind/invfun.ml" 206 6984 7009
)
"plugins/funind/invfun.ml" 282 10191 10217 "plugins/funind/invfun.ml" 282 10191 10229
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 282 10191 10230 "plugins/funind/invfun.ml" 282 10191 10233
type(
  string
)
"plugins/funind/invfun.ml" 282 10191 10216 "plugins/funind/invfun.ml" 282 10191 10234
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 282 10191 10235 "plugins/funind/invfun.ml" 282 10191 10238
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 273 9873 9881 "plugins/funind/invfun.ml" 273 9873 9884
)
"plugins/funind/invfun.ml" 282 10191 10240 "plugins/funind/invfun.ml" 282 10191 10251
type(
  Term.rel_context -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/invfun.ml" 282 10191 10253 "plugins/funind/invfun.ml" 282 10191 10256
type(
  Term.rel_context * Term.types -> Term.rel_context
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 282 10191 10258 "plugins/funind/invfun.ml" 282 10191 10278
type(
  Term.types -> Term.rel_context * Term.types
)
ident(
  ext_ref Term.decompose_prod_assum
)
"plugins/funind/invfun.ml" 282 10191 10279 "plugins/funind/invfun.ml" 282 10191 10286
type(
  Term.types
)
ident(
  int_ref br_type "plugins/funind/invfun.ml" 279 10100 10111 "plugins/funind/invfun.ml" 279 10100 10118
)
"plugins/funind/invfun.ml" 282 10191 10257 "plugins/funind/invfun.ml" 282 10191 10287
call(
  stack
)
type(
  Term.rel_context * Term.types
)
"plugins/funind/invfun.ml" 282 10191 10252 "plugins/funind/invfun.ml" 282 10191 10288
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 282 10191 10239 "plugins/funind/invfun.ml" 282 10191 10289
call(
  stack
)
type(
  int
)
"plugins/funind/invfun.ml" 282 10191 10197 "plugins/funind/invfun.ml" 282 10191 10290
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 280 10123 10127 "plugins/funind/invfun.ml" 282 10191 10290
call(
  tail
)
type(
  (Util.loc * Genarg.intro_pattern_expr) list
)
"plugins/funind/invfun.ml" 279 10100 10101 "plugins/funind/invfun.ml" 283 10291 10293
type(
  Term.rel_declaration -> (Util.loc * Genarg.intro_pattern_expr) list
)
"plugins/funind/invfun.ml" 284 10294 10295 "plugins/funind/invfun.ml" 284 10294 10303
type(
  Term.rel_declaration list
)
ident(
  int_ref branches "plugins/funind/invfun.ml" 275 9957 9965 "plugins/funind/invfun.ml" 275 9957 9973
)
"plugins/funind/invfun.ml" 278 10085 10091 "plugins/funind/invfun.ml" 284 10294 10303
call(
  stack
)
type(
  (Util.loc * Genarg.intro_pattern_expr) list list
)
"plugins/funind/invfun.ml" 287 10378 10386 "plugins/funind/invfun.ml" 287 10378 10389
type(
  (Util.loc * Genarg.intro_pattern_expr) option
)
"plugins/funind/invfun.ml" 287 10378 10398 "plugins/funind/invfun.ml" 287 10378 10407
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/invfun.ml" 287 10378 10433 "plugins/funind/invfun.ml" 287 10378 10443
type(
  Genarg.or_and_intro_pattern_expr
)
ident(
  int_ref intro_pats "plugins/funind/invfun.ml" 277 10064 10072 "plugins/funind/invfun.ml" 277 10064 10082
)
"plugins/funind/invfun.ml" 287 10378 10408 "plugins/funind/invfun.ml" 287 10378 10443
type(
  Genarg.intro_pattern_expr
)
"plugins/funind/invfun.ml" 287 10378 10397 "plugins/funind/invfun.ml" 287 10378 10444
type(
  Util.loc * Genarg.intro_pattern_expr
)
"plugins/funind/invfun.ml" 287 10378 10392 "plugins/funind/invfun.ml" 287 10378 10444
type(
  (Util.loc * Genarg.intro_pattern_expr) option
)
"plugins/funind/invfun.ml" 288 10448 10456 "plugins/funind/invfun.ml" 288 10448 10462
type(
  Term.constr
)
"plugins/funind/invfun.ml" 288 10448 10465 "plugins/funind/invfun.ml" 288 10448 10484
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_eq
)
"plugins/funind/invfun.ml" 288 10448 10485 "plugins/funind/invfun.ml" 288 10448 10487
type(
  unit
)
"plugins/funind/invfun.ml" 288 10448 10465 "plugins/funind/invfun.ml" 288 10448 10487
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 289 10491 10499 "plugins/funind/invfun.ml" 289 10491 10511
type(
  Term.constr
)
"plugins/funind/invfun.ml" 289 10491 10514 "plugins/funind/invfun.ml" 289 10491 10525
type(
  Names.constructor -> Term.constr
)
ident(
  ext_ref Term.mkConstruct
)
"plugins/funind/invfun.ml" 289 10491 10527 "plugins/funind/invfun.ml" 289 10491 10534
type(
  Term.constr -> Names.inductive
)
ident(
  ext_ref Term.destInd
)
"plugins/funind/invfun.ml" 289 10491 10535 "plugins/funind/invfun.ml" 289 10491 10541
type(
  Term.constr
)
ident(
  int_ref eq_ind "plugins/funind/invfun.ml" 288 10448 10456 "plugins/funind/invfun.ml" 288 10448 10462
)
"plugins/funind/invfun.ml" 289 10491 10526 "plugins/funind/invfun.ml" 289 10491 10542
call(
  stack
)
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 289 10491 10543 "plugins/funind/invfun.ml" 289 10491 10544
type(
  int
)
"plugins/funind/invfun.ml" 289 10491 10525 "plugins/funind/invfun.ml" 289 10491 10545
type(
  Names.constructor
)
"plugins/funind/invfun.ml" 289 10491 10514 "plugins/funind/invfun.ml" 289 10491 10545
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 291 10650 10658 "plugins/funind/invfun.ml" 291 10650 10668
type(
  int ref
)
"plugins/funind/invfun.ml" 291 10650 10671 "plugins/funind/invfun.ml" 291 10650 10674
type(
  int -> int ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/invfun.ml" 291 10650 10675 "plugins/funind/invfun.ml" 291 10650 10676
type(
  int
)
"plugins/funind/invfun.ml" 291 10650 10671 "plugins/funind/invfun.ml" 291 10650 10676
type(
  int ref
)
"plugins/funind/invfun.ml" 292 10677 10685 "plugins/funind/invfun.ml" 292 10677 10702
type(
  int ref
)
"plugins/funind/invfun.ml" 292 10677 10705 "plugins/funind/invfun.ml" 292 10677 10708
type(
  int -> int ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/invfun.ml" 292 10677 10709 "plugins/funind/invfun.ml" 292 10677 10710
type(
  int
)
"plugins/funind/invfun.ml" 292 10677 10705 "plugins/funind/invfun.ml" 292 10677 10710
type(
  int ref
)
"plugins/funind/invfun.ml" 294 10776 10784 "plugins/funind/invfun.ml" 294 10776 10797
type(
  int ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 294 10776 10798 "plugins/funind/invfun.ml" 294 10776 10799
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 294 10776 10800 "plugins/funind/invfun.ml" 413 14753 14755
)
"plugins/funind/invfun.ml" 294 10776 10800 "plugins/funind/invfun.ml" 294 10776 10801
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 296 10854 10860 "plugins/funind/invfun.ml" 413 14753 14755
)
"plugins/funind/invfun.ml" 296 10854 10864 "plugins/funind/invfun.ml" 296 10854 10880
type(
  Names.Idset.t
)
"plugins/funind/invfun.ml" 297 10883 10884 "plugins/funind/invfun.ml" 297 10883 10899
type(
  (Util.loc * Genarg.intro_pattern_expr -> Names.Idset.t -> Names.Idset.t) ->
  (Util.loc * Genarg.intro_pattern_expr) list ->
  Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref List.fold_right
)
"plugins/funind/invfun.ml" 298 10900 10909 "plugins/funind/invfun.ml" 298 10900 10910
type(
  Util.loc
)
"plugins/funind/invfun.ml" 298 10900 10911 "plugins/funind/invfun.ml" 298 10900 10914
type(
  Genarg.intro_pattern_expr
)
ident(
  def pat "plugins/funind/invfun.ml" 298 10900 10916 "plugins/funind/invfun.ml" 301 11000 11042
)
"plugins/funind/invfun.ml" 298 10900 10908 "plugins/funind/invfun.ml" 298 10900 10915
type(
  Util.loc * Genarg.intro_pattern_expr
)
"plugins/funind/invfun.ml" 298 10900 10916 "plugins/funind/invfun.ml" 298 10900 10919
type(
  Names.Idset.t
)
ident(
  def acc "plugins/funind/invfun.ml" 299 10923 10929 "plugins/funind/invfun.ml" 301 11000 11042
)
"plugins/funind/invfun.ml" 299 10923 10935 "plugins/funind/invfun.ml" 299 10923 10938
type(
  Genarg.intro_pattern_expr
)
ident(
  int_ref pat "plugins/funind/invfun.ml" 298 10900 10911 "plugins/funind/invfun.ml" 298 10900 10914
)
"plugins/funind/invfun.ml" 300 10944 10977 "plugins/funind/invfun.ml" 300 10944 10979
type(
  Names.Idset.elt
)
ident(
  def id "plugins/funind/invfun.ml" 300 10944 10983 "plugins/funind/invfun.ml" 300 10944 10999
)
"plugins/funind/invfun.ml" 300 10944 10954 "plugins/funind/invfun.ml" 300 10944 10979
type(
  Genarg.intro_pattern_expr
)
"plugins/funind/invfun.ml" 300 10944 10983 "plugins/funind/invfun.ml" 300 10944 10992
type(
  Names.Idset.elt -> Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref Names.Idset.add
)
"plugins/funind/invfun.ml" 300 10944 10993 "plugins/funind/invfun.ml" 300 10944 10995
type(
  Names.Idset.elt
)
ident(
  int_ref id "plugins/funind/invfun.ml" 300 10944 10977 "plugins/funind/invfun.ml" 300 10944 10979
)
"plugins/funind/invfun.ml" 300 10944 10996 "plugins/funind/invfun.ml" 300 10944 10999
type(
  Names.Idset.t
)
ident(
  int_ref acc "plugins/funind/invfun.ml" 298 10900 10916 "plugins/funind/invfun.ml" 298 10900 10919
)
"plugins/funind/invfun.ml" 300 10944 10983 "plugins/funind/invfun.ml" 300 10944 10999
call(
  tail
)
type(
  Names.Idset.t
)
"plugins/funind/invfun.ml" 301 11000 11010 "plugins/funind/invfun.ml" 301 11000 11011
type(
  Genarg.intro_pattern_expr
)
"plugins/funind/invfun.ml" 301 11000 11015 "plugins/funind/invfun.ml" 301 11000 11022
type(
  string -> Names.Idset.t
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/invfun.ml" 301 11000 11023 "plugins/funind/invfun.ml" 301 11000 11042
type(
  string
)
"plugins/funind/invfun.ml" 301 11000 11015 "plugins/funind/invfun.ml" 301 11000 11042
call(
  tail
)
type(
  Names.Idset.t
)
"plugins/funind/invfun.ml" 299 10923 10929 "plugins/funind/invfun.ml" 301 11000 11042
type(
  Names.Idset.t
)
"plugins/funind/invfun.ml" 298 10900 10903 "plugins/funind/invfun.ml" 302 11043 11047
type(
  Util.loc * Genarg.intro_pattern_expr -> Names.Idset.t -> Names.Idset.t
)
"plugins/funind/invfun.ml" 303 11048 11052 "plugins/funind/invfun.ml" 303 11048 11060
type(
  (Util.loc * Genarg.intro_pattern_expr) list list ->
  int -> (Util.loc * Genarg.intro_pattern_expr) list
)
ident(
  ext_ref List.nth
)
"plugins/funind/invfun.ml" 303 11048 11061 "plugins/funind/invfun.ml" 303 11048 11071
type(
  (Util.loc * Genarg.intro_pattern_expr) list list
)
ident(
  int_ref intro_pats "plugins/funind/invfun.ml" 277 10064 10072 "plugins/funind/invfun.ml" 277 10064 10082
)
"plugins/funind/invfun.ml" 303 11048 11073 "plugins/funind/invfun.ml" 303 11048 11077
type(
  int -> int
)
ident(
  ext_ref Pervasives.pred
)
"plugins/funind/invfun.ml" 303 11048 11078 "plugins/funind/invfun.ml" 303 11048 11079
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 294 10776 10798 "plugins/funind/invfun.ml" 294 10776 10799
)
"plugins/funind/invfun.ml" 303 11048 11072 "plugins/funind/invfun.ml" 303 11048 11080
type(
  int
)
"plugins/funind/invfun.ml" 303 11048 11051 "plugins/funind/invfun.ml" 303 11048 11081
call(
  stack
)
type(
  (Util.loc * Genarg.intro_pattern_expr) list
)
"plugins/funind/invfun.ml" 304 11082 11085 "plugins/funind/invfun.ml" 304 11082 11096
type(
  Names.Idset.t
)
ident(
  ext_ref Names.Idset.empty
)
"plugins/funind/invfun.ml" 297 10883 10884 "plugins/funind/invfun.ml" 304 11082 11096
call(
  stack
)
type(
  Names.Idset.t
)
"plugins/funind/invfun.ml" 307 11188 11198 "plugins/funind/invfun.ml" 307 11188 11206
type(
  Names.Idset.elt list
)
"plugins/funind/invfun.ml" 307 11188 11207 "plugins/funind/invfun.ml" 307 11188 11214
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 307 11188 11198 "plugins/funind/invfun.ml" 307 11188 11214
type(
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 308 11217 11218 "plugins/funind/invfun.ml" 308 11217 11233
type(
  (Term.named_declaration ->
   Names.Idset.elt list * Proof_type.tactic ->
   Names.Idset.elt list * Proof_type.tactic) ->
  Sign.named_context ->
  Names.Idset.elt list * Proof_type.tactic ->
  Names.Idset.elt list * Proof_type.tactic
)
ident(
  ext_ref List.fold_right
)
"plugins/funind/invfun.ml" 309 11234 11243 "plugins/funind/invfun.ml" 309 11234 11245
type(
  Names.Idset.elt
)
ident(
  def id "plugins/funind/invfun.ml" 309 11234 11251 "plugins/funind/invfun.ml" 319 11529 11558
)
"plugins/funind/invfun.ml" 309 11234 11246 "plugins/funind/invfun.ml" 309 11234 11247
type(
  Term.constr option
)
ident(
  def b "plugins/funind/invfun.ml" 309 11234 11251 "plugins/funind/invfun.ml" 319 11529 11558
)
"plugins/funind/invfun.ml" 309 11234 11248 "plugins/funind/invfun.ml" 309 11234 11249
type(
  Term.types
)
ident(
  def t "plugins/funind/invfun.ml" 309 11234 11251 "plugins/funind/invfun.ml" 319 11529 11558
)
"plugins/funind/invfun.ml" 309 11234 11242 "plugins/funind/invfun.ml" 309 11234 11250
type(
  Term.named_declaration
)
"plugins/funind/invfun.ml" 309 11234 11252 "plugins/funind/invfun.ml" 309 11234 11260
type(
  Names.Idset.elt list
)
ident(
  def pre_args "plugins/funind/invfun.ml" 310 11273 11279 "plugins/funind/invfun.ml" 319 11529 11558
)
"plugins/funind/invfun.ml" 309 11234 11261 "plugins/funind/invfun.ml" 309 11234 11268
type(
  Proof_type.tactic
)
ident(
  def pre_tac "plugins/funind/invfun.ml" 310 11273 11279 "plugins/funind/invfun.ml" 319 11529 11558
)
"plugins/funind/invfun.ml" 309 11234 11251 "plugins/funind/invfun.ml" 309 11234 11269
type(
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 310 11273 11282 "plugins/funind/invfun.ml" 310 11273 11291
type(
  Names.Idset.elt -> Names.Idset.t -> bool
)
ident(
  ext_ref Names.Idset.mem
)
"plugins/funind/invfun.ml" 310 11273 11292 "plugins/funind/invfun.ml" 310 11273 11294
type(
  Names.Idset.elt
)
ident(
  int_ref id "plugins/funind/invfun.ml" 309 11234 11243 "plugins/funind/invfun.ml" 309 11234 11245
)
"plugins/funind/invfun.ml" 310 11273 11295 "plugins/funind/invfun.ml" 310 11273 11311
type(
  Names.Idset.t
)
ident(
  int_ref this_branche_ids "plugins/funind/invfun.ml" 296 10854 10864 "plugins/funind/invfun.ml" 296 10854 10880
)
"plugins/funind/invfun.ml" 310 11273 11282 "plugins/funind/invfun.ml" 310 11273 11311
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 312 11323 11337 "plugins/funind/invfun.ml" 312 11323 11338
type(
  Term.constr option
)
ident(
  int_ref b "plugins/funind/invfun.ml" 309 11234 11246 "plugins/funind/invfun.ml" 309 11234 11247
)
"plugins/funind/invfun.ml" 313 11344 11349 "plugins/funind/invfun.ml" 313 11344 11353
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 313 11344 11358 "plugins/funind/invfun.ml" 313 11344 11360
type(
  Names.Idset.elt
)
ident(
  int_ref id "plugins/funind/invfun.ml" 309 11234 11243 "plugins/funind/invfun.ml" 309 11234 11245
)
"plugins/funind/invfun.ml" 313 11344 11362 "plugins/funind/invfun.ml" 313 11344 11370
type(
  Names.Idset.elt list
)
ident(
  int_ref pre_args "plugins/funind/invfun.ml" 309 11234 11252 "plugins/funind/invfun.ml" 309 11234 11260
)
"plugins/funind/invfun.ml" 313 11344 11358 "plugins/funind/invfun.ml" 313 11344 11370
type(
  Names.Idset.elt list
)
"plugins/funind/invfun.ml" 313 11344 11371 "plugins/funind/invfun.ml" 313 11344 11378
type(
  Proof_type.tactic
)
ident(
  int_ref pre_tac "plugins/funind/invfun.ml" 309 11234 11261 "plugins/funind/invfun.ml" 309 11234 11268
)
"plugins/funind/invfun.ml" 313 11344 11357 "plugins/funind/invfun.ml" 313 11344 11379
type(
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 314 11380 11390 "plugins/funind/invfun.ml" 314 11380 11391
type(
  Term.constr
)
ident(
  def b "plugins/funind/invfun.ml" 315 11395 11402 "plugins/funind/invfun.ml" 317 11519 11527
)
"plugins/funind/invfun.ml" 314 11380 11385 "plugins/funind/invfun.ml" 314 11380 11391
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 315 11395 11403 "plugins/funind/invfun.ml" 315 11395 11411
type(
  Names.Idset.elt list
)
ident(
  int_ref pre_args "plugins/funind/invfun.ml" 309 11234 11252 "plugins/funind/invfun.ml" 309 11234 11260
)
"plugins/funind/invfun.ml" 316 11413 11421 "plugins/funind/invfun.ml" 316 11413 11428
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/invfun.ml" 316 11413 11430 "plugins/funind/invfun.ml" 316 11413 11438
type(
  Redexpr.red_expr -> Tacticals.clause -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_reduce
)
"plugins/funind/invfun.ml" 316 11413 11456 "plugins/funind/invfun.ml" 316 11413 11484
type(
  Rawterm.occurrences_expr
)
ident(
  ext_ref Rawterm.all_occurrences_expr
)
"plugins/funind/invfun.ml" 316 11413 11496 "plugins/funind/invfun.ml" 316 11413 11498
type(
  Names.Idset.elt
)
ident(
  int_ref id "plugins/funind/invfun.ml" 309 11234 11243 "plugins/funind/invfun.ml" 309 11234 11245
)
"plugins/funind/invfun.ml" 316 11413 11485 "plugins/funind/invfun.ml" 316 11413 11498
type(
  Names.evaluable_global_reference
)
"plugins/funind/invfun.ml" 316 11413 11456 "plugins/funind/invfun.ml" 316 11413 11498
type(
  Names.evaluable_global_reference Rawterm.with_occurrences
)
"plugins/funind/invfun.ml" 316 11413 11454 "plugins/funind/invfun.ml" 316 11413 11500
type(
  Names.evaluable_global_reference Rawterm.with_occurrences list
)
"plugins/funind/invfun.ml" 316 11413 11439 "plugins/funind/invfun.ml" 316 11413 11501
type(
  Redexpr.red_expr
)
"plugins/funind/invfun.ml" 316 11413 11502 "plugins/funind/invfun.ml" 316 11413 11509
type(
  Tacticals.clause
)
ident(
  ext_ref Tacticals.allHyps
)
"plugins/funind/invfun.ml" 316 11413 11429 "plugins/funind/invfun.ml" 316 11413 11510
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 316 11413 11511 "plugins/funind/invfun.ml" 316 11413 11518
type(
  Proof_type.tactic
)
ident(
  int_ref pre_tac "plugins/funind/invfun.ml" 309 11234 11261 "plugins/funind/invfun.ml" 309 11234 11268
)
"plugins/funind/invfun.ml" 316 11413 11421 "plugins/funind/invfun.ml" 316 11413 11518
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 315 11395 11402 "plugins/funind/invfun.ml" 317 11519 11527
type(
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 312 11323 11331 "plugins/funind/invfun.ml" 317 11519 11527
type(
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 319 11529 11541 "plugins/funind/invfun.ml" 319 11529 11549
type(
  Names.Idset.elt list
)
ident(
  int_ref pre_args "plugins/funind/invfun.ml" 309 11234 11252 "plugins/funind/invfun.ml" 309 11234 11260
)
"plugins/funind/invfun.ml" 319 11529 11550 "plugins/funind/invfun.ml" 319 11529 11557
type(
  Proof_type.tactic
)
ident(
  int_ref pre_tac "plugins/funind/invfun.ml" 309 11234 11261 "plugins/funind/invfun.ml" 309 11234 11268
)
"plugins/funind/invfun.ml" 319 11529 11540 "plugins/funind/invfun.ml" 319 11529 11558
type(
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 310 11273 11279 "plugins/funind/invfun.ml" 319 11529 11558
type(
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 309 11234 11237 "plugins/funind/invfun.ml" 320 11559 11563
type(
  Term.named_declaration ->
  Names.Idset.elt list * Proof_type.tactic ->
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 321 11564 11568 "plugins/funind/invfun.ml" 321 11564 11575
type(
  Proof_type.goal Tacmach.sigma -> Sign.named_context
)
ident(
  ext_ref Tacmach.pf_hyps
)
"plugins/funind/invfun.ml" 321 11564 11576 "plugins/funind/invfun.ml" 321 11564 11577
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 294 10776 10800 "plugins/funind/invfun.ml" 294 10776 10801
)
"plugins/funind/invfun.ml" 321 11564 11567 "plugins/funind/invfun.ml" 321 11564 11578
call(
  stack
)
type(
  Sign.named_context
)
"plugins/funind/invfun.ml" 322 11579 11583 "plugins/funind/invfun.ml" 322 11579 11585
type(
  Names.Idset.elt list
)
"plugins/funind/invfun.ml" 322 11579 11586 "plugins/funind/invfun.ml" 322 11579 11594
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 322 11579 11582 "plugins/funind/invfun.ml" 322 11579 11595
type(
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 308 11217 11218 "plugins/funind/invfun.ml" 322 11579 11595
call(
  stack
)
type(
  Names.Idset.elt list * Proof_type.tactic
)
"plugins/funind/invfun.ml" 332 11963 11973 "plugins/funind/invfun.ml" 332 11963 11989
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 333 11992 11993 "plugins/funind/invfun.ml" 333 11992 12008
type(
  (Names.Idset.elt -> Term.constr list -> Term.constr list) ->
  Names.Idset.elt list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref List.fold_right
)
"plugins/funind/invfun.ml" 334 12009 12017 "plugins/funind/invfun.ml" 334 12009 12020
type(
  Names.Idset.elt
)
ident(
  def hid "plugins/funind/invfun.ml" 334 12009 12021 "plugins/funind/invfun.ml" 353 12633 12664
)
"plugins/funind/invfun.ml" 334 12009 12021 "plugins/funind/invfun.ml" 334 12009 12024
type(
  Term.constr list
)
ident(
  def acc "plugins/funind/invfun.ml" 335 12028 12034 "plugins/funind/invfun.ml" 353 12633 12664
)
"plugins/funind/invfun.ml" 335 12028 12038 "plugins/funind/invfun.ml" 335 12028 12049
type(
  Term.types
)
"plugins/funind/invfun.ml" 335 12028 12052 "plugins/funind/invfun.ml" 335 12028 12062
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/invfun.ml" 335 12028 12063 "plugins/funind/invfun.ml" 335 12028 12064
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 294 10776 10800 "plugins/funind/invfun.ml" 294 10776 10801
)
"plugins/funind/invfun.ml" 335 12028 12066 "plugins/funind/invfun.ml" 335 12028 12071
type(
  Names.Idset.elt -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 335 12028 12072 "plugins/funind/invfun.ml" 335 12028 12075
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 334 12009 12017 "plugins/funind/invfun.ml" 334 12009 12020
)
"plugins/funind/invfun.ml" 335 12028 12065 "plugins/funind/invfun.ml" 335 12028 12076
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 335 12028 12052 "plugins/funind/invfun.ml" 335 12028 12076
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 336 12080 12092 "plugins/funind/invfun.ml" 336 12080 12104
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 336 12080 12105 "plugins/funind/invfun.ml" 336 12080 12116
type(
  Term.types
)
ident(
  int_ref type_of_hid "plugins/funind/invfun.ml" 335 12028 12038 "plugins/funind/invfun.ml" 335 12028 12049
)
"plugins/funind/invfun.ml" 336 12080 12092 "plugins/funind/invfun.ml" 336 12080 12116
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 337 12122 12137 "plugins/funind/invfun.ml" 337 12122 12138
type(
  Names.name
)
"plugins/funind/invfun.ml" 337 12122 12139 "plugins/funind/invfun.ml" 337 12122 12140
type(
  Term.types
)
"plugins/funind/invfun.ml" 337 12122 12141 "plugins/funind/invfun.ml" 337 12122 12143
type(
  Term.types
)
ident(
  def t' "plugins/funind/invfun.ml" 338 12148 12153 "plugins/funind/invfun.ml" 352 12624 12632
)
"plugins/funind/invfun.ml" 337 12122 12132 "plugins/funind/invfun.ml" 337 12122 12144
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 339 12159 12172 "plugins/funind/invfun.ml" 339 12159 12184
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 339 12159 12185 "plugins/funind/invfun.ml" 339 12159 12187
type(
  Term.types
)
ident(
  int_ref t' "plugins/funind/invfun.ml" 337 12122 12141 "plugins/funind/invfun.ml" 337 12122 12143
)
"plugins/funind/invfun.ml" 339 12159 12172 "plugins/funind/invfun.ml" 339 12159 12187
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 340 12193 12209 "plugins/funind/invfun.ml" 340 12193 12210
type(
  Names.name
)
"plugins/funind/invfun.ml" 340 12193 12211 "plugins/funind/invfun.ml" 340 12193 12214
type(
  Term.types
)
ident(
  def t'' "plugins/funind/invfun.ml" 341 12224 12230 "plugins/funind/invfun.ml" 350 12581 12590
)
"plugins/funind/invfun.ml" 340 12193 12215 "plugins/funind/invfun.ml" 340 12193 12219
type(
  Term.types
)
ident(
  def t''' "plugins/funind/invfun.ml" 341 12224 12230 "plugins/funind/invfun.ml" 350 12581 12590
)
"plugins/funind/invfun.ml" 340 12193 12204 "plugins/funind/invfun.ml" 340 12193 12220
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 342 12236 12250 "plugins/funind/invfun.ml" 342 12236 12262
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 342 12236 12263 "plugins/funind/invfun.ml" 342 12236 12266
type(
  Term.types
)
ident(
  int_ref t'' "plugins/funind/invfun.ml" 340 12193 12211 "plugins/funind/invfun.ml" 340 12193 12214
)
"plugins/funind/invfun.ml" 342 12236 12250 "plugins/funind/invfun.ml" 342 12236 12266
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 342 12236 12267 "plugins/funind/invfun.ml" 342 12236 12279
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 342 12236 12280 "plugins/funind/invfun.ml" 342 12236 12284
type(
  Term.types
)
ident(
  int_ref t''' "plugins/funind/invfun.ml" 340 12193 12215 "plugins/funind/invfun.ml" 340 12193 12219
)
"plugins/funind/invfun.ml" 342 12236 12267 "plugins/funind/invfun.ml" 342 12236 12284
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 342 12236 12250 "plugins/funind/invfun.ml" 342 12236 12284
type(
  (Term.constr, Term.types) Term.kind_of_term *
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 343 12290 12306 "plugins/funind/invfun.ml" 343 12290 12308
type(
  Term.constr
)
ident(
  def eq "plugins/funind/invfun.ml" 344 12330 12337 "plugins/funind/invfun.ml" 348 12521 12545
)
"plugins/funind/invfun.ml" 343 12290 12309 "plugins/funind/invfun.ml" 343 12290 12313
type(
  Term.constr array
)
ident(
  def args "plugins/funind/invfun.ml" 344 12330 12337 "plugins/funind/invfun.ml" 348 12521 12545
)
"plugins/funind/invfun.ml" 343 12290 12302 "plugins/funind/invfun.ml" 343 12290 12314
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 343 12290 12320 "plugins/funind/invfun.ml" 343 12290 12326
type(
  Term.constr
)
ident(
  def graph' "plugins/funind/invfun.ml" 344 12330 12337 "plugins/funind/invfun.ml" 348 12521 12545
)
"plugins/funind/invfun.ml" 343 12290 12327 "plugins/funind/invfun.ml" 343 12290 12328
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 343 12290 12316 "plugins/funind/invfun.ml" 343 12290 12329
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 343 12290 12302 "plugins/funind/invfun.ml" 343 12290 12329
type(
  (Term.constr, Term.types) Term.kind_of_term *
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 345 12342 12352 "plugins/funind/invfun.ml" 345 12342 12361
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/invfun.ml" 345 12342 12362 "plugins/funind/invfun.ml" 345 12342 12364
type(
  Term.constr
)
ident(
  int_ref eq "plugins/funind/invfun.ml" 343 12290 12306 "plugins/funind/invfun.ml" 343 12290 12308
)
"plugins/funind/invfun.ml" 345 12342 12365 "plugins/funind/invfun.ml" 345 12342 12371
type(
  Term.constr
)
ident(
  int_ref eq_ind "plugins/funind/invfun.ml" 288 10448 10456 "plugins/funind/invfun.ml" 288 10448 10462
)
"plugins/funind/invfun.ml" 345 12342 12351 "plugins/funind/invfun.ml" 345 12342 12372
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 345 12342 12373 "plugins/funind/invfun.ml" 345 12342 12375
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/invfun.ml" 346 12376 12387 "plugins/funind/invfun.ml" 346 12376 12399
type(
  (Term.constr -> bool) -> Term.constr array -> bool
)
ident(
  ext_ref Util.array_exists
)
"plugins/funind/invfun.ml" 346 12376 12402 "plugins/funind/invfun.ml" 346 12376 12411
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/invfun.ml" 346 12376 12412 "plugins/funind/invfun.ml" 346 12376 12418
type(
  Term.constr
)
ident(
  int_ref graph' "plugins/funind/invfun.ml" 343 12290 12320 "plugins/funind/invfun.ml" 343 12290 12326
)
"plugins/funind/invfun.ml" 346 12376 12401 "plugins/funind/invfun.ml" 346 12376 12419
call(
  stack
)
type(
  Term.constr -> bool
)
"plugins/funind/invfun.ml" 346 12376 12420 "plugins/funind/invfun.ml" 346 12376 12433
type(
  Term.constr array
)
ident(
  int_ref graphs_constr "plugins/funind/invfun.ml" 238 8271 8326 "plugins/funind/invfun.ml" 238 8271 8339
)
"plugins/funind/invfun.ml" 346 12376 12387 "plugins/funind/invfun.ml" 346 12376 12433
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 345 12342 12351 "plugins/funind/invfun.ml" 346 12376 12433
type(
  bool
)
"plugins/funind/invfun.ml" 347 12437 12446 "plugins/funind/invfun.ml" 347 12437 12451
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/invfun.ml" 347 12437 12452 "plugins/funind/invfun.ml" 347 12437 12457
type(
  Names.Idset.elt -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 347 12437 12458 "plugins/funind/invfun.ml" 347 12437 12461
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 334 12009 12017 "plugins/funind/invfun.ml" 334 12009 12020
)
"plugins/funind/invfun.ml" 347 12437 12452 "plugins/funind/invfun.ml" 347 12437 12461
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 347 12437 12464 "plugins/funind/invfun.ml" 347 12437 12468
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 343 12290 12309 "plugins/funind/invfun.ml" 343 12290 12313
)
"plugins/funind/invfun.ml" 347 12437 12470 "plugins/funind/invfun.ml" 347 12437 12471
type(
  int
)
"plugins/funind/invfun.ml" 347 12437 12464 "plugins/funind/invfun.ml" 347 12437 12472
type(
  Term.constr
)
"plugins/funind/invfun.ml" 347 12437 12474 "plugins/funind/invfun.ml" 347 12437 12479
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/invfun.ml" 347 12437 12480 "plugins/funind/invfun.ml" 347 12437 12492
type(
  Term.constr
)
ident(
  int_ref eq_construct "plugins/funind/invfun.ml" 289 10491 10499 "plugins/funind/invfun.ml" 289 10491 10511
)
"plugins/funind/invfun.ml" 347 12437 12495 "plugins/funind/invfun.ml" 347 12437 12499
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 343 12290 12309 "plugins/funind/invfun.ml" 343 12290 12313
)
"plugins/funind/invfun.ml" 347 12437 12501 "plugins/funind/invfun.ml" 347 12437 12502
type(
  int
)
"plugins/funind/invfun.ml" 347 12437 12495 "plugins/funind/invfun.ml" 347 12437 12503
type(
  Term.constr
)
"plugins/funind/invfun.ml" 347 12437 12504 "plugins/funind/invfun.ml" 347 12437 12508
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 343 12290 12309 "plugins/funind/invfun.ml" 343 12290 12313
)
"plugins/funind/invfun.ml" 347 12437 12510 "plugins/funind/invfun.ml" 347 12437 12511
type(
  int
)
"plugins/funind/invfun.ml" 347 12437 12504 "plugins/funind/invfun.ml" 347 12437 12512
type(
  Term.constr
)
"plugins/funind/invfun.ml" 347 12437 12493 "plugins/funind/invfun.ml" 347 12437 12514
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 347 12437 12479 "plugins/funind/invfun.ml" 347 12437 12515
type(
  Term.constr * Term.constr array
)
"plugins/funind/invfun.ml" 347 12437 12473 "plugins/funind/invfun.ml" 347 12437 12516
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 347 12437 12462 "plugins/funind/invfun.ml" 347 12437 12518
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 347 12437 12451 "plugins/funind/invfun.ml" 347 12437 12519
type(
  Term.constr * Term.constr array
)
"plugins/funind/invfun.ml" 347 12437 12445 "plugins/funind/invfun.ml" 347 12437 12520
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 348 12521 12531 "plugins/funind/invfun.ml" 348 12521 12535
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 343 12290 12309 "plugins/funind/invfun.ml" 343 12290 12313
)
"plugins/funind/invfun.ml" 348 12521 12537 "plugins/funind/invfun.ml" 348 12521 12538
type(
  int
)
"plugins/funind/invfun.ml" 348 12521 12531 "plugins/funind/invfun.ml" 348 12521 12539
type(
  Term.constr
)
"plugins/funind/invfun.ml" 348 12521 12541 "plugins/funind/invfun.ml" 348 12521 12544
type(
  Term.constr list
)
ident(
  int_ref acc "plugins/funind/invfun.ml" 334 12009 12021 "plugins/funind/invfun.ml" 334 12009 12024
)
"plugins/funind/invfun.ml" 348 12521 12531 "plugins/funind/invfun.ml" 348 12521 12544
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 347 12437 12444 "plugins/funind/invfun.ml" 348 12521 12545
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 344 12330 12337 "plugins/funind/invfun.ml" 348 12521 12545
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 349 12546 12558 "plugins/funind/invfun.ml" 349 12546 12559
type(
  (Term.constr, Term.types) Term.kind_of_term *
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 349 12546 12563 "plugins/funind/invfun.ml" 349 12546 12568
type(
  Names.Idset.elt -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 349 12546 12569 "plugins/funind/invfun.ml" 349 12546 12572
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 334 12009 12017 "plugins/funind/invfun.ml" 334 12009 12020
)
"plugins/funind/invfun.ml" 349 12546 12563 "plugins/funind/invfun.ml" 349 12546 12572
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 349 12546 12577 "plugins/funind/invfun.ml" 349 12546 12580
type(
  Term.constr list
)
ident(
  int_ref acc "plugins/funind/invfun.ml" 334 12009 12021 "plugins/funind/invfun.ml" 334 12009 12024
)
"plugins/funind/invfun.ml" 349 12546 12563 "plugins/funind/invfun.ml" 349 12546 12580
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 341 12224 12230 "plugins/funind/invfun.ml" 350 12581 12590
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 351 12591 12602 "plugins/funind/invfun.ml" 351 12591 12603
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 351 12591 12607 "plugins/funind/invfun.ml" 351 12591 12612
type(
  Names.Idset.elt -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 351 12591 12613 "plugins/funind/invfun.ml" 351 12591 12616
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 334 12009 12017 "plugins/funind/invfun.ml" 334 12009 12020
)
"plugins/funind/invfun.ml" 351 12591 12607 "plugins/funind/invfun.ml" 351 12591 12616
type(
  Term.constr
)
"plugins/funind/invfun.ml" 351 12591 12620 "plugins/funind/invfun.ml" 351 12591 12623
type(
  Term.constr list
)
ident(
  int_ref acc "plugins/funind/invfun.ml" 334 12009 12021 "plugins/funind/invfun.ml" 334 12009 12024
)
"plugins/funind/invfun.ml" 351 12591 12607 "plugins/funind/invfun.ml" 351 12591 12623
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 338 12148 12153 "plugins/funind/invfun.ml" 352 12624 12632
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 353 12633 12643 "plugins/funind/invfun.ml" 353 12633 12644
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 353 12633 12648 "plugins/funind/invfun.ml" 353 12633 12653
type(
  Names.Idset.elt -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 353 12633 12654 "plugins/funind/invfun.ml" 353 12633 12657
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 334 12009 12017 "plugins/funind/invfun.ml" 334 12009 12020
)
"plugins/funind/invfun.ml" 353 12633 12648 "plugins/funind/invfun.ml" 353 12633 12657
type(
  Term.constr
)
"plugins/funind/invfun.ml" 353 12633 12661 "plugins/funind/invfun.ml" 353 12633 12664
type(
  Term.constr list
)
ident(
  int_ref acc "plugins/funind/invfun.ml" 334 12009 12021 "plugins/funind/invfun.ml" 334 12009 12024
)
"plugins/funind/invfun.ml" 353 12633 12648 "plugins/funind/invfun.ml" 353 12633 12664
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 336 12080 12086 "plugins/funind/invfun.ml" 353 12633 12664
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 335 12028 12034 "plugins/funind/invfun.ml" 353 12633 12664
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 334 12009 12012 "plugins/funind/invfun.ml" 354 12665 12669
type(
  Names.Idset.elt -> Term.constr list -> Term.constr list
)
"plugins/funind/invfun.ml" 354 12665 12670 "plugins/funind/invfun.ml" 354 12665 12678
type(
  Names.Idset.elt list
)
ident(
  int_ref pre_args "plugins/funind/invfun.ml" 307 11188 11198 "plugins/funind/invfun.ml" 307 11188 11206
)
"plugins/funind/invfun.ml" 354 12665 12679 "plugins/funind/invfun.ml" 354 12665 12681
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 333 11992 11993 "plugins/funind/invfun.ml" 354 12665 12681
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 357 12767 12777 "plugins/funind/invfun.ml" 357 12767 12793
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 358 12796 12801 "plugins/funind/invfun.ml" 358 12796 12810
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 358 12796 12813 "plugins/funind/invfun.ml" 358 12796 12816
type(
  Names.identifier list * Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 358 12796 12818 "plugins/funind/invfun.ml" 358 12796 12827
type(
  int ->
  Names.identifier list -> Names.identifier list * Names.identifier list
)
ident(
  ext_ref Util.list_chop
)
"plugins/funind/invfun.ml" 358 12796 12828 "plugins/funind/invfun.ml" 358 12796 12839
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_infos "plugins/funind/invfun.ml" 263 9293 9301 "plugins/funind/invfun.ml" 263 9293 9312
)
"plugins/funind/invfun.ml" 358 12796 12828 "plugins/funind/invfun.ml" 358 12796 12847
type(
  int
)
"plugins/funind/invfun.ml" 358 12796 12848 "plugins/funind/invfun.ml" 358 12796 12858
type(
  Names.identifier list
)
ident(
  int_ref args_names "plugins/funind/invfun.ml" 266 9478 9486 "plugins/funind/invfun.ml" 266 9478 9496
)
"plugins/funind/invfun.ml" 358 12796 12817 "plugins/funind/invfun.ml" 358 12796 12859
call(
  stack
)
type(
  Names.identifier list * Names.identifier list
)
"plugins/funind/invfun.ml" 358 12796 12813 "plugins/funind/invfun.ml" 358 12796 12859
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 359 12863 12865 "plugins/funind/invfun.ml" 359 12863 12873
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 359 12863 12874 "plugins/funind/invfun.ml" 359 12863 12879
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 359 12863 12880 "plugins/funind/invfun.ml" 359 12863 12889
type(
  Names.identifier list
)
ident(
  int_ref params_id "plugins/funind/invfun.ml" 358 12796 12801 "plugins/funind/invfun.ml" 358 12796 12810
)
"plugins/funind/invfun.ml" 359 12863 12864 "plugins/funind/invfun.ml" 359 12863 12890
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 359 12863 12890 "plugins/funind/invfun.ml" 359 12863 12891
type(
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/invfun.ml" 359 12863 12892 "plugins/funind/invfun.ml" 359 12863 12900
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/invfun.ml" 359 12863 12901 "plugins/funind/invfun.ml" 359 12863 12917
type(
  Term.constr list
)
ident(
  int_ref constructor_args "plugins/funind/invfun.ml" 332 11963 11973 "plugins/funind/invfun.ml" 332 11963 11989
)
"plugins/funind/invfun.ml" 359 12863 12891 "plugins/funind/invfun.ml" 359 12863 12918
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 359 12863 12864 "plugins/funind/invfun.ml" 359 12863 12918
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 358 12796 12797 "plugins/funind/invfun.ml" 359 12863 12918
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 367 13254 13264 "plugins/funind/invfun.ml" 367 13254 13275
type(
  (Names.mutual_inductive * int) * int
)
"plugins/funind/invfun.ml" 368 13278 13283 "plugins/funind/invfun.ml" 368 13278 13298
type(
  int
)
"plugins/funind/invfun.ml" 368 13278 13301 "plugins/funind/invfun.ml" 368 13278 13302
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 294 10776 10798 "plugins/funind/invfun.ml" 294 10776 10799
)
"plugins/funind/invfun.ml" 368 13278 13303 "plugins/funind/invfun.ml" 368 13278 13304
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/invfun.ml" 368 13278 13305 "plugins/funind/invfun.ml" 368 13278 13306
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 368 13278 13306 "plugins/funind/invfun.ml" 368 13278 13323
type(
  int ref
)
ident(
  int_ref min_constr_number "plugins/funind/invfun.ml" 292 10677 10685 "plugins/funind/invfun.ml" 292 10677 10702
)
"plugins/funind/invfun.ml" 368 13278 13305 "plugins/funind/invfun.ml" 368 13278 13323
type(
  int
)
"plugins/funind/invfun.ml" 368 13278 13301 "plugins/funind/invfun.ml" 368 13278 13323
type(
  int
)
"plugins/funind/invfun.ml" 369 13327 13332 "plugins/funind/invfun.ml" 369 13327 13338
type(
  int
)
"plugins/funind/invfun.ml" 369 13327 13341 "plugins/funind/invfun.ml" 369 13327 13353
type(
  Names.identifier array -> int
)
ident(
  ext_ref Array.length
)
"plugins/funind/invfun.ml" 369 13327 13355 "plugins/funind/invfun.ml" 369 13327 13358
type(
  Declarations.mutual_inductive_body
)
ident(
  int_ref mib "plugins/funind/invfun.ml" 259 9076 9084 "plugins/funind/invfun.ml" 259 9076 9087
)
"plugins/funind/invfun.ml" 369 13327 13355 "plugins/funind/invfun.ml" 369 13327 13384
type(
  Declarations.one_inductive_body array
)
"plugins/funind/invfun.ml" 369 13327 13386 "plugins/funind/invfun.ml" 369 13327 13387
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 369 13327 13387 "plugins/funind/invfun.ml" 369 13327 13397
type(
  int ref
)
ident(
  int_ref ind_number "plugins/funind/invfun.ml" 291 10650 10658 "plugins/funind/invfun.ml" 291 10650 10668
)
"plugins/funind/invfun.ml" 369 13327 13386 "plugins/funind/invfun.ml" 369 13327 13397
type(
  int
)
"plugins/funind/invfun.ml" 369 13327 13355 "plugins/funind/invfun.ml" 369 13327 13398
type(
  Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 369 13327 13354 "plugins/funind/invfun.ml" 369 13327 13427
type(
  Names.identifier array
)
"plugins/funind/invfun.ml" 369 13327 13341 "plugins/funind/invfun.ml" 369 13327 13427
type(
  int
)
"plugins/funind/invfun.ml" 370 13431 13435 "plugins/funind/invfun.ml" 370 13431 13450
type(
  int
)
ident(
  int_ref constructor_num "plugins/funind/invfun.ml" 368 13278 13283 "plugins/funind/invfun.ml" 368 13278 13298
)
"plugins/funind/invfun.ml" 370 13431 13451 "plugins/funind/invfun.ml" 370 13431 13453
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <= )
)
"plugins/funind/invfun.ml" 370 13431 13454 "plugins/funind/invfun.ml" 370 13431 13460
type(
  int
)
ident(
  int_ref length "plugins/funind/invfun.ml" 369 13327 13332 "plugins/funind/invfun.ml" 369 13327 13338
)
"plugins/funind/invfun.ml" 370 13431 13435 "plugins/funind/invfun.ml" 370 13431 13460
type(
  bool
)
"plugins/funind/invfun.ml" 373 13476 13482 "plugins/funind/invfun.ml" 373 13476 13484
type(
  Names.mutual_inductive
)
ident(
  int_ref kn "plugins/funind/invfun.ml" 258 9046 9054 "plugins/funind/invfun.ml" 258 9046 9056
)
"plugins/funind/invfun.ml" 373 13476 13485 "plugins/funind/invfun.ml" 373 13476 13486
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 373 13476 13486 "plugins/funind/invfun.ml" 373 13476 13496
type(
  int ref
)
ident(
  int_ref ind_number "plugins/funind/invfun.ml" 291 10650 10658 "plugins/funind/invfun.ml" 291 10650 10668
)
"plugins/funind/invfun.ml" 373 13476 13485 "plugins/funind/invfun.ml" 373 13476 13496
type(
  int
)
"plugins/funind/invfun.ml" 373 13476 13481 "plugins/funind/invfun.ml" 373 13476 13497
type(
  Names.mutual_inductive * int
)
"plugins/funind/invfun.ml" 373 13476 13498 "plugins/funind/invfun.ml" 373 13476 13513
type(
  int
)
ident(
  int_ref constructor_num "plugins/funind/invfun.ml" 368 13278 13283 "plugins/funind/invfun.ml" 368 13278 13298
)
"plugins/funind/invfun.ml" 372 13467 13470 "plugins/funind/invfun.ml" 374 13514 13520
type(
  (Names.mutual_inductive * int) * int
)
"plugins/funind/invfun.ml" 377 13536 13541 "plugins/funind/invfun.ml" 377 13536 13545
type(
  int ref -> unit
)
ident(
  ext_ref Pervasives.incr
)
"plugins/funind/invfun.ml" 377 13536 13546 "plugins/funind/invfun.ml" 377 13536 13556
type(
  int ref
)
ident(
  int_ref ind_number "plugins/funind/invfun.ml" 291 10650 10658 "plugins/funind/invfun.ml" 291 10650 10668
)
"plugins/funind/invfun.ml" 377 13536 13541 "plugins/funind/invfun.ml" 377 13536 13556
type(
  unit
)
"plugins/funind/invfun.ml" 378 13558 13563 "plugins/funind/invfun.ml" 378 13558 13580
type(
  int ref
)
ident(
  int_ref min_constr_number "plugins/funind/invfun.ml" 292 10677 10685 "plugins/funind/invfun.ml" 292 10677 10702
)
"plugins/funind/invfun.ml" 378 13558 13581 "plugins/funind/invfun.ml" 378 13558 13583
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/invfun.ml" 378 13558 13584 "plugins/funind/invfun.ml" 378 13558 13585
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 378 13558 13585 "plugins/funind/invfun.ml" 378 13558 13602
type(
  int ref
)
ident(
  int_ref min_constr_number "plugins/funind/invfun.ml" 292 10677 10685 "plugins/funind/invfun.ml" 292 10677 10702
)
"plugins/funind/invfun.ml" 378 13558 13584 "plugins/funind/invfun.ml" 378 13558 13602
type(
  int
)
"plugins/funind/invfun.ml" 378 13558 13603 "plugins/funind/invfun.ml" 378 13558 13604
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/invfun.ml" 378 13558 13605 "plugins/funind/invfun.ml" 378 13558 13611
type(
  int
)
ident(
  int_ref length "plugins/funind/invfun.ml" 369 13327 13332 "plugins/funind/invfun.ml" 369 13327 13338
)
"plugins/funind/invfun.ml" 378 13558 13584 "plugins/funind/invfun.ml" 378 13558 13611
type(
  int
)
"plugins/funind/invfun.ml" 378 13558 13563 "plugins/funind/invfun.ml" 378 13558 13611
type(
  unit
)
"plugins/funind/invfun.ml" 379 13614 13620 "plugins/funind/invfun.ml" 379 13614 13622
type(
  Names.mutual_inductive
)
ident(
  int_ref kn "plugins/funind/invfun.ml" 258 9046 9054 "plugins/funind/invfun.ml" 258 9046 9056
)
"plugins/funind/invfun.ml" 379 13614 13623 "plugins/funind/invfun.ml" 379 13614 13624
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 379 13614 13624 "plugins/funind/invfun.ml" 379 13614 13634
type(
  int ref
)
ident(
  int_ref ind_number "plugins/funind/invfun.ml" 291 10650 10658 "plugins/funind/invfun.ml" 291 10650 10668
)
"plugins/funind/invfun.ml" 379 13614 13623 "plugins/funind/invfun.ml" 379 13614 13634
type(
  int
)
"plugins/funind/invfun.ml" 379 13614 13619 "plugins/funind/invfun.ml" 379 13614 13635
type(
  Names.mutual_inductive * int
)
"plugins/funind/invfun.ml" 379 13614 13636 "plugins/funind/invfun.ml" 379 13614 13637
type(
  int
)
"plugins/funind/invfun.ml" 379 13614 13619 "plugins/funind/invfun.ml" 379 13614 13637
type(
  (Names.mutual_inductive * int) * int
)
"plugins/funind/invfun.ml" 378 13558 13563 "plugins/funind/invfun.ml" 379 13614 13637
type(
  (Names.mutual_inductive * int) * int
)
"plugins/funind/invfun.ml" 376 13527 13530 "plugins/funind/invfun.ml" 380 13638 13644
type(
  (Names.mutual_inductive * int) * int
)
"plugins/funind/invfun.ml" 370 13431 13432 "plugins/funind/invfun.ml" 380 13638 13644
type(
  (Names.mutual_inductive * int) * int
)
"plugins/funind/invfun.ml" 369 13327 13328 "plugins/funind/invfun.ml" 380 13638 13644
type(
  (Names.mutual_inductive * int) * int
)
"plugins/funind/invfun.ml" 368 13278 13279 "plugins/funind/invfun.ml" 380 13638 13644
type(
  (Names.mutual_inductive * int) * int
)
"plugins/funind/invfun.ml" 383 13705 13715 "plugins/funind/invfun.ml" 383 13705 13730
type(
  Term.constr
)
"plugins/funind/invfun.ml" 383 13705 13733 "plugins/funind/invfun.ml" 383 13705 13740
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/invfun.ml" 383 13705 13742 "plugins/funind/invfun.ml" 383 13705 13753
type(
  Names.constructor -> Term.constr
)
ident(
  ext_ref Term.mkConstruct
)
"plugins/funind/invfun.ml" 383 13705 13753 "plugins/funind/invfun.ml" 383 13705 13766
type(
  Names.constructor
)
ident(
  int_ref constructor "plugins/funind/invfun.ml" 367 13254 13264 "plugins/funind/invfun.ml" 367 13254 13275
)
"plugins/funind/invfun.ml" 383 13705 13741 "plugins/funind/invfun.ml" 383 13705 13767
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 383 13705 13768 "plugins/funind/invfun.ml" 383 13705 13784
type(
  Term.constr list
)
ident(
  int_ref constructor_args "plugins/funind/invfun.ml" 357 12767 12777 "plugins/funind/invfun.ml" 357 12767 12793
)
"plugins/funind/invfun.ml" 383 13705 13740 "plugins/funind/invfun.ml" 383 13705 13785
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 383 13705 13733 "plugins/funind/invfun.ml" 383 13705 13785
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 385 13821 13831 "plugins/funind/invfun.ml" 385 13821 13834
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 385 13821 13835 "plugins/funind/invfun.ml" 385 13821 13839
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 385 13821 13831 "plugins/funind/invfun.ml" 385 13821 13839
type(
  Names.identifier * Names.identifier
)
"plugins/funind/invfun.ml" 386 13842 13849 "plugins/funind/invfun.ml" 386 13842 13866
type(
  Names.identifier -> Names.identifier list -> int -> Names.identifier list
)
ident(
  int_ref generate_fresh_id "plugins/funind/invfun.ml" 206 6984 6992 "plugins/funind/invfun.ml" 206 6984 7009
)
"plugins/funind/invfun.ml" 386 13842 13868 "plugins/funind/invfun.ml" 386 13842 13880
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 386 13842 13881 "plugins/funind/invfun.ml" 386 13842 13884
type(
  string
)
"plugins/funind/invfun.ml" 386 13842 13867 "plugins/funind/invfun.ml" 386 13842 13885
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 386 13842 13886 "plugins/funind/invfun.ml" 386 13842 13914
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 273 9873 9881 "plugins/funind/invfun.ml" 273 9873 9884
)
"plugins/funind/invfun.ml" 386 13842 13915 "plugins/funind/invfun.ml" 386 13842 13916
type(
  int
)
"plugins/funind/invfun.ml" 386 13842 13849 "plugins/funind/invfun.ml" 386 13842 13916
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 387 13922 13928 "plugins/funind/invfun.ml" 387 13922 13931
type(
  Names.identifier
)
ident(
  def res "plugins/funind/invfun.ml" 387 13922 13941 "plugins/funind/invfun.ml" 387 13922 13949
)
"plugins/funind/invfun.ml" 387 13922 13932 "plugins/funind/invfun.ml" 387 13922 13936
type(
  Names.identifier
)
ident(
  def hres "plugins/funind/invfun.ml" 387 13922 13941 "plugins/funind/invfun.ml" 387 13922 13949
)
"plugins/funind/invfun.ml" 387 13922 13927 "plugins/funind/invfun.ml" 387 13922 13937
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 387 13922 13941 "plugins/funind/invfun.ml" 387 13922 13944
type(
  Names.identifier
)
ident(
  int_ref res "plugins/funind/invfun.ml" 387 13922 13928 "plugins/funind/invfun.ml" 387 13922 13931
)
"plugins/funind/invfun.ml" 387 13922 13945 "plugins/funind/invfun.ml" 387 13922 13949
type(
  Names.identifier
)
ident(
  int_ref hres "plugins/funind/invfun.ml" 387 13922 13932 "plugins/funind/invfun.ml" 387 13922 13936
)
"plugins/funind/invfun.ml" 387 13922 13941 "plugins/funind/invfun.ml" 387 13922 13949
type(
  Names.identifier * Names.identifier
)
"plugins/funind/invfun.ml" 388 13950 13955 "plugins/funind/invfun.ml" 388 13950 13956
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 388 13950 13960 "plugins/funind/invfun.ml" 388 13950 13972
type(
  Names.identifier * Names.identifier
)
"plugins/funind/invfun.ml" 386 13842 13843 "plugins/funind/invfun.ml" 388 13950 13972
type(
  Names.identifier * Names.identifier
)
"plugins/funind/invfun.ml" 390 13982 13988 "plugins/funind/invfun.ml" 390 13982 13995
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/invfun.ml" 51 1570 1574 "plugins/funind/invfun.ml" 51 1570 1581
)
"plugins/funind/invfun.ml" 390 13982 13997 "plugins/funind/invfun.ml" 390 13982 14000
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 390 13982 14001 "plugins/funind/invfun.ml" 390 13982 14018
type(
  string
)
"plugins/funind/invfun.ml" 390 13982 13997 "plugins/funind/invfun.ml" 390 13982 14018
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 390 13982 14019 "plugins/funind/invfun.ml" 390 13982 14021
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 390 13982 14022 "plugins/funind/invfun.ml" 390 13982 14044
type(
  Environ.env -> Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr_env
)
"plugins/funind/invfun.ml" 390 13982 14046 "plugins/funind/invfun.ml" 390 13982 14052
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/invfun.ml" 390 13982 14053 "plugins/funind/invfun.ml" 390 13982 14054
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 294 10776 10800 "plugins/funind/invfun.ml" 294 10776 10801
)
"plugins/funind/invfun.ml" 390 13982 14045 "plugins/funind/invfun.ml" 390 13982 14055
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 390 13982 14056 "plugins/funind/invfun.ml" 390 13982 14071
type(
  Term.constr
)
ident(
  int_ref app_constructor "plugins/funind/invfun.ml" 383 13705 13715 "plugins/funind/invfun.ml" 383 13705 13730
)
"plugins/funind/invfun.ml" 390 13982 14022 "plugins/funind/invfun.ml" 390 13982 14071
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 390 13982 13996 "plugins/funind/invfun.ml" 390 13982 14072
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 390 13982 13988 "plugins/funind/invfun.ml" 390 13982 14072
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 392 14082 14083 "plugins/funind/invfun.ml" 392 14082 14093
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 395 14175 14180 "plugins/funind/invfun.ml" 395 14175 14191
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 395 14175 14192 "plugins/funind/invfun.ml" 395 14175 14203
type(
  string
)
"plugins/funind/invfun.ml" 395 14175 14204 "plugins/funind/invfun.ml" 395 14175 14211
type(
  Proof_type.tactic
)
ident(
  int_ref pre_tac "plugins/funind/invfun.ml" 307 11188 11207 "plugins/funind/invfun.ml" 307 11188 11214
)
"plugins/funind/invfun.ml" 395 14175 14180 "plugins/funind/invfun.ml" 395 14175 14211
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 397 14261 14266 "plugins/funind/invfun.ml" 397 14261 14274
type(
  Redexpr.red_expr -> Tacticals.clause -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_reduce
)
"plugins/funind/invfun.ml" 399 14295 14300 "plugins/funind/invfun.ml" 399 14295 14317
type(
  '_b Rawterm.raw_red_flag
)
ident(
  ext_ref Rawterm.all_flags
)
"plugins/funind/invfun.ml" 400 14323 14347 "plugins/funind/invfun.ml" 400 14323 14352
type(
  bool
)
"plugins/funind/invfun.ml" 401 14355 14379 "plugins/funind/invfun.ml" 401 14355 14381
type(
  Names.evaluable_global_reference list
)
"plugins/funind/invfun.ml" 399 14295 14298 "plugins/funind/invfun.ml" 402 14382 14386
type(
  Names.evaluable_global_reference Rawterm.raw_red_flag
)
"plugins/funind/invfun.ml" 398 14275 14282 "plugins/funind/invfun.ml" 403 14387 14395
type(
  Redexpr.red_expr
)
"plugins/funind/invfun.ml" 404 14396 14403 "plugins/funind/invfun.ml" 404 14396 14410
type(
  Tacticals.clause
)
ident(
  ext_ref Tacticals.onConcl
)
"plugins/funind/invfun.ml" 397 14261 14266 "plugins/funind/invfun.ml" 404 14396 14410
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 406 14491 14496 "plugins/funind/invfun.ml" 406 14491 14507
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 406 14491 14508 "plugins/funind/invfun.ml" 406 14491 14521
type(
  string
)
"plugins/funind/invfun.ml" 406 14491 14523 "plugins/funind/invfun.ml" 406 14491 14529
type(
  (Names.identifier -> Proof_type.tactic) ->
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/invfun.ml" 406 14491 14530 "plugins/funind/invfun.ml" 406 14491 14537
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 406 14491 14539 "plugins/funind/invfun.ml" 406 14491 14542
type(
  Names.identifier
)
ident(
  int_ref res "plugins/funind/invfun.ml" 385 13821 13831 "plugins/funind/invfun.ml" 385 13821 13834
)
"plugins/funind/invfun.ml" 406 14491 14543 "plugins/funind/invfun.ml" 406 14491 14547
type(
  Names.identifier
)
ident(
  int_ref hres "plugins/funind/invfun.ml" 385 13821 13835 "plugins/funind/invfun.ml" 385 13821 13839
)
"plugins/funind/invfun.ml" 406 14491 14538 "plugins/funind/invfun.ml" 406 14491 14548
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 406 14491 14522 "plugins/funind/invfun.ml" 406 14491 14549
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 406 14491 14496 "plugins/funind/invfun.ml" 406 14491 14549
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 408 14593 14598 "plugins/funind/invfun.ml" 408 14593 14609
type(
  string -> Tacmach.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 408 14593 14610 "plugins/funind/invfun.ml" 408 14593 14631
type(
  string
)
"plugins/funind/invfun.ml" 408 14593 14633 "plugins/funind/invfun.ml" 408 14593 14651
type(
  ?tac:Tacmach.tactic * Equality.conditions -> Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Equality.rewriteLR
)
"plugins/funind/invfun.ml" 408 14593 14653 "plugins/funind/invfun.ml" 408 14593 14658
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 408 14593 14659 "plugins/funind/invfun.ml" 408 14593 14663
type(
  Names.identifier
)
ident(
  int_ref hres "plugins/funind/invfun.ml" 385 13821 13835 "plugins/funind/invfun.ml" 385 13821 13839
)
"plugins/funind/invfun.ml" 408 14593 14652 "plugins/funind/invfun.ml" 408 14593 14664
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 408 14593 14632 "plugins/funind/invfun.ml" 408 14593 14665
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 408 14593 14598 "plugins/funind/invfun.ml" 408 14593 14665
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 410 14689 14694 "plugins/funind/invfun.ml" 410 14689 14705
type(
  string -> Tacmach.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 410 14689 14706 "plugins/funind/invfun.ml" 410 14689 14713
type(
  string
)
"plugins/funind/invfun.ml" 410 14689 14715 "plugins/funind/invfun.ml" 410 14689 14722
type(
  Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_exact
)
"plugins/funind/invfun.ml" 410 14689 14723 "plugins/funind/invfun.ml" 410 14689 14738
type(
  Term.constr
)
ident(
  int_ref app_constructor "plugins/funind/invfun.ml" 383 13705 13715 "plugins/funind/invfun.ml" 383 13705 13730
)
"plugins/funind/invfun.ml" 410 14689 14714 "plugins/funind/invfun.ml" 410 14689 14739
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 410 14689 14694 "plugins/funind/invfun.ml" 410 14689 14739
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 393 14094 14097 "plugins/funind/invfun.ml" 411 14740 14744
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 391 14074 14080 "plugins/funind/invfun.ml" 412 14745 14752
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 413 14753 14754 "plugins/funind/invfun.ml" 413 14753 14755
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 294 10776 10800 "plugins/funind/invfun.ml" 294 10776 10801
)
"plugins/funind/invfun.ml" 391 14074 14080 "plugins/funind/invfun.ml" 413 14753 14755
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 390 13982 13988 "plugins/funind/invfun.ml" 413 14753 14755
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 385 13821 13827 "plugins/funind/invfun.ml" 413 14753 14755
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 383 13705 13711 "plugins/funind/invfun.ml" 413 14753 14755
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 367 13254 13260 "plugins/funind/invfun.ml" 413 14753 14755
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 357 12767 12773 "plugins/funind/invfun.ml" 413 14753 14755
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 332 11963 11969 "plugins/funind/invfun.ml" 413 14753 14755
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 307 11188 11194 "plugins/funind/invfun.ml" 413 14753 14755
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 296 10854 10860 "plugins/funind/invfun.ml" 413 14753 14755
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 416 14794 14802 "plugins/funind/invfun.ml" 416 14794 14813
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 416 14794 14816 "plugins/funind/invfun.ml" 416 14794 14819
type(
  Names.identifier list * Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 416 14794 14821 "plugins/funind/invfun.ml" 416 14794 14830
type(
  int ->
  Names.identifier list -> Names.identifier list * Names.identifier list
)
ident(
  ext_ref Util.list_chop
)
"plugins/funind/invfun.ml" 416 14794 14831 "plugins/funind/invfun.ml" 416 14794 14842
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_infos "plugins/funind/invfun.ml" 263 9293 9301 "plugins/funind/invfun.ml" 263 9293 9312
)
"plugins/funind/invfun.ml" 416 14794 14831 "plugins/funind/invfun.ml" 416 14794 14850
type(
  int
)
"plugins/funind/invfun.ml" 416 14794 14851 "plugins/funind/invfun.ml" 416 14794 14861
type(
  Names.identifier list
)
ident(
  int_ref args_names "plugins/funind/invfun.ml" 266 9478 9486 "plugins/funind/invfun.ml" 266 9478 9496
)
"plugins/funind/invfun.ml" 416 14794 14820 "plugins/funind/invfun.ml" 416 14794 14862
call(
  stack
)
type(
  Names.identifier list * Names.identifier list
)
"plugins/funind/invfun.ml" 416 14794 14816 "plugins/funind/invfun.ml" 416 14794 14862
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 417 14866 14874 "plugins/funind/invfun.ml" 417 14866 14880
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 417 14866 14883 "plugins/funind/invfun.ml" 417 14866 14891
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 417 14866 14892 "plugins/funind/invfun.ml" 417 14866 14897
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 417 14866 14898 "plugins/funind/invfun.ml" 417 14866 14909
type(
  Names.identifier list
)
ident(
  int_ref param_names "plugins/funind/invfun.ml" 416 14794 14802 "plugins/funind/invfun.ml" 416 14794 14813
)
"plugins/funind/invfun.ml" 417 14866 14883 "plugins/funind/invfun.ml" 417 14866 14909
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 418 14913 14921 "plugins/funind/invfun.ml" 418 14913 14927
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 418 14913 14930 "plugins/funind/invfun.ml" 418 14913 14943
type(
  Term.constr array -> Term.constr list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/invfun.ml" 418 14913 14945 "plugins/funind/invfun.ml" 418 14913 14954
type(
  (Term.constr -> Term.constr) -> Term.constr array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/invfun.ml" 418 14913 14960 "plugins/funind/invfun.ml" 418 14913 14961
type(
  Term.constr
)
ident(
  def c "plugins/funind/invfun.ml" 418 14913 14965 "plugins/funind/invfun.ml" 418 14913 14982
)
"plugins/funind/invfun.ml" 418 14913 14965 "plugins/funind/invfun.ml" 418 14913 14972
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/invfun.ml" 418 14913 14973 "plugins/funind/invfun.ml" 418 14913 14974
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/invfun.ml" 418 14913 14960 "plugins/funind/invfun.ml" 418 14913 14961
)
"plugins/funind/invfun.ml" 418 14913 14975 "plugins/funind/invfun.ml" 418 14913 14981
type(
  Term.constr list
)
ident(
  int_ref params "plugins/funind/invfun.ml" 417 14866 14874 "plugins/funind/invfun.ml" 417 14866 14880
)
"plugins/funind/invfun.ml" 418 14913 14972 "plugins/funind/invfun.ml" 418 14913 14982
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 418 14913 14965 "plugins/funind/invfun.ml" 418 14913 14982
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 418 14913 14955 "plugins/funind/invfun.ml" 418 14913 14983
type(
  Term.constr -> Term.constr
)
"plugins/funind/invfun.ml" 418 14913 14984 "plugins/funind/invfun.ml" 418 14913 14990
type(
  Term.constr array
)
ident(
  int_ref lemmas "plugins/funind/invfun.ml" 244 8627 8635 "plugins/funind/invfun.ml" 244 8627 8641
)
"plugins/funind/invfun.ml" 418 14913 14944 "plugins/funind/invfun.ml" 418 14913 14991
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 418 14913 14930 "plugins/funind/invfun.ml" 418 14913 14991
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 422 15112 15120 "plugins/funind/invfun.ml" 422 15112 15128
type(
  Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 423 15131 15141 "plugins/funind/invfun.ml" 423 15131 15156
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
"plugins/funind/invfun.ml" 423 15131 15157 "plugins/funind/invfun.ml" 423 15131 15162
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 423 15131 15141 "plugins/funind/invfun.ml" 423 15131 15162
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 424 15165 15166 "plugins/funind/invfun.ml" 424 15165 15181
type(
  ((Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
   Names.identifier list ->
   Term.rel_declaration ->
   Term.constr ->
   (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
   Names.identifier list) ->
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list ->
  Term.rel_context ->
  Term.constr list ->
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
ident(
  ext_ref List.fold_left2
)
"plugins/funind/invfun.ml" 425 15182 15191 "plugins/funind/invfun.ml" 425 15182 15199
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
ident(
  def bindings "plugins/funind/invfun.ml" 425 15182 15207 "plugins/funind/invfun.ml" 427 15289 15348
)
"plugins/funind/invfun.ml" 425 15182 15200 "plugins/funind/invfun.ml" 425 15182 15205
type(
  Names.identifier list
)
ident(
  def avoid "plugins/funind/invfun.ml" 425 15182 15207 "plugins/funind/invfun.ml" 427 15289 15348
)
"plugins/funind/invfun.ml" 425 15182 15190 "plugins/funind/invfun.ml" 425 15182 15206
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 425 15182 15208 "plugins/funind/invfun.ml" 425 15182 15209
type(
  Names.name
)
ident(
  def x "plugins/funind/invfun.ml" 425 15182 15215 "plugins/funind/invfun.ml" 427 15289 15348
)
"plugins/funind/invfun.ml" 425 15182 15210 "plugins/funind/invfun.ml" 425 15182 15211
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 425 15182 15212 "plugins/funind/invfun.ml" 425 15182 15213
type(
  Term.types
)
"plugins/funind/invfun.ml" 425 15182 15207 "plugins/funind/invfun.ml" 425 15182 15214
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 425 15182 15215 "plugins/funind/invfun.ml" 425 15182 15216
type(
  Term.constr
)
ident(
  def p "plugins/funind/invfun.ml" 426 15220 15226 "plugins/funind/invfun.ml" 427 15289 15348
)
"plugins/funind/invfun.ml" 426 15220 15230 "plugins/funind/invfun.ml" 426 15220 15232
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 426 15220 15235 "plugins/funind/invfun.ml" 426 15220 15258
type(
  Names.identifier -> Names.identifier list -> Names.identifier
)
ident(
  ext_ref Namegen.next_ident_away
)
"plugins/funind/invfun.ml" 426 15220 15260 "plugins/funind/invfun.ml" 426 15220 15276
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/invfun.ml" 426 15220 15277 "plugins/funind/invfun.ml" 426 15220 15278
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/invfun.ml" 425 15182 15208 "plugins/funind/invfun.ml" 425 15182 15209
)
"plugins/funind/invfun.ml" 426 15220 15259 "plugins/funind/invfun.ml" 426 15220 15279
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 426 15220 15280 "plugins/funind/invfun.ml" 426 15220 15285
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/invfun.ml" 425 15182 15200 "plugins/funind/invfun.ml" 425 15182 15205
)
"plugins/funind/invfun.ml" 426 15220 15235 "plugins/funind/invfun.ml" 426 15220 15285
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 427 15289 15296 "plugins/funind/invfun.ml" 427 15289 15305
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/invfun.ml" 427 15289 15323 "plugins/funind/invfun.ml" 427 15289 15325
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 426 15220 15230 "plugins/funind/invfun.ml" 426 15220 15232
)
"plugins/funind/invfun.ml" 427 15289 15306 "plugins/funind/invfun.ml" 427 15289 15325
type(
  Rawterm.quantified_hypothesis
)
"plugins/funind/invfun.ml" 427 15289 15326 "plugins/funind/invfun.ml" 427 15289 15327
type(
  Term.constr
)
ident(
  int_ref p "plugins/funind/invfun.ml" 425 15182 15215 "plugins/funind/invfun.ml" 425 15182 15216
)
"plugins/funind/invfun.ml" 427 15289 15295 "plugins/funind/invfun.ml" 427 15289 15328
type(
  Util.loc * Rawterm.quantified_hypothesis * Term.constr
)
"plugins/funind/invfun.ml" 427 15289 15330 "plugins/funind/invfun.ml" 427 15289 15338
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
ident(
  int_ref bindings "plugins/funind/invfun.ml" 425 15182 15191 "plugins/funind/invfun.ml" 425 15182 15199
)
"plugins/funind/invfun.ml" 427 15289 15295 "plugins/funind/invfun.ml" 427 15289 15338
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
"plugins/funind/invfun.ml" 427 15289 15339 "plugins/funind/invfun.ml" 427 15289 15341
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 426 15220 15230 "plugins/funind/invfun.ml" 426 15220 15232
)
"plugins/funind/invfun.ml" 427 15289 15343 "plugins/funind/invfun.ml" 427 15289 15348
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/invfun.ml" 425 15182 15200 "plugins/funind/invfun.ml" 425 15182 15205
)
"plugins/funind/invfun.ml" 427 15289 15339 "plugins/funind/invfun.ml" 427 15289 15348
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 427 15289 15295 "plugins/funind/invfun.ml" 427 15289 15348
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 426 15220 15226 "plugins/funind/invfun.ml" 427 15289 15348
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 425 15182 15185 "plugins/funind/invfun.ml" 428 15349 15353
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list ->
  Term.rel_declaration ->
  Term.constr ->
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 429 15354 15358 "plugins/funind/invfun.ml" 429 15354 15360
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
"plugins/funind/invfun.ml" 429 15354 15361 "plugins/funind/invfun.ml" 429 15354 15375
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/invfun.ml" 429 15354 15376 "plugins/funind/invfun.ml" 429 15354 15377
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 239 8380 8386 "plugins/funind/invfun.ml" 239 8380 8387
)
"plugins/funind/invfun.ml" 429 15354 15361 "plugins/funind/invfun.ml" 429 15354 15377
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 429 15354 15357 "plugins/funind/invfun.ml" 429 15354 15378
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 430 15379 15382 "plugins/funind/invfun.ml" 430 15379 15393
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_infos "plugins/funind/invfun.ml" 263 9293 9301 "plugins/funind/invfun.ml" 263 9293 9312
)
"plugins/funind/invfun.ml" 430 15379 15382 "plugins/funind/invfun.ml" 430 15379 15400
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 431 15401 15405 "plugins/funind/invfun.ml" 431 15401 15413
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/invfun.ml" 431 15401 15414 "plugins/funind/invfun.ml" 431 15401 15420
type(
  Term.constr list
)
ident(
  int_ref params "plugins/funind/invfun.ml" 417 14866 14874 "plugins/funind/invfun.ml" 417 14866 14880
)
"plugins/funind/invfun.ml" 431 15401 15404 "plugins/funind/invfun.ml" 431 15401 15421
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 424 15165 15166 "plugins/funind/invfun.ml" 431 15401 15421
call(
  stack
)
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 433 15431 15441 "plugins/funind/invfun.ml" 433 15431 15456
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
"plugins/funind/invfun.ml" 434 15459 15460 "plugins/funind/invfun.ml" 434 15459 15468
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list ->
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
ident(
  ext_ref List.rev
)
"plugins/funind/invfun.ml" 434 15459 15470 "plugins/funind/invfun.ml" 434 15459 15473
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list ->
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 434 15459 15476 "plugins/funind/invfun.ml" 434 15459 15491
type(
  ((Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
   Names.identifier list ->
   Term.rel_declaration ->
   Term.types ->
   (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
   Names.identifier list) ->
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list ->
  Term.rel_context ->
  Term.types list ->
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
ident(
  ext_ref List.fold_left2
)
"plugins/funind/invfun.ml" 435 15492 15501 "plugins/funind/invfun.ml" 435 15492 15509
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
ident(
  def bindings "plugins/funind/invfun.ml" 435 15492 15517 "plugins/funind/invfun.ml" 437 15599 15668
)
"plugins/funind/invfun.ml" 435 15492 15510 "plugins/funind/invfun.ml" 435 15492 15515
type(
  Names.identifier list
)
ident(
  def avoid "plugins/funind/invfun.ml" 435 15492 15517 "plugins/funind/invfun.ml" 437 15599 15668
)
"plugins/funind/invfun.ml" 435 15492 15500 "plugins/funind/invfun.ml" 435 15492 15516
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 435 15492 15518 "plugins/funind/invfun.ml" 435 15492 15519
type(
  Names.name
)
ident(
  def x "plugins/funind/invfun.ml" 435 15492 15525 "plugins/funind/invfun.ml" 437 15599 15668
)
"plugins/funind/invfun.ml" 435 15492 15520 "plugins/funind/invfun.ml" 435 15492 15521
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 435 15492 15522 "plugins/funind/invfun.ml" 435 15492 15523
type(
  Term.types
)
"plugins/funind/invfun.ml" 435 15492 15517 "plugins/funind/invfun.ml" 435 15492 15524
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 435 15492 15525 "plugins/funind/invfun.ml" 435 15492 15526
type(
  Term.types
)
ident(
  def p "plugins/funind/invfun.ml" 436 15530 15536 "plugins/funind/invfun.ml" 437 15599 15668
)
"plugins/funind/invfun.ml" 436 15530 15540 "plugins/funind/invfun.ml" 436 15530 15542
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 436 15530 15545 "plugins/funind/invfun.ml" 436 15530 15568
type(
  Names.identifier -> Names.identifier list -> Names.identifier
)
ident(
  ext_ref Namegen.next_ident_away
)
"plugins/funind/invfun.ml" 436 15530 15570 "plugins/funind/invfun.ml" 436 15530 15586
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/invfun.ml" 436 15530 15587 "plugins/funind/invfun.ml" 436 15530 15588
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/invfun.ml" 435 15492 15518 "plugins/funind/invfun.ml" 435 15492 15519
)
"plugins/funind/invfun.ml" 436 15530 15569 "plugins/funind/invfun.ml" 436 15530 15589
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 436 15530 15590 "plugins/funind/invfun.ml" 436 15530 15595
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/invfun.ml" 435 15492 15510 "plugins/funind/invfun.ml" 435 15492 15515
)
"plugins/funind/invfun.ml" 436 15530 15545 "plugins/funind/invfun.ml" 436 15530 15595
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 437 15599 15606 "plugins/funind/invfun.ml" 437 15599 15615
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/invfun.ml" 437 15599 15633 "plugins/funind/invfun.ml" 437 15599 15635
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 436 15530 15540 "plugins/funind/invfun.ml" 436 15530 15542
)
"plugins/funind/invfun.ml" 437 15599 15616 "plugins/funind/invfun.ml" 437 15599 15635
type(
  Rawterm.quantified_hypothesis
)
"plugins/funind/invfun.ml" 437 15599 15637 "plugins/funind/invfun.ml" 437 15599 15644
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_zeta "plugins/funind/invfun.ml" 78 2228 2232 "plugins/funind/invfun.ml" 78 2228 2239
)
"plugins/funind/invfun.ml" 437 15599 15645 "plugins/funind/invfun.ml" 437 15599 15646
type(
  Term.types
)
ident(
  int_ref p "plugins/funind/invfun.ml" 435 15492 15525 "plugins/funind/invfun.ml" 435 15492 15526
)
"plugins/funind/invfun.ml" 437 15599 15636 "plugins/funind/invfun.ml" 437 15599 15647
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 437 15599 15605 "plugins/funind/invfun.ml" 437 15599 15648
type(
  Util.loc * Rawterm.quantified_hypothesis * Term.constr
)
"plugins/funind/invfun.ml" 437 15599 15650 "plugins/funind/invfun.ml" 437 15599 15658
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
ident(
  int_ref bindings "plugins/funind/invfun.ml" 435 15492 15501 "plugins/funind/invfun.ml" 435 15492 15509
)
"plugins/funind/invfun.ml" 437 15599 15605 "plugins/funind/invfun.ml" 437 15599 15658
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
"plugins/funind/invfun.ml" 437 15599 15659 "plugins/funind/invfun.ml" 437 15599 15661
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 436 15530 15540 "plugins/funind/invfun.ml" 436 15530 15542
)
"plugins/funind/invfun.ml" 437 15599 15663 "plugins/funind/invfun.ml" 437 15599 15668
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/invfun.ml" 435 15492 15510 "plugins/funind/invfun.ml" 435 15492 15515
)
"plugins/funind/invfun.ml" 437 15599 15659 "plugins/funind/invfun.ml" 437 15599 15668
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 437 15599 15605 "plugins/funind/invfun.ml" 437 15599 15668
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 436 15530 15536 "plugins/funind/invfun.ml" 437 15599 15668
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 435 15492 15495 "plugins/funind/invfun.ml" 437 15599 15669
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list ->
  Term.rel_declaration ->
  Term.types ->
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 438 15670 15674 "plugins/funind/invfun.ml" 438 15670 15676
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
"plugins/funind/invfun.ml" 438 15670 15677 "plugins/funind/invfun.ml" 438 15670 15682
type(
  Names.identifier list
)
ident(
  int_ref avoid "plugins/funind/invfun.ml" 423 15131 15157 "plugins/funind/invfun.ml" 423 15131 15162
)
"plugins/funind/invfun.ml" 438 15670 15673 "plugins/funind/invfun.ml" 438 15670 15683
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 439 15684 15687 "plugins/funind/invfun.ml" 439 15684 15698
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_infos "plugins/funind/invfun.ml" 263 9293 9301 "plugins/funind/invfun.ml" 263 9293 9312
)
"plugins/funind/invfun.ml" 439 15684 15687 "plugins/funind/invfun.ml" 439 15684 15709
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 440 15710 15713 "plugins/funind/invfun.ml" 440 15710 15721
type(
  Term.types list
)
ident(
  int_ref lemmas "plugins/funind/invfun.ml" 418 14913 14921 "plugins/funind/invfun.ml" 418 14913 14927
)
"plugins/funind/invfun.ml" 434 15459 15475 "plugins/funind/invfun.ml" 440 15710 15722
call(
  stack
)
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list *
  Names.identifier list
)
"plugins/funind/invfun.ml" 434 15459 15469 "plugins/funind/invfun.ml" 440 15710 15723
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
"plugins/funind/invfun.ml" 434 15459 15460 "plugins/funind/invfun.ml" 440 15710 15723
call(
  stack
)
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
"plugins/funind/invfun.ml" 442 15733 15765 "plugins/funind/invfun.ml" 442 15733 15780
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
ident(
  int_ref params_bindings "plugins/funind/invfun.ml" 423 15131 15141 "plugins/funind/invfun.ml" 423 15131 15156
)
"plugins/funind/invfun.ml" 442 15733 15780 "plugins/funind/invfun.ml" 442 15733 15781
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list ->
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list ->
  Term.constr Rawterm.explicit_bindings
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/invfun.ml" 442 15733 15781 "plugins/funind/invfun.ml" 442 15733 15796
type(
  (Util.loc * Rawterm.quantified_hypothesis * Term.constr) list
)
ident(
  int_ref lemmas_bindings "plugins/funind/invfun.ml" 433 15431 15441 "plugins/funind/invfun.ml" 433 15431 15456
)
"plugins/funind/invfun.ml" 442 15733 15764 "plugins/funind/invfun.ml" 442 15733 15797
call(
  stack
)
type(
  Term.constr Rawterm.explicit_bindings
)
"plugins/funind/invfun.ml" 442 15733 15739 "plugins/funind/invfun.ml" 442 15733 15797
type(
  Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 433 15431 15437 "plugins/funind/invfun.ml" 442 15733 15797
type(
  Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 423 15131 15137 "plugins/funind/invfun.ml" 442 15733 15797
type(
  Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 444 15805 15809 "plugins/funind/invfun.ml" 444 15805 15819
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 445 15820 15828 "plugins/funind/invfun.ml" 445 15820 15839
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 445 15820 15840 "plugins/funind/invfun.ml" 445 15820 15858
type(
  string
)
"plugins/funind/invfun.ml" 445 15820 15860 "plugins/funind/invfun.ml" 445 15820 15866
type(
  (Names.identifier -> Proof_type.tactic) ->
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/invfun.ml" 445 15820 15867 "plugins/funind/invfun.ml" 445 15820 15874
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 445 15820 15875 "plugins/funind/invfun.ml" 445 15820 15885
type(
  Names.identifier list
)
ident(
  int_ref args_names "plugins/funind/invfun.ml" 266 9478 9486 "plugins/funind/invfun.ml" 266 9478 9496
)
"plugins/funind/invfun.ml" 445 15820 15859 "plugins/funind/invfun.ml" 445 15820 15886
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 445 15820 15828 "plugins/funind/invfun.ml" 445 15820 15886
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 446 15888 15889 "plugins/funind/invfun.ml" 446 15888 15900
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 446 15888 15901 "plugins/funind/invfun.ml" 446 15888 15912
type(
  string
)
"plugins/funind/invfun.ml" 446 15888 15914 "plugins/funind/invfun.ml" 446 15888 15923
type(
  Names.name -> Term.types -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tactics.assert_by
)
"plugins/funind/invfun.ml" 447 15924 15933 "plugins/funind/invfun.ml" 447 15924 15945
type(
  Names.identifier
)
ident(
  int_ref principle_id "plugins/funind/invfun.ml" 272 9788 9796 "plugins/funind/invfun.ml" 272 9788 9808
)
"plugins/funind/invfun.ml" 447 15924 15927 "plugins/funind/invfun.ml" 447 15924 15946
type(
  Names.name
)
"plugins/funind/invfun.ml" 448 15947 15950 "plugins/funind/invfun.ml" 448 15947 15960
type(
  Term.types
)
ident(
  int_ref princ_type "plugins/funind/invfun.ml" 262 9249 9257 "plugins/funind/invfun.ml" 262 9249 9267
)
"plugins/funind/invfun.ml" 449 15961 15965 "plugins/funind/invfun.ml" 449 15961 15972
type(
  Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_exact
)
"plugins/funind/invfun.ml" 449 15961 15973 "plugins/funind/invfun.ml" 449 15961 15984
type(
  Term.constr
)
ident(
  int_ref f_principle "plugins/funind/invfun.ml" 261 9201 9209 "plugins/funind/invfun.ml" 261 9201 9220
)
"plugins/funind/invfun.ml" 449 15961 15964 "plugins/funind/invfun.ml" 449 15961 15985
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 446 15888 15913 "plugins/funind/invfun.ml" 449 15961 15986
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 446 15888 15889 "plugins/funind/invfun.ml" 449 15961 15986
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 450 15988 15989 "plugins/funind/invfun.ml" 450 15988 15998
type(
  Proof_type.tactic -> (int -> Proof_type.tactic) -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN_i
)
"plugins/funind/invfun.ml" 451 15999 16003 "plugins/funind/invfun.ml" 451 15999 16014
type(
  string ->
  (Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 451 15999 16015 "plugins/funind/invfun.ml" 451 15999 16037
type(
  string
)
"plugins/funind/invfun.ml" 452 16040 16050 "plugins/funind/invfun.ml" 452 16040 16051
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 453 16055 16063 "plugins/funind/invfun.ml" 457 16296 16304
)
"plugins/funind/invfun.ml" 453 16055 16063 "plugins/funind/invfun.ml" 453 16055 16070
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/invfun.ml" 51 1570 1574 "plugins/funind/invfun.ml" 51 1570 1581
)
"plugins/funind/invfun.ml" 454 16071 16075 "plugins/funind/invfun.ml" 454 16071 16097
type(
  (Term.constr -> Pp.std_ppcmds) ->
  Term.constr * Term.constr Rawterm.bindings -> Pp.std_ppcmds
)
ident(
  int_ref pr_constr_with_binding "plugins/funind/invfun.ml" 45 1420 1424 "plugins/funind/invfun.ml" 45 1420 1446
)
"plugins/funind/invfun.ml" 454 16071 16099 "plugins/funind/invfun.ml" 454 16071 16121
type(
  Environ.env -> Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr_env
)
"plugins/funind/invfun.ml" 454 16071 16123 "plugins/funind/invfun.ml" 454 16071 16129
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/invfun.ml" 454 16071 16130 "plugins/funind/invfun.ml" 454 16071 16131
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 452 16040 16050 "plugins/funind/invfun.ml" 452 16040 16051
)
"plugins/funind/invfun.ml" 454 16071 16122 "plugins/funind/invfun.ml" 454 16071 16132
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 454 16071 16098 "plugins/funind/invfun.ml" 454 16071 16133
call(
  stack
)
type(
  Term.constr -> Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 454 16071 16136 "plugins/funind/invfun.ml" 454 16071 16141
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 454 16071 16142 "plugins/funind/invfun.ml" 454 16071 16154
type(
  Names.identifier
)
ident(
  int_ref principle_id "plugins/funind/invfun.ml" 272 9788 9796 "plugins/funind/invfun.ml" 272 9788 9808
)
"plugins/funind/invfun.ml" 454 16071 16136 "plugins/funind/invfun.ml" 454 16071 16154
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 454 16071 16155 "plugins/funind/invfun.ml" 454 16071 16163
type(
  Term.constr Rawterm.bindings
)
ident(
  int_ref bindings "plugins/funind/invfun.ml" 422 15112 15120 "plugins/funind/invfun.ml" 422 15112 15128
)
"plugins/funind/invfun.ml" 454 16071 16135 "plugins/funind/invfun.ml" 454 16071 16164
type(
  Term.constr * Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 454 16071 16074 "plugins/funind/invfun.ml" 454 16071 16165
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 453 16055 16063 "plugins/funind/invfun.ml" 454 16071 16165
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 455 16167 16175 "plugins/funind/invfun.ml" 455 16167 16195
type(
  bool ->
  Term.constr ->
  (Term.constr * Term.constr Rawterm.bindings) option ->
  (Util.loc * Genarg.intro_pattern_expr) option ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref functional_induction "plugins/funind/invfun.ml" 238 8271 8293 "plugins/funind/invfun.ml" 238 8271 8313
)
"plugins/funind/invfun.ml" 455 16167 16197 "plugins/funind/invfun.ml" 455 16167 16202
type(
  bool
)
"plugins/funind/invfun.ml" 455 16167 16204 "plugins/funind/invfun.ml" 455 16167 16211
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/invfun.ml" 455 16167 16212 "plugins/funind/invfun.ml" 455 16167 16223
type(
  Term.constr array
)
ident(
  int_ref funs_constr "plugins/funind/invfun.ml" 238 8271 8314 "plugins/funind/invfun.ml" 238 8271 8325
)
"plugins/funind/invfun.ml" 455 16167 16225 "plugins/funind/invfun.ml" 455 16167 16226
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 238 8271 8367 "plugins/funind/invfun.ml" 238 8271 8368
)
"plugins/funind/invfun.ml" 455 16167 16212 "plugins/funind/invfun.ml" 455 16167 16227
type(
  Term.constr
)
"plugins/funind/invfun.ml" 455 16167 16228 "plugins/funind/invfun.ml" 455 16167 16236
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 455 16167 16237 "plugins/funind/invfun.ml" 455 16167 16242
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 455 16167 16243 "plugins/funind/invfun.ml" 455 16167 16253
type(
  Names.identifier list
)
ident(
  int_ref args_names "plugins/funind/invfun.ml" 266 9478 9486 "plugins/funind/invfun.ml" 266 9478 9496
)
"plugins/funind/invfun.ml" 455 16167 16228 "plugins/funind/invfun.ml" 455 16167 16253
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 455 16167 16211 "plugins/funind/invfun.ml" 455 16167 16254
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 455 16167 16203 "plugins/funind/invfun.ml" 455 16167 16255
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 456 16256 16266 "plugins/funind/invfun.ml" 456 16256 16271
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 456 16256 16272 "plugins/funind/invfun.ml" 456 16256 16284
type(
  Names.identifier
)
ident(
  int_ref principle_id "plugins/funind/invfun.ml" 272 9788 9796 "plugins/funind/invfun.ml" 272 9788 9808
)
"plugins/funind/invfun.ml" 456 16256 16266 "plugins/funind/invfun.ml" 456 16256 16284
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 456 16256 16285 "plugins/funind/invfun.ml" 456 16256 16293
type(
  Term.constr Rawterm.bindings
)
ident(
  int_ref bindings "plugins/funind/invfun.ml" 422 15112 15120 "plugins/funind/invfun.ml" 422 15112 15128
)
"plugins/funind/invfun.ml" 456 16256 16265 "plugins/funind/invfun.ml" 456 16256 16294
type(
  Term.constr * Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 456 16256 16259 "plugins/funind/invfun.ml" 456 16256 16295
type(
  (Term.constr * Term.constr Rawterm.bindings) option
)
"plugins/funind/invfun.ml" 457 16296 16299 "plugins/funind/invfun.ml" 457 16296 16302
type(
  (Util.loc * Genarg.intro_pattern_expr) option
)
ident(
  int_ref pat "plugins/funind/invfun.ml" 287 10378 10386 "plugins/funind/invfun.ml" 287 10378 10389
)
"plugins/funind/invfun.ml" 457 16296 16303 "plugins/funind/invfun.ml" 457 16296 16304
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 452 16040 16050 "plugins/funind/invfun.ml" 452 16040 16051
)
"plugins/funind/invfun.ml" 455 16167 16175 "plugins/funind/invfun.ml" 457 16296 16304
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 453 16055 16063 "plugins/funind/invfun.ml" 457 16296 16304
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 451 15999 16038 "plugins/funind/invfun.ml" 458 16305 16310
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 451 15999 16002 "plugins/funind/invfun.ml" 458 16305 16311
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 459 16312 16320 "plugins/funind/invfun.ml" 459 16312 16321
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 459 16312 16322 "plugins/funind/invfun.ml" 459 16312 16395
)
"plugins/funind/invfun.ml" 459 16312 16322 "plugins/funind/invfun.ml" 459 16312 16323
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 459 16312 16327 "plugins/funind/invfun.ml" 459 16312 16395
)
"plugins/funind/invfun.ml" 459 16312 16327 "plugins/funind/invfun.ml" 459 16312 16338
type(
  string ->
  (Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 459 16312 16340 "plugins/funind/invfun.ml" 459 16312 16358
type(
  string
)
"plugins/funind/invfun.ml" 459 16312 16358 "plugins/funind/invfun.ml" 459 16312 16359
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/invfun.ml" 459 16312 16359 "plugins/funind/invfun.ml" 459 16312 16372
type(
  int -> string
)
ident(
  ext_ref Pervasives.string_of_int
)
"plugins/funind/invfun.ml" 459 16312 16373 "plugins/funind/invfun.ml" 459 16312 16374
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 459 16312 16320 "plugins/funind/invfun.ml" 459 16312 16321
)
"plugins/funind/invfun.ml" 459 16312 16359 "plugins/funind/invfun.ml" 459 16312 16374
call(
  stack
)
type(
  string
)
"plugins/funind/invfun.ml" 459 16312 16339 "plugins/funind/invfun.ml" 459 16312 16375
call(
  stack
)
type(
  string
)
"plugins/funind/invfun.ml" 459 16312 16377 "plugins/funind/invfun.ml" 459 16312 16390
type(
  int ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref prove_branche "plugins/funind/invfun.ml" 294 10776 10784 "plugins/funind/invfun.ml" 294 10776 10797
)
"plugins/funind/invfun.ml" 459 16312 16391 "plugins/funind/invfun.ml" 459 16312 16392
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 459 16312 16320 "plugins/funind/invfun.ml" 459 16312 16321
)
"plugins/funind/invfun.ml" 459 16312 16376 "plugins/funind/invfun.ml" 459 16312 16393
call(
  stack
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 459 16312 16394 "plugins/funind/invfun.ml" 459 16312 16395
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 459 16312 16322 "plugins/funind/invfun.ml" 459 16312 16323
)
"plugins/funind/invfun.ml" 459 16312 16327 "plugins/funind/invfun.ml" 459 16312 16395
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 459 16312 16315 "plugins/funind/invfun.ml" 459 16312 16397
type(
  int -> Proof_type.tactic
)
"plugins/funind/invfun.ml" 450 15988 15989 "plugins/funind/invfun.ml" 459 16312 16397
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 445 15820 15826 "plugins/funind/invfun.ml" 460 16398 16405
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 461 16406 16412 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 239 8380 8386 "plugins/funind/invfun.ml" 239 8380 8387
)
"plugins/funind/invfun.ml" 444 15805 15809 "plugins/funind/invfun.ml" 461 16406 16413
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 422 15112 15116 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 418 14913 14917 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 417 14866 14870 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 416 14794 14798 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 294 10776 10780 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 291 10650 10654 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 289 10491 10495 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 288 10448 10452 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 287 10378 10382 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 277 10064 10068 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 275 9957 9961 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 273 9873 9877 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 272 9788 9792 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 267 9554 9558 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 266 9478 9482 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 265 9426 9430 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 263 9293 9297 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 262 9249 9253 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 261 9201 9205 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 259 9076 9080 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 258 9046 9050 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 257 8997 9001 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 244 8627 8631 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 239 8380 8382 "plugins/funind/invfun.ml" 461 16406 16413
type(
  Tacmach.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 466 16517 16521 "plugins/funind/invfun.ml" 466 16517 16544
type(
  Names.identifier ->
  Names.identifier ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def generalize_dependent_of "plugins/funind/invfun.ml" 483 16920 16920 --
)
"plugins/funind/invfun.ml" 466 16517 16545 "plugins/funind/invfun.ml" 466 16517 16546
type(
  Names.identifier
)
ident(
  def x "plugins/funind/invfun.ml" 466 16517 16547 "plugins/funind/invfun.ml" 474 16755 16760
)
"plugins/funind/invfun.ml" 466 16517 16547 "plugins/funind/invfun.ml" 466 16517 16550
type(
  Names.identifier
)
ident(
  def hyp "plugins/funind/invfun.ml" 466 16517 16551 "plugins/funind/invfun.ml" 474 16755 16760
)
"plugins/funind/invfun.ml" 466 16517 16551 "plugins/funind/invfun.ml" 466 16517 16552
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 467 16555 16557 "plugins/funind/invfun.ml" 474 16755 16760
)
"plugins/funind/invfun.ml" 467 16555 16557 "plugins/funind/invfun.ml" 467 16555 16563
type(
  (Term.named_declaration -> Proof_type.tactic) ->
  Sign.named_context -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/invfun.ml" 469 16578 16588 "plugins/funind/invfun.ml" 469 16578 16590
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 469 16578 16599 "plugins/funind/invfun.ml" 470 16622 16709
)
"plugins/funind/invfun.ml" 469 16578 16591 "plugins/funind/invfun.ml" 469 16578 16595
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 469 16578 16596 "plugins/funind/invfun.ml" 469 16578 16597
type(
  Term.types
)
ident(
  def t "plugins/funind/invfun.ml" 469 16578 16599 "plugins/funind/invfun.ml" 470 16622 16709
)
"plugins/funind/invfun.ml" 469 16578 16587 "plugins/funind/invfun.ml" 469 16578 16598
type(
  Term.named_declaration
)
"plugins/funind/invfun.ml" 469 16578 16604 "plugins/funind/invfun.ml" 469 16578 16607
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/invfun.ml" 469 16578 16609 "plugins/funind/invfun.ml" 469 16578 16611
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 469 16578 16588 "plugins/funind/invfun.ml" 469 16578 16590
)
"plugins/funind/invfun.ml" 469 16578 16612 "plugins/funind/invfun.ml" 469 16578 16613
type(
  Names.identifier -> Names.identifier -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/invfun.ml" 469 16578 16614 "plugins/funind/invfun.ml" 469 16578 16617
type(
  Names.identifier
)
ident(
  int_ref hyp "plugins/funind/invfun.ml" 466 16517 16547 "plugins/funind/invfun.ml" 466 16517 16550
)
"plugins/funind/invfun.ml" 469 16578 16608 "plugins/funind/invfun.ml" 469 16578 16618
type(
  bool
)
"plugins/funind/invfun.ml" 469 16578 16604 "plugins/funind/invfun.ml" 469 16578 16618
type(
  bool
)
"plugins/funind/invfun.ml" 469 16578 16619 "plugins/funind/invfun.ml" 469 16578 16621
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/invfun.ml" 470 16622 16627 "plugins/funind/invfun.ml" 470 16622 16644
type(
  Environ.env -> Names.identifier -> Term.types -> bool
)
ident(
  ext_ref Termops.occur_var
)
"plugins/funind/invfun.ml" 470 16622 16646 "plugins/funind/invfun.ml" 470 16622 16652
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/invfun.ml" 470 16622 16653 "plugins/funind/invfun.ml" 470 16622 16654
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 466 16517 16551 "plugins/funind/invfun.ml" 466 16517 16552
)
"plugins/funind/invfun.ml" 470 16622 16645 "plugins/funind/invfun.ml" 470 16622 16655
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 470 16622 16656 "plugins/funind/invfun.ml" 470 16622 16657
type(
  Names.identifier
)
ident(
  int_ref x "plugins/funind/invfun.ml" 466 16517 16545 "plugins/funind/invfun.ml" 466 16517 16546
)
"plugins/funind/invfun.ml" 470 16622 16658 "plugins/funind/invfun.ml" 470 16622 16659
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/invfun.ml" 469 16578 16596 "plugins/funind/invfun.ml" 469 16578 16597
)
"plugins/funind/invfun.ml" 470 16622 16626 "plugins/funind/invfun.ml" 470 16622 16660
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 469 16578 16604 "plugins/funind/invfun.ml" 470 16622 16660
type(
  bool
)
"plugins/funind/invfun.ml" 470 16622 16664 "plugins/funind/invfun.ml" 470 16622 16671
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/invfun.ml" 470 16622 16673 "plugins/funind/invfun.ml" 470 16622 16685
type(
  Term.constr list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_generalize
)
"plugins/funind/invfun.ml" 470 16622 16687 "plugins/funind/invfun.ml" 470 16622 16692
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 470 16622 16693 "plugins/funind/invfun.ml" 470 16622 16695
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 469 16578 16588 "plugins/funind/invfun.ml" 469 16578 16590
)
"plugins/funind/invfun.ml" 470 16622 16687 "plugins/funind/invfun.ml" 470 16622 16695
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 470 16622 16686 "plugins/funind/invfun.ml" 470 16622 16696
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 470 16622 16672 "plugins/funind/invfun.ml" 470 16622 16697
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 470 16622 16699 "plugins/funind/invfun.ml" 470 16622 16703
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.thin
)
"plugins/funind/invfun.ml" 470 16622 16705 "plugins/funind/invfun.ml" 470 16622 16707
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 469 16578 16588 "plugins/funind/invfun.ml" 469 16578 16590
)
"plugins/funind/invfun.ml" 470 16622 16704 "plugins/funind/invfun.ml" 470 16622 16708
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 470 16622 16698 "plugins/funind/invfun.ml" 470 16622 16709
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 470 16622 16664 "plugins/funind/invfun.ml" 470 16622 16709
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 469 16578 16599 "plugins/funind/invfun.ml" 470 16622 16709
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 471 16710 16719 "plugins/funind/invfun.ml" 471 16710 16720
type(
  Term.named_declaration
)
"plugins/funind/invfun.ml" 471 16710 16724 "plugins/funind/invfun.ml" 471 16710 16732
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 468 16564 16568 "plugins/funind/invfun.ml" 472 16733 16738
type(
  Term.named_declaration -> Proof_type.tactic
)
"plugins/funind/invfun.ml" 473 16739 16744 "plugins/funind/invfun.ml" 473 16739 16751
type(
  Proof_type.goal Tacmach.sigma -> Sign.named_context
)
ident(
  ext_ref Tacmach.pf_hyps
)
"plugins/funind/invfun.ml" 473 16739 16752 "plugins/funind/invfun.ml" 473 16739 16753
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 466 16517 16551 "plugins/funind/invfun.ml" 466 16517 16552
)
"plugins/funind/invfun.ml" 473 16739 16743 "plugins/funind/invfun.ml" 473 16739 16754
call(
  stack
)
type(
  Sign.named_context
)
"plugins/funind/invfun.ml" 474 16755 16759 "plugins/funind/invfun.ml" 474 16755 16760
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 466 16517 16551 "plugins/funind/invfun.ml" 466 16517 16552
)
"plugins/funind/invfun.ml" 467 16555 16557 "plugins/funind/invfun.ml" 474 16755 16760
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
type(
  Proof_type.tactic
)
ident(
  def intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16920 --
)
"plugins/funind/invfun.ml" 483 16920 16949 "plugins/funind/invfun.ml" 483 16920 16950
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 484 16953 16955 "plugins/funind/invfun.ml" 484 16953 17014
)
"plugins/funind/invfun.ml" 484 16953 16955 "plugins/funind/invfun.ml" 484 16953 16966
type(
  string ->
  Tacmach.tactic ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 484 16953 16967 "plugins/funind/invfun.ml" 484 16953 16988
type(
  string
)
"plugins/funind/invfun.ml" 484 16953 16989 "plugins/funind/invfun.ml" 484 16953 17012
type(
  Tacmach.tactic
)
ident(
  int_ref intros_with_rewrite_aux "plugins/funind/invfun.ml" 485 17015 17019 "plugins/funind/invfun.ml" 485 17015 17042
)
"plugins/funind/invfun.ml" 484 16953 17013 "plugins/funind/invfun.ml" 484 16953 17014
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 483 16920 16949 "plugins/funind/invfun.ml" 483 16920 16950
)
"plugins/funind/invfun.ml" 484 16953 16955 "plugins/funind/invfun.ml" 484 16953 17014
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 485 17015 17019 "plugins/funind/invfun.ml" 485 17015 17042
type(
  Tacmach.tactic
)
ident(
  def intros_with_rewrite_aux "plugins/funind/invfun.ml" 483 16920 16920 --
)
"plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 487 17065 17069 "plugins/funind/invfun.ml" 549 18651 18671
)
"plugins/funind/invfun.ml" 487 17065 17073 "plugins/funind/invfun.ml" 487 17065 17079
type(
  Term.constr
)
"plugins/funind/invfun.ml" 487 17065 17082 "plugins/funind/invfun.ml" 487 17065 17101
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_eq
)
"plugins/funind/invfun.ml" 487 17065 17102 "plugins/funind/invfun.ml" 487 17065 17104
type(
  unit
)
"plugins/funind/invfun.ml" 487 17065 17082 "plugins/funind/invfun.ml" 487 17065 17104
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 488 17108 17118 "plugins/funind/invfun.ml" 488 17108 17130
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 488 17108 17132 "plugins/funind/invfun.ml" 488 17108 17140
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/invfun.ml" 488 17108 17141 "plugins/funind/invfun.ml" 488 17108 17142
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 488 17108 17131 "plugins/funind/invfun.ml" 488 17108 17143
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 488 17108 17118 "plugins/funind/invfun.ml" 488 17108 17143
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 489 17149 17159 "plugins/funind/invfun.ml" 489 17149 17160
type(
  Names.name
)
"plugins/funind/invfun.ml" 489 17149 17161 "plugins/funind/invfun.ml" 489 17149 17162
type(
  Term.types
)
ident(
  def t "plugins/funind/invfun.ml" 490 17170 17177 "plugins/funind/invfun.ml" 537 18455 18465
)
"plugins/funind/invfun.ml" 489 17149 17163 "plugins/funind/invfun.ml" 489 17149 17165
type(
  Term.types
)
ident(
  def t' "plugins/funind/invfun.ml" 490 17170 17177 "plugins/funind/invfun.ml" 537 18455 18465
)
"plugins/funind/invfun.ml" 489 17149 17154 "plugins/funind/invfun.ml" 489 17149 17166
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 491 17183 17191 "plugins/funind/invfun.ml" 491 17183 17203
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 491 17183 17204 "plugins/funind/invfun.ml" 491 17183 17205
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/invfun.ml" 489 17149 17161 "plugins/funind/invfun.ml" 489 17149 17162
)
"plugins/funind/invfun.ml" 491 17183 17191 "plugins/funind/invfun.ml" 491 17183 17205
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 492 17211 17221 "plugins/funind/invfun.ml" 492 17211 17223
type(
  Term.constr
)
ident(
  def eq "plugins/funind/invfun.ml" 492 17211 17230 "plugins/funind/invfun.ml" 515 17930 17936
)
"plugins/funind/invfun.ml" 492 17211 17224 "plugins/funind/invfun.ml" 492 17211 17228
type(
  Term.constr array
)
ident(
  def args "plugins/funind/invfun.ml" 492 17211 17230 "plugins/funind/invfun.ml" 515 17930 17936
)
"plugins/funind/invfun.ml" 492 17211 17217 "plugins/funind/invfun.ml" 492 17211 17229
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 492 17211 17236 "plugins/funind/invfun.ml" 492 17211 17245
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/invfun.ml" 492 17211 17246 "plugins/funind/invfun.ml" 492 17211 17248
type(
  Term.constr
)
ident(
  int_ref eq "plugins/funind/invfun.ml" 492 17211 17221 "plugins/funind/invfun.ml" 492 17211 17223
)
"plugins/funind/invfun.ml" 492 17211 17249 "plugins/funind/invfun.ml" 492 17211 17255
type(
  Term.constr
)
ident(
  int_ref eq_ind "plugins/funind/invfun.ml" 487 17065 17073 "plugins/funind/invfun.ml" 487 17065 17079
)
"plugins/funind/invfun.ml" 492 17211 17235 "plugins/funind/invfun.ml" 492 17211 17256
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 493 17261 17273 "plugins/funind/invfun.ml" 493 17261 17293
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Reductionops.is_conv
)
"plugins/funind/invfun.ml" 493 17261 17295 "plugins/funind/invfun.ml" 493 17261 17301
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/invfun.ml" 493 17261 17302 "plugins/funind/invfun.ml" 493 17261 17303
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 493 17261 17294 "plugins/funind/invfun.ml" 493 17261 17304
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 493 17261 17306 "plugins/funind/invfun.ml" 493 17261 17313
type(
  Proof_type.goal Tacmach.sigma -> Evd.evar_map
)
ident(
  ext_ref Tacmach.project
)
"plugins/funind/invfun.ml" 493 17261 17314 "plugins/funind/invfun.ml" 493 17261 17315
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 493 17261 17305 "plugins/funind/invfun.ml" 493 17261 17316
call(
  stack
)
type(
  Evd.evar_map
)
"plugins/funind/invfun.ml" 493 17261 17317 "plugins/funind/invfun.ml" 493 17261 17321
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 492 17211 17224 "plugins/funind/invfun.ml" 492 17211 17228
)
"plugins/funind/invfun.ml" 493 17261 17323 "plugins/funind/invfun.ml" 493 17261 17324
type(
  int
)
"plugins/funind/invfun.ml" 493 17261 17317 "plugins/funind/invfun.ml" 493 17261 17325
type(
  Term.constr
)
"plugins/funind/invfun.ml" 493 17261 17326 "plugins/funind/invfun.ml" 493 17261 17330
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 492 17211 17224 "plugins/funind/invfun.ml" 492 17211 17228
)
"plugins/funind/invfun.ml" 493 17261 17332 "plugins/funind/invfun.ml" 493 17261 17333
type(
  int
)
"plugins/funind/invfun.ml" 493 17261 17326 "plugins/funind/invfun.ml" 493 17261 17334
type(
  Term.constr
)
"plugins/funind/invfun.ml" 493 17261 17273 "plugins/funind/invfun.ml" 493 17261 17334
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 495 17348 17355 "plugins/funind/invfun.ml" 495 17348 17357
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 496 17399 17402 "plugins/funind/invfun.ml" 496 17399 17461
)
"plugins/funind/invfun.ml" 495 17348 17360 "plugins/funind/invfun.ml" 495 17348 17373
type(
  Names.identifier -> Proof_type.goal Tacmach.sigma -> Names.identifier
)
ident(
  ext_ref Tacmach.pf_get_new_id
)
"plugins/funind/invfun.ml" 495 17348 17375 "plugins/funind/invfun.ml" 495 17348 17387
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 495 17348 17388 "plugins/funind/invfun.ml" 495 17348 17391
type(
  string
)
"plugins/funind/invfun.ml" 495 17348 17374 "plugins/funind/invfun.ml" 495 17348 17392
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 495 17348 17393 "plugins/funind/invfun.ml" 495 17348 17394
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 495 17348 17360 "plugins/funind/invfun.ml" 495 17348 17394
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 496 17399 17402 "plugins/funind/invfun.ml" 496 17399 17412
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 496 17399 17415 "plugins/funind/invfun.ml" 496 17399 17422
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 496 17399 17423 "plugins/funind/invfun.ml" 496 17399 17425
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 495 17348 17355 "plugins/funind/invfun.ml" 495 17348 17357
)
"plugins/funind/invfun.ml" 496 17399 17415 "plugins/funind/invfun.ml" 496 17399 17425
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 496 17399 17427 "plugins/funind/invfun.ml" 496 17399 17431
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.thin
)
"plugins/funind/invfun.ml" 496 17399 17433 "plugins/funind/invfun.ml" 496 17399 17435
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 495 17348 17355 "plugins/funind/invfun.ml" 495 17348 17357
)
"plugins/funind/invfun.ml" 496 17399 17432 "plugins/funind/invfun.ml" 496 17399 17436
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 496 17399 17427 "plugins/funind/invfun.ml" 496 17399 17436
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 496 17399 17438 "plugins/funind/invfun.ml" 496 17399 17457
type(
  Proof_type.tactic
)
ident(
  int_ref intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
)
"plugins/funind/invfun.ml" 496 17399 17413 "plugins/funind/invfun.ml" 496 17399 17459
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 496 17399 17460 "plugins/funind/invfun.ml" 496 17399 17461
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 496 17399 17402 "plugins/funind/invfun.ml" 496 17399 17461
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 495 17348 17351 "plugins/funind/invfun.ml" 496 17399 17461
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 498 17463 17479 "plugins/funind/invfun.ml" 498 17463 17484
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isVar
)
"plugins/funind/invfun.ml" 498 17463 17485 "plugins/funind/invfun.ml" 498 17463 17489
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 492 17211 17224 "plugins/funind/invfun.ml" 492 17211 17228
)
"plugins/funind/invfun.ml" 498 17463 17491 "plugins/funind/invfun.ml" 498 17463 17492
type(
  int
)
"plugins/funind/invfun.ml" 498 17463 17485 "plugins/funind/invfun.ml" 498 17463 17493
type(
  Term.constr
)
"plugins/funind/invfun.ml" 498 17463 17479 "plugins/funind/invfun.ml" 498 17463 17493
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 500 17507 17514 "plugins/funind/invfun.ml" 500 17507 17516
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 501 17558 17561 "plugins/funind/invfun.ml" 506 17729 17735
)
"plugins/funind/invfun.ml" 500 17507 17519 "plugins/funind/invfun.ml" 500 17507 17532
type(
  Names.identifier -> Proof_type.goal Tacmach.sigma -> Names.identifier
)
ident(
  ext_ref Tacmach.pf_get_new_id
)
"plugins/funind/invfun.ml" 500 17507 17534 "plugins/funind/invfun.ml" 500 17507 17546
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 500 17507 17547 "plugins/funind/invfun.ml" 500 17507 17550
type(
  string
)
"plugins/funind/invfun.ml" 500 17507 17533 "plugins/funind/invfun.ml" 500 17507 17551
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 500 17507 17552 "plugins/funind/invfun.ml" 500 17507 17553
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 500 17507 17519 "plugins/funind/invfun.ml" 500 17507 17553
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 501 17558 17561 "plugins/funind/invfun.ml" 501 17558 17571
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 501 17558 17574 "plugins/funind/invfun.ml" 501 17558 17581
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 501 17558 17582 "plugins/funind/invfun.ml" 501 17558 17584
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 500 17507 17514 "plugins/funind/invfun.ml" 500 17507 17516
)
"plugins/funind/invfun.ml" 501 17558 17574 "plugins/funind/invfun.ml" 501 17558 17584
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 502 17586 17595 "plugins/funind/invfun.ml" 502 17586 17618
type(
  Names.identifier -> Names.identifier -> Proof_type.tactic
)
ident(
  int_ref generalize_dependent_of "plugins/funind/invfun.ml" 466 16517 16521 "plugins/funind/invfun.ml" 466 16517 16544
)
"plugins/funind/invfun.ml" 502 17586 17620 "plugins/funind/invfun.ml" 502 17586 17627
type(
  Term.constr -> Names.identifier
)
ident(
  ext_ref Term.destVar
)
"plugins/funind/invfun.ml" 502 17586 17628 "plugins/funind/invfun.ml" 502 17586 17632
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 492 17211 17224 "plugins/funind/invfun.ml" 492 17211 17228
)
"plugins/funind/invfun.ml" 502 17586 17634 "plugins/funind/invfun.ml" 502 17586 17635
type(
  int
)
"plugins/funind/invfun.ml" 502 17586 17628 "plugins/funind/invfun.ml" 502 17586 17636
type(
  Term.constr
)
"plugins/funind/invfun.ml" 502 17586 17619 "plugins/funind/invfun.ml" 502 17586 17637
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 502 17586 17638 "plugins/funind/invfun.ml" 502 17586 17640
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 500 17507 17514 "plugins/funind/invfun.ml" 500 17507 17516
)
"plugins/funind/invfun.ml" 502 17586 17595 "plugins/funind/invfun.ml" 502 17586 17640
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 503 17642 17651 "plugins/funind/invfun.ml" 503 17642 17657
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTRY
)
"plugins/funind/invfun.ml" 503 17642 17659 "plugins/funind/invfun.ml" 503 17642 17677
type(
  ?tac:Tacmach.tactic * Equality.conditions -> Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Equality.rewriteLR
)
"plugins/funind/invfun.ml" 503 17642 17679 "plugins/funind/invfun.ml" 503 17642 17684
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 503 17642 17685 "plugins/funind/invfun.ml" 503 17642 17687
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 500 17507 17514 "plugins/funind/invfun.ml" 500 17507 17516
)
"plugins/funind/invfun.ml" 503 17642 17678 "plugins/funind/invfun.ml" 503 17642 17688
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 503 17642 17658 "plugins/funind/invfun.ml" 503 17642 17689
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 503 17642 17651 "plugins/funind/invfun.ml" 503 17642 17689
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 504 17691 17700 "plugins/funind/invfun.ml" 504 17691 17719
type(
  Proof_type.tactic
)
ident(
  int_ref intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
)
"plugins/funind/invfun.ml" 501 17558 17572 "plugins/funind/invfun.ml" 505 17720 17728
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 506 17729 17734 "plugins/funind/invfun.ml" 506 17729 17735
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 501 17558 17561 "plugins/funind/invfun.ml" 506 17729 17735
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 500 17507 17510 "plugins/funind/invfun.ml" 506 17729 17735
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 509 17758 17767 "plugins/funind/invfun.ml" 509 17758 17769
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 509 17758 17772 "plugins/funind/invfun.ml" 509 17758 17785
type(
  Names.identifier -> Proof_type.goal Tacmach.sigma -> Names.identifier
)
ident(
  ext_ref Tacmach.pf_get_new_id
)
"plugins/funind/invfun.ml" 509 17758 17787 "plugins/funind/invfun.ml" 509 17758 17799
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 509 17758 17800 "plugins/funind/invfun.ml" 509 17758 17803
type(
  string
)
"plugins/funind/invfun.ml" 509 17758 17786 "plugins/funind/invfun.ml" 509 17758 17804
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 509 17758 17805 "plugins/funind/invfun.ml" 509 17758 17806
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 509 17758 17772 "plugins/funind/invfun.ml" 509 17758 17806
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 510 17811 17816 "plugins/funind/invfun.ml" 510 17811 17826
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 511 17828 17835 "plugins/funind/invfun.ml" 511 17828 17842
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 511 17828 17843 "plugins/funind/invfun.ml" 511 17828 17845
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 509 17758 17767 "plugins/funind/invfun.ml" 509 17758 17769
)
"plugins/funind/invfun.ml" 511 17828 17835 "plugins/funind/invfun.ml" 511 17828 17845
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 512 17847 17854 "plugins/funind/invfun.ml" 512 17847 17860
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTRY
)
"plugins/funind/invfun.ml" 512 17847 17862 "plugins/funind/invfun.ml" 512 17847 17880
type(
  ?tac:Tacmach.tactic * Equality.conditions -> Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Equality.rewriteLR
)
"plugins/funind/invfun.ml" 512 17847 17882 "plugins/funind/invfun.ml" 512 17847 17887
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 512 17847 17888 "plugins/funind/invfun.ml" 512 17847 17890
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 509 17758 17767 "plugins/funind/invfun.ml" 509 17758 17769
)
"plugins/funind/invfun.ml" 512 17847 17881 "plugins/funind/invfun.ml" 512 17847 17891
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 512 17847 17861 "plugins/funind/invfun.ml" 512 17847 17892
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 512 17847 17854 "plugins/funind/invfun.ml" 512 17847 17892
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 513 17894 17901 "plugins/funind/invfun.ml" 513 17894 17920
type(
  Proof_type.tactic
)
ident(
  int_ref intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
)
"plugins/funind/invfun.ml" 510 17811 17826 "plugins/funind/invfun.ml" 514 17921 17927
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 514 17921 17928 "plugins/funind/invfun.ml" 514 17921 17929
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 510 17811 17816 "plugins/funind/invfun.ml" 514 17921 17929
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 508 17749 17752 "plugins/funind/invfun.ml" 515 17930 17936
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 498 17463 17476 "plugins/funind/invfun.ml" 515 17930 17936
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 493 17261 17270 "plugins/funind/invfun.ml" 515 17930 17936
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 492 17211 17230 "plugins/funind/invfun.ml" 515 17930 17936
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 516 17937 17947 "plugins/funind/invfun.ml" 516 17937 17948
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 516 17937 17943 "plugins/funind/invfun.ml" 516 17937 17948
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 516 17937 17954 "plugins/funind/invfun.ml" 516 17937 17963
type(
  Term.types -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/invfun.ml" 516 17937 17964 "plugins/funind/invfun.ml" 516 17937 17965
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/invfun.ml" 489 17149 17161 "plugins/funind/invfun.ml" 489 17149 17162
)
"plugins/funind/invfun.ml" 516 17937 17967 "plugins/funind/invfun.ml" 516 17937 17989
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_False
)
"plugins/funind/invfun.ml" 516 17937 17990 "plugins/funind/invfun.ml" 516 17937 17992
type(
  unit
)
"plugins/funind/invfun.ml" 516 17937 17966 "plugins/funind/invfun.ml" 516 17937 17993
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 516 17937 17954 "plugins/funind/invfun.ml" 516 17937 17993
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 517 17997 18005 "plugins/funind/invfun.ml" 517 17997 18016
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Tauto.tauto
)
"plugins/funind/invfun.ml" 517 17997 18017 "plugins/funind/invfun.ml" 517 17997 18018
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 517 17997 18005 "plugins/funind/invfun.ml" 517 17997 18018
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 516 17937 17949 "plugins/funind/invfun.ml" 517 17997 18018
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 518 18019 18030 "plugins/funind/invfun.ml" 518 18019 18031
type(
  Term.case_info
)
"plugins/funind/invfun.ml" 518 18019 18032 "plugins/funind/invfun.ml" 518 18019 18033
type(
  Term.constr
)
"plugins/funind/invfun.ml" 518 18019 18034 "plugins/funind/invfun.ml" 518 18019 18035
type(
  Term.constr
)
ident(
  def v "plugins/funind/invfun.ml" 519 18042 18050 "plugins/funind/invfun.ml" 522 18125 18136
)
"plugins/funind/invfun.ml" 518 18019 18036 "plugins/funind/invfun.ml" 518 18019 18037
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 518 18019 18025 "plugins/funind/invfun.ml" 518 18019 18038
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 519 18042 18050 "plugins/funind/invfun.ml" 519 18042 18060
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 520 18062 18065 "plugins/funind/invfun.ml" 520 18062 18071
type(
  Tacexpr.evars_flag -> Term.constr Rawterm.with_bindings -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_case
)
"plugins/funind/invfun.ml" 520 18062 18072 "plugins/funind/invfun.ml" 520 18062 18077
type(
  Tacexpr.evars_flag
)
"plugins/funind/invfun.ml" 520 18062 18079 "plugins/funind/invfun.ml" 520 18062 18080
type(
  Term.constr
)
ident(
  int_ref v "plugins/funind/invfun.ml" 518 18019 18034 "plugins/funind/invfun.ml" 518 18019 18035
)
"plugins/funind/invfun.ml" 520 18062 18081 "plugins/funind/invfun.ml" 520 18062 18099
type(
  Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 520 18062 18078 "plugins/funind/invfun.ml" 520 18062 18100
type(
  Term.constr Rawterm.with_bindings
)
"plugins/funind/invfun.ml" 520 18062 18065 "plugins/funind/invfun.ml" 520 18062 18100
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 521 18102 18105 "plugins/funind/invfun.ml" 521 18102 18124
type(
  Proof_type.tactic
)
ident(
  int_ref intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
)
"plugins/funind/invfun.ml" 519 18042 18060 "plugins/funind/invfun.ml" 522 18125 18134
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 522 18125 18135 "plugins/funind/invfun.ml" 522 18125 18136
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 519 18042 18050 "plugins/funind/invfun.ml" 522 18125 18136
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 523 18137 18149 "plugins/funind/invfun.ml" 523 18137 18150
type(
  Term.constr
)
type(
  Term.types
)
type(
  Term.constr
)
type(
  Names.name
)
"plugins/funind/invfun.ml" 523 18137 18143 "plugins/funind/invfun.ml" 523 18137 18150
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 524 18154 18162 "plugins/funind/invfun.ml" 524 18154 18172
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 525 18174 18177 "plugins/funind/invfun.ml" 525 18174 18185
type(
  Redexpr.red_expr -> Tacticals.clause -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_reduce
)
"plugins/funind/invfun.ml" 527 18204 18213 "plugins/funind/invfun.ml" 527 18204 18230
type(
  Names.evaluable_global_reference Rawterm.raw_red_flag
)
ident(
  ext_ref Rawterm.all_flags
)
"plugins/funind/invfun.ml" 528 18231 18262 "plugins/funind/invfun.ml" 528 18231 18267
type(
  bool
)
"plugins/funind/invfun.ml" 527 18204 18212 "plugins/funind/invfun.ml" 529 18269 18278
type(
  Names.evaluable_global_reference Rawterm.raw_red_flag
)
"plugins/funind/invfun.ml" 526 18186 18191 "plugins/funind/invfun.ml" 529 18269 18279
type(
  Redexpr.red_expr
)
"plugins/funind/invfun.ml" 530 18280 18285 "plugins/funind/invfun.ml" 530 18280 18292
type(
  Tacticals.clause
)
ident(
  ext_ref Tacticals.onConcl
)
"plugins/funind/invfun.ml" 525 18174 18177 "plugins/funind/invfun.ml" 530 18280 18292
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 532 18298 18301 "plugins/funind/invfun.ml" 532 18298 18320
type(
  Proof_type.tactic
)
ident(
  int_ref intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
)
"plugins/funind/invfun.ml" 524 18154 18172 "plugins/funind/invfun.ml" 533 18321 18330
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 533 18321 18331 "plugins/funind/invfun.ml" 533 18321 18332
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 524 18154 18162 "plugins/funind/invfun.ml" 533 18321 18332
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 534 18333 18339 "plugins/funind/invfun.ml" 534 18333 18340
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 535 18344 18356 "plugins/funind/invfun.ml" 535 18344 18358
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 535 18344 18361 "plugins/funind/invfun.ml" 535 18344 18374
type(
  Names.identifier -> Proof_type.goal Tacmach.sigma -> Names.identifier
)
ident(
  ext_ref Tacmach.pf_get_new_id
)
"plugins/funind/invfun.ml" 535 18344 18376 "plugins/funind/invfun.ml" 535 18344 18388
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 535 18344 18389 "plugins/funind/invfun.ml" 535 18344 18392
type(
  string
)
"plugins/funind/invfun.ml" 535 18344 18375 "plugins/funind/invfun.ml" 535 18344 18393
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 535 18344 18394 "plugins/funind/invfun.ml" 535 18344 18395
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 535 18344 18361 "plugins/funind/invfun.ml" 535 18344 18395
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 536 18400 18408 "plugins/funind/invfun.ml" 536 18400 18418
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 536 18400 18421 "plugins/funind/invfun.ml" 536 18400 18428
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 536 18400 18429 "plugins/funind/invfun.ml" 536 18400 18431
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 535 18344 18356 "plugins/funind/invfun.ml" 535 18344 18358
)
"plugins/funind/invfun.ml" 536 18400 18421 "plugins/funind/invfun.ml" 536 18400 18431
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 536 18400 18432 "plugins/funind/invfun.ml" 536 18400 18451
type(
  Proof_type.tactic
)
ident(
  int_ref intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
)
"plugins/funind/invfun.ml" 536 18400 18419 "plugins/funind/invfun.ml" 536 18400 18452
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 536 18400 18453 "plugins/funind/invfun.ml" 536 18400 18454
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 536 18400 18408 "plugins/funind/invfun.ml" 536 18400 18454
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 535 18344 18352 "plugins/funind/invfun.ml" 536 18400 18454
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 490 17170 17177 "plugins/funind/invfun.ml" 537 18455 18465
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 538 18466 18477 "plugins/funind/invfun.ml" 538 18466 18478
type(
  Term.constr
)
type(
  Term.types
)
type(
  Term.constr
)
type(
  Names.name
)
"plugins/funind/invfun.ml" 538 18466 18471 "plugins/funind/invfun.ml" 538 18466 18478
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 539 18482 18489 "plugins/funind/invfun.ml" 539 18482 18499
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 540 18501 18503 "plugins/funind/invfun.ml" 540 18501 18511
type(
  Redexpr.red_expr -> Tacticals.clause -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_reduce
)
"plugins/funind/invfun.ml" 542 18529 18537 "plugins/funind/invfun.ml" 542 18529 18554
type(
  Names.evaluable_global_reference Rawterm.raw_red_flag
)
ident(
  ext_ref Rawterm.all_flags
)
"plugins/funind/invfun.ml" 543 18555 18585 "plugins/funind/invfun.ml" 543 18555 18590
type(
  bool
)
"plugins/funind/invfun.ml" 542 18529 18536 "plugins/funind/invfun.ml" 544 18592 18600
type(
  Names.evaluable_global_reference Rawterm.raw_red_flag
)
"plugins/funind/invfun.ml" 541 18512 18516 "plugins/funind/invfun.ml" 544 18592 18601
type(
  Redexpr.red_expr
)
"plugins/funind/invfun.ml" 545 18602 18606 "plugins/funind/invfun.ml" 545 18602 18613
type(
  Tacticals.clause
)
ident(
  ext_ref Tacticals.onConcl
)
"plugins/funind/invfun.ml" 540 18501 18503 "plugins/funind/invfun.ml" 545 18602 18613
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 547 18618 18620 "plugins/funind/invfun.ml" 547 18618 18639
type(
  Proof_type.tactic
)
ident(
  int_ref intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
)
"plugins/funind/invfun.ml" 539 18482 18499 "plugins/funind/invfun.ml" 548 18640 18648
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 548 18640 18649 "plugins/funind/invfun.ml" 548 18640 18650
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 539 18482 18489 "plugins/funind/invfun.ml" 548 18640 18650
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 549 18651 18656 "plugins/funind/invfun.ml" 549 18651 18657
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 549 18651 18661 "plugins/funind/invfun.ml" 549 18651 18669
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 549 18651 18670 "plugins/funind/invfun.ml" 549 18651 18671
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 486 17054 17060 "plugins/funind/invfun.ml" 486 17054 17061
)
"plugins/funind/invfun.ml" 549 18651 18661 "plugins/funind/invfun.ml" 549 18651 18671
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 488 17108 17112 "plugins/funind/invfun.ml" 549 18651 18671
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 487 17065 17069 "plugins/funind/invfun.ml" 549 18651 18671
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 486 17054 17056 "plugins/funind/invfun.ml" 549 18651 18671
type(
  Tacmach.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 551 18673 18681 "plugins/funind/invfun.ml" 551 18673 18712
type(
  Proof_type.tactic
)
ident(
  def reflexivity_with_destruct_cases "plugins/funind/invfun.ml" 551 18673 18673 --
)
"plugins/funind/invfun.ml" 551 18673 18713 "plugins/funind/invfun.ml" 551 18673 18714
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 552 18717 18719 "plugins/funind/invfun.ml" 592 20082 20087
)
"plugins/funind/invfun.ml" 552 18717 18723 "plugins/funind/invfun.ml" 552 18717 18736
type(
  unit -> Proof_type.tactic
)
"plugins/funind/invfun.ml" 552 18717 18737 "plugins/funind/invfun.ml" 552 18717 18739
type(
  unit
)
"plugins/funind/invfun.ml" 554 18750 18762 "plugins/funind/invfun.ml" 554 18750 18774
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 554 18750 18776 "plugins/funind/invfun.ml" 554 18750 18779
type(
  Term.constr * Term.constr array -> Term.constr array
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/invfun.ml" 554 18750 18781 "plugins/funind/invfun.ml" 554 18750 18788
type(
  Term.types -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/invfun.ml" 554 18750 18790 "plugins/funind/invfun.ml" 554 18750 18798
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/invfun.ml" 554 18750 18799 "plugins/funind/invfun.ml" 554 18750 18800
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 551 18673 18713 "plugins/funind/invfun.ml" 551 18673 18714
)
"plugins/funind/invfun.ml" 554 18750 18789 "plugins/funind/invfun.ml" 554 18750 18801
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 554 18750 18780 "plugins/funind/invfun.ml" 554 18750 18802
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/invfun.ml" 554 18750 18775 "plugins/funind/invfun.ml" 554 18750 18803
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 554 18750 18805 "plugins/funind/invfun.ml" 554 18750 18806
type(
  int
)
"plugins/funind/invfun.ml" 554 18750 18775 "plugins/funind/invfun.ml" 554 18750 18807
type(
  Term.constr
)
"plugins/funind/invfun.ml" 554 18750 18762 "plugins/funind/invfun.ml" 554 18750 18807
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 555 18813 18821 "plugins/funind/invfun.ml" 555 18813 18822
type(
  Term.case_info
)
"plugins/funind/invfun.ml" 555 18813 18823 "plugins/funind/invfun.ml" 555 18813 18824
type(
  Term.constr
)
"plugins/funind/invfun.ml" 555 18813 18825 "plugins/funind/invfun.ml" 555 18813 18826
type(
  Term.constr
)
ident(
  def v "plugins/funind/invfun.ml" 556 18833 18838 "plugins/funind/invfun.ml" 560 18994 19000
)
"plugins/funind/invfun.ml" 555 18813 18827 "plugins/funind/invfun.ml" 555 18813 18828
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 555 18813 18816 "plugins/funind/invfun.ml" 555 18813 18829
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 556 18833 18838 "plugins/funind/invfun.ml" 556 18833 18848
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 557 18850 18857 "plugins/funind/invfun.ml" 557 18850 18863
type(
  Tacexpr.evars_flag -> Term.constr Rawterm.with_bindings -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_case
)
"plugins/funind/invfun.ml" 557 18850 18864 "plugins/funind/invfun.ml" 557 18850 18869
type(
  Tacexpr.evars_flag
)
"plugins/funind/invfun.ml" 557 18850 18871 "plugins/funind/invfun.ml" 557 18850 18872
type(
  Term.constr
)
ident(
  int_ref v "plugins/funind/invfun.ml" 555 18813 18825 "plugins/funind/invfun.ml" 555 18813 18826
)
"plugins/funind/invfun.ml" 557 18850 18873 "plugins/funind/invfun.ml" 557 18850 18891
type(
  Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 557 18850 18870 "plugins/funind/invfun.ml" 557 18850 18892
type(
  Term.constr Rawterm.with_bindings
)
"plugins/funind/invfun.ml" 557 18850 18857 "plugins/funind/invfun.ml" 557 18850 18892
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 558 18894 18901 "plugins/funind/invfun.ml" 558 18894 18907
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intros
)
"plugins/funind/invfun.ml" 559 18909 18916 "plugins/funind/invfun.ml" 559 18909 18927
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 559 18909 18928 "plugins/funind/invfun.ml" 559 18909 18961
type(
  string
)
"plugins/funind/invfun.ml" 559 18909 18962 "plugins/funind/invfun.ml" 559 18909 18993
type(
  Proof_type.tactic
)
ident(
  int_ref reflexivity_with_destruct_cases "plugins/funind/invfun.ml" 551 18673 18681 "plugins/funind/invfun.ml" 551 18673 18712
)
"plugins/funind/invfun.ml" 559 18909 18916 "plugins/funind/invfun.ml" 559 18909 18993
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 556 18833 18848 "plugins/funind/invfun.ml" 560 18994 19000
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 556 18833 18838 "plugins/funind/invfun.ml" 560 18994 19000
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 561 19001 19004 "plugins/funind/invfun.ml" 561 19001 19005
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 561 19001 19009 "plugins/funind/invfun.ml" 561 19001 19020
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.reflexivity
)
"plugins/funind/invfun.ml" 554 18750 18756 "plugins/funind/invfun.ml" 561 19001 19020
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 562 19021 19030 "plugins/funind/invfun.ml" 562 19021 19031
type(
  exn
)
"plugins/funind/invfun.ml" 562 19021 19035 "plugins/funind/invfun.ml" 562 19021 19046
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.reflexivity
)
"plugins/funind/invfun.ml" 553 18742 18746 "plugins/funind/invfun.ml" 562 19021 19046
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 564 19052 19058 "plugins/funind/invfun.ml" 564 19052 19064
type(
  Term.constr
)
"plugins/funind/invfun.ml" 564 19052 19071 "plugins/funind/invfun.ml" 564 19052 19090
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_eq
)
"plugins/funind/invfun.ml" 564 19052 19091 "plugins/funind/invfun.ml" 564 19052 19093
type(
  unit
)
"plugins/funind/invfun.ml" 564 19052 19071 "plugins/funind/invfun.ml" 564 19052 19093
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 565 19097 19103 "plugins/funind/invfun.ml" 565 19097 19115
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 566 19118 19122 "plugins/funind/invfun.ml" 566 19118 19149
type(
  (Names.identifier option -> Proof_type.tactic) -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.onAllHypsAndConcl
)
"plugins/funind/invfun.ml" 567 19152 19163 "plugins/funind/invfun.ml" 567 19152 19165
type(
  Names.identifier option
)
ident(
  def sc "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 578 19602 19622
)
"plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 568 19171 19173 "plugins/funind/invfun.ml" 578 19602 19622
)
"plugins/funind/invfun.ml" 568 19171 19179 "plugins/funind/invfun.ml" 568 19171 19181
type(
  Names.identifier option
)
ident(
  int_ref sc "plugins/funind/invfun.ml" 567 19152 19163 "plugins/funind/invfun.ml" 567 19152 19165
)
"plugins/funind/invfun.ml" 569 19187 19193 "plugins/funind/invfun.ml" 569 19187 19197
type(
  Names.identifier option
)
"plugins/funind/invfun.ml" 569 19187 19201 "plugins/funind/invfun.ml" 569 19187 19209
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 569 19187 19210 "plugins/funind/invfun.ml" 569 19187 19211
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 569 19187 19201 "plugins/funind/invfun.ml" 569 19187 19211
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 570 19212 19223 "plugins/funind/invfun.ml" 570 19212 19225
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 571 19229 19237 "plugins/funind/invfun.ml" 578 19602 19622
)
"plugins/funind/invfun.ml" 570 19212 19218 "plugins/funind/invfun.ml" 570 19212 19225
type(
  Names.identifier option
)
"plugins/funind/invfun.ml" 571 19229 19243 "plugins/funind/invfun.ml" 571 19229 19255
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 571 19229 19258 "plugins/funind/invfun.ml" 571 19229 19268
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/invfun.ml" 571 19229 19269 "plugins/funind/invfun.ml" 571 19229 19270
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 571 19229 19272 "plugins/funind/invfun.ml" 571 19229 19277
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 571 19229 19278 "plugins/funind/invfun.ml" 571 19229 19280
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 570 19212 19223 "plugins/funind/invfun.ml" 570 19212 19225
)
"plugins/funind/invfun.ml" 571 19229 19271 "plugins/funind/invfun.ml" 571 19229 19281
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 571 19229 19257 "plugins/funind/invfun.ml" 571 19229 19282
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 571 19229 19243 "plugins/funind/invfun.ml" 571 19229 19282
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 572 19288 19297 "plugins/funind/invfun.ml" 572 19288 19299
type(
  Term.constr
)
ident(
  def eq "plugins/funind/invfun.ml" 572 19288 19313 "plugins/funind/invfun.ml" 577 19579 19601
)
"plugins/funind/invfun.ml" 572 19288 19302 "plugins/funind/invfun.ml" 572 19288 19303
type(
  Term.constr
)
"plugins/funind/invfun.ml" 572 19288 19304 "plugins/funind/invfun.ml" 572 19288 19306
type(
  Term.constr
)
ident(
  def t1 "plugins/funind/invfun.ml" 572 19288 19313 "plugins/funind/invfun.ml" 577 19579 19601
)
"plugins/funind/invfun.ml" 572 19288 19307 "plugins/funind/invfun.ml" 572 19288 19309
type(
  Term.constr
)
ident(
  def t2 "plugins/funind/invfun.ml" 572 19288 19313 "plugins/funind/invfun.ml" 577 19579 19601
)
"plugins/funind/invfun.ml" 572 19288 19300 "plugins/funind/invfun.ml" 572 19288 19311
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 572 19288 19293 "plugins/funind/invfun.ml" 572 19288 19312
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 572 19288 19318 "plugins/funind/invfun.ml" 572 19288 19327
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/invfun.ml" 572 19288 19328 "plugins/funind/invfun.ml" 572 19288 19330
type(
  Term.constr
)
ident(
  int_ref eq "plugins/funind/invfun.ml" 572 19288 19297 "plugins/funind/invfun.ml" 572 19288 19299
)
"plugins/funind/invfun.ml" 572 19288 19331 "plugins/funind/invfun.ml" 572 19288 19337
type(
  Term.constr
)
ident(
  int_ref eq_ind "plugins/funind/invfun.ml" 564 19052 19058 "plugins/funind/invfun.ml" 564 19052 19064
)
"plugins/funind/invfun.ml" 572 19288 19318 "plugins/funind/invfun.ml" 572 19288 19337
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 573 19341 19351 "plugins/funind/invfun.ml" 573 19341 19373
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Equality.discriminable
)
"plugins/funind/invfun.ml" 573 19341 19375 "plugins/funind/invfun.ml" 573 19341 19381
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/invfun.ml" 573 19341 19382 "plugins/funind/invfun.ml" 573 19341 19383
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 573 19341 19374 "plugins/funind/invfun.ml" 573 19341 19384
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 573 19341 19386 "plugins/funind/invfun.ml" 573 19341 19393
type(
  Proof_type.goal Tacmach.sigma -> Evd.evar_map
)
ident(
  ext_ref Tacmach.project
)
"plugins/funind/invfun.ml" 573 19341 19394 "plugins/funind/invfun.ml" 573 19341 19395
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 573 19341 19385 "plugins/funind/invfun.ml" 573 19341 19396
call(
  stack
)
type(
  Evd.evar_map
)
"plugins/funind/invfun.ml" 573 19341 19397 "plugins/funind/invfun.ml" 573 19341 19399
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/invfun.ml" 572 19288 19304 "plugins/funind/invfun.ml" 572 19288 19306
)
"plugins/funind/invfun.ml" 573 19341 19400 "plugins/funind/invfun.ml" 573 19341 19402
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/invfun.ml" 572 19288 19307 "plugins/funind/invfun.ml" 572 19288 19309
)
"plugins/funind/invfun.ml" 573 19341 19351 "plugins/funind/invfun.ml" 573 19341 19402
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 574 19403 19415 "plugins/funind/invfun.ml" 574 19403 19432
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Equality.discrHyp
)
"plugins/funind/invfun.ml" 574 19403 19433 "plugins/funind/invfun.ml" 574 19403 19435
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 570 19212 19223 "plugins/funind/invfun.ml" 570 19212 19225
)
"plugins/funind/invfun.ml" 574 19403 19436 "plugins/funind/invfun.ml" 574 19403 19437
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 574 19403 19415 "plugins/funind/invfun.ml" 574 19403 19437
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 575 19438 19453 "plugins/funind/invfun.ml" 575 19438 19472
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Equality.injectable
)
"plugins/funind/invfun.ml" 575 19438 19474 "plugins/funind/invfun.ml" 575 19438 19480
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/invfun.ml" 575 19438 19481 "plugins/funind/invfun.ml" 575 19438 19482
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 575 19438 19473 "plugins/funind/invfun.ml" 575 19438 19483
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 575 19438 19485 "plugins/funind/invfun.ml" 575 19438 19492
type(
  Proof_type.goal Tacmach.sigma -> Evd.evar_map
)
ident(
  ext_ref Tacmach.project
)
"plugins/funind/invfun.ml" 575 19438 19493 "plugins/funind/invfun.ml" 575 19438 19494
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 575 19438 19484 "plugins/funind/invfun.ml" 575 19438 19495
call(
  stack
)
type(
  Evd.evar_map
)
"plugins/funind/invfun.ml" 575 19438 19496 "plugins/funind/invfun.ml" 575 19438 19498
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/invfun.ml" 572 19288 19304 "plugins/funind/invfun.ml" 572 19288 19306
)
"plugins/funind/invfun.ml" 575 19438 19499 "plugins/funind/invfun.ml" 575 19438 19501
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/invfun.ml" 572 19288 19307 "plugins/funind/invfun.ml" 572 19288 19309
)
"plugins/funind/invfun.ml" 575 19438 19453 "plugins/funind/invfun.ml" 575 19438 19501
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 576 19502 19514 "plugins/funind/invfun.ml" 576 19502 19524
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 576 19502 19526 "plugins/funind/invfun.ml" 576 19502 19541
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Equality.injHyp
)
"plugins/funind/invfun.ml" 576 19502 19542 "plugins/funind/invfun.ml" 576 19502 19544
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 570 19212 19223 "plugins/funind/invfun.ml" 570 19212 19225
)
"plugins/funind/invfun.ml" 576 19502 19526 "plugins/funind/invfun.ml" 576 19502 19544
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 576 19502 19545 "plugins/funind/invfun.ml" 576 19502 19549
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.thin
)
"plugins/funind/invfun.ml" 576 19502 19551 "plugins/funind/invfun.ml" 576 19502 19553
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 570 19212 19223 "plugins/funind/invfun.ml" 570 19212 19225
)
"plugins/funind/invfun.ml" 576 19502 19550 "plugins/funind/invfun.ml" 576 19502 19554
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 576 19502 19545 "plugins/funind/invfun.ml" 576 19502 19554
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 576 19502 19555 "plugins/funind/invfun.ml" 576 19502 19574
type(
  Proof_type.tactic
)
ident(
  int_ref intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
)
"plugins/funind/invfun.ml" 576 19502 19525 "plugins/funind/invfun.ml" 576 19502 19575
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 576 19502 19577 "plugins/funind/invfun.ml" 576 19502 19578
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 576 19502 19514 "plugins/funind/invfun.ml" 576 19502 19578
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 577 19579 19591 "plugins/funind/invfun.ml" 577 19579 19599
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 577 19579 19600 "plugins/funind/invfun.ml" 577 19579 19601
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 577 19579 19591 "plugins/funind/invfun.ml" 577 19579 19601
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 575 19438 19450 "plugins/funind/invfun.ml" 577 19579 19601
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 573 19341 19348 "plugins/funind/invfun.ml" 577 19579 19601
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 572 19288 19313 "plugins/funind/invfun.ml" 577 19579 19601
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 578 19602 19607 "plugins/funind/invfun.ml" 578 19602 19608
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 578 19602 19612 "plugins/funind/invfun.ml" 578 19602 19620
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 578 19602 19621 "plugins/funind/invfun.ml" 578 19602 19622
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 567 19152 19166 "plugins/funind/invfun.ml" 567 19152 19167
)
"plugins/funind/invfun.ml" 578 19602 19612 "plugins/funind/invfun.ml" 578 19602 19622
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 571 19229 19237 "plugins/funind/invfun.ml" 578 19602 19622
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 568 19171 19173 "plugins/funind/invfun.ml" 578 19602 19622
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 566 19118 19150 "plugins/funind/invfun.ml" 579 19623 19628
type(
  Names.identifier option -> Proof_type.tactic
)
"plugins/funind/invfun.ml" 566 19118 19122 "plugins/funind/invfun.ml" 579 19623 19628
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 581 19634 19637 "plugins/funind/invfun.ml" 581 19634 19645
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclFIRST
)
"plugins/funind/invfun.ml" 582 19646 19652 "plugins/funind/invfun.ml" 582 19646 19663
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.reflexivity
)
"plugins/funind/invfun.ml" 583 19665 19671 "plugins/funind/invfun.ml" 583 19665 19678
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/invfun.ml" 583 19665 19680 "plugins/funind/invfun.ml" 583 19665 19691
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclPROGRESS
)
"plugins/funind/invfun.ml" 583 19665 19692 "plugins/funind/invfun.ml" 583 19665 19704
type(
  Proof_type.tactic
)
ident(
  int_ref discr_inject "plugins/funind/invfun.ml" 565 19097 19103 "plugins/funind/invfun.ml" 565 19097 19115
)
"plugins/funind/invfun.ml" 583 19665 19679 "plugins/funind/invfun.ml" 583 19665 19705
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 583 19665 19707 "plugins/funind/invfun.ml" 583 19665 19720
type(
  unit -> Proof_type.tactic
)
ident(
  int_ref destruct_case "plugins/funind/invfun.ml" 552 18717 18723 "plugins/funind/invfun.ml" 552 18717 18736
)
"plugins/funind/invfun.ml" 583 19665 19721 "plugins/funind/invfun.ml" 583 19665 19723
type(
  unit
)
"plugins/funind/invfun.ml" 583 19665 19706 "plugins/funind/invfun.ml" 583 19665 19724
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 583 19665 19671 "plugins/funind/invfun.ml" 583 19665 19724
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 590 20001 20007 "plugins/funind/invfun.ml" 590 20001 20014
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/invfun.ml" 590 20001 20016 "plugins/funind/invfun.ml" 590 20001 20027
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclPROGRESS
)
"plugins/funind/invfun.ml" 590 20001 20028 "plugins/funind/invfun.ml" 590 20001 20040
type(
  Proof_type.tactic
)
ident(
  int_ref discr_inject "plugins/funind/invfun.ml" 565 19097 19103 "plugins/funind/invfun.ml" 565 19097 19115
)
"plugins/funind/invfun.ml" 590 20001 20015 "plugins/funind/invfun.ml" 590 20001 20042
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 590 20001 20043 "plugins/funind/invfun.ml" 590 20001 20074
type(
  Proof_type.tactic
)
ident(
  int_ref reflexivity_with_destruct_cases "plugins/funind/invfun.ml" 551 18673 18681 "plugins/funind/invfun.ml" 551 18673 18712
)
"plugins/funind/invfun.ml" 590 20001 20007 "plugins/funind/invfun.ml" 590 20001 20074
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 582 19646 19650 "plugins/funind/invfun.ml" 591 20075 20080
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 581 19634 19636 "plugins/funind/invfun.ml" 591 20075 20081
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 592 20082 20086 "plugins/funind/invfun.ml" 592 20082 20087
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 551 18673 18713 "plugins/funind/invfun.ml" 551 18673 18714
)
"plugins/funind/invfun.ml" 581 19634 19636 "plugins/funind/invfun.ml" 592 20082 20087
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 565 19097 19099 "plugins/funind/invfun.ml" 592 20082 20087
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 564 19052 19054 "plugins/funind/invfun.ml" 592 20082 20087
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 552 18717 18719 "plugins/funind/invfun.ml" 592 20082 20087
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 623 21274 21278 "plugins/funind/invfun.ml" 623 21274 21296
type(
  Term.constr array ->
  Declarations.one_inductive_body array ->
  Term.types array ->
  ('a * (Term.rel_context * Term.constr)) array -> int -> Tacmach.tactic
)
ident(
  def prove_fun_complete "plugins/funind/invfun.ml" 735 25369 25369 --
)
"plugins/funind/invfun.ml" 623 21274 21297 "plugins/funind/invfun.ml" 623 21274 21302
type(
  Term.constr array
)
ident(
  def funcs "plugins/funind/invfun.ml" 623 21274 21303 "plugins/funind/invfun.ml" 730 25357 25364
)
"plugins/funind/invfun.ml" 623 21274 21303 "plugins/funind/invfun.ml" 623 21274 21309
type(
  Declarations.one_inductive_body array
)
ident(
  def graphs "plugins/funind/invfun.ml" 623 21274 21310 "plugins/funind/invfun.ml" 730 25357 25364
)
"plugins/funind/invfun.ml" 623 21274 21310 "plugins/funind/invfun.ml" 623 21274 21317
type(
  Term.types array
)
ident(
  def schemes "plugins/funind/invfun.ml" 623 21274 21318 "plugins/funind/invfun.ml" 730 25357 25364
)
"plugins/funind/invfun.ml" 623 21274 21318 "plugins/funind/invfun.ml" 623 21274 21336
type(
  ('a * (Term.rel_context * Term.constr)) array
)
ident(
  def lemmas_types_infos "plugins/funind/invfun.ml" 623 21274 21337 "plugins/funind/invfun.ml" 730 25357 25364
)
"plugins/funind/invfun.ml" 623 21274 21337 "plugins/funind/invfun.ml" 623 21274 21338
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 623 21274 21339 "plugins/funind/invfun.ml" 730 25357 25364
)
"plugins/funind/invfun.ml" 624 21350 21356 "plugins/funind/invfun.ml" 624 21350 21357
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 628 21469 21473 "plugins/funind/invfun.ml" 730 25357 25364
)
"plugins/funind/invfun.ml" 628 21469 21477 "plugins/funind/invfun.ml" 628 21469 21483
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 629 21486 21492 "plugins/funind/invfun.ml" 629 21486 21501
type(
  ('a * (Term.rel_context * Term.constr) -> Term.constr) ->
  ('a * (Term.rel_context * Term.constr)) array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/invfun.ml" 630 21502 21509 "plugins/funind/invfun.ml" 630 21502 21510
type(
  'a
)
"plugins/funind/invfun.ml" 630 21502 21512 "plugins/funind/invfun.ml" 630 21502 21516
type(
  Term.rel_context
)
ident(
  def ctxt "plugins/funind/invfun.ml" 630 21502 21528 "plugins/funind/invfun.ml" 630 21502 21583
)
"plugins/funind/invfun.ml" 630 21502 21517 "plugins/funind/invfun.ml" 630 21502 21522
type(
  Term.constr
)
ident(
  def concl "plugins/funind/invfun.ml" 630 21502 21528 "plugins/funind/invfun.ml" 630 21502 21583
)
"plugins/funind/invfun.ml" 630 21502 21511 "plugins/funind/invfun.ml" 630 21502 21523
type(
  Term.rel_context * Term.constr
)
"plugins/funind/invfun.ml" 630 21502 21508 "plugins/funind/invfun.ml" 630 21502 21524
type(
  'a * (Term.rel_context * Term.constr)
)
"plugins/funind/invfun.ml" 630 21502 21528 "plugins/funind/invfun.ml" 630 21502 21535
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_zeta "plugins/funind/invfun.ml" 78 2228 2232 "plugins/funind/invfun.ml" 78 2228 2239
)
"plugins/funind/invfun.ml" 630 21502 21537 "plugins/funind/invfun.ml" 630 21502 21565
type(
  init:Term.constr -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkLambda_or_LetIn
)
"plugins/funind/invfun.ml" 630 21502 21572 "plugins/funind/invfun.ml" 630 21502 21577
type(
  Term.constr
)
ident(
  int_ref concl "plugins/funind/invfun.ml" 630 21502 21517 "plugins/funind/invfun.ml" 630 21502 21522
)
"plugins/funind/invfun.ml" 630 21502 21578 "plugins/funind/invfun.ml" 630 21502 21582
type(
  Term.rel_context
)
ident(
  int_ref ctxt "plugins/funind/invfun.ml" 630 21502 21512 "plugins/funind/invfun.ml" 630 21502 21516
)
"plugins/funind/invfun.ml" 630 21502 21536 "plugins/funind/invfun.ml" 630 21502 21583
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 630 21502 21528 "plugins/funind/invfun.ml" 630 21502 21583
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 630 21502 21503 "plugins/funind/invfun.ml" 630 21502 21584
type(
  'a * (Term.rel_context * Term.constr) -> Term.constr
)
"plugins/funind/invfun.ml" 631 21585 21586 "plugins/funind/invfun.ml" 631 21585 21604
type(
  ('a * (Term.rel_context * Term.constr)) array
)
ident(
  int_ref lemmas_types_infos "plugins/funind/invfun.ml" 623 21274 21318 "plugins/funind/invfun.ml" 623 21274 21336
)
"plugins/funind/invfun.ml" 629 21486 21492 "plugins/funind/invfun.ml" 631 21585 21604
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 634 21688 21696 "plugins/funind/invfun.ml" 634 21688 21697
type(
  Term.constr
)
"plugins/funind/invfun.ml" 634 21688 21700 "plugins/funind/invfun.ml" 634 21688 21705
type(
  Term.constr array
)
ident(
  int_ref funcs "plugins/funind/invfun.ml" 623 21274 21297 "plugins/funind/invfun.ml" 623 21274 21302
)
"plugins/funind/invfun.ml" 634 21688 21707 "plugins/funind/invfun.ml" 634 21688 21708
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 623 21274 21337 "plugins/funind/invfun.ml" 623 21274 21338
)
"plugins/funind/invfun.ml" 634 21688 21700 "plugins/funind/invfun.ml" 634 21688 21709
type(
  Term.constr
)
"plugins/funind/invfun.ml" 635 21713 21721 "plugins/funind/invfun.ml" 635 21713 21736
type(
  Term.constr
)
"plugins/funind/invfun.ml" 635 21713 21739 "plugins/funind/invfun.ml" 635 21713 21746
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_zeta "plugins/funind/invfun.ml" 78 2228 2232 "plugins/funind/invfun.ml" 78 2228 2239
)
"plugins/funind/invfun.ml" 635 21713 21747 "plugins/funind/invfun.ml" 635 21713 21754
type(
  Term.types array
)
ident(
  int_ref schemes "plugins/funind/invfun.ml" 623 21274 21310 "plugins/funind/invfun.ml" 623 21274 21317
)
"plugins/funind/invfun.ml" 635 21713 21756 "plugins/funind/invfun.ml" 635 21713 21757
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 623 21274 21337 "plugins/funind/invfun.ml" 623 21274 21338
)
"plugins/funind/invfun.ml" 635 21713 21747 "plugins/funind/invfun.ml" 635 21713 21758
type(
  Term.types
)
"plugins/funind/invfun.ml" 635 21713 21739 "plugins/funind/invfun.ml" 635 21713 21758
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 636 21763 21771 "plugins/funind/invfun.ml" 636 21763 21781
type(
  Term.types
)
"plugins/funind/invfun.ml" 636 21763 21784 "plugins/funind/invfun.ml" 636 21763 21794
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/invfun.ml" 636 21763 21795 "plugins/funind/invfun.ml" 636 21763 21796
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 624 21350 21356 "plugins/funind/invfun.ml" 624 21350 21357
)
"plugins/funind/invfun.ml" 636 21763 21797 "plugins/funind/invfun.ml" 636 21763 21812
type(
  Term.constr
)
ident(
  int_ref graph_principle "plugins/funind/invfun.ml" 635 21713 21721 "plugins/funind/invfun.ml" 635 21713 21736
)
"plugins/funind/invfun.ml" 636 21763 21784 "plugins/funind/invfun.ml" 636 21763 21812
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 637 21816 21824 "plugins/funind/invfun.ml" 637 21816 21835
type(
  Tactics.elim_scheme
)
"plugins/funind/invfun.ml" 637 21816 21838 "plugins/funind/invfun.ml" 637 21816 21862
type(
  ?elimc:Term.constr Rawterm.with_bindings ->
  Term.types -> Tactics.elim_scheme
)
ident(
  ext_ref Tactics.compute_elim_sig
)
"plugins/funind/invfun.ml" 637 21816 21863 "plugins/funind/invfun.ml" 637 21816 21873
type(
  Term.types
)
ident(
  int_ref princ_type "plugins/funind/invfun.ml" 636 21763 21771 "plugins/funind/invfun.ml" 636 21763 21781
)
"plugins/funind/invfun.ml" 637 21816 21838 "plugins/funind/invfun.ml" 637 21816 21873
call(
  stack
)
type(
  Tactics.elim_scheme
)
"plugins/funind/invfun.ml" 641 21991 21999 "plugins/funind/invfun.ml" 641 21991 22010
type(
  int
)
"plugins/funind/invfun.ml" 641 21991 22013 "plugins/funind/invfun.ml" 641 21991 22020
type(
  Term.types -> int
)
ident(
  ext_ref Term.nb_prod
)
"plugins/funind/invfun.ml" 641 21991 22022 "plugins/funind/invfun.ml" 641 21991 22030
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/invfun.ml" 641 21991 22031 "plugins/funind/invfun.ml" 641 21991 22032
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 624 21350 21356 "plugins/funind/invfun.ml" 624 21350 21357
)
"plugins/funind/invfun.ml" 641 21991 22021 "plugins/funind/invfun.ml" 641 21991 22033
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 641 21991 22013 "plugins/funind/invfun.ml" 641 21991 22033
call(
  stack
)
type(
  int
)
"plugins/funind/invfun.ml" 641 21991 22035 "plugins/funind/invfun.ml" 641 21991 22036
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/invfun.ml" 641 21991 22037 "plugins/funind/invfun.ml" 641 21991 22038
type(
  int
)
"plugins/funind/invfun.ml" 641 21991 22013 "plugins/funind/invfun.ml" 641 21991 22038
type(
  int
)
"plugins/funind/invfun.ml" 642 22043 22051 "plugins/funind/invfun.ml" 642 22043 22061
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 642 22043 22064 "plugins/funind/invfun.ml" 642 22043 22081
type(
  Names.identifier -> Names.identifier list -> int -> Names.identifier list
)
ident(
  int_ref generate_fresh_id "plugins/funind/invfun.ml" 206 6984 6992 "plugins/funind/invfun.ml" 206 6984 7009
)
"plugins/funind/invfun.ml" 642 22043 22083 "plugins/funind/invfun.ml" 642 22043 22095
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 642 22043 22096 "plugins/funind/invfun.ml" 642 22043 22099
type(
  string
)
"plugins/funind/invfun.ml" 642 22043 22082 "plugins/funind/invfun.ml" 642 22043 22100
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 642 22043 22101 "plugins/funind/invfun.ml" 642 22043 22103
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 642 22043 22104 "plugins/funind/invfun.ml" 642 22043 22115
type(
  int
)
ident(
  int_ref nb_fun_args "plugins/funind/invfun.ml" 641 21991 21999 "plugins/funind/invfun.ml" 641 21991 22010
)
"plugins/funind/invfun.ml" 642 22043 22064 "plugins/funind/invfun.ml" 642 22043 22115
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 643 22119 22127 "plugins/funind/invfun.ml" 643 22119 22130
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 643 22119 22133 "plugins/funind/invfun.ml" 643 22119 22143
type(
  Names.identifier list
)
ident(
  int_ref args_names "plugins/funind/invfun.ml" 642 22043 22051 "plugins/funind/invfun.ml" 642 22043 22061
)
"plugins/funind/invfun.ml" 643 22119 22143 "plugins/funind/invfun.ml" 643 22119 22144
type(
  Names.identifier list -> Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/invfun.ml" 643 22119 22145 "plugins/funind/invfun.ml" 643 22119 22159
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/invfun.ml" 643 22119 22160 "plugins/funind/invfun.ml" 643 22119 22161
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 624 21350 21356 "plugins/funind/invfun.ml" 624 21350 21357
)
"plugins/funind/invfun.ml" 643 22119 22144 "plugins/funind/invfun.ml" 643 22119 22162
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 643 22119 22133 "plugins/funind/invfun.ml" 643 22119 22162
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 645 22239 22247 "plugins/funind/invfun.ml" 645 22239 22250
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 645 22239 22251 "plugins/funind/invfun.ml" 645 22239 22255
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 645 22239 22256 "plugins/funind/invfun.ml" 645 22239 22274
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 645 22239 22247 "plugins/funind/invfun.ml" 645 22239 22274
type(
  Names.identifier * Names.identifier * Names.identifier
)
"plugins/funind/invfun.ml" 646 22277 22289 "plugins/funind/invfun.ml" 646 22277 22306
type(
  Names.identifier -> Names.identifier list -> int -> Names.identifier list
)
ident(
  int_ref generate_fresh_id "plugins/funind/invfun.ml" 206 6984 6992 "plugins/funind/invfun.ml" 206 6984 7009
)
"plugins/funind/invfun.ml" 646 22277 22308 "plugins/funind/invfun.ml" 646 22277 22320
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 646 22277 22321 "plugins/funind/invfun.ml" 646 22277 22324
type(
  string
)
"plugins/funind/invfun.ml" 646 22277 22307 "plugins/funind/invfun.ml" 646 22277 22325
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 646 22277 22326 "plugins/funind/invfun.ml" 646 22277 22329
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 643 22119 22127 "plugins/funind/invfun.ml" 643 22119 22130
)
"plugins/funind/invfun.ml" 646 22277 22330 "plugins/funind/invfun.ml" 646 22277 22331
type(
  int
)
"plugins/funind/invfun.ml" 646 22277 22289 "plugins/funind/invfun.ml" 646 22277 22331
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 647 22337 22341 "plugins/funind/invfun.ml" 647 22337 22344
type(
  Names.identifier
)
ident(
  def res "plugins/funind/invfun.ml" 647 22337 22373 "plugins/funind/invfun.ml" 647 22337 22400
)
"plugins/funind/invfun.ml" 647 22337 22345 "plugins/funind/invfun.ml" 647 22337 22349
type(
  Names.identifier
)
ident(
  def hres "plugins/funind/invfun.ml" 647 22337 22373 "plugins/funind/invfun.ml" 647 22337 22400
)
"plugins/funind/invfun.ml" 647 22337 22350 "plugins/funind/invfun.ml" 647 22337 22368
type(
  Names.identifier
)
ident(
  def graph_principle_id "plugins/funind/invfun.ml" 647 22337 22373 "plugins/funind/invfun.ml" 647 22337 22400
)
"plugins/funind/invfun.ml" 647 22337 22340 "plugins/funind/invfun.ml" 647 22337 22369
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 647 22337 22373 "plugins/funind/invfun.ml" 647 22337 22376
type(
  Names.identifier
)
ident(
  int_ref res "plugins/funind/invfun.ml" 647 22337 22341 "plugins/funind/invfun.ml" 647 22337 22344
)
"plugins/funind/invfun.ml" 647 22337 22377 "plugins/funind/invfun.ml" 647 22337 22381
type(
  Names.identifier
)
ident(
  int_ref hres "plugins/funind/invfun.ml" 647 22337 22345 "plugins/funind/invfun.ml" 647 22337 22349
)
"plugins/funind/invfun.ml" 647 22337 22382 "plugins/funind/invfun.ml" 647 22337 22400
type(
  Names.identifier
)
ident(
  int_ref graph_principle_id "plugins/funind/invfun.ml" 647 22337 22350 "plugins/funind/invfun.ml" 647 22337 22368
)
"plugins/funind/invfun.ml" 647 22337 22373 "plugins/funind/invfun.ml" 647 22337 22400
type(
  Names.identifier * Names.identifier * Names.identifier
)
"plugins/funind/invfun.ml" 648 22401 22404 "plugins/funind/invfun.ml" 648 22401 22405
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 648 22401 22409 "plugins/funind/invfun.ml" 648 22401 22421
type(
  Names.identifier * Names.identifier * Names.identifier
)
"plugins/funind/invfun.ml" 646 22277 22283 "plugins/funind/invfun.ml" 648 22401 22421
type(
  Names.identifier * Names.identifier * Names.identifier
)
"plugins/funind/invfun.ml" 650 22429 22437 "plugins/funind/invfun.ml" 650 22429 22440
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 650 22429 22443 "plugins/funind/invfun.ml" 650 22429 22446
type(
  Names.identifier
)
ident(
  int_ref res "plugins/funind/invfun.ml" 645 22239 22247 "plugins/funind/invfun.ml" 645 22239 22250
)
"plugins/funind/invfun.ml" 650 22429 22448 "plugins/funind/invfun.ml" 650 22429 22452
type(
  Names.identifier
)
ident(
  int_ref hres "plugins/funind/invfun.ml" 645 22239 22251 "plugins/funind/invfun.ml" 645 22239 22255
)
"plugins/funind/invfun.ml" 650 22429 22454 "plugins/funind/invfun.ml" 650 22429 22472
type(
  Names.identifier
)
ident(
  int_ref graph_principle_id "plugins/funind/invfun.ml" 645 22239 22256 "plugins/funind/invfun.ml" 645 22239 22274
)
"plugins/funind/invfun.ml" 650 22429 22474 "plugins/funind/invfun.ml" 650 22429 22477
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 643 22119 22127 "plugins/funind/invfun.ml" 643 22119 22130
)
"plugins/funind/invfun.ml" 650 22429 22454 "plugins/funind/invfun.ml" 650 22429 22477
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 650 22429 22448 "plugins/funind/invfun.ml" 650 22429 22477
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 650 22429 22443 "plugins/funind/invfun.ml" 650 22429 22477
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 652 22572 22580 "plugins/funind/invfun.ml" 652 22572 22588
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 652 22572 22591 "plugins/funind/invfun.ml" 652 22572 22599
type(
  Term.rel_context -> Term.rel_declaration list
)
ident(
  ext_ref List.rev
)
"plugins/funind/invfun.ml" 652 22572 22600 "plugins/funind/invfun.ml" 652 22572 22611
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_infos "plugins/funind/invfun.ml" 637 21816 21824 "plugins/funind/invfun.ml" 637 21816 21835
)
"plugins/funind/invfun.ml" 652 22572 22600 "plugins/funind/invfun.ml" 652 22572 22620
type(
  Term.rel_context
)
"plugins/funind/invfun.ml" 652 22572 22591 "plugins/funind/invfun.ml" 652 22572 22620
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 653 22624 22632 "plugins/funind/invfun.ml" 653 22624 22642
type(
  Names.identifier list list
)
"plugins/funind/invfun.ml" 654 22645 22651 "plugins/funind/invfun.ml" 654 22645 22659
type(
  (Term.rel_declaration -> Names.identifier list) ->
  Term.rel_declaration list -> Names.identifier list list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 655 22660 22667 "plugins/funind/invfun.ml" 655 22660 22668
type(
  Names.name
)
"plugins/funind/invfun.ml" 655 22660 22669 "plugins/funind/invfun.ml" 655 22660 22670
type(
  Term.constr option
)
"plugins/funind/invfun.ml" 655 22660 22671 "plugins/funind/invfun.ml" 655 22660 22678
type(
  Term.types
)
ident(
  def br_type "plugins/funind/invfun.ml" 656 22683 22687 "plugins/funind/invfun.ml" 658 22717 22783
)
"plugins/funind/invfun.ml" 655 22660 22666 "plugins/funind/invfun.ml" 655 22660 22679
type(
  Term.rel_declaration
)
"plugins/funind/invfun.ml" 656 22683 22687 "plugins/funind/invfun.ml" 656 22683 22695
type(
  (Names.identifier -> Names.identifier) ->
  Names.identifier list -> Names.identifier list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 657 22696 22707 "plugins/funind/invfun.ml" 657 22696 22709
type(
  Names.identifier
)
ident(
  def id "plugins/funind/invfun.ml" 657 22696 22713 "plugins/funind/invfun.ml" 657 22696 22715
)
"plugins/funind/invfun.ml" 657 22696 22713 "plugins/funind/invfun.ml" 657 22696 22715
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/invfun.ml" 657 22696 22707 "plugins/funind/invfun.ml" 657 22696 22709
)
"plugins/funind/invfun.ml" 657 22696 22702 "plugins/funind/invfun.ml" 657 22696 22716
type(
  Names.identifier -> Names.identifier
)
"plugins/funind/invfun.ml" 658 22717 22724 "plugins/funind/invfun.ml" 658 22717 22741
type(
  Names.identifier -> Names.identifier list -> int -> Names.identifier list
)
ident(
  int_ref generate_fresh_id "plugins/funind/invfun.ml" 206 6984 6992 "plugins/funind/invfun.ml" 206 6984 7009
)
"plugins/funind/invfun.ml" 658 22717 22743 "plugins/funind/invfun.ml" 658 22717 22755
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/invfun.ml" 658 22717 22756 "plugins/funind/invfun.ml" 658 22717 22759
type(
  string
)
"plugins/funind/invfun.ml" 658 22717 22742 "plugins/funind/invfun.ml" 658 22717 22760
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 658 22717 22761 "plugins/funind/invfun.ml" 658 22717 22764
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 650 22429 22437 "plugins/funind/invfun.ml" 650 22429 22440
)
"plugins/funind/invfun.ml" 658 22717 22766 "plugins/funind/invfun.ml" 658 22717 22773
type(
  Term.types -> int
)
ident(
  ext_ref Term.nb_prod
)
"plugins/funind/invfun.ml" 658 22717 22774 "plugins/funind/invfun.ml" 658 22717 22781
type(
  Term.types
)
ident(
  int_ref br_type "plugins/funind/invfun.ml" 655 22660 22671 "plugins/funind/invfun.ml" 655 22660 22678
)
"plugins/funind/invfun.ml" 658 22717 22765 "plugins/funind/invfun.ml" 658 22717 22782
call(
  stack
)
type(
  int
)
"plugins/funind/invfun.ml" 658 22717 22723 "plugins/funind/invfun.ml" 658 22717 22783
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 656 22683 22687 "plugins/funind/invfun.ml" 658 22717 22783
call(
  tail
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 655 22660 22661 "plugins/funind/invfun.ml" 659 22784 22786
type(
  Term.rel_declaration -> Names.identifier list
)
"plugins/funind/invfun.ml" 660 22787 22788 "plugins/funind/invfun.ml" 660 22787 22796
type(
  Term.rel_declaration list
)
ident(
  int_ref branches "plugins/funind/invfun.ml" 652 22572 22580 "plugins/funind/invfun.ml" 652 22572 22588
)
"plugins/funind/invfun.ml" 654 22645 22651 "plugins/funind/invfun.ml" 660 22787 22796
call(
  stack
)
type(
  Names.identifier list list
)
"plugins/funind/invfun.ml" 666 22982 22990 "plugins/funind/invfun.ml" 666 22982 23001
type(
  int -> Names.identifier list -> Tacmach.tactic
)
"plugins/funind/invfun.ml" 666 22982 23002 "plugins/funind/invfun.ml" 666 22982 23003
type(
  int
)
ident(
  def j "plugins/funind/invfun.ml" 666 22982 23004 "plugins/funind/invfun.ml" 689 23719 23798
)
"plugins/funind/invfun.ml" 666 22982 23004 "plugins/funind/invfun.ml" 666 22982 23007
type(
  Names.identifier list
)
ident(
  def ids "plugins/funind/invfun.ml" 666 22982 23008 "plugins/funind/invfun.ml" 689 23719 23798
)
"plugins/funind/invfun.ml" 667 23019 23029 "plugins/funind/invfun.ml" 667 23019 23038
type(
  Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 667 23019 23041 "plugins/funind/invfun.ml" 667 23019 23047
type(
  Declarations.one_inductive_body array
)
ident(
  int_ref graphs "plugins/funind/invfun.ml" 623 21274 21303 "plugins/funind/invfun.ml" 623 21274 21309
)
"plugins/funind/invfun.ml" 667 23019 23049 "plugins/funind/invfun.ml" 667 23019 23050
type(
  int
)
ident(
  int_ref j "plugins/funind/invfun.ml" 666 22982 23002 "plugins/funind/invfun.ml" 666 22982 23003
)
"plugins/funind/invfun.ml" 667 23019 23041 "plugins/funind/invfun.ml" 667 23019 23051
type(
  Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 668 23055 23065 "plugins/funind/invfun.ml" 668 23055 23070
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 668 23055 23078 "plugins/funind/invfun.ml" 668 23055 23097
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/invfun.ml" 668 23055 23099 "plugins/funind/invfun.ml" 668 23055 23108
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/invfun.ml" 668 23055 23109 "plugins/funind/invfun.ml" 668 23055 23114
type(
  Term.constr array
)
ident(
  int_ref funcs "plugins/funind/invfun.ml" 623 21274 21297 "plugins/funind/invfun.ml" 623 21274 21302
)
"plugins/funind/invfun.ml" 668 23055 23116 "plugins/funind/invfun.ml" 668 23055 23117
type(
  int
)
ident(
  int_ref j "plugins/funind/invfun.ml" 666 22982 23002 "plugins/funind/invfun.ml" 666 22982 23003
)
"plugins/funind/invfun.ml" 668 23055 23109 "plugins/funind/invfun.ml" 668 23055 23118
type(
  Term.constr
)
"plugins/funind/invfun.ml" 668 23055 23098 "plugins/funind/invfun.ml" 668 23055 23119
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 668 23055 23078 "plugins/funind/invfun.ml" 668 23055 23119
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 668 23055 23125 "plugins/funind/invfun.ml" 668 23055 23134
type(
  exn
)
"plugins/funind/invfun.ml" 668 23055 23139 "plugins/funind/invfun.ml" 668 23055 23144
type(
  string -> Indfun_common.function_info
)
ident(
  ext_ref Util.error
)
"plugins/funind/invfun.ml" 668 23055 23145 "plugins/funind/invfun.ml" 668 23055 23161
type(
  string
)
"plugins/funind/invfun.ml" 668 23055 23139 "plugins/funind/invfun.ml" 668 23055 23161
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 668 23055 23074 "plugins/funind/invfun.ml" 668 23055 23161
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 669 23165 23174 "plugins/funind/invfun.ml" 669 23165 23179
type(
  Indfun_common.function_info
)
ident(
  int_ref infos "plugins/funind/invfun.ml" 668 23055 23065 "plugins/funind/invfun.ml" 668 23055 23070
)
"plugins/funind/invfun.ml" 669 23165 23174 "plugins/funind/invfun.ml" 669 23165 23190
type(
  bool
)
"plugins/funind/invfun.ml" 669 23165 23191 "plugins/funind/invfun.ml" 669 23165 23193
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"plugins/funind/invfun.ml" 669 23165 23195 "plugins/funind/invfun.ml" 669 23165 23212
type(
  Declarations.wf_paths -> bool
)
ident(
  ext_ref Rtree.is_infinite
)
"plugins/funind/invfun.ml" 669 23165 23213 "plugins/funind/invfun.ml" 669 23165 23222
type(
  Declarations.one_inductive_body
)
ident(
  int_ref graph_def "plugins/funind/invfun.ml" 667 23019 23029 "plugins/funind/invfun.ml" 667 23019 23038
)
"plugins/funind/invfun.ml" 669 23165 23213 "plugins/funind/invfun.ml" 669 23165 23235
type(
  Declarations.wf_paths
)
"plugins/funind/invfun.ml" 669 23165 23195 "plugins/funind/invfun.ml" 669 23165 23235
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 669 23165 23174 "plugins/funind/invfun.ml" 669 23165 23235
type(
  bool
)
"plugins/funind/invfun.ml" 671 23247 23252 "plugins/funind/invfun.ml" 671 23247 23260
type(
  Names.constant
)
ident(
  def eq_lemma "plugins/funind/invfun.ml" 675 23370 23371 "plugins/funind/invfun.ml" 688 23716 23718
)
"plugins/funind/invfun.ml" 672 23263 23270 "plugins/funind/invfun.ml" 672 23263 23280
type(
  Names.constant option -> Names.constant
)
ident(
  ext_ref Option.get
)
"plugins/funind/invfun.ml" 672 23263 23281 "plugins/funind/invfun.ml" 672 23263 23288
type(
  Indfun_common.function_info
)
ident(
  int_ref infos "plugins/funind/invfun.ml" 668 23055 23065 "plugins/funind/invfun.ml" 668 23055 23070
)
"plugins/funind/invfun.ml" 672 23263 23281 "plugins/funind/invfun.ml" 672 23263 23303
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 672 23263 23270 "plugins/funind/invfun.ml" 672 23263 23303
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 673 23304 23312 "plugins/funind/invfun.ml" 673 23304 23325
type(
  exn
)
"plugins/funind/invfun.ml" 673 23304 23329 "plugins/funind/invfun.ml" 673 23304 23336
type(
  string -> Names.constant
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/invfun.ml" 673 23304 23337 "plugins/funind/invfun.ml" 673 23304 23365
type(
  string
)
"plugins/funind/invfun.ml" 673 23304 23329 "plugins/funind/invfun.ml" 673 23304 23365
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 672 23263 23266 "plugins/funind/invfun.ml" 673 23304 23365
type(
  Names.constant
)
"plugins/funind/invfun.ml" 675 23370 23371 "plugins/funind/invfun.ml" 675 23370 23381
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 676 23383 23386 "plugins/funind/invfun.ml" 676 23383 23392
type(
  (Names.identifier -> Proof_type.tactic) ->
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/invfun.ml" 676 23383 23393 "plugins/funind/invfun.ml" 676 23383 23400
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 676 23383 23401 "plugins/funind/invfun.ml" 676 23383 23404
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 666 22982 23004 "plugins/funind/invfun.ml" 666 22982 23007
)
"plugins/funind/invfun.ml" 676 23383 23386 "plugins/funind/invfun.ml" 676 23383 23404
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 677 23406 23409 "plugins/funind/invfun.ml" 677 23406 23427
type(
  ?tac:Tacmach.tactic * Equality.conditions -> Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Equality.rewriteLR
)
"plugins/funind/invfun.ml" 677 23406 23429 "plugins/funind/invfun.ml" 677 23406 23436
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/invfun.ml" 677 23406 23437 "plugins/funind/invfun.ml" 677 23406 23445
type(
  Names.constant
)
ident(
  int_ref eq_lemma "plugins/funind/invfun.ml" 671 23247 23252 "plugins/funind/invfun.ml" 671 23247 23260
)
"plugins/funind/invfun.ml" 677 23406 23428 "plugins/funind/invfun.ml" 677 23406 23446
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 677 23406 23409 "plugins/funind/invfun.ml" 677 23406 23446
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 679 23549 23552 "plugins/funind/invfun.ml" 679 23549 23560
type(
  Redexpr.red_expr -> Tacticals.clause -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_reduce
)
"plugins/funind/invfun.ml" 681 23579 23588 "plugins/funind/invfun.ml" 681 23579 23605
type(
  Names.evaluable_global_reference Rawterm.raw_red_flag
)
ident(
  ext_ref Rawterm.all_flags
)
"plugins/funind/invfun.ml" 682 23606 23630 "plugins/funind/invfun.ml" 682 23606 23635
type(
  bool
)
"plugins/funind/invfun.ml" 681 23579 23587 "plugins/funind/invfun.ml" 683 23637 23646
type(
  Names.evaluable_global_reference Rawterm.raw_red_flag
)
"plugins/funind/invfun.ml" 680 23561 23566 "plugins/funind/invfun.ml" 683 23637 23647
type(
  Redexpr.red_expr
)
"plugins/funind/invfun.ml" 684 23648 23653 "plugins/funind/invfun.ml" 684 23648 23660
type(
  Tacticals.clause
)
ident(
  ext_ref Tacticals.onConcl
)
"plugins/funind/invfun.ml" 679 23549 23552 "plugins/funind/invfun.ml" 684 23648 23660
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 686 23666 23669 "plugins/funind/invfun.ml" 686 23666 23681
type(
  Term.constr list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_generalize
)
"plugins/funind/invfun.ml" 686 23666 23683 "plugins/funind/invfun.ml" 686 23666 23691
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 686 23666 23692 "plugins/funind/invfun.ml" 686 23666 23697
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 686 23666 23698 "plugins/funind/invfun.ml" 686 23666 23701
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 666 22982 23004 "plugins/funind/invfun.ml" 666 22982 23007
)
"plugins/funind/invfun.ml" 686 23666 23682 "plugins/funind/invfun.ml" 686 23666 23702
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 686 23666 23669 "plugins/funind/invfun.ml" 686 23666 23702
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 687 23704 23707 "plugins/funind/invfun.ml" 687 23704 23711
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.thin
)
"plugins/funind/invfun.ml" 687 23704 23712 "plugins/funind/invfun.ml" 687 23704 23715
type(
  Names.identifier list
)
ident(
  int_ref ids "plugins/funind/invfun.ml" 666 22982 23004 "plugins/funind/invfun.ml" 666 22982 23007
)
"plugins/funind/invfun.ml" 687 23704 23707 "plugins/funind/invfun.ml" 687 23704 23715
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 675 23370 23381 "plugins/funind/invfun.ml" 688 23716 23718
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 675 23370 23371 "plugins/funind/invfun.ml" 688 23716 23718
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 671 23247 23248 "plugins/funind/invfun.ml" 688 23716 23718
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 689 23719 23730 "plugins/funind/invfun.ml" 689 23719 23745
type(
  (Termops.occurrences * Names.evaluable_global_reference) list ->
  Proof_type.tactic
)
ident(
  ext_ref Tactics.unfold_in_concl
)
"plugins/funind/invfun.ml" 689 23719 23748 "plugins/funind/invfun.ml" 689 23719 23763
type(
  Termops.occurrences
)
ident(
  ext_ref Termops.all_occurrences
)
"plugins/funind/invfun.ml" 689 23719 23784 "plugins/funind/invfun.ml" 689 23719 23793
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/invfun.ml" 689 23719 23794 "plugins/funind/invfun.ml" 689 23719 23795
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/invfun.ml" 634 21688 21696 "plugins/funind/invfun.ml" 634 21688 21697
)
"plugins/funind/invfun.ml" 689 23719 23783 "plugins/funind/invfun.ml" 689 23719 23796
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 689 23719 23764 "plugins/funind/invfun.ml" 689 23719 23796
type(
  Names.evaluable_global_reference
)
"plugins/funind/invfun.ml" 689 23719 23747 "plugins/funind/invfun.ml" 689 23719 23797
type(
  Termops.occurrences * Names.evaluable_global_reference
)
"plugins/funind/invfun.ml" 689 23719 23746 "plugins/funind/invfun.ml" 689 23719 23798
type(
  (Termops.occurrences * Names.evaluable_global_reference) list
)
"plugins/funind/invfun.ml" 689 23719 23730 "plugins/funind/invfun.ml" 689 23719 23798
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 669 23165 23171 "plugins/funind/invfun.ml" 689 23719 23798
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 668 23055 23061 "plugins/funind/invfun.ml" 689 23719 23798
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 667 23019 23025 "plugins/funind/invfun.ml" 689 23719 23798
type(
  Tacmach.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 692 23849 23857 "plugins/funind/invfun.ml" 692 23849 23867
type(
  int ref
)
"plugins/funind/invfun.ml" 692 23849 23870 "plugins/funind/invfun.ml" 692 23849 23873
type(
  int -> int ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/invfun.ml" 692 23849 23874 "plugins/funind/invfun.ml" 692 23849 23875
type(
  int
)
"plugins/funind/invfun.ml" 692 23849 23870 "plugins/funind/invfun.ml" 692 23849 23875
type(
  int ref
)
"plugins/funind/invfun.ml" 693 23879 23887 "plugins/funind/invfun.ml" 693 23879 23904
type(
  int ref
)
"plugins/funind/invfun.ml" 693 23879 23907 "plugins/funind/invfun.ml" 693 23879 23910
type(
  int -> int ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/invfun.ml" 693 23879 23911 "plugins/funind/invfun.ml" 693 23879 23912
type(
  int
)
"plugins/funind/invfun.ml" 693 23879 23907 "plugins/funind/invfun.ml" 693 23879 23912
type(
  int ref
)
"plugins/funind/invfun.ml" 694 23916 23924 "plugins/funind/invfun.ml" 694 23916 23937
type(
  int ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 694 23916 23938 "plugins/funind/invfun.ml" 694 23916 23939
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 694 23916 23940 "plugins/funind/invfun.ml" 717 24777 24779
)
"plugins/funind/invfun.ml" 694 23916 23940 "plugins/funind/invfun.ml" 694 23916 23941
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 696 24014 24020 "plugins/funind/invfun.ml" 717 24777 24779
)
"plugins/funind/invfun.ml" 696 24014 24024 "plugins/funind/invfun.ml" 696 24014 24039
type(
  int
)
"plugins/funind/invfun.ml" 697 24042 24047 "plugins/funind/invfun.ml" 697 24042 24062
type(
  int
)
"plugins/funind/invfun.ml" 697 24042 24065 "plugins/funind/invfun.ml" 697 24042 24066
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 694 23916 23938 "plugins/funind/invfun.ml" 694 23916 23939
)
"plugins/funind/invfun.ml" 697 24042 24067 "plugins/funind/invfun.ml" 697 24042 24068
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/invfun.ml" 697 24042 24069 "plugins/funind/invfun.ml" 697 24042 24070
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 697 24042 24070 "plugins/funind/invfun.ml" 697 24042 24087
type(
  int ref
)
ident(
  int_ref min_constr_number "plugins/funind/invfun.ml" 693 23879 23887 "plugins/funind/invfun.ml" 693 23879 23904
)
"plugins/funind/invfun.ml" 697 24042 24069 "plugins/funind/invfun.ml" 697 24042 24087
type(
  int
)
"plugins/funind/invfun.ml" 697 24042 24065 "plugins/funind/invfun.ml" 697 24042 24087
type(
  int
)
"plugins/funind/invfun.ml" 698 24091 24096 "plugins/funind/invfun.ml" 698 24091 24102
type(
  int
)
"plugins/funind/invfun.ml" 698 24091 24105 "plugins/funind/invfun.ml" 698 24091 24117
type(
  Names.identifier array -> int
)
ident(
  ext_ref Array.length
)
"plugins/funind/invfun.ml" 698 24091 24119 "plugins/funind/invfun.ml" 698 24091 24125
type(
  Declarations.one_inductive_body array
)
ident(
  int_ref graphs "plugins/funind/invfun.ml" 623 21274 21303 "plugins/funind/invfun.ml" 623 21274 21309
)
"plugins/funind/invfun.ml" 698 24091 24127 "plugins/funind/invfun.ml" 698 24091 24128
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 698 24091 24128 "plugins/funind/invfun.ml" 698 24091 24138
type(
  int ref
)
ident(
  int_ref ind_number "plugins/funind/invfun.ml" 692 23849 23857 "plugins/funind/invfun.ml" 692 23849 23867
)
"plugins/funind/invfun.ml" 698 24091 24127 "plugins/funind/invfun.ml" 698 24091 24138
type(
  int
)
"plugins/funind/invfun.ml" 698 24091 24119 "plugins/funind/invfun.ml" 698 24091 24139
type(
  Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 698 24091 24118 "plugins/funind/invfun.ml" 698 24091 24168
type(
  Names.identifier array
)
"plugins/funind/invfun.ml" 698 24091 24105 "plugins/funind/invfun.ml" 698 24091 24168
type(
  int
)
"plugins/funind/invfun.ml" 699 24172 24176 "plugins/funind/invfun.ml" 699 24172 24191
type(
  int
)
ident(
  int_ref constructor_num "plugins/funind/invfun.ml" 697 24042 24047 "plugins/funind/invfun.ml" 697 24042 24062
)
"plugins/funind/invfun.ml" 699 24172 24192 "plugins/funind/invfun.ml" 699 24172 24194
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <= )
)
"plugins/funind/invfun.ml" 699 24172 24195 "plugins/funind/invfun.ml" 699 24172 24201
type(
  int
)
ident(
  int_ref length "plugins/funind/invfun.ml" 698 24091 24096 "plugins/funind/invfun.ml" 698 24091 24102
)
"plugins/funind/invfun.ml" 699 24172 24176 "plugins/funind/invfun.ml" 699 24172 24201
type(
  bool
)
"plugins/funind/invfun.ml" 700 24202 24208 "plugins/funind/invfun.ml" 700 24202 24209
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 700 24202 24209 "plugins/funind/invfun.ml" 700 24202 24219
type(
  int ref
)
ident(
  int_ref ind_number "plugins/funind/invfun.ml" 692 23849 23857 "plugins/funind/invfun.ml" 692 23849 23867
)
"plugins/funind/invfun.ml" 700 24202 24208 "plugins/funind/invfun.ml" 700 24202 24219
type(
  int
)
"plugins/funind/invfun.ml" 703 24235 24240 "plugins/funind/invfun.ml" 703 24235 24244
type(
  int ref -> unit
)
ident(
  ext_ref Pervasives.incr
)
"plugins/funind/invfun.ml" 703 24235 24245 "plugins/funind/invfun.ml" 703 24235 24255
type(
  int ref
)
ident(
  int_ref ind_number "plugins/funind/invfun.ml" 692 23849 23857 "plugins/funind/invfun.ml" 692 23849 23867
)
"plugins/funind/invfun.ml" 703 24235 24240 "plugins/funind/invfun.ml" 703 24235 24255
type(
  unit
)
"plugins/funind/invfun.ml" 704 24257 24262 "plugins/funind/invfun.ml" 704 24257 24279
type(
  int ref
)
ident(
  int_ref min_constr_number "plugins/funind/invfun.ml" 693 23879 23887 "plugins/funind/invfun.ml" 693 23879 23904
)
"plugins/funind/invfun.ml" 704 24257 24280 "plugins/funind/invfun.ml" 704 24257 24282
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/invfun.ml" 704 24257 24283 "plugins/funind/invfun.ml" 704 24257 24284
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 704 24257 24284 "plugins/funind/invfun.ml" 704 24257 24301
type(
  int ref
)
ident(
  int_ref min_constr_number "plugins/funind/invfun.ml" 693 23879 23887 "plugins/funind/invfun.ml" 693 23879 23904
)
"plugins/funind/invfun.ml" 704 24257 24283 "plugins/funind/invfun.ml" 704 24257 24301
type(
  int
)
"plugins/funind/invfun.ml" 704 24257 24302 "plugins/funind/invfun.ml" 704 24257 24303
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/invfun.ml" 704 24257 24304 "plugins/funind/invfun.ml" 704 24257 24310
type(
  int
)
ident(
  int_ref length "plugins/funind/invfun.ml" 698 24091 24096 "plugins/funind/invfun.ml" 698 24091 24102
)
"plugins/funind/invfun.ml" 704 24257 24283 "plugins/funind/invfun.ml" 704 24257 24310
type(
  int
)
"plugins/funind/invfun.ml" 704 24257 24262 "plugins/funind/invfun.ml" 704 24257 24310
type(
  unit
)
"plugins/funind/invfun.ml" 705 24312 24317 "plugins/funind/invfun.ml" 705 24312 24318
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/invfun.ml" 705 24312 24318 "plugins/funind/invfun.ml" 705 24312 24328
type(
  int ref
)
ident(
  int_ref ind_number "plugins/funind/invfun.ml" 692 23849 23857 "plugins/funind/invfun.ml" 692 23849 23867
)
"plugins/funind/invfun.ml" 705 24312 24317 "plugins/funind/invfun.ml" 705 24312 24328
type(
  int
)
"plugins/funind/invfun.ml" 704 24257 24262 "plugins/funind/invfun.ml" 705 24312 24328
type(
  int
)
"plugins/funind/invfun.ml" 702 24226 24229 "plugins/funind/invfun.ml" 706 24329 24335
type(
  int
)
"plugins/funind/invfun.ml" 699 24172 24173 "plugins/funind/invfun.ml" 706 24329 24335
type(
  int
)
"plugins/funind/invfun.ml" 698 24091 24092 "plugins/funind/invfun.ml" 706 24329 24335
type(
  int
)
"plugins/funind/invfun.ml" 697 24042 24043 "plugins/funind/invfun.ml" 706 24329 24335
type(
  int
)
"plugins/funind/invfun.ml" 708 24345 24355 "plugins/funind/invfun.ml" 708 24345 24371
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 708 24345 24374 "plugins/funind/invfun.ml" 708 24345 24382
type(
  Names.identifier list list -> int -> Names.identifier list
)
ident(
  ext_ref List.nth
)
"plugins/funind/invfun.ml" 708 24345 24383 "plugins/funind/invfun.ml" 708 24345 24393
type(
  Names.identifier list list
)
ident(
  int_ref intro_pats "plugins/funind/invfun.ml" 653 22624 22632 "plugins/funind/invfun.ml" 653 22624 22642
)
"plugins/funind/invfun.ml" 708 24345 24395 "plugins/funind/invfun.ml" 708 24345 24399
type(
  int -> int
)
ident(
  ext_ref Pervasives.pred
)
"plugins/funind/invfun.ml" 708 24345 24400 "plugins/funind/invfun.ml" 708 24345 24401
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 694 23916 23938 "plugins/funind/invfun.ml" 694 23916 23939
)
"plugins/funind/invfun.ml" 708 24345 24394 "plugins/funind/invfun.ml" 708 24345 24402
type(
  int
)
"plugins/funind/invfun.ml" 708 24345 24374 "plugins/funind/invfun.ml" 708 24345 24402
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 709 24406 24412 "plugins/funind/invfun.ml" 709 24406 24422
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 711 24472 24480 "plugins/funind/invfun.ml" 711 24472 24491
type(
  string -> Tacmach.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 711 24472 24492 "plugins/funind/invfun.ml" 711 24472 24505
type(
  string
)
"plugins/funind/invfun.ml" 711 24472 24507 "plugins/funind/invfun.ml" 711 24472 24518
type(
  int -> Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref rewrite_tac "plugins/funind/invfun.ml" 666 22982 22990 "plugins/funind/invfun.ml" 666 22982 23001
)
"plugins/funind/invfun.ml" 711 24472 24519 "plugins/funind/invfun.ml" 711 24472 24534
type(
  int
)
ident(
  int_ref this_ind_number "plugins/funind/invfun.ml" 696 24014 24024 "plugins/funind/invfun.ml" 696 24014 24039
)
"plugins/funind/invfun.ml" 711 24472 24535 "plugins/funind/invfun.ml" 711 24472 24551
type(
  Names.identifier list
)
ident(
  int_ref this_branche_ids "plugins/funind/invfun.ml" 708 24345 24355 "plugins/funind/invfun.ml" 708 24345 24371
)
"plugins/funind/invfun.ml" 711 24472 24506 "plugins/funind/invfun.ml" 711 24472 24552
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 711 24472 24480 "plugins/funind/invfun.ml" 711 24472 24552
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 713 24600 24608 "plugins/funind/invfun.ml" 713 24600 24619
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 713 24600 24620 "plugins/funind/invfun.ml" 713 24600 24641
type(
  string
)
"plugins/funind/invfun.ml" 713 24600 24642 "plugins/funind/invfun.ml" 713 24600 24661
type(
  Proof_type.tactic
)
ident(
  int_ref intros_with_rewrite "plugins/funind/invfun.ml" 483 16920 16929 "plugins/funind/invfun.ml" 483 16920 16948
)
"plugins/funind/invfun.ml" 713 24600 24608 "plugins/funind/invfun.ml" 713 24600 24661
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 715 24701 24709 "plugins/funind/invfun.ml" 715 24701 24720
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 715 24701 24721 "plugins/funind/invfun.ml" 715 24701 24734
type(
  string
)
"plugins/funind/invfun.ml" 715 24701 24735 "plugins/funind/invfun.ml" 715 24701 24768
type(
  Proof_type.tactic
)
ident(
  int_ref reflexivity_with_destruct_cases "plugins/funind/invfun.ml" 551 18673 18681 "plugins/funind/invfun.ml" 551 18673 18712
)
"plugins/funind/invfun.ml" 715 24701 24709 "plugins/funind/invfun.ml" 715 24701 24768
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 709 24406 24422 "plugins/funind/invfun.ml" 716 24769 24776
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 717 24777 24778 "plugins/funind/invfun.ml" 717 24777 24779
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 694 23916 23940 "plugins/funind/invfun.ml" 694 23916 23941
)
"plugins/funind/invfun.ml" 709 24406 24412 "plugins/funind/invfun.ml" 717 24777 24779
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 708 24345 24351 "plugins/funind/invfun.ml" 717 24777 24779
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 696 24014 24020 "plugins/funind/invfun.ml" 717 24777 24779
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 719 24787 24795 "plugins/funind/invfun.ml" 719 24787 24807
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 719 24787 24810 "plugins/funind/invfun.ml" 719 24787 24813
type(
  Names.identifier list * Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 719 24787 24815 "plugins/funind/invfun.ml" 719 24787 24824
type(
  int ->
  Names.identifier list -> Names.identifier list * Names.identifier list
)
ident(
  ext_ref Util.list_chop
)
"plugins/funind/invfun.ml" 719 24787 24825 "plugins/funind/invfun.ml" 719 24787 24836
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_infos "plugins/funind/invfun.ml" 637 21816 21824 "plugins/funind/invfun.ml" 637 21816 21835
)
"plugins/funind/invfun.ml" 719 24787 24825 "plugins/funind/invfun.ml" 719 24787 24844
type(
  int
)
"plugins/funind/invfun.ml" 719 24787 24845 "plugins/funind/invfun.ml" 719 24787 24855
type(
  Names.identifier list
)
ident(
  int_ref args_names "plugins/funind/invfun.ml" 642 22043 22051 "plugins/funind/invfun.ml" 642 22043 22061
)
"plugins/funind/invfun.ml" 719 24787 24814 "plugins/funind/invfun.ml" 719 24787 24856
call(
  stack
)
type(
  Names.identifier list * Names.identifier list
)
"plugins/funind/invfun.ml" 719 24787 24810 "plugins/funind/invfun.ml" 719 24787 24856
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 720 24860 24868 "plugins/funind/invfun.ml" 720 24860 24874
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 720 24860 24877 "plugins/funind/invfun.ml" 720 24860 24885
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 720 24860 24886 "plugins/funind/invfun.ml" 720 24860 24891
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 720 24860 24892 "plugins/funind/invfun.ml" 720 24860 24904
type(
  Names.identifier list
)
ident(
  int_ref params_names "plugins/funind/invfun.ml" 719 24787 24795 "plugins/funind/invfun.ml" 719 24787 24807
)
"plugins/funind/invfun.ml" 720 24860 24877 "plugins/funind/invfun.ml" 720 24860 24904
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 721 24908 24912 "plugins/funind/invfun.ml" 721 24908 24922
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 722 24923 24931 "plugins/funind/invfun.ml" 722 24923 24937
type(
  (Names.identifier -> Proof_type.tactic) ->
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/invfun.ml" 722 24923 24938 "plugins/funind/invfun.ml" 722 24923 24945
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 722 24923 24947 "plugins/funind/invfun.ml" 722 24923 24957
type(
  Names.identifier list
)
ident(
  int_ref args_names "plugins/funind/invfun.ml" 642 22043 22051 "plugins/funind/invfun.ml" 642 22043 22061
)
"plugins/funind/invfun.ml" 722 24923 24957 "plugins/funind/invfun.ml" 722 24923 24958
type(
  Names.identifier list -> Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/invfun.ml" 722 24923 24959 "plugins/funind/invfun.ml" 722 24923 24962
type(
  Names.identifier
)
ident(
  int_ref res "plugins/funind/invfun.ml" 645 22239 22247 "plugins/funind/invfun.ml" 645 22239 22250
)
"plugins/funind/invfun.ml" 722 24923 24963 "plugins/funind/invfun.ml" 722 24923 24967
type(
  Names.identifier
)
ident(
  int_ref hres "plugins/funind/invfun.ml" 645 22239 22251 "plugins/funind/invfun.ml" 645 22239 22255
)
"plugins/funind/invfun.ml" 722 24923 24958 "plugins/funind/invfun.ml" 722 24923 24968
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 722 24923 24946 "plugins/funind/invfun.ml" 722 24923 24969
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 722 24923 24931 "plugins/funind/invfun.ml" 722 24923 24969
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 723 24971 24972 "plugins/funind/invfun.ml" 723 24971 24983
type(
  string -> Tacmach.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 723 24971 24984 "plugins/funind/invfun.ml" 723 24971 24998
type(
  string
)
"plugins/funind/invfun.ml" 724 24999 25001 "plugins/funind/invfun.ml" 724 24999 25013
type(
  Term.constr list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_generalize
)
"plugins/funind/invfun.ml" 724 24999 25015 "plugins/funind/invfun.ml" 724 24999 25020
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/invfun.ml" 724 24999 25021 "plugins/funind/invfun.ml" 724 24999 25028
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/invfun.ml" 724 24999 25029 "plugins/funind/invfun.ml" 724 24999 25044
type(
  Term.constr
)
ident(
  int_ref graph_principle "plugins/funind/invfun.ml" 635 21713 21721 "plugins/funind/invfun.ml" 635 21713 21736
)
"plugins/funind/invfun.ml" 724 24999 25045 "plugins/funind/invfun.ml" 724 24999 25051
type(
  Term.constr list
)
ident(
  int_ref params "plugins/funind/invfun.ml" 720 24860 24868 "plugins/funind/invfun.ml" 720 24860 24874
)
"plugins/funind/invfun.ml" 724 24999 25028 "plugins/funind/invfun.ml" 724 24999 25052
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 724 24999 25021 "plugins/funind/invfun.ml" 724 24999 25052
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 724 24999 25053 "plugins/funind/invfun.ml" 724 24999 25062
type(
  (Term.constr -> Term.constr) -> Term.constr array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/invfun.ml" 724 24999 25068 "plugins/funind/invfun.ml" 724 24999 25069
type(
  Term.constr
)
ident(
  def c "plugins/funind/invfun.ml" 724 24999 25073 "plugins/funind/invfun.ml" 724 24999 25090
)
"plugins/funind/invfun.ml" 724 24999 25073 "plugins/funind/invfun.ml" 724 24999 25080
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/invfun.ml" 724 24999 25081 "plugins/funind/invfun.ml" 724 24999 25082
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/invfun.ml" 724 24999 25068 "plugins/funind/invfun.ml" 724 24999 25069
)
"plugins/funind/invfun.ml" 724 24999 25083 "plugins/funind/invfun.ml" 724 24999 25089
type(
  Term.constr list
)
ident(
  int_ref params "plugins/funind/invfun.ml" 720 24860 24868 "plugins/funind/invfun.ml" 720 24860 24874
)
"plugins/funind/invfun.ml" 724 24999 25080 "plugins/funind/invfun.ml" 724 24999 25090
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 724 24999 25073 "plugins/funind/invfun.ml" 724 24999 25090
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 724 24999 25063 "plugins/funind/invfun.ml" 724 24999 25091
type(
  Term.constr -> Term.constr
)
"plugins/funind/invfun.ml" 724 24999 25092 "plugins/funind/invfun.ml" 724 24999 25098
type(
  Term.constr array
)
ident(
  int_ref lemmas "plugins/funind/invfun.ml" 628 21469 21477 "plugins/funind/invfun.ml" 628 21469 21483
)
"plugins/funind/invfun.ml" 724 24999 25053 "plugins/funind/invfun.ml" 724 24999 25098
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 724 24999 25020 "plugins/funind/invfun.ml" 724 24999 25099
type(
  Term.constr * Term.constr array
)
"plugins/funind/invfun.ml" 724 24999 25015 "plugins/funind/invfun.ml" 724 24999 25099
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 724 24999 25014 "plugins/funind/invfun.ml" 724 24999 25100
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 724 24999 25000 "plugins/funind/invfun.ml" 724 24999 25101
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 723 24971 24972 "plugins/funind/invfun.ml" 724 24999 25101
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 725 25103 25104 "plugins/funind/invfun.ml" 725 25103 25111
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 725 25103 25112 "plugins/funind/invfun.ml" 725 25103 25130
type(
  Names.identifier
)
ident(
  int_ref graph_principle_id "plugins/funind/invfun.ml" 645 22239 22256 "plugins/funind/invfun.ml" 645 22239 22274
)
"plugins/funind/invfun.ml" 725 25103 25104 "plugins/funind/invfun.ml" 725 25103 25130
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 726 25132 25133 "plugins/funind/invfun.ml" 726 25132 25144
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 726 25132 25145 "plugins/funind/invfun.ml" 726 25132 25147
type(
  string
)
"plugins/funind/invfun.ml" 726 25132 25149 "plugins/funind/invfun.ml" 726 25132 25158
type(
  Proof_type.tactic -> (int -> Proof_type.tactic) -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN_i
)
"plugins/funind/invfun.ml" 727 25159 25163 "plugins/funind/invfun.ml" 727 25159 25174
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 727 25159 25175 "plugins/funind/invfun.ml" 727 25159 25181
type(
  string
)
"plugins/funind/invfun.ml" 727 25159 25184 "plugins/funind/invfun.ml" 727 25159 25188
type(
  Tacexpr.evars_flag ->
  Term.constr Rawterm.with_bindings ->
  Term.constr Rawterm.with_bindings option -> Proof_type.tactic
)
ident(
  ext_ref Tactics.elim
)
"plugins/funind/invfun.ml" 727 25159 25189 "plugins/funind/invfun.ml" 727 25159 25194
type(
  Tacexpr.evars_flag
)
"plugins/funind/invfun.ml" 727 25159 25196 "plugins/funind/invfun.ml" 727 25159 25201
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 727 25159 25202 "plugins/funind/invfun.ml" 727 25159 25206
type(
  Names.identifier
)
ident(
  int_ref hres "plugins/funind/invfun.ml" 645 22239 22251 "plugins/funind/invfun.ml" 645 22239 22255
)
"plugins/funind/invfun.ml" 727 25159 25196 "plugins/funind/invfun.ml" 727 25159 25206
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 727 25159 25207 "plugins/funind/invfun.ml" 727 25159 25225
type(
  Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 727 25159 25195 "plugins/funind/invfun.ml" 727 25159 25226
type(
  Term.constr Rawterm.with_bindings
)
"plugins/funind/invfun.ml" 727 25159 25234 "plugins/funind/invfun.ml" 727 25159 25239
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 727 25159 25240 "plugins/funind/invfun.ml" 727 25159 25258
type(
  Names.identifier
)
ident(
  int_ref graph_principle_id "plugins/funind/invfun.ml" 645 22239 22256 "plugins/funind/invfun.ml" 645 22239 22274
)
"plugins/funind/invfun.ml" 727 25159 25234 "plugins/funind/invfun.ml" 727 25159 25258
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 727 25159 25259 "plugins/funind/invfun.ml" 727 25159 25277
type(
  Term.constr Rawterm.bindings
)
"plugins/funind/invfun.ml" 727 25159 25233 "plugins/funind/invfun.ml" 727 25159 25278
type(
  Term.constr Rawterm.with_bindings
)
"plugins/funind/invfun.ml" 727 25159 25227 "plugins/funind/invfun.ml" 727 25159 25279
type(
  Term.constr Rawterm.with_bindings option
)
"plugins/funind/invfun.ml" 727 25159 25182 "plugins/funind/invfun.ml" 727 25159 25281
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 727 25159 25162 "plugins/funind/invfun.ml" 727 25159 25282
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 728 25283 25291 "plugins/funind/invfun.ml" 728 25283 25292
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 728 25283 25293 "plugins/funind/invfun.ml" 728 25283 25345
)
"plugins/funind/invfun.ml" 728 25283 25293 "plugins/funind/invfun.ml" 728 25283 25294
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 728 25283 25298 "plugins/funind/invfun.ml" 728 25283 25345
)
"plugins/funind/invfun.ml" 728 25283 25298 "plugins/funind/invfun.ml" 728 25283 25309
type(
  string ->
  (Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 728 25283 25310 "plugins/funind/invfun.ml" 728 25283 25325
type(
  string
)
"plugins/funind/invfun.ml" 728 25283 25327 "plugins/funind/invfun.ml" 728 25283 25340
type(
  int ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref prove_branche "plugins/funind/invfun.ml" 694 23916 23924 "plugins/funind/invfun.ml" 694 23916 23937
)
"plugins/funind/invfun.ml" 728 25283 25341 "plugins/funind/invfun.ml" 728 25283 25342
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 728 25283 25291 "plugins/funind/invfun.ml" 728 25283 25292
)
"plugins/funind/invfun.ml" 728 25283 25326 "plugins/funind/invfun.ml" 728 25283 25343
call(
  stack
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 728 25283 25344 "plugins/funind/invfun.ml" 728 25283 25345
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 728 25283 25293 "plugins/funind/invfun.ml" 728 25283 25294
)
"plugins/funind/invfun.ml" 728 25283 25298 "plugins/funind/invfun.ml" 728 25283 25345
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 728 25283 25286 "plugins/funind/invfun.ml" 728 25283 25347
type(
  int -> Proof_type.tactic
)
"plugins/funind/invfun.ml" 726 25132 25148 "plugins/funind/invfun.ml" 728 25283 25348
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 726 25132 25133 "plugins/funind/invfun.ml" 728 25283 25348
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 722 24923 24929 "plugins/funind/invfun.ml" 729 25349 25356
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 730 25357 25363 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 624 21350 21356 "plugins/funind/invfun.ml" 624 21350 21357
)
"plugins/funind/invfun.ml" 721 24908 24912 "plugins/funind/invfun.ml" 730 25357 25364
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 720 24860 24864 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 719 24787 24791 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 694 23916 23920 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 693 23879 23883 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 692 23849 23853 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 666 22982 22986 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 653 22624 22628 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 652 22572 22576 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 650 22429 22433 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 645 22239 22243 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 643 22119 22123 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 642 22043 22047 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 641 21991 21995 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 637 21816 21820 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 636 21763 21767 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 635 21713 21717 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 634 21688 21692 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 628 21469 21473 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 624 21350 21352 "plugins/funind/invfun.ml" 730 25357 25364
type(
  Tacmach.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 735 25369 25373 "plugins/funind/invfun.ml" 735 25369 25380
type(
  unit -> unit
)
ident(
  def do_save "plugins/funind/invfun.ml" 745 25722 25722 --
)
"plugins/funind/invfun.ml" 735 25369 25381 "plugins/funind/invfun.ml" 735 25369 25383
type(
  unit
)
"plugins/funind/invfun.ml" 735 25369 25386 "plugins/funind/invfun.ml" 735 25369 25403
type(
  bool -> unit
)
ident(
  ext_ref Lemmas.save_named
)
"plugins/funind/invfun.ml" 735 25369 25404 "plugins/funind/invfun.ml" 735 25369 25409
type(
  bool
)
"plugins/funind/invfun.ml" 735 25369 25386 "plugins/funind/invfun.ml" 735 25369 25409
call(
  tail
)
type(
  unit
)
"plugins/funind/invfun.ml" 745 25722 25726 "plugins/funind/invfun.ml" 745 25722 25744
type(
  ((Names.constant * Rawterm.rawsort) list -> Entries.definition_entry list) ->
  (bool ->
   Term.constr ->
   (Term.constr * Term.constr Rawterm.bindings) option ->
   (Util.loc * Genarg.intro_pattern_expr) option ->
   Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Names.constant list -> Names.inductive list -> unit
)
ident(
  def derive_correctness "plugins/funind/invfun.ml" 881 30467 30467 --
)
"plugins/funind/invfun.ml" 745 25722 25745 "plugins/funind/invfun.ml" 745 25722 25756
type(
  (Names.constant * Rawterm.rawsort) list -> Entries.definition_entry list
)
ident(
  def make_scheme "plugins/funind/invfun.ml" 745 25722 25757 "plugins/funind/invfun.ml" 867 30036 30047
)
"plugins/funind/invfun.ml" 745 25722 25757 "plugins/funind/invfun.ml" 745 25722 25777
type(
  bool ->
  Term.constr ->
  (Term.constr * Term.constr Rawterm.bindings) option ->
  (Util.loc * Genarg.intro_pattern_expr) option ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def functional_induction "plugins/funind/invfun.ml" 745 25722 25778 "plugins/funind/invfun.ml" 867 30036 30047
)
"plugins/funind/invfun.ml" 745 25722 25779 "plugins/funind/invfun.ml" 745 25722 25783
type(
  Names.constant list
)
ident(
  def funs "plugins/funind/invfun.ml" 745 25722 25800 "plugins/funind/invfun.ml" 867 30036 30047
)
"plugins/funind/invfun.ml" 745 25722 25801 "plugins/funind/invfun.ml" 745 25722 25807
type(
  Names.inductive list
)
ident(
  def graphs "plugins/funind/invfun.ml" 746 25826 25828 "plugins/funind/invfun.ml" 867 30036 30047
)
"plugins/funind/invfun.ml" 746 25826 25832 "plugins/funind/invfun.ml" 746 25826 25836
type(
  Names.constant array
)
"plugins/funind/invfun.ml" 746 25826 25839 "plugins/funind/invfun.ml" 746 25826 25852
type(
  Names.constant list -> Names.constant array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/invfun.ml" 746 25826 25853 "plugins/funind/invfun.ml" 746 25826 25857
type(
  Names.constant list
)
ident(
  int_ref funs "plugins/funind/invfun.ml" 745 25722 25779 "plugins/funind/invfun.ml" 745 25722 25783
)
"plugins/funind/invfun.ml" 746 25826 25839 "plugins/funind/invfun.ml" 746 25826 25857
call(
  stack
)
type(
  Names.constant array
)
"plugins/funind/invfun.ml" 746 25826 25862 "plugins/funind/invfun.ml" 746 25826 25868
type(
  Names.inductive array
)
"plugins/funind/invfun.ml" 746 25826 25871 "plugins/funind/invfun.ml" 746 25826 25884
type(
  Names.inductive list -> Names.inductive array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/invfun.ml" 746 25826 25885 "plugins/funind/invfun.ml" 746 25826 25891
type(
  Names.inductive list
)
ident(
  int_ref graphs "plugins/funind/invfun.ml" 745 25722 25801 "plugins/funind/invfun.ml" 745 25722 25807
)
"plugins/funind/invfun.ml" 746 25826 25871 "plugins/funind/invfun.ml" 746 25826 25891
call(
  stack
)
type(
  Names.inductive array
)
"plugins/funind/invfun.ml" 747 25895 25901 "plugins/funind/invfun.ml" 747 25895 25912
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 747 25895 25915 "plugins/funind/invfun.ml" 747 25895 25924
type(
  (Names.constant -> Term.constr) ->
  Names.constant array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/invfun.ml" 747 25895 25925 "plugins/funind/invfun.ml" 747 25895 25932
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/invfun.ml" 747 25895 25933 "plugins/funind/invfun.ml" 747 25895 25937
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/invfun.ml" 746 25826 25832 "plugins/funind/invfun.ml" 746 25826 25836
)
"plugins/funind/invfun.ml" 747 25895 25915 "plugins/funind/invfun.ml" 747 25895 25937
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 749 25948 25956 "plugins/funind/invfun.ml" 749 25948 25969
type(
  Term.constr array
)
ident(
  def graphs_constr "plugins/funind/invfun.ml" 750 25998 26002 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 749 25948 25972 "plugins/funind/invfun.ml" 749 25948 25981
type(
  (Names.inductive -> Term.constr) ->
  Names.inductive array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/invfun.ml" 749 25948 25982 "plugins/funind/invfun.ml" 749 25948 25987
type(
  Names.inductive -> Term.constr
)
ident(
  ext_ref Term.mkInd
)
"plugins/funind/invfun.ml" 749 25948 25988 "plugins/funind/invfun.ml" 749 25948 25994
type(
  Names.inductive array
)
ident(
  int_ref graphs "plugins/funind/invfun.ml" 746 25826 25862 "plugins/funind/invfun.ml" 746 25826 25868
)
"plugins/funind/invfun.ml" 749 25948 25972 "plugins/funind/invfun.ml" 749 25948 25994
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 750 25998 26006 "plugins/funind/invfun.ml" 750 25998 26024
type(
  (Term.types * (Term.rel_declaration list * Term.types)) array
)
ident(
  def lemmas_types_infos "plugins/funind/invfun.ml" 765 26525 26529 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 751 26027 26033 "plugins/funind/invfun.ml" 751 26027 26050
type(
  (int ->
   Term.constr ->
   Term.constr -> Term.types * (Term.rel_declaration list * Term.types)) ->
  Term.constr array ->
  Term.constr array ->
  (Term.types * (Term.rel_declaration list * Term.types)) array
)
ident(
  ext_ref Util.array_map2_i
)
"plugins/funind/invfun.ml" 752 26051 26057 "plugins/funind/invfun.ml" 752 26051 26058
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 752 26051 26059 "plugins/funind/invfun.ml" 760 26459 26486
)
"plugins/funind/invfun.ml" 752 26051 26059 "plugins/funind/invfun.ml" 752 26051 26067
type(
  Term.constr
)
ident(
  def f_constr "plugins/funind/invfun.ml" 752 26051 26068 "plugins/funind/invfun.ml" 760 26459 26486
)
"plugins/funind/invfun.ml" 752 26051 26068 "plugins/funind/invfun.ml" 752 26051 26073
type(
  Term.constr
)
ident(
  def graph "plugins/funind/invfun.ml" 753 26077 26081 "plugins/funind/invfun.ml" 760 26459 26486
)
"plugins/funind/invfun.ml" 753 26077 26085 "plugins/funind/invfun.ml" 753 26077 26095
type(
  Names.constant
)
"plugins/funind/invfun.ml" 753 26077 26098 "plugins/funind/invfun.ml" 753 26077 26107
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/invfun.ml" 753 26077 26108 "plugins/funind/invfun.ml" 753 26077 26116
type(
  Term.constr
)
ident(
  int_ref f_constr "plugins/funind/invfun.ml" 752 26051 26059 "plugins/funind/invfun.ml" 752 26051 26067
)
"plugins/funind/invfun.ml" 753 26077 26098 "plugins/funind/invfun.ml" 753 26077 26116
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 754 26120 26129 "plugins/funind/invfun.ml" 754 26120 26147
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 754 26120 26148 "plugins/funind/invfun.ml" 754 26120 26167
type(
  Term.constr
)
"plugins/funind/invfun.ml" 754 26120 26128 "plugins/funind/invfun.ml" 754 26120 26168
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 754 26120 26128 "plugins/funind/invfun.ml" 754 26120 26181
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 755 26184 26190 "plugins/funind/invfun.ml" 755 26184 26203
type(
  bool ->
  Names.constant ->
  Term.constr -> int -> Term.rel_declaration list * Term.constr
)
ident(
  int_ref generate_type "plugins/funind/invfun.ml" 103 3258 3262 "plugins/funind/invfun.ml" 103 3258 3275
)
"plugins/funind/invfun.ml" 755 26184 26204 "plugins/funind/invfun.ml" 755 26184 26209
type(
  bool
)
"plugins/funind/invfun.ml" 755 26184 26210 "plugins/funind/invfun.ml" 755 26184 26220
type(
  Names.constant
)
ident(
  int_ref const_of_f "plugins/funind/invfun.ml" 753 26077 26085 "plugins/funind/invfun.ml" 753 26077 26095
)
"plugins/funind/invfun.ml" 755 26184 26221 "plugins/funind/invfun.ml" 755 26184 26226
type(
  Term.constr
)
ident(
  int_ref graph "plugins/funind/invfun.ml" 752 26051 26068 "plugins/funind/invfun.ml" 752 26051 26073
)
"plugins/funind/invfun.ml" 755 26184 26227 "plugins/funind/invfun.ml" 755 26184 26228
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 752 26051 26057 "plugins/funind/invfun.ml" 752 26051 26058
)
"plugins/funind/invfun.ml" 755 26184 26190 "plugins/funind/invfun.ml" 755 26184 26228
call(
  stack
)
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 757 26236 26244 "plugins/funind/invfun.ml" 757 26236 26257
type(
  Term.types
)
"plugins/funind/invfun.ml" 757 26236 26260 "plugins/funind/invfun.ml" 757 26236 26286
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/invfun.ml" 757 26236 26293 "plugins/funind/invfun.ml" 757 26236 26312
type(
  Term.types
)
ident(
  int_ref type_of_lemma_concl "plugins/funind/invfun.ml" 754 26120 26148 "plugins/funind/invfun.ml" 754 26120 26167
)
"plugins/funind/invfun.ml" 757 26236 26313 "plugins/funind/invfun.ml" 757 26236 26331
type(
  Term.rel_context
)
ident(
  int_ref type_of_lemma_ctxt "plugins/funind/invfun.ml" 754 26120 26129 "plugins/funind/invfun.ml" 754 26120 26147
)
"plugins/funind/invfun.ml" 757 26236 26260 "plugins/funind/invfun.ml" 757 26236 26331
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 758 26335 26343 "plugins/funind/invfun.ml" 758 26335 26356
type(
  Term.constr
)
"plugins/funind/invfun.ml" 758 26335 26359 "plugins/funind/invfun.ml" 758 26335 26366
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_zeta "plugins/funind/invfun.ml" 78 2228 2232 "plugins/funind/invfun.ml" 78 2228 2239
)
"plugins/funind/invfun.ml" 758 26335 26367 "plugins/funind/invfun.ml" 758 26335 26380
type(
  Term.types
)
ident(
  int_ref type_of_lemma "plugins/funind/invfun.ml" 757 26236 26244 "plugins/funind/invfun.ml" 757 26236 26257
)
"plugins/funind/invfun.ml" 758 26335 26359 "plugins/funind/invfun.ml" 758 26335 26380
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 759 26384 26388 "plugins/funind/invfun.ml" 759 26384 26395
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/invfun.ml" 51 1570 1574 "plugins/funind/invfun.ml" 51 1570 1581
)
"plugins/funind/invfun.ml" 759 26384 26397 "plugins/funind/invfun.ml" 759 26384 26400
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 759 26384 26401 "plugins/funind/invfun.ml" 759 26384 26420
type(
  string
)
"plugins/funind/invfun.ml" 759 26384 26397 "plugins/funind/invfun.ml" 759 26384 26420
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 759 26384 26421 "plugins/funind/invfun.ml" 759 26384 26423
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 759 26384 26424 "plugins/funind/invfun.ml" 759 26384 26442
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/invfun.ml" 759 26384 26443 "plugins/funind/invfun.ml" 759 26384 26456
type(
  Term.constr
)
ident(
  int_ref type_of_lemma "plugins/funind/invfun.ml" 758 26335 26343 "plugins/funind/invfun.ml" 758 26335 26356
)
"plugins/funind/invfun.ml" 759 26384 26424 "plugins/funind/invfun.ml" 759 26384 26456
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 759 26384 26396 "plugins/funind/invfun.ml" 759 26384 26457
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 759 26384 26388 "plugins/funind/invfun.ml" 759 26384 26457
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 760 26459 26463 "plugins/funind/invfun.ml" 760 26459 26476
type(
  Term.types
)
ident(
  int_ref type_of_lemma "plugins/funind/invfun.ml" 758 26335 26343 "plugins/funind/invfun.ml" 758 26335 26356
)
"plugins/funind/invfun.ml" 760 26459 26477 "plugins/funind/invfun.ml" 760 26459 26486
type(
  Term.rel_declaration list * Term.types
)
ident(
  int_ref type_info "plugins/funind/invfun.ml" 754 26120 26128 "plugins/funind/invfun.ml" 754 26120 26181
)
"plugins/funind/invfun.ml" 760 26459 26463 "plugins/funind/invfun.ml" 760 26459 26486
type(
  Term.types * (Term.rel_declaration list * Term.types)
)
"plugins/funind/invfun.ml" 759 26384 26388 "plugins/funind/invfun.ml" 760 26459 26486
type(
  Term.types * (Term.rel_declaration list * Term.types)
)
"plugins/funind/invfun.ml" 758 26335 26339 "plugins/funind/invfun.ml" 760 26459 26486
type(
  Term.types * (Term.rel_declaration list * Term.types)
)
"plugins/funind/invfun.ml" 757 26236 26240 "plugins/funind/invfun.ml" 760 26459 26486
type(
  Term.types * (Term.rel_declaration list * Term.types)
)
"plugins/funind/invfun.ml" 754 26120 26124 "plugins/funind/invfun.ml" 760 26459 26486
type(
  Term.types * (Term.rel_declaration list * Term.types)
)
"plugins/funind/invfun.ml" 753 26077 26081 "plugins/funind/invfun.ml" 760 26459 26486
type(
  Term.types * (Term.rel_declaration list * Term.types)
)
"plugins/funind/invfun.ml" 752 26051 26052 "plugins/funind/invfun.ml" 761 26487 26489
type(
  int ->
  Term.constr ->
  Term.constr -> Term.types * (Term.rel_declaration list * Term.types)
)
"plugins/funind/invfun.ml" 762 26490 26491 "plugins/funind/invfun.ml" 762 26490 26502
type(
  Term.constr array
)
ident(
  int_ref funs_constr "plugins/funind/invfun.ml" 747 25895 25901 "plugins/funind/invfun.ml" 747 25895 25912
)
"plugins/funind/invfun.ml" 763 26503 26504 "plugins/funind/invfun.ml" 763 26503 26517
type(
  Term.constr array
)
ident(
  int_ref graphs_constr "plugins/funind/invfun.ml" 749 25948 25956 "plugins/funind/invfun.ml" 749 25948 25969
)
"plugins/funind/invfun.ml" 751 26027 26033 "plugins/funind/invfun.ml" 763 26503 26517
call(
  stack
)
type(
  (Term.types * (Term.rel_declaration list * Term.types)) array
)
"plugins/funind/invfun.ml" 765 26525 26533 "plugins/funind/invfun.ml" 765 26525 26540
type(
  (Term.constr * Term.types) array
)
ident(
  def schemes "plugins/funind/invfun.ml" 781 27111 27115 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 770 26737 26741 "plugins/funind/invfun.ml" 770 26737 26753
type(
  Term.constr array -> int
)
ident(
  ext_ref Array.length
)
"plugins/funind/invfun.ml" 770 26737 26754 "plugins/funind/invfun.ml" 770 26737 26765
type(
  Term.constr array
)
ident(
  int_ref funs_constr "plugins/funind/invfun.ml" 747 25895 25901 "plugins/funind/invfun.ml" 747 25895 25912
)
"plugins/funind/invfun.ml" 770 26737 26741 "plugins/funind/invfun.ml" 770 26737 26765
type(
  int
)
"plugins/funind/invfun.ml" 770 26737 26766 "plugins/funind/invfun.ml" 770 26737 26768
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"plugins/funind/invfun.ml" 770 26737 26769 "plugins/funind/invfun.ml" 770 26737 26770
type(
  int
)
"plugins/funind/invfun.ml" 770 26737 26741 "plugins/funind/invfun.ml" 770 26737 26770
type(
  bool
)
"plugins/funind/invfun.ml" 770 26737 26776 "plugins/funind/invfun.ml" 770 26737 26781
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/invfun.ml" 770 26737 26782 "plugins/funind/invfun.ml" 770 26737 26791
type(
  exn
)
"plugins/funind/invfun.ml" 770 26737 26776 "plugins/funind/invfun.ml" 770 26737 26791
type(
  unit
)
"plugins/funind/invfun.ml" 770 26737 26738 "plugins/funind/invfun.ml" 770 26737 26791
type(
  unit
)
"plugins/funind/invfun.ml" 771 26793 26797 "plugins/funind/invfun.ml" 771 26793 26821
type(
  Term.constr -> Term.constr * Term.types
)
ident(
  int_ref find_induction_principle "plugins/funind/invfun.ml" 173 6089 6093 "plugins/funind/invfun.ml" 173 6089 6117
)
"plugins/funind/invfun.ml" 771 26793 26822 "plugins/funind/invfun.ml" 771 26793 26833
type(
  Term.constr array
)
ident(
  int_ref funs_constr "plugins/funind/invfun.ml" 747 25895 25901 "plugins/funind/invfun.ml" 747 25895 25912
)
"plugins/funind/invfun.ml" 771 26793 26835 "plugins/funind/invfun.ml" 771 26793 26836
type(
  int
)
"plugins/funind/invfun.ml" 771 26793 26822 "plugins/funind/invfun.ml" 771 26793 26837
type(
  Term.constr
)
"plugins/funind/invfun.ml" 771 26793 26797 "plugins/funind/invfun.ml" 771 26793 26837
call(
  stack
)
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 771 26793 26794 "plugins/funind/invfun.ml" 771 26793 26840
type(
  (Term.constr * Term.types) array
)
"plugins/funind/invfun.ml" 770 26737 26738 "plugins/funind/invfun.ml" 771 26793 26840
type(
  (Term.constr * Term.types) array
)
"plugins/funind/invfun.ml" 772 26841 26852 "plugins/funind/invfun.ml" 772 26841 26861
type(
  exn
)
"plugins/funind/invfun.ml" 773 26865 26868 "plugins/funind/invfun.ml" 773 26865 26881
type(
  (Term.constr * Term.types) list -> (Term.constr * Term.types) array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/invfun.ml" 774 26882 26888 "plugins/funind/invfun.ml" 774 26882 26896
type(
  (Entries.definition_entry -> Term.constr * Term.types) ->
  Entries.definition_entry list -> (Term.constr * Term.types) list
)
ident(
  ext_ref List.map
)
"plugins/funind/invfun.ml" 775 26897 26910 "plugins/funind/invfun.ml" 775 26897 26915
type(
  Entries.definition_entry
)
ident(
  def entry "plugins/funind/invfun.ml" 776 26919 26923 "plugins/funind/invfun.ml" 776 26919 26999
)
"plugins/funind/invfun.ml" 776 26919 26924 "plugins/funind/invfun.ml" 776 26919 26929
type(
  Entries.definition_entry
)
ident(
  int_ref entry "plugins/funind/invfun.ml" 775 26897 26910 "plugins/funind/invfun.ml" 775 26897 26915
)
"plugins/funind/invfun.ml" 776 26919 26924 "plugins/funind/invfun.ml" 776 26919 26954
type(
  Term.constr
)
"plugins/funind/invfun.ml" 776 26919 26956 "plugins/funind/invfun.ml" 776 26919 26966
type(
  Term.types option -> Term.types
)
ident(
  ext_ref Option.get
)
"plugins/funind/invfun.ml" 776 26919 26967 "plugins/funind/invfun.ml" 776 26919 26972
type(
  Entries.definition_entry
)
ident(
  int_ref entry "plugins/funind/invfun.ml" 775 26897 26910 "plugins/funind/invfun.ml" 775 26897 26915
)
"plugins/funind/invfun.ml" 776 26919 26967 "plugins/funind/invfun.ml" 776 26919 26997
type(
  Term.types option
)
"plugins/funind/invfun.ml" 776 26919 26956 "plugins/funind/invfun.ml" 776 26919 26997
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 776 26919 26923 "plugins/funind/invfun.ml" 776 26919 26999
type(
  Term.constr * Term.types
)
"plugins/funind/invfun.ml" 775 26897 26905 "plugins/funind/invfun.ml" 777 27000 27009
type(
  Entries.definition_entry -> Term.constr * Term.types
)
"plugins/funind/invfun.ml" 778 27010 27019 "plugins/funind/invfun.ml" 778 27010 27030
type(
  (Names.constant * Rawterm.rawsort) list -> Entries.definition_entry list
)
ident(
  int_ref make_scheme "plugins/funind/invfun.ml" 745 25722 25745 "plugins/funind/invfun.ml" 745 25722 25756
)
"plugins/funind/invfun.ml" 778 27010 27032 "plugins/funind/invfun.ml" 778 27010 27049
type(
  (Names.constant -> Names.constant * Rawterm.rawsort) ->
  Names.constant array -> (Names.constant * Rawterm.rawsort) list
)
ident(
  ext_ref Util.array_map_to_list
)
"plugins/funind/invfun.ml" 778 27010 27055 "plugins/funind/invfun.ml" 778 27010 27060
type(
  Names.constant
)
ident(
  def const "plugins/funind/invfun.ml" 778 27010 27064 "plugins/funind/invfun.ml" 778 27010 27088
)
"plugins/funind/invfun.ml" 778 27010 27064 "plugins/funind/invfun.ml" 778 27010 27069
type(
  Names.constant
)
ident(
  int_ref const "plugins/funind/invfun.ml" 778 27010 27055 "plugins/funind/invfun.ml" 778 27010 27060
)
"plugins/funind/invfun.ml" 778 27010 27084 "plugins/funind/invfun.ml" 778 27010 27088
type(
  Univ.universe option
)
"plugins/funind/invfun.ml" 778 27010 27070 "plugins/funind/invfun.ml" 778 27010 27088
type(
  Rawterm.rawsort
)
"plugins/funind/invfun.ml" 778 27010 27064 "plugins/funind/invfun.ml" 778 27010 27088
type(
  Names.constant * Rawterm.rawsort
)
"plugins/funind/invfun.ml" 778 27010 27050 "plugins/funind/invfun.ml" 778 27010 27089
type(
  Names.constant -> Names.constant * Rawterm.rawsort
)
"plugins/funind/invfun.ml" 778 27010 27090 "plugins/funind/invfun.ml" 778 27010 27094
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/invfun.ml" 746 25826 25832 "plugins/funind/invfun.ml" 746 25826 25836
)
"plugins/funind/invfun.ml" 778 27010 27031 "plugins/funind/invfun.ml" 778 27010 27095
call(
  stack
)
type(
  (Names.constant * Rawterm.rawsort) list
)
"plugins/funind/invfun.ml" 778 27010 27018 "plugins/funind/invfun.ml" 778 27010 27096
call(
  stack
)
type(
  Entries.definition_entry list
)
"plugins/funind/invfun.ml" 774 26882 26887 "plugins/funind/invfun.ml" 779 27097 27103
call(
  stack
)
type(
  (Term.constr * Term.types) list
)
"plugins/funind/invfun.ml" 773 26865 26868 "plugins/funind/invfun.ml" 779 27097 27103
call(
  stack
)
type(
  (Term.constr * Term.types) array
)
"plugins/funind/invfun.ml" 769 26727 26733 "plugins/funind/invfun.ml" 779 27097 27103
type(
  (Term.constr * Term.types) array
)
"plugins/funind/invfun.ml" 781 27111 27119 "plugins/funind/invfun.ml" 781 27111 27130
type(
  int -> Tacmach.tactic
)
ident(
  def proving_tac "plugins/funind/invfun.ml" 784 27238 27242 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 782 27133 27139 "plugins/funind/invfun.ml" 782 27133 27156
type(
  (bool ->
   Term.constr ->
   (Term.constr * Term.constr Rawterm.bindings) option ->
   (Util.loc * Genarg.intro_pattern_expr) option ->
   Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Term.constr array ->
  Term.constr array ->
  (Term.constr * Term.types) array ->
  (Term.types * (Term.rel_declaration list * Term.types)) array ->
  int -> Tacmach.tactic
)
ident(
  int_ref prove_fun_correct "plugins/funind/invfun.ml" 238 8271 8275 "plugins/funind/invfun.ml" 238 8271 8292
)
"plugins/funind/invfun.ml" 782 27133 27157 "plugins/funind/invfun.ml" 782 27133 27177
type(
  bool ->
  Term.constr ->
  (Term.constr * Term.constr Rawterm.bindings) option ->
  (Util.loc * Genarg.intro_pattern_expr) option ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref functional_induction "plugins/funind/invfun.ml" 745 25722 25757 "plugins/funind/invfun.ml" 745 25722 25777
)
"plugins/funind/invfun.ml" 782 27133 27178 "plugins/funind/invfun.ml" 782 27133 27189
type(
  Term.constr array
)
ident(
  int_ref funs_constr "plugins/funind/invfun.ml" 747 25895 25901 "plugins/funind/invfun.ml" 747 25895 25912
)
"plugins/funind/invfun.ml" 782 27133 27190 "plugins/funind/invfun.ml" 782 27133 27203
type(
  Term.constr array
)
ident(
  int_ref graphs_constr "plugins/funind/invfun.ml" 749 25948 25956 "plugins/funind/invfun.ml" 749 25948 25969
)
"plugins/funind/invfun.ml" 782 27133 27204 "plugins/funind/invfun.ml" 782 27133 27211
type(
  (Term.constr * Term.types) array
)
ident(
  int_ref schemes "plugins/funind/invfun.ml" 765 26525 26533 "plugins/funind/invfun.ml" 765 26525 26540
)
"plugins/funind/invfun.ml" 782 27133 27212 "plugins/funind/invfun.ml" 782 27133 27230
type(
  (Term.types * (Term.rel_declaration list * Term.types)) array
)
ident(
  int_ref lemmas_types_infos "plugins/funind/invfun.ml" 750 25998 26006 "plugins/funind/invfun.ml" 750 25998 26024
)
"plugins/funind/invfun.ml" 782 27133 27139 "plugins/funind/invfun.ml" 782 27133 27230
call(
  stack
)
type(
  int -> Tacmach.tactic
)
"plugins/funind/invfun.ml" 784 27238 27242 "plugins/funind/invfun.ml" 784 27238 27253
type(
  (int -> Names.constant -> unit) -> Names.constant array -> unit
)
ident(
  ext_ref Array.iteri
)
"plugins/funind/invfun.ml" 785 27254 27265 "plugins/funind/invfun.ml" 785 27254 27266
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 785 27254 27267 "plugins/funind/invfun.ml" 801 27915 27920
)
"plugins/funind/invfun.ml" 785 27254 27267 "plugins/funind/invfun.ml" 785 27254 27280
type(
  Names.constant
)
ident(
  def f_as_constant "plugins/funind/invfun.ml" 786 27284 27286 "plugins/funind/invfun.ml" 801 27915 27920
)
"plugins/funind/invfun.ml" 786 27284 27290 "plugins/funind/invfun.ml" 786 27284 27294
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 786 27284 27297 "plugins/funind/invfun.ml" 786 27284 27308
type(
  Names.label -> Names.identifier
)
ident(
  ext_ref Names.id_of_label
)
"plugins/funind/invfun.ml" 786 27284 27310 "plugins/funind/invfun.ml" 786 27284 27319
type(
  Names.constant -> Names.label
)
ident(
  ext_ref Names.con_label
)
"plugins/funind/invfun.ml" 786 27284 27320 "plugins/funind/invfun.ml" 786 27284 27333
type(
  Names.constant
)
ident(
  int_ref f_as_constant "plugins/funind/invfun.ml" 785 27254 27267 "plugins/funind/invfun.ml" 785 27254 27280
)
"plugins/funind/invfun.ml" 786 27284 27309 "plugins/funind/invfun.ml" 786 27284 27334
call(
  stack
)
type(
  Names.label
)
"plugins/funind/invfun.ml" 786 27284 27297 "plugins/funind/invfun.ml" 786 27284 27334
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 787 27338 27340 "plugins/funind/invfun.ml" 787 27338 27358
type(
  Names.identifier ->
  Decl_kinds.goal_kind ->
  Term.types ->
  ?init_tac:Proof_type.tactic ->
  ?compute_guard:Pfedit.lemma_possible_guards ->
  Tacexpr.declaration_hook -> unit
)
ident(
  ext_ref Lemmas.start_proof
)
"plugins/funind/invfun.ml" 791 27479 27484 "plugins/funind/invfun.ml" 791 27479 27497
type(
  Names.identifier -> Names.identifier
)
ident(
  ext_ref Indfun_common.mk_correct_id
)
"plugins/funind/invfun.ml" 791 27479 27498 "plugins/funind/invfun.ml" 791 27479 27502
type(
  Names.identifier
)
ident(
  int_ref f_id "plugins/funind/invfun.ml" 786 27284 27290 "plugins/funind/invfun.ml" 786 27284 27294
)
"plugins/funind/invfun.ml" 791 27479 27483 "plugins/funind/invfun.ml" 791 27479 27503
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 792 27504 27509 "plugins/funind/invfun.ml" 792 27504 27526
type(
  Decl_kinds.locality
)
"plugins/funind/invfun.ml" 792 27504 27545 "plugins/funind/invfun.ml" 792 27504 27563
type(
  Decl_kinds.theorem_kind
)
"plugins/funind/invfun.ml" 792 27504 27527 "plugins/funind/invfun.ml" 792 27504 27564
type(
  Decl_kinds.goal_object_kind
)
"plugins/funind/invfun.ml" 792 27504 27508 "plugins/funind/invfun.ml" 792 27504 27565
type(
  Decl_kinds.goal_kind
)
"plugins/funind/invfun.ml" 793 27566 27571 "plugins/funind/invfun.ml" 793 27566 27574
type(
  Term.types * (Term.rel_declaration list * Term.types) -> Term.types
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 793 27566 27575 "plugins/funind/invfun.ml" 793 27566 27593
type(
  (Term.types * (Term.rel_declaration list * Term.types)) array
)
ident(
  int_ref lemmas_types_infos "plugins/funind/invfun.ml" 750 25998 26006 "plugins/funind/invfun.ml" 750 25998 26024
)
"plugins/funind/invfun.ml" 793 27566 27595 "plugins/funind/invfun.ml" 793 27566 27596
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 785 27254 27265 "plugins/funind/invfun.ml" 785 27254 27266
)
"plugins/funind/invfun.ml" 793 27566 27575 "plugins/funind/invfun.ml" 793 27566 27597
type(
  Term.types * (Term.rel_declaration list * Term.types)
)
"plugins/funind/invfun.ml" 793 27566 27570 "plugins/funind/invfun.ml" 793 27566 27598
type(
  Term.types
)
"plugins/funind/invfun.ml" 794 27599 27608 "plugins/funind/invfun.ml" 794 27599 27609
type(
  Decl_kinds.locality
)
"plugins/funind/invfun.ml" 794 27599 27610 "plugins/funind/invfun.ml" 794 27599 27611
type(
  Libnames.global_reference
)
"plugins/funind/invfun.ml" 794 27599 27615 "plugins/funind/invfun.ml" 794 27599 27617
type(
  unit
)
"plugins/funind/invfun.ml" 794 27599 27603 "plugins/funind/invfun.ml" 794 27599 27618
type(
  Decl_kinds.locality -> Libnames.global_reference -> unit
)
"plugins/funind/invfun.ml" 787 27338 27340 "plugins/funind/invfun.ml" 794 27599 27618
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 795 27620 27622 "plugins/funind/invfun.ml" 795 27620 27631
type(
  Tacmach.tactic -> unit
)
ident(
  ext_ref Pfedit.by
)
"plugins/funind/invfun.ml" 795 27620 27633 "plugins/funind/invfun.ml" 795 27620 27644
type(
  string -> Tacmach.tactic -> Tacmach.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 795 27620 27646 "plugins/funind/invfun.ml" 795 27620 27667
type(
  string
)
"plugins/funind/invfun.ml" 795 27620 27667 "plugins/funind/invfun.ml" 795 27620 27668
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/invfun.ml" 795 27620 27669 "plugins/funind/invfun.ml" 795 27620 27681
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/invfun.ml" 795 27620 27682 "plugins/funind/invfun.ml" 795 27620 27686
type(
  Names.identifier
)
ident(
  int_ref f_id "plugins/funind/invfun.ml" 786 27284 27290 "plugins/funind/invfun.ml" 786 27284 27294
)
"plugins/funind/invfun.ml" 795 27620 27668 "plugins/funind/invfun.ml" 795 27620 27687
call(
  stack
)
type(
  string
)
"plugins/funind/invfun.ml" 795 27620 27687 "plugins/funind/invfun.ml" 795 27620 27688
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/invfun.ml" 795 27620 27688 "plugins/funind/invfun.ml" 795 27620 27691
type(
  string
)
"plugins/funind/invfun.ml" 795 27620 27668 "plugins/funind/invfun.ml" 795 27620 27691
call(
  stack
)
type(
  string
)
"plugins/funind/invfun.ml" 795 27620 27645 "plugins/funind/invfun.ml" 795 27620 27692
call(
  stack
)
type(
  string
)
"plugins/funind/invfun.ml" 795 27620 27694 "plugins/funind/invfun.ml" 795 27620 27705
type(
  int -> Tacmach.tactic
)
ident(
  int_ref proving_tac "plugins/funind/invfun.ml" 781 27111 27119 "plugins/funind/invfun.ml" 781 27111 27130
)
"plugins/funind/invfun.ml" 795 27620 27706 "plugins/funind/invfun.ml" 795 27620 27707
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 785 27254 27265 "plugins/funind/invfun.ml" 785 27254 27266
)
"plugins/funind/invfun.ml" 795 27620 27693 "plugins/funind/invfun.ml" 795 27620 27708
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 795 27620 27632 "plugins/funind/invfun.ml" 795 27620 27709
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 795 27620 27622 "plugins/funind/invfun.ml" 795 27620 27709
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 796 27711 27713 "plugins/funind/invfun.ml" 796 27711 27720
type(
  unit -> unit
)
ident(
  int_ref do_save "plugins/funind/invfun.ml" 735 25369 25373 "plugins/funind/invfun.ml" 735 25369 25380
)
"plugins/funind/invfun.ml" 796 27711 27721 "plugins/funind/invfun.ml" 796 27711 27723
type(
  unit
)
"plugins/funind/invfun.ml" 796 27711 27713 "plugins/funind/invfun.ml" 796 27711 27723
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 797 27725 27731 "plugins/funind/invfun.ml" 797 27725 27736
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 797 27725 27739 "plugins/funind/invfun.ml" 797 27725 27758
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/invfun.ml" 797 27725 27759 "plugins/funind/invfun.ml" 797 27725 27772
type(
  Names.constant
)
ident(
  int_ref f_as_constant "plugins/funind/invfun.ml" 785 27254 27267 "plugins/funind/invfun.ml" 785 27254 27280
)
"plugins/funind/invfun.ml" 797 27725 27739 "plugins/funind/invfun.ml" 797 27725 27772
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 798 27776 27778 "plugins/funind/invfun.ml" 798 27776 27793
type(
  Indfun_common.function_info -> unit
)
ident(
  ext_ref Indfun_common.update_Function
)
"plugins/funind/invfun.ml" 799 27794 27799 "plugins/funind/invfun.ml" 799 27794 27804
type(
  Indfun_common.function_info
)
ident(
  int_ref finfo "plugins/funind/invfun.ml" 797 27725 27731 "plugins/funind/invfun.ml" 797 27725 27736
)
"plugins/funind/invfun.ml" 800 27810 27843 "plugins/funind/invfun.ml" 800 27810 27852
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/invfun.ml" 800 27810 27854 "plugins/funind/invfun.ml" 800 27810 27876
type(
  Environ.env -> Names.identifier -> Term.constr
)
ident(
  ext_ref Tacinterp.constr_of_id
)
"plugins/funind/invfun.ml" 800 27810 27878 "plugins/funind/invfun.ml" 800 27810 27888
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/invfun.ml" 800 27810 27889 "plugins/funind/invfun.ml" 800 27810 27891
type(
  unit
)
"plugins/funind/invfun.ml" 800 27810 27877 "plugins/funind/invfun.ml" 800 27810 27892
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 800 27810 27893 "plugins/funind/invfun.ml" 800 27810 27906
type(
  Names.identifier -> Names.identifier
)
ident(
  ext_ref Indfun_common.mk_correct_id
)
"plugins/funind/invfun.ml" 800 27810 27907 "plugins/funind/invfun.ml" 800 27810 27911
type(
  Names.identifier
)
ident(
  int_ref f_id "plugins/funind/invfun.ml" 786 27284 27290 "plugins/funind/invfun.ml" 786 27284 27294
)
"plugins/funind/invfun.ml" 800 27810 27892 "plugins/funind/invfun.ml" 800 27810 27912
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 800 27810 27853 "plugins/funind/invfun.ml" 800 27810 27913
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 800 27810 27842 "plugins/funind/invfun.ml" 800 27810 27914
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 800 27810 27837 "plugins/funind/invfun.ml" 800 27810 27914
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 799 27794 27798 "plugins/funind/invfun.ml" 801 27915 27920
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 798 27776 27778 "plugins/funind/invfun.ml" 801 27915 27920
call(
  tail
)
type(
  unit
)
"plugins/funind/invfun.ml" 797 27725 27727 "plugins/funind/invfun.ml" 801 27915 27920
type(
  unit
)
"plugins/funind/invfun.ml" 796 27711 27713 "plugins/funind/invfun.ml" 801 27915 27920
type(
  unit
)
"plugins/funind/invfun.ml" 795 27620 27622 "plugins/funind/invfun.ml" 801 27915 27920
type(
  unit
)
"plugins/funind/invfun.ml" 787 27338 27340 "plugins/funind/invfun.ml" 801 27915 27920
type(
  unit
)
"plugins/funind/invfun.ml" 786 27284 27286 "plugins/funind/invfun.ml" 801 27915 27920
type(
  unit
)
"plugins/funind/invfun.ml" 785 27254 27260 "plugins/funind/invfun.ml" 803 27922 27929
type(
  int -> Names.constant -> unit
)
"plugins/funind/invfun.ml" 804 27930 27936 "plugins/funind/invfun.ml" 804 27930 27940
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/invfun.ml" 746 25826 25832 "plugins/funind/invfun.ml" 746 25826 25836
)
"plugins/funind/invfun.ml" 784 27238 27242 "plugins/funind/invfun.ml" 804 27930 27940
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 805 27942 27950 "plugins/funind/invfun.ml" 805 27942 27968
type(
  (Term.types * (Term.rel_context * Term.constr)) array
)
ident(
  def lemmas_types_infos "plugins/funind/invfun.ml" 820 28469 28473 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 806 27971 27977 "plugins/funind/invfun.ml" 806 27971 27994
type(
  (int ->
   Term.constr ->
   Term.constr -> Term.types * (Term.rel_context * Term.constr)) ->
  Term.constr array ->
  Term.constr array -> (Term.types * (Term.rel_context * Term.constr)) array
)
ident(
  ext_ref Util.array_map2_i
)
"plugins/funind/invfun.ml" 807 27995 28001 "plugins/funind/invfun.ml" 807 27995 28002
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 807 27995 28003 "plugins/funind/invfun.ml" 815 28403 28430
)
"plugins/funind/invfun.ml" 807 27995 28003 "plugins/funind/invfun.ml" 807 27995 28011
type(
  Term.constr
)
ident(
  def f_constr "plugins/funind/invfun.ml" 807 27995 28012 "plugins/funind/invfun.ml" 815 28403 28430
)
"plugins/funind/invfun.ml" 807 27995 28012 "plugins/funind/invfun.ml" 807 27995 28017
type(
  Term.constr
)
ident(
  def graph "plugins/funind/invfun.ml" 808 28021 28025 "plugins/funind/invfun.ml" 815 28403 28430
)
"plugins/funind/invfun.ml" 808 28021 28029 "plugins/funind/invfun.ml" 808 28021 28039
type(
  Names.constant
)
"plugins/funind/invfun.ml" 808 28021 28042 "plugins/funind/invfun.ml" 808 28021 28051
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/invfun.ml" 808 28021 28052 "plugins/funind/invfun.ml" 808 28021 28060
type(
  Term.constr
)
ident(
  int_ref f_constr "plugins/funind/invfun.ml" 807 27995 28003 "plugins/funind/invfun.ml" 807 27995 28011
)
"plugins/funind/invfun.ml" 808 28021 28042 "plugins/funind/invfun.ml" 808 28021 28060
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 809 28064 28073 "plugins/funind/invfun.ml" 809 28064 28091
type(
  Term.rel_declaration list
)
"plugins/funind/invfun.ml" 809 28064 28092 "plugins/funind/invfun.ml" 809 28064 28111
type(
  Term.constr
)
"plugins/funind/invfun.ml" 809 28064 28072 "plugins/funind/invfun.ml" 809 28064 28112
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 809 28064 28072 "plugins/funind/invfun.ml" 809 28064 28125
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 810 28128 28134 "plugins/funind/invfun.ml" 810 28128 28147
type(
  bool ->
  Names.constant ->
  Term.constr -> int -> Term.rel_declaration list * Term.constr
)
ident(
  int_ref generate_type "plugins/funind/invfun.ml" 103 3258 3262 "plugins/funind/invfun.ml" 103 3258 3275
)
"plugins/funind/invfun.ml" 810 28128 28148 "plugins/funind/invfun.ml" 810 28128 28152
type(
  bool
)
"plugins/funind/invfun.ml" 810 28128 28154 "plugins/funind/invfun.ml" 810 28128 28164
type(
  Names.constant
)
ident(
  int_ref const_of_f "plugins/funind/invfun.ml" 808 28021 28029 "plugins/funind/invfun.ml" 808 28021 28039
)
"plugins/funind/invfun.ml" 810 28128 28165 "plugins/funind/invfun.ml" 810 28128 28170
type(
  Term.constr
)
ident(
  int_ref graph "plugins/funind/invfun.ml" 807 27995 28012 "plugins/funind/invfun.ml" 807 27995 28017
)
"plugins/funind/invfun.ml" 810 28128 28171 "plugins/funind/invfun.ml" 810 28128 28172
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 807 27995 28001 "plugins/funind/invfun.ml" 807 27995 28002
)
"plugins/funind/invfun.ml" 810 28128 28134 "plugins/funind/invfun.ml" 810 28128 28172
call(
  stack
)
type(
  Term.rel_declaration list * Term.constr
)
"plugins/funind/invfun.ml" 812 28180 28188 "plugins/funind/invfun.ml" 812 28180 28201
type(
  Term.types
)
"plugins/funind/invfun.ml" 812 28180 28204 "plugins/funind/invfun.ml" 812 28180 28230
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/invfun.ml" 812 28180 28237 "plugins/funind/invfun.ml" 812 28180 28256
type(
  Term.types
)
ident(
  int_ref type_of_lemma_concl "plugins/funind/invfun.ml" 809 28064 28092 "plugins/funind/invfun.ml" 809 28064 28111
)
"plugins/funind/invfun.ml" 812 28180 28257 "plugins/funind/invfun.ml" 812 28180 28275
type(
  Term.rel_context
)
ident(
  int_ref type_of_lemma_ctxt "plugins/funind/invfun.ml" 809 28064 28073 "plugins/funind/invfun.ml" 809 28064 28091
)
"plugins/funind/invfun.ml" 812 28180 28204 "plugins/funind/invfun.ml" 812 28180 28275
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 813 28279 28287 "plugins/funind/invfun.ml" 813 28279 28300
type(
  Term.constr
)
"plugins/funind/invfun.ml" 813 28279 28303 "plugins/funind/invfun.ml" 813 28279 28310
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_zeta "plugins/funind/invfun.ml" 78 2228 2232 "plugins/funind/invfun.ml" 78 2228 2239
)
"plugins/funind/invfun.ml" 813 28279 28311 "plugins/funind/invfun.ml" 813 28279 28324
type(
  Term.types
)
ident(
  int_ref type_of_lemma "plugins/funind/invfun.ml" 812 28180 28188 "plugins/funind/invfun.ml" 812 28180 28201
)
"plugins/funind/invfun.ml" 813 28279 28303 "plugins/funind/invfun.ml" 813 28279 28324
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 814 28328 28332 "plugins/funind/invfun.ml" 814 28328 28339
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/invfun.ml" 51 1570 1574 "plugins/funind/invfun.ml" 51 1570 1581
)
"plugins/funind/invfun.ml" 814 28328 28341 "plugins/funind/invfun.ml" 814 28328 28344
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 814 28328 28345 "plugins/funind/invfun.ml" 814 28328 28364
type(
  string
)
"plugins/funind/invfun.ml" 814 28328 28341 "plugins/funind/invfun.ml" 814 28328 28364
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 814 28328 28365 "plugins/funind/invfun.ml" 814 28328 28367
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 814 28328 28368 "plugins/funind/invfun.ml" 814 28328 28386
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/invfun.ml" 814 28328 28387 "plugins/funind/invfun.ml" 814 28328 28400
type(
  Term.constr
)
ident(
  int_ref type_of_lemma "plugins/funind/invfun.ml" 813 28279 28287 "plugins/funind/invfun.ml" 813 28279 28300
)
"plugins/funind/invfun.ml" 814 28328 28368 "plugins/funind/invfun.ml" 814 28328 28400
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 814 28328 28340 "plugins/funind/invfun.ml" 814 28328 28401
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 814 28328 28332 "plugins/funind/invfun.ml" 814 28328 28401
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 815 28403 28407 "plugins/funind/invfun.ml" 815 28403 28420
type(
  Term.types
)
ident(
  int_ref type_of_lemma "plugins/funind/invfun.ml" 813 28279 28287 "plugins/funind/invfun.ml" 813 28279 28300
)
"plugins/funind/invfun.ml" 815 28403 28421 "plugins/funind/invfun.ml" 815 28403 28430
type(
  Term.rel_context * Term.constr
)
ident(
  int_ref type_info "plugins/funind/invfun.ml" 809 28064 28072 "plugins/funind/invfun.ml" 809 28064 28125
)
"plugins/funind/invfun.ml" 815 28403 28407 "plugins/funind/invfun.ml" 815 28403 28430
type(
  Term.types * (Term.rel_context * Term.constr)
)
"plugins/funind/invfun.ml" 814 28328 28332 "plugins/funind/invfun.ml" 815 28403 28430
type(
  Term.types * (Term.rel_context * Term.constr)
)
"plugins/funind/invfun.ml" 813 28279 28283 "plugins/funind/invfun.ml" 815 28403 28430
type(
  Term.types * (Term.rel_context * Term.constr)
)
"plugins/funind/invfun.ml" 812 28180 28184 "plugins/funind/invfun.ml" 815 28403 28430
type(
  Term.types * (Term.rel_context * Term.constr)
)
"plugins/funind/invfun.ml" 809 28064 28068 "plugins/funind/invfun.ml" 815 28403 28430
type(
  Term.types * (Term.rel_context * Term.constr)
)
"plugins/funind/invfun.ml" 808 28021 28025 "plugins/funind/invfun.ml" 815 28403 28430
type(
  Term.types * (Term.rel_context * Term.constr)
)
"plugins/funind/invfun.ml" 807 27995 27996 "plugins/funind/invfun.ml" 816 28431 28433
type(
  int ->
  Term.constr -> Term.constr -> Term.types * (Term.rel_context * Term.constr)
)
"plugins/funind/invfun.ml" 817 28434 28435 "plugins/funind/invfun.ml" 817 28434 28446
type(
  Term.constr array
)
ident(
  int_ref funs_constr "plugins/funind/invfun.ml" 747 25895 25901 "plugins/funind/invfun.ml" 747 25895 25912
)
"plugins/funind/invfun.ml" 818 28447 28448 "plugins/funind/invfun.ml" 818 28447 28461
type(
  Term.constr array
)
ident(
  int_ref graphs_constr "plugins/funind/invfun.ml" 749 25948 25956 "plugins/funind/invfun.ml" 749 25948 25969
)
"plugins/funind/invfun.ml" 806 27971 27977 "plugins/funind/invfun.ml" 818 28447 28461
call(
  stack
)
type(
  (Term.types * (Term.rel_context * Term.constr)) array
)
"plugins/funind/invfun.ml" 820 28469 28477 "plugins/funind/invfun.ml" 820 28469 28479
type(
  Names.mutual_inductive
)
ident(
  def kn "plugins/funind/invfun.ml" 821 28527 28531 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 820 28469 28480 "plugins/funind/invfun.ml" 820 28469 28481
type(
  int
)
"plugins/funind/invfun.ml" 820 28469 28477 "plugins/funind/invfun.ml" 820 28469 28481
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 820 28469 28477 "plugins/funind/invfun.ml" 820 28469 28494
type(
  Names.inductive
)
ident(
  def graph_ind "plugins/funind/invfun.ml" 821 28527 28531 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 820 28469 28498 "plugins/funind/invfun.ml" 820 28469 28505
type(
  Term.constr -> Names.inductive
)
ident(
  ext_ref Term.destInd
)
"plugins/funind/invfun.ml" 820 28469 28506 "plugins/funind/invfun.ml" 820 28469 28519
type(
  Term.constr array
)
ident(
  int_ref graphs_constr "plugins/funind/invfun.ml" 749 25948 25956 "plugins/funind/invfun.ml" 749 25948 25969
)
"plugins/funind/invfun.ml" 820 28469 28521 "plugins/funind/invfun.ml" 820 28469 28522
type(
  int
)
"plugins/funind/invfun.ml" 820 28469 28506 "plugins/funind/invfun.ml" 820 28469 28523
type(
  Term.constr
)
"plugins/funind/invfun.ml" 820 28469 28498 "plugins/funind/invfun.ml" 820 28469 28523
call(
  stack
)
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 821 28527 28536 "plugins/funind/invfun.ml" 821 28527 28539
type(
  Declarations.mutual_inductive_body
)
ident(
  def mib "plugins/funind/invfun.ml" 822 28583 28587 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 821 28527 28540 "plugins/funind/invfun.ml" 821 28527 28543
type(
  Declarations.one_inductive_body
)
ident(
  def mip "plugins/funind/invfun.ml" 822 28583 28587 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 821 28527 28536 "plugins/funind/invfun.ml" 821 28527 28543
type(
  Declarations.mutual_inductive_body * Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 821 28527 28546 "plugins/funind/invfun.ml" 821 28527 28569
type(
  Names.inductive ->
  Declarations.mutual_inductive_body * Declarations.one_inductive_body
)
ident(
  ext_ref Global.lookup_inductive
)
"plugins/funind/invfun.ml" 821 28527 28570 "plugins/funind/invfun.ml" 821 28527 28579
type(
  Names.inductive
)
ident(
  int_ref graph_ind "plugins/funind/invfun.ml" 820 28469 28477 "plugins/funind/invfun.ml" 820 28469 28494
)
"plugins/funind/invfun.ml" 821 28527 28546 "plugins/funind/invfun.ml" 821 28527 28579
call(
  stack
)
type(
  Declarations.mutual_inductive_body * Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 822 28583 28591 "plugins/funind/invfun.ml" 822 28583 28598
type(
  Term.types array
)
ident(
  def schemes "plugins/funind/invfun.ml" 833 28817 28821 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 823 28601 28607 "plugins/funind/invfun.ml" 823 28601 28620
type(
  Term.types list -> Term.types array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/invfun.ml" 824 28621 28623 "plugins/funind/invfun.ml" 824 28621 28659
type(
  Environ.env ->
  Evd.evar_map ->
  (Names.inductive * Indrec.dep_flag * Term.sorts_family) list ->
  Term.types list
)
ident(
  ext_ref Indrec.build_mutual_induction_scheme
)
"plugins/funind/invfun.ml" 824 28621 28661 "plugins/funind/invfun.ml" 824 28621 28671
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/invfun.ml" 824 28621 28672 "plugins/funind/invfun.ml" 824 28621 28674
type(
  unit
)
"plugins/funind/invfun.ml" 824 28621 28660 "plugins/funind/invfun.ml" 824 28621 28675
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 824 28621 28676 "plugins/funind/invfun.ml" 824 28621 28685
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/invfun.ml" 825 28686 28691 "plugins/funind/invfun.ml" 825 28686 28704
type(
  (Names.inductive * Indrec.dep_flag * Term.sorts_family) array ->
  (Names.inductive * Indrec.dep_flag * Term.sorts_family) list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/invfun.ml" 826 28705 28713 "plugins/funind/invfun.ml" 826 28705 28723
type(
  (int ->
   Declarations.one_inductive_body ->
   Names.inductive * Indrec.dep_flag * Term.sorts_family) ->
  Declarations.one_inductive_body array ->
  (Names.inductive * Indrec.dep_flag * Term.sorts_family) array
)
ident(
  ext_ref Array.mapi
)
"plugins/funind/invfun.ml" 827 28724 28732 "plugins/funind/invfun.ml" 827 28724 28733
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 827 28724 28734 "plugins/funind/invfun.ml" 827 28724 28757
)
"plugins/funind/invfun.ml" 827 28724 28734 "plugins/funind/invfun.ml" 827 28724 28735
type(
  Declarations.one_inductive_body
)
"plugins/funind/invfun.ml" 827 28724 28740 "plugins/funind/invfun.ml" 827 28724 28742
type(
  Names.mutual_inductive
)
ident(
  int_ref kn "plugins/funind/invfun.ml" 820 28469 28477 "plugins/funind/invfun.ml" 820 28469 28479
)
"plugins/funind/invfun.ml" 827 28724 28743 "plugins/funind/invfun.ml" 827 28724 28744
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 827 28724 28732 "plugins/funind/invfun.ml" 827 28724 28733
)
"plugins/funind/invfun.ml" 827 28724 28739 "plugins/funind/invfun.ml" 827 28724 28745
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 827 28724 28746 "plugins/funind/invfun.ml" 827 28724 28750
type(
  Indrec.dep_flag
)
"plugins/funind/invfun.ml" 827 28724 28751 "plugins/funind/invfun.ml" 827 28724 28757
type(
  Term.sorts_family
)
"plugins/funind/invfun.ml" 827 28724 28739 "plugins/funind/invfun.ml" 827 28724 28757
type(
  Names.inductive * Indrec.dep_flag * Term.sorts_family
)
"plugins/funind/invfun.ml" 827 28724 28727 "plugins/funind/invfun.ml" 827 28724 28758
type(
  int ->
  Declarations.one_inductive_body ->
  Names.inductive * Indrec.dep_flag * Term.sorts_family
)
"plugins/funind/invfun.ml" 828 28759 28762 "plugins/funind/invfun.ml" 828 28759 28765
type(
  Declarations.mutual_inductive_body
)
ident(
  int_ref mib "plugins/funind/invfun.ml" 821 28527 28536 "plugins/funind/invfun.ml" 821 28527 28539
)
"plugins/funind/invfun.ml" 828 28759 28762 "plugins/funind/invfun.ml" 828 28759 28791
type(
  Declarations.one_inductive_body array
)
"plugins/funind/invfun.ml" 826 28705 28712 "plugins/funind/invfun.ml" 829 28792 28800
call(
  stack
)
type(
  (Names.inductive * Indrec.dep_flag * Term.sorts_family) array
)
"plugins/funind/invfun.ml" 825 28686 28690 "plugins/funind/invfun.ml" 830 28801 28806
call(
  stack
)
type(
  (Names.inductive * Indrec.dep_flag * Term.sorts_family) list
)
"plugins/funind/invfun.ml" 824 28621 28622 "plugins/funind/invfun.ml" 831 28807 28809
call(
  stack
)
type(
  Term.types list
)
"plugins/funind/invfun.ml" 823 28601 28607 "plugins/funind/invfun.ml" 831 28807 28809
call(
  stack
)
type(
  Term.types array
)
"plugins/funind/invfun.ml" 833 28817 28825 "plugins/funind/invfun.ml" 833 28817 28836
type(
  int -> Tacmach.tactic
)
ident(
  def proving_tac "plugins/funind/invfun.ml" 836 28940 28944 "plugins/funind/invfun.ml" 855 29636 29647
)
"plugins/funind/invfun.ml" 834 28839 28845 "plugins/funind/invfun.ml" 834 28839 28863
type(
  Term.constr array ->
  Declarations.one_inductive_body array ->
  Term.types array ->
  (Term.types * (Term.rel_context * Term.constr)) array ->
  int -> Tacmach.tactic
)
ident(
  int_ref prove_fun_complete "plugins/funind/invfun.ml" 623 21274 21278 "plugins/funind/invfun.ml" 623 21274 21296
)
"plugins/funind/invfun.ml" 834 28839 28864 "plugins/funind/invfun.ml" 834 28839 28875
type(
  Term.constr array
)
ident(
  int_ref funs_constr "plugins/funind/invfun.ml" 747 25895 25901 "plugins/funind/invfun.ml" 747 25895 25912
)
"plugins/funind/invfun.ml" 834 28839 28876 "plugins/funind/invfun.ml" 834 28839 28879
type(
  Declarations.mutual_inductive_body
)
ident(
  int_ref mib "plugins/funind/invfun.ml" 821 28527 28536 "plugins/funind/invfun.ml" 821 28527 28539
)
"plugins/funind/invfun.ml" 834 28839 28876 "plugins/funind/invfun.ml" 834 28839 28905
type(
  Declarations.one_inductive_body array
)
"plugins/funind/invfun.ml" 834 28839 28906 "plugins/funind/invfun.ml" 834 28839 28913
type(
  Term.types array
)
ident(
  int_ref schemes "plugins/funind/invfun.ml" 822 28583 28591 "plugins/funind/invfun.ml" 822 28583 28598
)
"plugins/funind/invfun.ml" 834 28839 28914 "plugins/funind/invfun.ml" 834 28839 28932
type(
  (Term.types * (Term.rel_context * Term.constr)) array
)
ident(
  int_ref lemmas_types_infos "plugins/funind/invfun.ml" 805 27942 27950 "plugins/funind/invfun.ml" 805 27942 27968
)
"plugins/funind/invfun.ml" 834 28839 28845 "plugins/funind/invfun.ml" 834 28839 28932
call(
  stack
)
type(
  int -> Tacmach.tactic
)
"plugins/funind/invfun.ml" 836 28940 28944 "plugins/funind/invfun.ml" 836 28940 28955
type(
  (int -> Names.constant -> unit) -> Names.constant array -> unit
)
ident(
  ext_ref Array.iteri
)
"plugins/funind/invfun.ml" 837 28956 28967 "plugins/funind/invfun.ml" 837 28956 28968
type(
  int
)
ident(
  def i "plugins/funind/invfun.ml" 837 28956 28969 "plugins/funind/invfun.ml" 853 29622 29627
)
"plugins/funind/invfun.ml" 837 28956 28969 "plugins/funind/invfun.ml" 837 28956 28982
type(
  Names.constant
)
ident(
  def f_as_constant "plugins/funind/invfun.ml" 838 28986 28988 "plugins/funind/invfun.ml" 853 29622 29627
)
"plugins/funind/invfun.ml" 838 28986 28992 "plugins/funind/invfun.ml" 838 28986 28996
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 838 28986 28999 "plugins/funind/invfun.ml" 838 28986 29010
type(
  Names.label -> Names.identifier
)
ident(
  ext_ref Names.id_of_label
)
"plugins/funind/invfun.ml" 838 28986 29012 "plugins/funind/invfun.ml" 838 28986 29021
type(
  Names.constant -> Names.label
)
ident(
  ext_ref Names.con_label
)
"plugins/funind/invfun.ml" 838 28986 29022 "plugins/funind/invfun.ml" 838 28986 29035
type(
  Names.constant
)
ident(
  int_ref f_as_constant "plugins/funind/invfun.ml" 837 28956 28969 "plugins/funind/invfun.ml" 837 28956 28982
)
"plugins/funind/invfun.ml" 838 28986 29011 "plugins/funind/invfun.ml" 838 28986 29036
call(
  stack
)
type(
  Names.label
)
"plugins/funind/invfun.ml" 838 28986 28999 "plugins/funind/invfun.ml" 838 28986 29036
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 839 29040 29042 "plugins/funind/invfun.ml" 839 29040 29060
type(
  Names.identifier ->
  Decl_kinds.goal_kind ->
  Term.types ->
  ?init_tac:Proof_type.tactic ->
  ?compute_guard:Pfedit.lemma_possible_guards ->
  Tacexpr.declaration_hook -> unit
)
ident(
  ext_ref Lemmas.start_proof
)
"plugins/funind/invfun.ml" 843 29182 29187 "plugins/funind/invfun.ml" 843 29182 29201
type(
  Names.identifier -> Names.identifier
)
ident(
  ext_ref Indfun_common.mk_complete_id
)
"plugins/funind/invfun.ml" 843 29182 29202 "plugins/funind/invfun.ml" 843 29182 29206
type(
  Names.identifier
)
ident(
  int_ref f_id "plugins/funind/invfun.ml" 838 28986 28992 "plugins/funind/invfun.ml" 838 28986 28996
)
"plugins/funind/invfun.ml" 843 29182 29186 "plugins/funind/invfun.ml" 843 29182 29207
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 844 29208 29213 "plugins/funind/invfun.ml" 844 29208 29230
type(
  Decl_kinds.locality
)
"plugins/funind/invfun.ml" 844 29208 29249 "plugins/funind/invfun.ml" 844 29208 29267
type(
  Decl_kinds.theorem_kind
)
"plugins/funind/invfun.ml" 844 29208 29231 "plugins/funind/invfun.ml" 844 29208 29268
type(
  Decl_kinds.goal_object_kind
)
"plugins/funind/invfun.ml" 844 29208 29212 "plugins/funind/invfun.ml" 844 29208 29269
type(
  Decl_kinds.goal_kind
)
"plugins/funind/invfun.ml" 845 29270 29275 "plugins/funind/invfun.ml" 845 29270 29278
type(
  Term.types * (Term.rel_context * Term.constr) -> Term.types
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 845 29270 29279 "plugins/funind/invfun.ml" 845 29270 29297
type(
  (Term.types * (Term.rel_context * Term.constr)) array
)
ident(
  int_ref lemmas_types_infos "plugins/funind/invfun.ml" 805 27942 27950 "plugins/funind/invfun.ml" 805 27942 27968
)
"plugins/funind/invfun.ml" 845 29270 29299 "plugins/funind/invfun.ml" 845 29270 29300
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 837 28956 28967 "plugins/funind/invfun.ml" 837 28956 28968
)
"plugins/funind/invfun.ml" 845 29270 29279 "plugins/funind/invfun.ml" 845 29270 29301
type(
  Term.types * (Term.rel_context * Term.constr)
)
"plugins/funind/invfun.ml" 845 29270 29274 "plugins/funind/invfun.ml" 845 29270 29302
type(
  Term.types
)
"plugins/funind/invfun.ml" 846 29303 29312 "plugins/funind/invfun.ml" 846 29303 29313
type(
  Decl_kinds.locality
)
"plugins/funind/invfun.ml" 846 29303 29314 "plugins/funind/invfun.ml" 846 29303 29315
type(
  Libnames.global_reference
)
"plugins/funind/invfun.ml" 846 29303 29319 "plugins/funind/invfun.ml" 846 29303 29321
type(
  unit
)
"plugins/funind/invfun.ml" 846 29303 29307 "plugins/funind/invfun.ml" 846 29303 29322
type(
  Decl_kinds.locality -> Libnames.global_reference -> unit
)
"plugins/funind/invfun.ml" 839 29040 29042 "plugins/funind/invfun.ml" 846 29303 29322
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 847 29324 29326 "plugins/funind/invfun.ml" 847 29324 29335
type(
  Tacmach.tactic -> unit
)
ident(
  ext_ref Pfedit.by
)
"plugins/funind/invfun.ml" 847 29324 29337 "plugins/funind/invfun.ml" 847 29324 29348
type(
  string -> Tacmach.tactic -> Tacmach.tactic
)
ident(
  int_ref observe_tac "plugins/funind/invfun.ml" 72 2085 2089 "plugins/funind/invfun.ml" 72 2085 2100
)
"plugins/funind/invfun.ml" 847 29324 29350 "plugins/funind/invfun.ml" 847 29324 29372
type(
  string
)
"plugins/funind/invfun.ml" 847 29324 29372 "plugins/funind/invfun.ml" 847 29324 29373
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/invfun.ml" 847 29324 29374 "plugins/funind/invfun.ml" 847 29324 29386
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/invfun.ml" 847 29324 29387 "plugins/funind/invfun.ml" 847 29324 29391
type(
  Names.identifier
)
ident(
  int_ref f_id "plugins/funind/invfun.ml" 838 28986 28992 "plugins/funind/invfun.ml" 838 28986 28996
)
"plugins/funind/invfun.ml" 847 29324 29373 "plugins/funind/invfun.ml" 847 29324 29392
call(
  stack
)
type(
  string
)
"plugins/funind/invfun.ml" 847 29324 29392 "plugins/funind/invfun.ml" 847 29324 29393
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/invfun.ml" 847 29324 29393 "plugins/funind/invfun.ml" 847 29324 29396
type(
  string
)
"plugins/funind/invfun.ml" 847 29324 29373 "plugins/funind/invfun.ml" 847 29324 29396
call(
  stack
)
type(
  string
)
"plugins/funind/invfun.ml" 847 29324 29349 "plugins/funind/invfun.ml" 847 29324 29397
call(
  stack
)
type(
  string
)
"plugins/funind/invfun.ml" 847 29324 29399 "plugins/funind/invfun.ml" 847 29324 29410
type(
  int -> Tacmach.tactic
)
ident(
  int_ref proving_tac "plugins/funind/invfun.ml" 833 28817 28825 "plugins/funind/invfun.ml" 833 28817 28836
)
"plugins/funind/invfun.ml" 847 29324 29411 "plugins/funind/invfun.ml" 847 29324 29412
type(
  int
)
ident(
  int_ref i "plugins/funind/invfun.ml" 837 28956 28967 "plugins/funind/invfun.ml" 837 28956 28968
)
"plugins/funind/invfun.ml" 847 29324 29398 "plugins/funind/invfun.ml" 847 29324 29413
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 847 29324 29336 "plugins/funind/invfun.ml" 847 29324 29414
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 847 29324 29326 "plugins/funind/invfun.ml" 847 29324 29414
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 848 29416 29418 "plugins/funind/invfun.ml" 848 29416 29425
type(
  unit -> unit
)
ident(
  int_ref do_save "plugins/funind/invfun.ml" 735 25369 25373 "plugins/funind/invfun.ml" 735 25369 25380
)
"plugins/funind/invfun.ml" 848 29416 29426 "plugins/funind/invfun.ml" 848 29416 29428
type(
  unit
)
"plugins/funind/invfun.ml" 848 29416 29418 "plugins/funind/invfun.ml" 848 29416 29428
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 849 29430 29436 "plugins/funind/invfun.ml" 849 29430 29441
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 849 29430 29444 "plugins/funind/invfun.ml" 849 29430 29463
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/invfun.ml" 849 29430 29464 "plugins/funind/invfun.ml" 849 29430 29477
type(
  Names.constant
)
ident(
  int_ref f_as_constant "plugins/funind/invfun.ml" 837 28956 28969 "plugins/funind/invfun.ml" 837 28956 28982
)
"plugins/funind/invfun.ml" 849 29430 29444 "plugins/funind/invfun.ml" 849 29430 29477
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 850 29481 29483 "plugins/funind/invfun.ml" 850 29481 29498
type(
  Indfun_common.function_info -> unit
)
ident(
  ext_ref Indfun_common.update_Function
)
"plugins/funind/invfun.ml" 851 29499 29504 "plugins/funind/invfun.ml" 851 29499 29509
type(
  Indfun_common.function_info
)
ident(
  int_ref finfo "plugins/funind/invfun.ml" 849 29430 29436 "plugins/funind/invfun.ml" 849 29430 29441
)
"plugins/funind/invfun.ml" 852 29515 29549 "plugins/funind/invfun.ml" 852 29515 29558
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/invfun.ml" 852 29515 29560 "plugins/funind/invfun.ml" 852 29515 29582
type(
  Environ.env -> Names.identifier -> Term.constr
)
ident(
  ext_ref Tacinterp.constr_of_id
)
"plugins/funind/invfun.ml" 852 29515 29584 "plugins/funind/invfun.ml" 852 29515 29594
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/invfun.ml" 852 29515 29595 "plugins/funind/invfun.ml" 852 29515 29597
type(
  unit
)
"plugins/funind/invfun.ml" 852 29515 29583 "plugins/funind/invfun.ml" 852 29515 29598
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/invfun.ml" 852 29515 29599 "plugins/funind/invfun.ml" 852 29515 29613
type(
  Names.identifier -> Names.identifier
)
ident(
  ext_ref Indfun_common.mk_complete_id
)
"plugins/funind/invfun.ml" 852 29515 29614 "plugins/funind/invfun.ml" 852 29515 29618
type(
  Names.identifier
)
ident(
  int_ref f_id "plugins/funind/invfun.ml" 838 28986 28992 "plugins/funind/invfun.ml" 838 28986 28996
)
"plugins/funind/invfun.ml" 852 29515 29598 "plugins/funind/invfun.ml" 852 29515 29619
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 852 29515 29559 "plugins/funind/invfun.ml" 852 29515 29620
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 852 29515 29548 "plugins/funind/invfun.ml" 852 29515 29621
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 852 29515 29543 "plugins/funind/invfun.ml" 852 29515 29621
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 851 29499 29503 "plugins/funind/invfun.ml" 853 29622 29627
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 850 29481 29483 "plugins/funind/invfun.ml" 853 29622 29627
call(
  tail
)
type(
  unit
)
"plugins/funind/invfun.ml" 849 29430 29432 "plugins/funind/invfun.ml" 853 29622 29627
type(
  unit
)
"plugins/funind/invfun.ml" 848 29416 29418 "plugins/funind/invfun.ml" 853 29622 29627
type(
  unit
)
"plugins/funind/invfun.ml" 847 29324 29326 "plugins/funind/invfun.ml" 853 29622 29627
type(
  unit
)
"plugins/funind/invfun.ml" 839 29040 29042 "plugins/funind/invfun.ml" 853 29622 29627
type(
  unit
)
"plugins/funind/invfun.ml" 838 28986 28988 "plugins/funind/invfun.ml" 853 29622 29627
type(
  unit
)
"plugins/funind/invfun.ml" 837 28956 28962 "plugins/funind/invfun.ml" 854 29628 29635
type(
  int -> Names.constant -> unit
)
"plugins/funind/invfun.ml" 855 29636 29642 "plugins/funind/invfun.ml" 855 29636 29646
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/invfun.ml" 746 25826 25832 "plugins/funind/invfun.ml" 746 25826 25836
)
"plugins/funind/invfun.ml" 836 28940 28944 "plugins/funind/invfun.ml" 855 29636 29647
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 833 28817 28821 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 822 28583 28587 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 821 28527 28531 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 820 28469 28473 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 805 27942 27946 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 784 27238 27242 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 781 27111 27115 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 765 26525 26529 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 750 25998 26002 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 749 25948 25952 "plugins/funind/invfun.ml" 855 29636 29647
type(
  unit
)
"plugins/funind/invfun.ml" 856 29648 29655 "plugins/funind/invfun.ml" 856 29648 29656
type(
  exn
)
ident(
  def e "plugins/funind/invfun.ml" 861 29830 29834 "plugins/funind/invfun.ml" 867 30036 30047
)
"plugins/funind/invfun.ml" 861 29830 29838 "plugins/funind/invfun.ml" 861 29830 29852
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 862 29855 29865 "plugins/funind/invfun.ml" 862 29855 29869
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 862 29855 29872 "plugins/funind/invfun.ml" 862 29855 29883
type(
  Names.label -> Names.identifier
)
ident(
  ext_ref Names.id_of_label
)
"plugins/funind/invfun.ml" 862 29855 29885 "plugins/funind/invfun.ml" 862 29855 29894
type(
  Names.constant -> Names.label
)
ident(
  ext_ref Names.con_label
)
"plugins/funind/invfun.ml" 862 29855 29895 "plugins/funind/invfun.ml" 862 29855 29899
type(
  Names.constant array
)
ident(
  int_ref funs "plugins/funind/invfun.ml" 746 25826 25832 "plugins/funind/invfun.ml" 746 25826 25836
)
"plugins/funind/invfun.ml" 862 29855 29901 "plugins/funind/invfun.ml" 862 29855 29902
type(
  int
)
"plugins/funind/invfun.ml" 862 29855 29895 "plugins/funind/invfun.ml" 862 29855 29903
type(
  Names.constant
)
"plugins/funind/invfun.ml" 862 29855 29884 "plugins/funind/invfun.ml" 862 29855 29904
call(
  stack
)
type(
  Names.label
)
"plugins/funind/invfun.ml" 862 29855 29872 "plugins/funind/invfun.ml" 862 29855 29904
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 864 29909 29915 "plugins/funind/invfun.ml" 864 29909 29928
type(
  Names.identifier -> Names.identifier
)
ident(
  ext_ref Indfun_common.mk_correct_id
)
"plugins/funind/invfun.ml" 864 29909 29929 "plugins/funind/invfun.ml" 864 29909 29933
type(
  Names.identifier
)
ident(
  int_ref f_id "plugins/funind/invfun.ml" 862 29855 29865 "plugins/funind/invfun.ml" 862 29855 29869
)
"plugins/funind/invfun.ml" 864 29909 29915 "plugins/funind/invfun.ml" 864 29909 29933
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 862 29855 29861 "plugins/funind/invfun.ml" 864 29909 29933
type(
  Names.identifier
)
"plugins/funind/invfun.ml" 866 29941 29946 "plugins/funind/invfun.ml" 866 29941 29952
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"plugins/funind/invfun.ml" 866 29941 29957 "plugins/funind/invfun.ml" 866 29941 29988
type(
  Names.identifier Util.located -> unit
)
ident(
  ext_ref Vernacentries.vernac_reset_name
)
"plugins/funind/invfun.ml" 866 29941 29990 "plugins/funind/invfun.ml" 866 29941 30004
type(
  Util.loc
)
ident(
  ext_ref Util.dummy_loc
)
"plugins/funind/invfun.ml" 866 29941 30005 "plugins/funind/invfun.ml" 866 29941 30019
type(
  Names.identifier
)
ident(
  int_ref first_lemma_id "plugins/funind/invfun.ml" 861 29830 29838 "plugins/funind/invfun.ml" 861 29830 29852
)
"plugins/funind/invfun.ml" 866 29941 29989 "plugins/funind/invfun.ml" 866 29941 30020
type(
  Names.identifier Util.located
)
"plugins/funind/invfun.ml" 866 29941 29957 "plugins/funind/invfun.ml" 866 29941 30020
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 866 29941 30026 "plugins/funind/invfun.ml" 866 29941 30027
type(
  exn
)
"plugins/funind/invfun.ml" 866 29941 30031 "plugins/funind/invfun.ml" 866 29941 30033
type(
  unit
)
"plugins/funind/invfun.ml" 866 29941 29952 "plugins/funind/invfun.ml" 866 29941 30034
type(
  unit
)
"plugins/funind/invfun.ml" 866 29941 29946 "plugins/funind/invfun.ml" 866 29941 30034
type(
  unit
)
"plugins/funind/invfun.ml" 867 30036 30040 "plugins/funind/invfun.ml" 867 30036 30045
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/invfun.ml" 867 30036 30046 "plugins/funind/invfun.ml" 867 30036 30047
type(
  exn
)
ident(
  int_ref e "plugins/funind/invfun.ml" 856 29648 29655 "plugins/funind/invfun.ml" 856 29648 29656
)
"plugins/funind/invfun.ml" 867 30036 30040 "plugins/funind/invfun.ml" 867 30036 30047
type(
  unit
)
"plugins/funind/invfun.ml" 866 29941 29946 "plugins/funind/invfun.ml" 867 30036 30047
type(
  unit
)
"plugins/funind/invfun.ml" 861 29830 29834 "plugins/funind/invfun.ml" 867 30036 30047
type(
  unit
)
"plugins/funind/invfun.ml" 748 25942 25944 "plugins/funind/invfun.ml" 867 30036 30047
type(
  unit
)
"plugins/funind/invfun.ml" 747 25895 25897 "plugins/funind/invfun.ml" 867 30036 30047
type(
  unit
)
"plugins/funind/invfun.ml" 746 25826 25828 "plugins/funind/invfun.ml" 867 30036 30047
type(
  unit
)
"plugins/funind/invfun.ml" 881 30467 30471 "plugins/funind/invfun.ml" 881 30467 30483
type(
  Names.mutual_inductive ->
  (Names.identifier -> Proof_type.tactic) ->
  Names.identifier ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def revert_graph "plugins/funind/invfun.ml" 930 32192 32192 --
)
"plugins/funind/invfun.ml" 881 30467 30484 "plugins/funind/invfun.ml" 881 30467 30486
type(
  Names.mutual_inductive
)
ident(
  def kn "plugins/funind/invfun.ml" 881 30467 30487 "plugins/funind/invfun.ml" 910 31495 31518
)
"plugins/funind/invfun.ml" 881 30467 30487 "plugins/funind/invfun.ml" 881 30467 30495
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  def post_tac "plugins/funind/invfun.ml" 881 30467 30496 "plugins/funind/invfun.ml" 910 31495 31518
)
"plugins/funind/invfun.ml" 881 30467 30496 "plugins/funind/invfun.ml" 881 30467 30499
type(
  Names.identifier
)
ident(
  def hid "plugins/funind/invfun.ml" 881 30467 30500 "plugins/funind/invfun.ml" 910 31495 31518
)
"plugins/funind/invfun.ml" 881 30467 30500 "plugins/funind/invfun.ml" 881 30467 30501
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 882 30504 30508 "plugins/funind/invfun.ml" 910 31495 31518
)
"plugins/funind/invfun.ml" 882 30504 30512 "plugins/funind/invfun.ml" 882 30504 30515
type(
  Term.types
)
"plugins/funind/invfun.ml" 882 30504 30518 "plugins/funind/invfun.ml" 882 30504 30528
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/invfun.ml" 882 30504 30529 "plugins/funind/invfun.ml" 882 30504 30530
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 881 30467 30500 "plugins/funind/invfun.ml" 881 30467 30501
)
"plugins/funind/invfun.ml" 882 30504 30532 "plugins/funind/invfun.ml" 882 30504 30537
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 882 30504 30538 "plugins/funind/invfun.ml" 882 30504 30541
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 881 30467 30496 "plugins/funind/invfun.ml" 881 30467 30499
)
"plugins/funind/invfun.ml" 882 30504 30531 "plugins/funind/invfun.ml" 882 30504 30542
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 882 30504 30518 "plugins/funind/invfun.ml" 882 30504 30542
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 883 30546 30556 "plugins/funind/invfun.ml" 883 30546 30568
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 883 30546 30569 "plugins/funind/invfun.ml" 883 30546 30572
type(
  Term.types
)
ident(
  int_ref typ "plugins/funind/invfun.ml" 882 30504 30512 "plugins/funind/invfun.ml" 882 30504 30515
)
"plugins/funind/invfun.ml" 883 30546 30556 "plugins/funind/invfun.ml" 883 30546 30572
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 884 30578 30590 "plugins/funind/invfun.ml" 884 30578 30591
type(
  Term.constr
)
ident(
  def i "plugins/funind/invfun.ml" 884 30578 30598 "plugins/funind/invfun.ml" 909 31476 31494
)
"plugins/funind/invfun.ml" 884 30578 30592 "plugins/funind/invfun.ml" 884 30578 30596
type(
  Term.constr array
)
ident(
  def args "plugins/funind/invfun.ml" 884 30578 30598 "plugins/funind/invfun.ml" 909 31476 31494
)
"plugins/funind/invfun.ml" 884 30578 30586 "plugins/funind/invfun.ml" 884 30578 30597
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 884 30578 30603 "plugins/funind/invfun.ml" 884 30578 30608
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isInd
)
"plugins/funind/invfun.ml" 884 30578 30609 "plugins/funind/invfun.ml" 884 30578 30610
type(
  Term.constr
)
ident(
  int_ref i "plugins/funind/invfun.ml" 884 30578 30590 "plugins/funind/invfun.ml" 884 30578 30591
)
"plugins/funind/invfun.ml" 884 30578 30603 "plugins/funind/invfun.ml" 884 30578 30610
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 885 30614 30623 "plugins/funind/invfun.ml" 885 30614 30626
type(
  Names.mutual_inductive
)
"plugins/funind/invfun.ml" 885 30614 30627 "plugins/funind/invfun.ml" 885 30614 30630
type(
  int
)
"plugins/funind/invfun.ml" 885 30614 30622 "plugins/funind/invfun.ml" 885 30614 30631
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 885 30614 30621 "plugins/funind/invfun.ml" 885 30614 30640
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 885 30614 30643 "plugins/funind/invfun.ml" 885 30614 30650
type(
  Term.constr -> Names.inductive
)
ident(
  ext_ref Term.destInd
)
"plugins/funind/invfun.ml" 885 30614 30651 "plugins/funind/invfun.ml" 885 30614 30652
type(
  Term.constr
)
ident(
  int_ref i "plugins/funind/invfun.ml" 884 30578 30590 "plugins/funind/invfun.ml" 884 30578 30591
)
"plugins/funind/invfun.ml" 885 30614 30643 "plugins/funind/invfun.ml" 885 30614 30652
call(
  stack
)
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 886 30656 30662 "plugins/funind/invfun.ml" 886 30656 30664
type(
  Names.mutual_inductive
)
ident(
  int_ref kn "plugins/funind/invfun.ml" 881 30467 30484 "plugins/funind/invfun.ml" 881 30467 30486
)
"plugins/funind/invfun.ml" 886 30656 30665 "plugins/funind/invfun.ml" 886 30656 30666
type(
  Names.mutual_inductive -> Names.mutual_inductive -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/invfun.ml" 886 30656 30667 "plugins/funind/invfun.ml" 886 30656 30670
type(
  Names.mutual_inductive
)
ident(
  int_ref kn' "plugins/funind/invfun.ml" 885 30614 30623 "plugins/funind/invfun.ml" 885 30614 30626
)
"plugins/funind/invfun.ml" 886 30656 30662 "plugins/funind/invfun.ml" 886 30656 30670
type(
  bool
)
"plugins/funind/invfun.ml" 888 30758 30767 "plugins/funind/invfun.ml" 888 30758 30771
type(
  Indfun_common.function_info
)
ident(
  def info "plugins/funind/invfun.ml" 896 31119 31124 "plugins/funind/invfun.ml" 907 31467 31474
)
"plugins/funind/invfun.ml" 889 30774 30785 "plugins/funind/invfun.ml" 889 30774 30807
type(
  Names.inductive -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_of_graph
)
"plugins/funind/invfun.ml" 889 30774 30808 "plugins/funind/invfun.ml" 889 30774 30812
type(
  Names.inductive
)
ident(
  int_ref ind' "plugins/funind/invfun.ml" 885 30614 30621 "plugins/funind/invfun.ml" 885 30614 30640
)
"plugins/funind/invfun.ml" 889 30774 30785 "plugins/funind/invfun.ml" 889 30774 30812
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 890 30813 30825 "plugins/funind/invfun.ml" 890 30813 30834
type(
  exn
)
"plugins/funind/invfun.ml" 891 30910 30912 "plugins/funind/invfun.ml" 891 30910 30919
type(
  string -> Indfun_common.function_info
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/invfun.ml" 891 30910 30920 "plugins/funind/invfun.ml" 891 30910 30964
type(
  string
)
"plugins/funind/invfun.ml" 891 30910 30912 "plugins/funind/invfun.ml" 891 30910 30964
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 889 30774 30781 "plugins/funind/invfun.ml" 891 30910 30964
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 896 31119 31130 "plugins/funind/invfun.ml" 896 31119 31134
type(
  Indfun_common.function_info
)
ident(
  int_ref info "plugins/funind/invfun.ml" 888 30758 30767 "plugins/funind/invfun.ml" 888 30758 30771
)
"plugins/funind/invfun.ml" 896 31119 31130 "plugins/funind/invfun.ml" 896 31119 31153
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 897 31159 31168 "plugins/funind/invfun.ml" 897 31159 31172
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 897 31159 31176 "plugins/funind/invfun.ml" 897 31159 31184
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 897 31159 31185 "plugins/funind/invfun.ml" 897 31159 31186
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 881 30467 30500 "plugins/funind/invfun.ml" 881 30467 30501
)
"plugins/funind/invfun.ml" 897 31159 31176 "plugins/funind/invfun.ml" 897 31159 31186
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 898 31187 31201 "plugins/funind/invfun.ml" 898 31187 31211
type(
  Names.constant
)
ident(
  def f_complete "plugins/funind/invfun.ml" 899 31215 31219 "plugins/funind/invfun.ml" 907 31467 31474
)
"plugins/funind/invfun.ml" 898 31187 31196 "plugins/funind/invfun.ml" 898 31187 31211
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 899 31215 31223 "plugins/funind/invfun.ml" 899 31215 31229
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 899 31215 31230 "plugins/funind/invfun.ml" 899 31215 31233
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 899 31215 31223 "plugins/funind/invfun.ml" 899 31215 31233
type(
  Term.constr array * Term.constr array
)
"plugins/funind/invfun.ml" 899 31215 31236 "plugins/funind/invfun.ml" 899 31215 31246
type(
  int -> Term.constr array -> Term.constr array * Term.constr array
)
ident(
  ext_ref Util.array_chop
)
"plugins/funind/invfun.ml" 899 31215 31248 "plugins/funind/invfun.ml" 899 31215 31260
type(
  Term.constr array -> int
)
ident(
  ext_ref Array.length
)
"plugins/funind/invfun.ml" 899 31215 31261 "plugins/funind/invfun.ml" 899 31215 31265
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 884 30578 30592 "plugins/funind/invfun.ml" 884 30578 30596
)
"plugins/funind/invfun.ml" 899 31215 31248 "plugins/funind/invfun.ml" 899 31215 31265
type(
  int
)
"plugins/funind/invfun.ml" 899 31215 31266 "plugins/funind/invfun.ml" 899 31215 31267
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/invfun.ml" 899 31215 31268 "plugins/funind/invfun.ml" 899 31215 31269
type(
  int
)
"plugins/funind/invfun.ml" 899 31215 31247 "plugins/funind/invfun.ml" 899 31215 31270
type(
  int
)
"plugins/funind/invfun.ml" 899 31215 31271 "plugins/funind/invfun.ml" 899 31215 31275
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 884 30578 30592 "plugins/funind/invfun.ml" 884 30578 30596
)
"plugins/funind/invfun.ml" 899 31215 31236 "plugins/funind/invfun.ml" 899 31215 31275
call(
  stack
)
type(
  Term.constr array * Term.constr array
)
"plugins/funind/invfun.ml" 900 31279 31283 "plugins/funind/invfun.ml" 900 31279 31293
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 902 31302 31310 "plugins/funind/invfun.ml" 902 31302 31322
type(
  Term.constr list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_generalize
)
"plugins/funind/invfun.ml" 902 31302 31324 "plugins/funind/invfun.ml" 902 31302 31331
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/invfun.ml" 902 31302 31332 "plugins/funind/invfun.ml" 902 31302 31339
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/invfun.ml" 902 31302 31340 "plugins/funind/invfun.ml" 902 31302 31350
type(
  Names.constant
)
ident(
  int_ref f_complete "plugins/funind/invfun.ml" 898 31187 31201 "plugins/funind/invfun.ml" 898 31187 31211
)
"plugins/funind/invfun.ml" 902 31302 31332 "plugins/funind/invfun.ml" 902 31302 31350
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 902 31302 31352 "plugins/funind/invfun.ml" 902 31302 31365
type(
  Term.constr array -> Term.constr list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/invfun.ml" 902 31302 31366 "plugins/funind/invfun.ml" 902 31302 31372
type(
  Term.constr array
)
ident(
  int_ref f_args "plugins/funind/invfun.ml" 899 31215 31223 "plugins/funind/invfun.ml" 899 31215 31229
)
"plugins/funind/invfun.ml" 902 31302 31351 "plugins/funind/invfun.ml" 902 31302 31373
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 902 31302 31373 "plugins/funind/invfun.ml" 902 31302 31374
type(
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/invfun.ml" 902 31302 31375 "plugins/funind/invfun.ml" 902 31302 31378
type(
  Term.constr array
)
ident(
  int_ref res "plugins/funind/invfun.ml" 899 31215 31230 "plugins/funind/invfun.ml" 899 31215 31233
)
"plugins/funind/invfun.ml" 902 31302 31380 "plugins/funind/invfun.ml" 902 31302 31381
type(
  int
)
"plugins/funind/invfun.ml" 902 31302 31375 "plugins/funind/invfun.ml" 902 31302 31382
type(
  Term.constr
)
"plugins/funind/invfun.ml" 902 31302 31383 "plugins/funind/invfun.ml" 902 31302 31388
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 902 31302 31389 "plugins/funind/invfun.ml" 902 31302 31392
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 881 30467 30496 "plugins/funind/invfun.ml" 881 30467 30499
)
"plugins/funind/invfun.ml" 902 31302 31383 "plugins/funind/invfun.ml" 902 31302 31392
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 902 31302 31374 "plugins/funind/invfun.ml" 902 31302 31393
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 902 31302 31351 "plugins/funind/invfun.ml" 902 31302 31393
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 902 31302 31331 "plugins/funind/invfun.ml" 902 31302 31394
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 902 31302 31324 "plugins/funind/invfun.ml" 902 31302 31394
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 902 31302 31323 "plugins/funind/invfun.ml" 902 31302 31395
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 902 31302 31310 "plugins/funind/invfun.ml" 902 31302 31395
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 903 31397 31405 "plugins/funind/invfun.ml" 903 31397 31409
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.thin
)
"plugins/funind/invfun.ml" 903 31397 31411 "plugins/funind/invfun.ml" 903 31397 31414
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 881 30467 30496 "plugins/funind/invfun.ml" 881 30467 30499
)
"plugins/funind/invfun.ml" 903 31397 31410 "plugins/funind/invfun.ml" 903 31397 31415
type(
  Names.identifier list
)
"plugins/funind/invfun.ml" 903 31397 31405 "plugins/funind/invfun.ml" 903 31397 31415
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 904 31417 31425 "plugins/funind/invfun.ml" 904 31417 31432
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 904 31417 31433 "plugins/funind/invfun.ml" 904 31417 31436
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 881 30467 30496 "plugins/funind/invfun.ml" 881 30467 30499
)
"plugins/funind/invfun.ml" 904 31417 31425 "plugins/funind/invfun.ml" 904 31417 31436
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 905 31438 31446 "plugins/funind/invfun.ml" 905 31438 31454
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  int_ref post_tac "plugins/funind/invfun.ml" 881 30467 30487 "plugins/funind/invfun.ml" 881 30467 30495
)
"plugins/funind/invfun.ml" 905 31438 31455 "plugins/funind/invfun.ml" 905 31438 31458
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 881 30467 30496 "plugins/funind/invfun.ml" 881 30467 30499
)
"plugins/funind/invfun.ml" 905 31438 31446 "plugins/funind/invfun.ml" 905 31438 31458
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 901 31294 31300 "plugins/funind/invfun.ml" 906 31459 31466
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 907 31467 31473 "plugins/funind/invfun.ml" 907 31467 31474
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 881 30467 30500 "plugins/funind/invfun.ml" 881 30467 30501
)
"plugins/funind/invfun.ml" 900 31279 31283 "plugins/funind/invfun.ml" 907 31467 31474
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 899 31215 31219 "plugins/funind/invfun.ml" 907 31467 31474
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 896 31119 31124 "plugins/funind/invfun.ml" 907 31467 31474
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 888 30758 30763 "plugins/funind/invfun.ml" 907 31467 31474
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 909 31476 31484 "plugins/funind/invfun.ml" 909 31476 31492
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 909 31476 31493 "plugins/funind/invfun.ml" 909 31476 31494
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 881 30467 30500 "plugins/funind/invfun.ml" 881 30467 30501
)
"plugins/funind/invfun.ml" 909 31476 31484 "plugins/funind/invfun.ml" 909 31476 31494
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 886 30656 30659 "plugins/funind/invfun.ml" 909 31476 31494
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 885 30614 30617 "plugins/funind/invfun.ml" 909 31476 31494
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 884 30578 30598 "plugins/funind/invfun.ml" 909 31476 31494
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 910 31495 31503 "plugins/funind/invfun.ml" 910 31495 31504
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 910 31495 31508 "plugins/funind/invfun.ml" 910 31495 31516
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 910 31495 31517 "plugins/funind/invfun.ml" 910 31495 31518
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 881 30467 30500 "plugins/funind/invfun.ml" 881 30467 30501
)
"plugins/funind/invfun.ml" 910 31495 31508 "plugins/funind/invfun.ml" 910 31495 31518
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 883 30546 30550 "plugins/funind/invfun.ml" 910 31495 31518
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 882 30504 30508 "plugins/funind/invfun.ml" 910 31495 31518
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 930 32192 32196 "plugins/funind/invfun.ml" 930 32192 32216
type(
  Names.mutual_inductive ->
  Names.Idset.elt -> Term.constr -> Term.constr -> Tacmach.tactic
)
ident(
  def functional_inversion "plugins/funind/invfun.ml" 959 33277 33277 --
)
"plugins/funind/invfun.ml" 930 32192 32217 "plugins/funind/invfun.ml" 930 32192 32219
type(
  Names.mutual_inductive
)
ident(
  def kn "plugins/funind/invfun.ml" 930 32192 32220 "plugins/funind/invfun.ml" 955 33241 33273
)
"plugins/funind/invfun.ml" 930 32192 32220 "plugins/funind/invfun.ml" 930 32192 32223
type(
  Names.Idset.elt
)
ident(
  def hid "plugins/funind/invfun.ml" 930 32192 32224 "plugins/funind/invfun.ml" 955 33241 33273
)
"plugins/funind/invfun.ml" 930 32192 32224 "plugins/funind/invfun.ml" 930 32192 32230
type(
  Term.constr
)
ident(
  def fconst "plugins/funind/invfun.ml" 930 32192 32231 "plugins/funind/invfun.ml" 955 33241 33273
)
"plugins/funind/invfun.ml" 930 32192 32231 "plugins/funind/invfun.ml" 930 32192 32240
type(
  Term.constr
)
ident(
  def f_correct "plugins/funind/invfun.ml" 930 32192 32241 "plugins/funind/invfun.ml" 955 33241 33273
)
"plugins/funind/invfun.ml" 931 32252 32258 "plugins/funind/invfun.ml" 931 32252 32259
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 932 32263 32267 "plugins/funind/invfun.ml" 955 33241 33273
)
"plugins/funind/invfun.ml" 932 32263 32271 "plugins/funind/invfun.ml" 932 32263 32278
type(
  Names.Idset.t
)
"plugins/funind/invfun.ml" 932 32263 32281 "plugins/funind/invfun.ml" 932 32263 32296
type(
  (Names.Idset.elt -> Names.Idset.t -> Names.Idset.t) ->
  Names.Idset.elt list -> Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref List.fold_right
)
"plugins/funind/invfun.ml" 932 32263 32297 "plugins/funind/invfun.ml" 932 32263 32306
type(
  Names.Idset.elt -> Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref Names.Idset.add
)
"plugins/funind/invfun.ml" 932 32263 32309 "plugins/funind/invfun.ml" 932 32263 32323
type(
  Proof_type.goal Tacmach.sigma -> Names.Idset.elt list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/invfun.ml" 932 32263 32324 "plugins/funind/invfun.ml" 932 32263 32325
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 931 32252 32258 "plugins/funind/invfun.ml" 931 32252 32259
)
"plugins/funind/invfun.ml" 932 32263 32308 "plugins/funind/invfun.ml" 932 32263 32326
call(
  stack
)
type(
  Names.Idset.elt list
)
"plugins/funind/invfun.ml" 932 32263 32327 "plugins/funind/invfun.ml" 932 32263 32338
type(
  Names.Idset.t
)
ident(
  ext_ref Names.Idset.empty
)
"plugins/funind/invfun.ml" 932 32263 32281 "plugins/funind/invfun.ml" 932 32263 32338
call(
  stack
)
type(
  Names.Idset.t
)
"plugins/funind/invfun.ml" 933 32342 32350 "plugins/funind/invfun.ml" 933 32342 32359
type(
  Term.types
)
"plugins/funind/invfun.ml" 933 32342 32362 "plugins/funind/invfun.ml" 933 32342 32372
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/invfun.ml" 933 32342 32373 "plugins/funind/invfun.ml" 933 32342 32374
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 931 32252 32258 "plugins/funind/invfun.ml" 931 32252 32259
)
"plugins/funind/invfun.ml" 933 32342 32376 "plugins/funind/invfun.ml" 933 32342 32381
type(
  Names.Idset.elt -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 933 32342 32382 "plugins/funind/invfun.ml" 933 32342 32385
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 930 32192 32220 "plugins/funind/invfun.ml" 930 32192 32223
)
"plugins/funind/invfun.ml" 933 32342 32375 "plugins/funind/invfun.ml" 933 32342 32386
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 933 32342 32362 "plugins/funind/invfun.ml" 933 32342 32386
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 934 32390 32400 "plugins/funind/invfun.ml" 934 32390 32412
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 934 32390 32413 "plugins/funind/invfun.ml" 934 32390 32422
type(
  Term.types
)
ident(
  int_ref type_of_h "plugins/funind/invfun.ml" 933 32342 32350 "plugins/funind/invfun.ml" 933 32342 32359
)
"plugins/funind/invfun.ml" 934 32390 32400 "plugins/funind/invfun.ml" 934 32390 32422
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 935 32428 32440 "plugins/funind/invfun.ml" 935 32428 32442
type(
  Term.constr
)
ident(
  def eq "plugins/funind/invfun.ml" 935 32428 32449 "plugins/funind/invfun.ml" 954 33234 33240
)
"plugins/funind/invfun.ml" 935 32428 32443 "plugins/funind/invfun.ml" 935 32428 32447
type(
  Term.constr array
)
ident(
  def args "plugins/funind/invfun.ml" 935 32428 32449 "plugins/funind/invfun.ml" 954 33234 33240
)
"plugins/funind/invfun.ml" 935 32428 32436 "plugins/funind/invfun.ml" 935 32428 32448
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 935 32428 32454 "plugins/funind/invfun.ml" 935 32428 32463
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/invfun.ml" 935 32428 32464 "plugins/funind/invfun.ml" 935 32428 32466
type(
  Term.constr
)
ident(
  int_ref eq "plugins/funind/invfun.ml" 935 32428 32440 "plugins/funind/invfun.ml" 935 32428 32442
)
"plugins/funind/invfun.ml" 935 32428 32468 "plugins/funind/invfun.ml" 935 32428 32487
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_eq
)
"plugins/funind/invfun.ml" 935 32428 32488 "plugins/funind/invfun.ml" 935 32428 32490
type(
  unit
)
"plugins/funind/invfun.ml" 935 32428 32467 "plugins/funind/invfun.ml" 935 32428 32491
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 935 32428 32454 "plugins/funind/invfun.ml" 935 32428 32491
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 936 32496 32503 "plugins/funind/invfun.ml" 936 32496 32510
type(
  Names.Idset.elt -> Tacmach.tactic
)
"plugins/funind/invfun.ml" 936 32496 32511 "plugins/funind/invfun.ml" 936 32496 32517
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 936 32496 32518 "plugins/funind/invfun.ml" 936 32496 32521
type(
  Term.constr
)
"plugins/funind/invfun.ml" 936 32496 32503 "plugins/funind/invfun.ml" 936 32496 32521
type(
  (Names.Idset.elt -> Tacmach.tactic) * Term.constr array * Term.constr
)
"plugins/funind/invfun.ml" 937 32524 32535 "plugins/funind/invfun.ml" 937 32524 32547
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 937 32524 32548 "plugins/funind/invfun.ml" 937 32524 32552
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 935 32428 32443 "plugins/funind/invfun.ml" 935 32428 32447
)
"plugins/funind/invfun.ml" 937 32524 32554 "plugins/funind/invfun.ml" 937 32524 32555
type(
  int
)
"plugins/funind/invfun.ml" 937 32524 32548 "plugins/funind/invfun.ml" 937 32524 32556
type(
  Term.constr
)
"plugins/funind/invfun.ml" 937 32524 32535 "plugins/funind/invfun.ml" 937 32524 32556
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 937 32524 32557 "plugins/funind/invfun.ml" 937 32524 32569
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 937 32524 32570 "plugins/funind/invfun.ml" 937 32524 32574
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 935 32428 32443 "plugins/funind/invfun.ml" 935 32428 32447
)
"plugins/funind/invfun.ml" 937 32524 32576 "plugins/funind/invfun.ml" 937 32524 32577
type(
  int
)
"plugins/funind/invfun.ml" 937 32524 32570 "plugins/funind/invfun.ml" 937 32524 32578
type(
  Term.constr
)
"plugins/funind/invfun.ml" 937 32524 32557 "plugins/funind/invfun.ml" 937 32524 32578
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 937 32524 32535 "plugins/funind/invfun.ml" 937 32524 32578
type(
  (Term.constr, Term.types) Term.kind_of_term *
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 938 32584 32597 "plugins/funind/invfun.ml" 938 32584 32598
type(
  Term.constr
)
ident(
  def f "plugins/funind/invfun.ml" 938 32584 32609 "plugins/funind/invfun.ml" 939 32636 32693
)
"plugins/funind/invfun.ml" 938 32584 32599 "plugins/funind/invfun.ml" 938 32584 32605
type(
  Term.constr array
)
ident(
  def f_args "plugins/funind/invfun.ml" 938 32584 32609 "plugins/funind/invfun.ml" 939 32636 32693
)
"plugins/funind/invfun.ml" 938 32584 32593 "plugins/funind/invfun.ml" 938 32584 32606
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 938 32584 32607 "plugins/funind/invfun.ml" 938 32584 32608
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 938 32584 32593 "plugins/funind/invfun.ml" 938 32584 32608
type(
  (Term.constr, Term.types) Term.kind_of_term *
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 938 32584 32614 "plugins/funind/invfun.ml" 938 32584 32623
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/invfun.ml" 938 32584 32624 "plugins/funind/invfun.ml" 938 32584 32625
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/invfun.ml" 938 32584 32597 "plugins/funind/invfun.ml" 938 32584 32598
)
"plugins/funind/invfun.ml" 938 32584 32626 "plugins/funind/invfun.ml" 938 32584 32632
type(
  Term.constr
)
ident(
  int_ref fconst "plugins/funind/invfun.ml" 930 32192 32224 "plugins/funind/invfun.ml" 930 32192 32230
)
"plugins/funind/invfun.ml" 938 32584 32614 "plugins/funind/invfun.ml" 938 32584 32632
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 939 32636 32646 "plugins/funind/invfun.ml" 939 32636 32649
type(
  Names.Idset.elt
)
ident(
  def hid "plugins/funind/invfun.ml" 939 32636 32653 "plugins/funind/invfun.ml" 939 32636 32675
)
"plugins/funind/invfun.ml" 939 32636 32653 "plugins/funind/invfun.ml" 939 32636 32663
type(
  Tacticals.clause -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_symmetry
)
"plugins/funind/invfun.ml" 939 32636 32665 "plugins/funind/invfun.ml" 939 32636 32670
type(
  Names.Idset.elt -> Tacticals.clause
)
ident(
  ext_ref Tacticals.onHyp
)
"plugins/funind/invfun.ml" 939 32636 32671 "plugins/funind/invfun.ml" 939 32636 32674
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 939 32636 32646 "plugins/funind/invfun.ml" 939 32636 32649
)
"plugins/funind/invfun.ml" 939 32636 32664 "plugins/funind/invfun.ml" 939 32636 32675
call(
  stack
)
type(
  Tacticals.clause
)
"plugins/funind/invfun.ml" 939 32636 32653 "plugins/funind/invfun.ml" 939 32636 32675
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 939 32636 32641 "plugins/funind/invfun.ml" 939 32636 32676
type(
  Names.Idset.elt -> Tacmach.tactic
)
"plugins/funind/invfun.ml" 939 32636 32677 "plugins/funind/invfun.ml" 939 32636 32683
type(
  Term.constr array
)
ident(
  int_ref f_args "plugins/funind/invfun.ml" 938 32584 32599 "plugins/funind/invfun.ml" 938 32584 32605
)
"plugins/funind/invfun.ml" 939 32636 32684 "plugins/funind/invfun.ml" 939 32636 32688
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 935 32428 32443 "plugins/funind/invfun.ml" 935 32428 32447
)
"plugins/funind/invfun.ml" 939 32636 32690 "plugins/funind/invfun.ml" 939 32636 32691
type(
  int
)
"plugins/funind/invfun.ml" 939 32636 32684 "plugins/funind/invfun.ml" 939 32636 32692
type(
  Term.constr
)
"plugins/funind/invfun.ml" 939 32636 32640 "plugins/funind/invfun.ml" 939 32636 32693
type(
  (Names.Idset.elt -> Tacmach.tactic) * Term.constr array * Term.constr
)
"plugins/funind/invfun.ml" 938 32584 32609 "plugins/funind/invfun.ml" 939 32636 32693
type(
  (Names.Idset.elt -> Tacmach.tactic) * Term.constr array * Term.constr
)
"plugins/funind/invfun.ml" 940 32694 32702 "plugins/funind/invfun.ml" 940 32694 32703
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 940 32694 32708 "plugins/funind/invfun.ml" 940 32694 32709
type(
  Term.constr
)
ident(
  def f "plugins/funind/invfun.ml" 940 32694 32718 "plugins/funind/invfun.ml" 941 32745 32787
)
"plugins/funind/invfun.ml" 940 32694 32710 "plugins/funind/invfun.ml" 940 32694 32716
type(
  Term.constr array
)
ident(
  def f_args "plugins/funind/invfun.ml" 940 32694 32718 "plugins/funind/invfun.ml" 941 32745 32787
)
"plugins/funind/invfun.ml" 940 32694 32704 "plugins/funind/invfun.ml" 940 32694 32717
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 940 32694 32702 "plugins/funind/invfun.ml" 940 32694 32717
type(
  (Term.constr, Term.types) Term.kind_of_term *
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 940 32694 32723 "plugins/funind/invfun.ml" 940 32694 32732
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/invfun.ml" 940 32694 32733 "plugins/funind/invfun.ml" 940 32694 32734
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/invfun.ml" 940 32694 32708 "plugins/funind/invfun.ml" 940 32694 32709
)
"plugins/funind/invfun.ml" 940 32694 32735 "plugins/funind/invfun.ml" 940 32694 32741
type(
  Term.constr
)
ident(
  int_ref fconst "plugins/funind/invfun.ml" 930 32192 32224 "plugins/funind/invfun.ml" 930 32192 32230
)
"plugins/funind/invfun.ml" 940 32694 32723 "plugins/funind/invfun.ml" 940 32694 32741
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 941 32745 32754 "plugins/funind/invfun.ml" 941 32745 32757
type(
  Names.Idset.elt
)
ident(
  def hid "plugins/funind/invfun.ml" 941 32745 32761 "plugins/funind/invfun.ml" 941 32745 32769
)
"plugins/funind/invfun.ml" 941 32745 32761 "plugins/funind/invfun.ml" 941 32745 32769
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/invfun.ml" 941 32745 32749 "plugins/funind/invfun.ml" 941 32745 32770
type(
  Names.Idset.elt -> Tacmach.tactic
)
"plugins/funind/invfun.ml" 941 32745 32771 "plugins/funind/invfun.ml" 941 32745 32777
type(
  Term.constr array
)
ident(
  int_ref f_args "plugins/funind/invfun.ml" 940 32694 32710 "plugins/funind/invfun.ml" 940 32694 32716
)
"plugins/funind/invfun.ml" 941 32745 32778 "plugins/funind/invfun.ml" 941 32745 32782
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 935 32428 32443 "plugins/funind/invfun.ml" 935 32428 32447
)
"plugins/funind/invfun.ml" 941 32745 32784 "plugins/funind/invfun.ml" 941 32745 32785
type(
  int
)
"plugins/funind/invfun.ml" 941 32745 32778 "plugins/funind/invfun.ml" 941 32745 32786
type(
  Term.constr
)
"plugins/funind/invfun.ml" 941 32745 32748 "plugins/funind/invfun.ml" 941 32745 32787
type(
  (Names.Idset.elt -> Tacmach.tactic) * Term.constr array * Term.constr
)
"plugins/funind/invfun.ml" 940 32694 32718 "plugins/funind/invfun.ml" 941 32745 32787
type(
  (Names.Idset.elt -> Tacmach.tactic) * Term.constr array * Term.constr
)
"plugins/funind/invfun.ml" 942 32788 32797 "plugins/funind/invfun.ml" 942 32788 32798
type(
  (Term.constr, Term.types) Term.kind_of_term *
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 942 32788 32807 "plugins/funind/invfun.ml" 942 32788 32810
type(
  Names.Idset.elt
)
ident(
  def hid "plugins/funind/invfun.ml" 942 32788 32814 "plugins/funind/invfun.ml" 942 32788 32831
)
"plugins/funind/invfun.ml" 942 32788 32814 "plugins/funind/invfun.ml" 942 32788 32821
type(
  int -> Pp.std_ppcmds -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclFAIL
)
"plugins/funind/invfun.ml" 942 32788 32822 "plugins/funind/invfun.ml" 942 32788 32823
type(
  int
)
"plugins/funind/invfun.ml" 942 32788 32825 "plugins/funind/invfun.ml" 942 32788 32827
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/invfun.ml" 942 32788 32828 "plugins/funind/invfun.ml" 942 32788 32830
type(
  unit
)
"plugins/funind/invfun.ml" 942 32788 32824 "plugins/funind/invfun.ml" 942 32788 32831
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 942 32788 32814 "plugins/funind/invfun.ml" 942 32788 32831
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 942 32788 32802 "plugins/funind/invfun.ml" 942 32788 32832
type(
  Names.Idset.elt -> Tacmach.tactic
)
"plugins/funind/invfun.ml" 942 32788 32833 "plugins/funind/invfun.ml" 942 32788 32837
type(
  Term.constr array
)
"plugins/funind/invfun.ml" 942 32788 32838 "plugins/funind/invfun.ml" 942 32788 32842
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 935 32428 32443 "plugins/funind/invfun.ml" 935 32428 32447
)
"plugins/funind/invfun.ml" 942 32788 32844 "plugins/funind/invfun.ml" 942 32788 32845
type(
  int
)
"plugins/funind/invfun.ml" 942 32788 32838 "plugins/funind/invfun.ml" 942 32788 32846
type(
  Term.constr
)
"plugins/funind/invfun.ml" 942 32788 32802 "plugins/funind/invfun.ml" 942 32788 32846
type(
  (Names.Idset.elt -> Tacmach.tactic) * Term.constr array * Term.constr
)
"plugins/funind/invfun.ml" 937 32524 32529 "plugins/funind/invfun.ml" 942 32788 32846
type(
  (Names.Idset.elt -> Tacmach.tactic) * Term.constr array * Term.constr
)
"plugins/funind/invfun.ml" 944 32853 32856 "plugins/funind/invfun.ml" 944 32853 32866
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/invfun.ml" 945 32868 32873 "plugins/funind/invfun.ml" 945 32868 32880
type(
  Names.Idset.elt -> Tacmach.tactic
)
ident(
  int_ref pre_tac "plugins/funind/invfun.ml" 936 32496 32503 "plugins/funind/invfun.ml" 936 32496 32510
)
"plugins/funind/invfun.ml" 945 32868 32881 "plugins/funind/invfun.ml" 945 32868 32884
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 930 32192 32220 "plugins/funind/invfun.ml" 930 32192 32223
)
"plugins/funind/invfun.ml" 945 32868 32873 "plugins/funind/invfun.ml" 945 32868 32884
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 946 32886 32891 "plugins/funind/invfun.ml" 946 32886 32903
type(
  Term.constr list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_generalize
)
"plugins/funind/invfun.ml" 946 32886 32905 "plugins/funind/invfun.ml" 946 32886 32912
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/invfun.ml" 946 32886 32913 "plugins/funind/invfun.ml" 946 32886 32922
type(
  Term.constr
)
ident(
  int_ref f_correct "plugins/funind/invfun.ml" 930 32192 32231 "plugins/funind/invfun.ml" 930 32192 32240
)
"plugins/funind/invfun.ml" 946 32886 32924 "plugins/funind/invfun.ml" 946 32886 32937
type(
  Term.constr array -> Term.constr list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/invfun.ml" 946 32886 32938 "plugins/funind/invfun.ml" 946 32886 32944
type(
  Term.constr array
)
ident(
  int_ref f_args "plugins/funind/invfun.ml" 936 32496 32511 "plugins/funind/invfun.ml" 936 32496 32517
)
"plugins/funind/invfun.ml" 946 32886 32923 "plugins/funind/invfun.ml" 946 32886 32945
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 946 32886 32945 "plugins/funind/invfun.ml" 946 32886 32946
type(
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/invfun.ml" 946 32886 32947 "plugins/funind/invfun.ml" 946 32886 32950
type(
  Term.constr
)
ident(
  int_ref res "plugins/funind/invfun.ml" 936 32496 32518 "plugins/funind/invfun.ml" 936 32496 32521
)
"plugins/funind/invfun.ml" 946 32886 32951 "plugins/funind/invfun.ml" 946 32886 32956
type(
  Names.Idset.elt -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 946 32886 32957 "plugins/funind/invfun.ml" 946 32886 32960
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 930 32192 32220 "plugins/funind/invfun.ml" 930 32192 32223
)
"plugins/funind/invfun.ml" 946 32886 32951 "plugins/funind/invfun.ml" 946 32886 32960
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 946 32886 32946 "plugins/funind/invfun.ml" 946 32886 32961
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 946 32886 32923 "plugins/funind/invfun.ml" 946 32886 32961
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 946 32886 32912 "plugins/funind/invfun.ml" 946 32886 32962
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 946 32886 32905 "plugins/funind/invfun.ml" 946 32886 32962
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 946 32886 32904 "plugins/funind/invfun.ml" 946 32886 32963
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 946 32886 32891 "plugins/funind/invfun.ml" 946 32886 32963
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 947 32965 32970 "plugins/funind/invfun.ml" 947 32965 32974
type(
  Names.Idset.elt list -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.thin
)
"plugins/funind/invfun.ml" 947 32965 32976 "plugins/funind/invfun.ml" 947 32965 32979
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 930 32192 32220 "plugins/funind/invfun.ml" 930 32192 32223
)
"plugins/funind/invfun.ml" 947 32965 32975 "plugins/funind/invfun.ml" 947 32965 32980
type(
  Names.Idset.elt list
)
"plugins/funind/invfun.ml" 947 32965 32970 "plugins/funind/invfun.ml" 947 32965 32980
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 948 32982 32987 "plugins/funind/invfun.ml" 948 32982 32994
type(
  Names.Idset.elt -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/invfun.ml" 948 32982 32995 "plugins/funind/invfun.ml" 948 32982 32998
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 930 32192 32220 "plugins/funind/invfun.ml" 930 32192 32223
)
"plugins/funind/invfun.ml" 948 32982 32987 "plugins/funind/invfun.ml" 948 32982 32998
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 949 33000 33005 "plugins/funind/invfun.ml" 949 33000 33012
type(
  Tacexpr.inversion_kind ->
  Genarg.intro_pattern_expr Util.located option ->
  Rawterm.quantified_hypothesis -> Tacmach.tactic
)
ident(
  ext_ref Inv.inv
)
"plugins/funind/invfun.ml" 949 33000 33013 "plugins/funind/invfun.ml" 949 33000 33026
type(
  Tacexpr.inversion_kind
)
"plugins/funind/invfun.ml" 949 33000 33027 "plugins/funind/invfun.ml" 949 33000 33031
type(
  Genarg.intro_pattern_expr Util.located option
)
"plugins/funind/invfun.ml" 949 33000 33050 "plugins/funind/invfun.ml" 949 33000 33053
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 930 32192 32220 "plugins/funind/invfun.ml" 930 32192 32223
)
"plugins/funind/invfun.ml" 949 33000 33032 "plugins/funind/invfun.ml" 949 33000 33054
type(
  Rawterm.quantified_hypothesis
)
"plugins/funind/invfun.ml" 949 33000 33005 "plugins/funind/invfun.ml" 949 33000 33054
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 950 33056 33066 "plugins/funind/invfun.ml" 950 33056 33067
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 951 33071 33079 "plugins/funind/invfun.ml" 952 33166 33225
)
"plugins/funind/invfun.ml" 951 33071 33083 "plugins/funind/invfun.ml" 951 33071 33090
type(
  Names.Idset.elt list
)
"plugins/funind/invfun.ml" 951 33071 33093 "plugins/funind/invfun.ml" 951 33071 33104
type(
  (Names.Idset.elt -> bool) -> Names.Idset.elt list -> Names.Idset.elt list
)
ident(
  ext_ref List.filter
)
"plugins/funind/invfun.ml" 951 33071 33110 "plugins/funind/invfun.ml" 951 33071 33112
type(
  Names.Idset.elt
)
ident(
  def id "plugins/funind/invfun.ml" 951 33071 33116 "plugins/funind/invfun.ml" 951 33071 33142
)
"plugins/funind/invfun.ml" 951 33071 33116 "plugins/funind/invfun.ml" 951 33071 33119
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/invfun.ml" 951 33071 33121 "plugins/funind/invfun.ml" 951 33071 33130
type(
  Names.Idset.elt -> Names.Idset.t -> bool
)
ident(
  ext_ref Names.Idset.mem
)
"plugins/funind/invfun.ml" 951 33071 33131 "plugins/funind/invfun.ml" 951 33071 33133
type(
  Names.Idset.elt
)
ident(
  int_ref id "plugins/funind/invfun.ml" 951 33071 33110 "plugins/funind/invfun.ml" 951 33071 33112
)
"plugins/funind/invfun.ml" 951 33071 33134 "plugins/funind/invfun.ml" 951 33071 33141
type(
  Names.Idset.t
)
ident(
  int_ref old_ids "plugins/funind/invfun.ml" 932 32263 32271 "plugins/funind/invfun.ml" 932 32263 32278
)
"plugins/funind/invfun.ml" 951 33071 33120 "plugins/funind/invfun.ml" 951 33071 33142
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 951 33071 33116 "plugins/funind/invfun.ml" 951 33071 33142
type(
  bool
)
"plugins/funind/invfun.ml" 951 33071 33105 "plugins/funind/invfun.ml" 951 33071 33143
type(
  Names.Idset.elt -> bool
)
"plugins/funind/invfun.ml" 951 33071 33145 "plugins/funind/invfun.ml" 951 33071 33159
type(
  Proof_type.goal Tacmach.sigma -> Names.Idset.elt list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/invfun.ml" 951 33071 33160 "plugins/funind/invfun.ml" 951 33071 33161
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 950 33056 33066 "plugins/funind/invfun.ml" 950 33056 33067
)
"plugins/funind/invfun.ml" 951 33071 33144 "plugins/funind/invfun.ml" 951 33071 33162
call(
  stack
)
type(
  Names.Idset.elt list
)
"plugins/funind/invfun.ml" 951 33071 33093 "plugins/funind/invfun.ml" 951 33071 33162
call(
  stack
)
type(
  Names.Idset.elt list
)
"plugins/funind/invfun.ml" 952 33166 33174 "plugins/funind/invfun.ml" 952 33166 33180
type(
  (Names.Idset.elt -> Proof_type.tactic) ->
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/invfun.ml" 952 33166 33182 "plugins/funind/invfun.ml" 952 33166 33194
type(
  Names.mutual_inductive ->
  (Names.Idset.elt -> Proof_type.tactic) ->
  Names.Idset.elt -> Proof_type.tactic
)
ident(
  int_ref revert_graph "plugins/funind/invfun.ml" 881 30467 30471 "plugins/funind/invfun.ml" 881 30467 30483
)
"plugins/funind/invfun.ml" 952 33166 33195 "plugins/funind/invfun.ml" 952 33166 33197
type(
  Names.mutual_inductive
)
ident(
  int_ref kn "plugins/funind/invfun.ml" 930 32192 32217 "plugins/funind/invfun.ml" 930 32192 32219
)
"plugins/funind/invfun.ml" 952 33166 33198 "plugins/funind/invfun.ml" 952 33166 33205
type(
  Names.Idset.elt -> Proof_type.tactic
)
ident(
  int_ref pre_tac "plugins/funind/invfun.ml" 936 32496 32503 "plugins/funind/invfun.ml" 936 32496 32510
)
"plugins/funind/invfun.ml" 952 33166 33181 "plugins/funind/invfun.ml" 952 33166 33206
call(
  stack
)
type(
  Names.Idset.elt -> Proof_type.tactic
)
"plugins/funind/invfun.ml" 952 33166 33209 "plugins/funind/invfun.ml" 952 33166 33212
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 930 32192 32220 "plugins/funind/invfun.ml" 930 32192 32223
)
"plugins/funind/invfun.ml" 952 33166 33214 "plugins/funind/invfun.ml" 952 33166 33221
type(
  Names.Idset.elt list
)
ident(
  int_ref new_ids "plugins/funind/invfun.ml" 951 33071 33083 "plugins/funind/invfun.ml" 951 33071 33090
)
"plugins/funind/invfun.ml" 952 33166 33208 "plugins/funind/invfun.ml" 952 33166 33222
type(
  Names.Idset.elt list
)
"plugins/funind/invfun.ml" 952 33166 33224 "plugins/funind/invfun.ml" 952 33166 33225
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 950 33056 33066 "plugins/funind/invfun.ml" 950 33056 33067
)
"plugins/funind/invfun.ml" 952 33166 33174 "plugins/funind/invfun.ml" 952 33166 33225
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 951 33071 33079 "plugins/funind/invfun.ml" 952 33166 33225
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 950 33056 33061 "plugins/funind/invfun.ml" 953 33226 33232
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 944 32853 32866 "plugins/funind/invfun.ml" 954 33234 33238
type(
  Proof_type.tactic list
)
"plugins/funind/invfun.ml" 954 33234 33239 "plugins/funind/invfun.ml" 954 33234 33240
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 931 32252 32258 "plugins/funind/invfun.ml" 931 32252 32259
)
"plugins/funind/invfun.ml" 944 32853 32856 "plugins/funind/invfun.ml" 954 33234 33240
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 936 32496 32499 "plugins/funind/invfun.ml" 954 33234 33240
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 935 32428 32449 "plugins/funind/invfun.ml" 954 33234 33240
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 955 33241 33249 "plugins/funind/invfun.ml" 955 33241 33250
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 955 33241 33254 "plugins/funind/invfun.ml" 955 33241 33261
type(
  int -> Pp.std_ppcmds -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclFAIL
)
"plugins/funind/invfun.ml" 955 33241 33262 "plugins/funind/invfun.ml" 955 33241 33263
type(
  int
)
"plugins/funind/invfun.ml" 955 33241 33265 "plugins/funind/invfun.ml" 955 33241 33267
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.mt
)
"plugins/funind/invfun.ml" 955 33241 33268 "plugins/funind/invfun.ml" 955 33241 33270
type(
  unit
)
"plugins/funind/invfun.ml" 955 33241 33264 "plugins/funind/invfun.ml" 955 33241 33271
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 955 33241 33272 "plugins/funind/invfun.ml" 955 33241 33273
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 931 32252 32258 "plugins/funind/invfun.ml" 931 32252 32259
)
"plugins/funind/invfun.ml" 955 33241 33254 "plugins/funind/invfun.ml" 955 33241 33273
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 934 32390 32394 "plugins/funind/invfun.ml" 955 33241 33273
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 933 32342 32346 "plugins/funind/invfun.ml" 955 33241 33273
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 932 32263 32267 "plugins/funind/invfun.ml" 955 33241 33273
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 931 32252 32254 "plugins/funind/invfun.ml" 955 33241 33273
type(
  Tacmach.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 959 33277 33281 "plugins/funind/invfun.ml" 959 33277 33287
type(
  Rawterm.quantified_hypothesis ->
  Libnames.global_reference -> Proof_type.tactic
)
ident(
  def invfun "plugins/funind/invfun.ml" 976 33786 33786 --
)
"plugins/funind/invfun.ml" 959 33277 33288 "plugins/funind/invfun.ml" 959 33277 33292
type(
  Rawterm.quantified_hypothesis
)
ident(
  def qhyp "plugins/funind/invfun.ml" 959 33277 33293 "plugins/funind/invfun.ml" 973 33717 33783
)
"plugins/funind/invfun.ml" 959 33277 33293 "plugins/funind/invfun.ml" 959 33277 33294
type(
  Libnames.global_reference
)
ident(
  def f "plugins/funind/invfun.ml" 960 33298 33300 "plugins/funind/invfun.ml" 973 33717 33783
)
"plugins/funind/invfun.ml" 960 33298 33304 "plugins/funind/invfun.ml" 960 33298 33305
type(
  Names.constant
)
"plugins/funind/invfun.ml" 961 33308 33318 "plugins/funind/invfun.ml" 961 33308 33319
type(
  Libnames.global_reference
)
ident(
  int_ref f "plugins/funind/invfun.ml" 959 33277 33293 "plugins/funind/invfun.ml" 959 33277 33294
)
"plugins/funind/invfun.ml" 962 33325 33342 "plugins/funind/invfun.ml" 962 33325 33343
type(
  Names.constant
)
ident(
  def f "plugins/funind/invfun.ml" 962 33325 33347 "plugins/funind/invfun.ml" 962 33325 33348
)
"plugins/funind/invfun.ml" 962 33325 33333 "plugins/funind/invfun.ml" 962 33325 33343
type(
  Libnames.global_reference
)
"plugins/funind/invfun.ml" 962 33325 33347 "plugins/funind/invfun.ml" 962 33325 33348
type(
  Names.constant
)
ident(
  int_ref f "plugins/funind/invfun.ml" 962 33325 33342 "plugins/funind/invfun.ml" 962 33325 33343
)
"plugins/funind/invfun.ml" 963 33349 33357 "plugins/funind/invfun.ml" 963 33349 33358
type(
  Libnames.global_reference
)
"plugins/funind/invfun.ml" 963 33349 33362 "plugins/funind/invfun.ml" 963 33349 33367
type(
  exn -> Names.constant
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/invfun.ml" 963 33349 33384 "plugins/funind/invfun.ml" 963 33349 33386
type(
  string
)
"plugins/funind/invfun.ml" 963 33349 33387 "plugins/funind/invfun.ml" 963 33349 33390
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 963 33349 33391 "plugins/funind/invfun.ml" 963 33349 33407
type(
  string
)
"plugins/funind/invfun.ml" 963 33349 33387 "plugins/funind/invfun.ml" 963 33349 33407
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 963 33349 33368 "plugins/funind/invfun.ml" 963 33349 33409
type(
  exn
)
"plugins/funind/invfun.ml" 963 33349 33362 "plugins/funind/invfun.ml" 963 33349 33409
type(
  Names.constant
)
"plugins/funind/invfun.ml" 961 33308 33312 "plugins/funind/invfun.ml" 963 33349 33409
type(
  Names.constant
)
"plugins/funind/invfun.ml" 966 33421 33429 "plugins/funind/invfun.ml" 966 33421 33435
type(
  Indfun_common.function_info
)
ident(
  def finfos "plugins/funind/invfun.ml" 967 33463 33467 "plugins/funind/invfun.ml" 970 33569 33666
)
"plugins/funind/invfun.ml" 966 33421 33438 "plugins/funind/invfun.ml" 966 33421 33457
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/invfun.ml" 966 33421 33458 "plugins/funind/invfun.ml" 966 33421 33459
type(
  Names.constant
)
ident(
  int_ref f "plugins/funind/invfun.ml" 960 33298 33304 "plugins/funind/invfun.ml" 960 33298 33305
)
"plugins/funind/invfun.ml" 966 33421 33438 "plugins/funind/invfun.ml" 966 33421 33459
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 967 33463 33471 "plugins/funind/invfun.ml" 967 33463 33480
type(
  Term.constr
)
ident(
  def f_correct "plugins/funind/invfun.ml" 970 33569 33573 "plugins/funind/invfun.ml" 970 33569 33666
)
"plugins/funind/invfun.ml" 967 33463 33483 "plugins/funind/invfun.ml" 967 33463 33490
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/invfun.ml" 967 33463 33491 "plugins/funind/invfun.ml" 967 33463 33501
type(
  Names.constant option -> Names.constant
)
ident(
  ext_ref Option.get
)
"plugins/funind/invfun.ml" 967 33463 33502 "plugins/funind/invfun.ml" 967 33463 33508
type(
  Indfun_common.function_info
)
ident(
  int_ref finfos "plugins/funind/invfun.ml" 966 33421 33429 "plugins/funind/invfun.ml" 966 33421 33435
)
"plugins/funind/invfun.ml" 967 33463 33502 "plugins/funind/invfun.ml" 967 33463 33526
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 967 33463 33490 "plugins/funind/invfun.ml" 967 33463 33527
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 967 33463 33483 "plugins/funind/invfun.ml" 967 33463 33527
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 968 33528 33536 "plugins/funind/invfun.ml" 968 33528 33538
type(
  Names.mutual_inductive
)
ident(
  def kn "plugins/funind/invfun.ml" 970 33569 33573 "plugins/funind/invfun.ml" 970 33569 33666
)
"plugins/funind/invfun.ml" 968 33528 33541 "plugins/funind/invfun.ml" 968 33528 33544
type(
  Names.inductive -> Names.mutual_inductive
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 968 33528 33545 "plugins/funind/invfun.ml" 968 33528 33551
type(
  Indfun_common.function_info
)
ident(
  int_ref finfos "plugins/funind/invfun.ml" 966 33421 33429 "plugins/funind/invfun.ml" 966 33421 33435
)
"plugins/funind/invfun.ml" 968 33528 33545 "plugins/funind/invfun.ml" 968 33528 33561
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 968 33528 33541 "plugins/funind/invfun.ml" 968 33528 33561
type(
  Names.mutual_inductive
)
"plugins/funind/invfun.ml" 970 33569 33573 "plugins/funind/invfun.ml" 970 33569 33597
type(
  (Names.Idset.elt -> Proof_type.tactic) ->
  Rawterm.quantified_hypothesis -> Proof_type.tactic
)
ident(
  ext_ref Tactics.try_intros_until
)
"plugins/funind/invfun.ml" 970 33569 33603 "plugins/funind/invfun.ml" 970 33569 33606
type(
  Names.Idset.elt
)
ident(
  def hid "plugins/funind/invfun.ml" 970 33569 33610 "plugins/funind/invfun.ml" 970 33569 33660
)
"plugins/funind/invfun.ml" 970 33569 33610 "plugins/funind/invfun.ml" 970 33569 33630
type(
  Names.mutual_inductive ->
  Names.Idset.elt -> Term.constr -> Term.constr -> Tacmach.tactic
)
ident(
  int_ref functional_inversion "plugins/funind/invfun.ml" 930 32192 32196 "plugins/funind/invfun.ml" 930 32192 32216
)
"plugins/funind/invfun.ml" 970 33569 33631 "plugins/funind/invfun.ml" 970 33569 33633
type(
  Names.mutual_inductive
)
ident(
  int_ref kn "plugins/funind/invfun.ml" 968 33528 33536 "plugins/funind/invfun.ml" 968 33528 33538
)
"plugins/funind/invfun.ml" 970 33569 33634 "plugins/funind/invfun.ml" 970 33569 33637
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 970 33569 33603 "plugins/funind/invfun.ml" 970 33569 33606
)
"plugins/funind/invfun.ml" 970 33569 33639 "plugins/funind/invfun.ml" 970 33569 33646
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/invfun.ml" 970 33569 33647 "plugins/funind/invfun.ml" 970 33569 33648
type(
  Names.constant
)
ident(
  int_ref f "plugins/funind/invfun.ml" 960 33298 33304 "plugins/funind/invfun.ml" 960 33298 33305
)
"plugins/funind/invfun.ml" 970 33569 33638 "plugins/funind/invfun.ml" 970 33569 33649
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 970 33569 33651 "plugins/funind/invfun.ml" 970 33569 33660
type(
  Term.constr
)
ident(
  int_ref f_correct "plugins/funind/invfun.ml" 967 33463 33471 "plugins/funind/invfun.ml" 967 33463 33480
)
"plugins/funind/invfun.ml" 970 33569 33610 "plugins/funind/invfun.ml" 970 33569 33660
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/invfun.ml" 970 33569 33598 "plugins/funind/invfun.ml" 970 33569 33661
type(
  Names.Idset.elt -> Proof_type.tactic
)
"plugins/funind/invfun.ml" 970 33569 33662 "plugins/funind/invfun.ml" 970 33569 33666
type(
  Rawterm.quantified_hypothesis
)
ident(
  int_ref qhyp "plugins/funind/invfun.ml" 959 33277 33288 "plugins/funind/invfun.ml" 959 33277 33292
)
"plugins/funind/invfun.ml" 970 33569 33573 "plugins/funind/invfun.ml" 970 33569 33666
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 967 33463 33467 "plugins/funind/invfun.ml" 970 33569 33666
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 966 33421 33425 "plugins/funind/invfun.ml" 970 33569 33666
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 972 33674 33680 "plugins/funind/invfun.ml" 972 33674 33689
type(
  exn
)
"plugins/funind/invfun.ml" 972 33674 33694 "plugins/funind/invfun.ml" 972 33674 33699
type(
  string -> Proof_type.tactic
)
ident(
  ext_ref Util.error
)
"plugins/funind/invfun.ml" 972 33674 33700 "plugins/funind/invfun.ml" 972 33674 33716
type(
  string
)
"plugins/funind/invfun.ml" 972 33674 33694 "plugins/funind/invfun.ml" 972 33674 33716
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 973 33717 33723 "plugins/funind/invfun.ml" 973 33717 33736
type(
  exn
)
"plugins/funind/invfun.ml" 973 33717 33741 "plugins/funind/invfun.ml" 973 33717 33746
type(
  string -> Proof_type.tactic
)
ident(
  ext_ref Util.error
)
"plugins/funind/invfun.ml" 973 33717 33747 "plugins/funind/invfun.ml" 973 33717 33783
type(
  string
)
"plugins/funind/invfun.ml" 973 33717 33741 "plugins/funind/invfun.ml" 973 33717 33783
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 965 33415 33417 "plugins/funind/invfun.ml" 973 33717 33783
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 960 33298 33300 "plugins/funind/invfun.ml" 973 33717 33783
type(
  Proof_type.tactic
)
"plugins/funind/invfun.ml" 976 33786 33790 "plugins/funind/invfun.ml" 976 33786 33796
type(
  Rawterm.quantified_hypothesis ->
  Libnames.global_reference option ->
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def invfun "plugins/funind/invfun.ml" 1020 35499 35503 --
)
"plugins/funind/invfun.ml" 976 33786 33797 "plugins/funind/invfun.ml" 976 33786 33801
type(
  Rawterm.quantified_hypothesis
)
ident(
  def qhyp "plugins/funind/invfun.ml" 976 33786 33802 "plugins/funind/invfun.ml" 1020 35499 35503
)
"plugins/funind/invfun.ml" 976 33786 33802 "plugins/funind/invfun.ml" 976 33786 33803
type(
  Libnames.global_reference option
)
ident(
  def f "plugins/funind/invfun.ml" 976 33786 33804 "plugins/funind/invfun.ml" 1020 35499 35503
)
"plugins/funind/invfun.ml" 976 33786 33804 "plugins/funind/invfun.ml" 976 33786 33805
type(
  Proof_type.goal Evd.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 977 33808 33810 "plugins/funind/invfun.ml" 1020 35499 35503
)
"plugins/funind/invfun.ml" 977 33808 33816 "plugins/funind/invfun.ml" 977 33808 33817
type(
  Libnames.global_reference option
)
ident(
  int_ref f "plugins/funind/invfun.ml" 976 33786 33802 "plugins/funind/invfun.ml" 976 33786 33803
)
"plugins/funind/invfun.ml" 978 33823 33834 "plugins/funind/invfun.ml" 978 33823 33835
type(
  Libnames.global_reference
)
ident(
  def f "plugins/funind/invfun.ml" 978 33823 33839 "plugins/funind/invfun.ml" 978 33823 33854
)
"plugins/funind/invfun.ml" 978 33823 33829 "plugins/funind/invfun.ml" 978 33823 33835
type(
  Libnames.global_reference option
)
"plugins/funind/invfun.ml" 978 33823 33839 "plugins/funind/invfun.ml" 978 33823 33845
type(
  Rawterm.quantified_hypothesis ->
  Libnames.global_reference -> Proof_type.tactic
)
ident(
  int_ref invfun "plugins/funind/invfun.ml" 959 33277 33281 "plugins/funind/invfun.ml" 959 33277 33287
)
"plugins/funind/invfun.ml" 978 33823 33846 "plugins/funind/invfun.ml" 978 33823 33850
type(
  Rawterm.quantified_hypothesis
)
ident(
  int_ref qhyp "plugins/funind/invfun.ml" 976 33786 33797 "plugins/funind/invfun.ml" 976 33786 33801
)
"plugins/funind/invfun.ml" 978 33823 33851 "plugins/funind/invfun.ml" 978 33823 33852
type(
  Libnames.global_reference
)
ident(
  int_ref f "plugins/funind/invfun.ml" 978 33823 33834 "plugins/funind/invfun.ml" 978 33823 33835
)
"plugins/funind/invfun.ml" 978 33823 33853 "plugins/funind/invfun.ml" 978 33823 33854
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 976 33786 33804 "plugins/funind/invfun.ml" 976 33786 33805
)
"plugins/funind/invfun.ml" 978 33823 33839 "plugins/funind/invfun.ml" 978 33823 33854
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 979 33855 33861 "plugins/funind/invfun.ml" 979 33855 33865
type(
  Libnames.global_reference option
)
"plugins/funind/invfun.ml" 980 33869 33870 "plugins/funind/invfun.ml" 980 33869 33894
type(
  (Names.Idset.elt -> Proof_type.tactic) ->
  Rawterm.quantified_hypothesis -> Proof_type.tactic
)
ident(
  ext_ref Tactics.try_intros_until
)
"plugins/funind/invfun.ml" 981 33895 33903 "plugins/funind/invfun.ml" 981 33895 33906
type(
  Names.Idset.elt
)
ident(
  def hid "plugins/funind/invfun.ml" 981 33895 33907 "plugins/funind/invfun.ml" 1017 35403 35485
)
"plugins/funind/invfun.ml" 981 33895 33907 "plugins/funind/invfun.ml" 981 33895 33908
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/invfun.ml" 982 33912 33918 "plugins/funind/invfun.ml" 1017 35403 35485
)
"plugins/funind/invfun.ml" 982 33912 33922 "plugins/funind/invfun.ml" 982 33912 33929
type(
  Term.types
)
"plugins/funind/invfun.ml" 982 33912 33932 "plugins/funind/invfun.ml" 982 33912 33942
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/invfun.ml" 982 33912 33943 "plugins/funind/invfun.ml" 982 33912 33944
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 981 33895 33907 "plugins/funind/invfun.ml" 981 33895 33908
)
"plugins/funind/invfun.ml" 982 33912 33946 "plugins/funind/invfun.ml" 982 33912 33951
type(
  Names.Idset.elt -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/invfun.ml" 982 33912 33952 "plugins/funind/invfun.ml" 982 33912 33955
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 981 33895 33903 "plugins/funind/invfun.ml" 981 33895 33906
)
"plugins/funind/invfun.ml" 982 33912 33945 "plugins/funind/invfun.ml" 982 33912 33956
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 982 33912 33932 "plugins/funind/invfun.ml" 982 33912 33956
call(
  stack
)
type(
  Term.types
)
"plugins/funind/invfun.ml" 983 33961 33973 "plugins/funind/invfun.ml" 983 33961 33985
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/invfun.ml" 983 33961 33986 "plugins/funind/invfun.ml" 983 33961 33993
type(
  Term.types
)
ident(
  int_ref hyp_typ "plugins/funind/invfun.ml" 982 33912 33922 "plugins/funind/invfun.ml" 982 33912 33929
)
"plugins/funind/invfun.ml" 983 33961 33973 "plugins/funind/invfun.ml" 983 33961 33993
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 984 33999 34013 "plugins/funind/invfun.ml" 984 33999 34015
type(
  Term.constr
)
ident(
  def eq "plugins/funind/invfun.ml" 984 33999 34022 "plugins/funind/invfun.ml" 1016 35394 35402
)
"plugins/funind/invfun.ml" 984 33999 34016 "plugins/funind/invfun.ml" 984 33999 34020
type(
  Term.constr array
)
ident(
  def args "plugins/funind/invfun.ml" 984 33999 34022 "plugins/funind/invfun.ml" 1016 35394 35402
)
"plugins/funind/invfun.ml" 984 33999 34009 "plugins/funind/invfun.ml" 984 33999 34021
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 984 33999 34027 "plugins/funind/invfun.ml" 984 33999 34036
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/invfun.ml" 984 33999 34037 "plugins/funind/invfun.ml" 984 33999 34039
type(
  Term.constr
)
ident(
  int_ref eq "plugins/funind/invfun.ml" 984 33999 34013 "plugins/funind/invfun.ml" 984 33999 34015
)
"plugins/funind/invfun.ml" 984 33999 34041 "plugins/funind/invfun.ml" 984 33999 34060
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_eq
)
"plugins/funind/invfun.ml" 984 33999 34061 "plugins/funind/invfun.ml" 984 33999 34063
type(
  unit
)
"plugins/funind/invfun.ml" 984 33999 34040 "plugins/funind/invfun.ml" 984 33999 34064
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 984 33999 34027 "plugins/funind/invfun.ml" 984 33999 34064
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 986 34079 34090 "plugins/funind/invfun.ml" 986 34079 34092
type(
  Term.constr
)
"plugins/funind/invfun.ml" 986 34079 34093 "plugins/funind/invfun.ml" 986 34079 34094
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 986 34079 34090 "plugins/funind/invfun.ml" 986 34079 34094
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 986 34079 34097 "plugins/funind/invfun.ml" 986 34079 34110
type(
  Term.constr -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/invfun.ml" 986 34079 34111 "plugins/funind/invfun.ml" 986 34079 34115
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 984 33999 34016 "plugins/funind/invfun.ml" 984 33999 34020
)
"plugins/funind/invfun.ml" 986 34079 34117 "plugins/funind/invfun.ml" 986 34079 34118
type(
  int
)
"plugins/funind/invfun.ml" 986 34079 34111 "plugins/funind/invfun.ml" 986 34079 34119
type(
  Term.constr
)
"plugins/funind/invfun.ml" 986 34079 34097 "plugins/funind/invfun.ml" 986 34079 34119
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 988 34134 34146 "plugins/funind/invfun.ml" 988 34134 34149
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/invfun.ml" 988 34134 34151 "plugins/funind/invfun.ml" 988 34134 34158
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isConst
)
"plugins/funind/invfun.ml" 988 34134 34159 "plugins/funind/invfun.ml" 988 34134 34161
type(
  Term.constr
)
ident(
  int_ref f1 "plugins/funind/invfun.ml" 986 34079 34090 "plugins/funind/invfun.ml" 986 34079 34092
)
"plugins/funind/invfun.ml" 988 34134 34150 "plugins/funind/invfun.ml" 988 34134 34162
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 988 34134 34146 "plugins/funind/invfun.ml" 988 34134 34162
type(
  bool
)
"plugins/funind/invfun.ml" 988 34134 34168 "plugins/funind/invfun.ml" 988 34134 34176
type(
  string -> unit
)
ident(
  ext_ref Pervasives.failwith
)
"plugins/funind/invfun.ml" 988 34134 34177 "plugins/funind/invfun.ml" 988 34134 34179
type(
  string
)
"plugins/funind/invfun.ml" 988 34134 34168 "plugins/funind/invfun.ml" 988 34134 34179
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 988 34134 34143 "plugins/funind/invfun.ml" 988 34134 34179
type(
  unit
)
"plugins/funind/invfun.ml" 989 34181 34194 "plugins/funind/invfun.ml" 989 34181 34200
type(
  Indfun_common.function_info
)
ident(
  def finfos "plugins/funind/invfun.ml" 990 34241 34250 "plugins/funind/invfun.ml" 993 34362 34413
)
"plugins/funind/invfun.ml" 989 34181 34203 "plugins/funind/invfun.ml" 989 34181 34222
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/invfun.ml" 989 34181 34224 "plugins/funind/invfun.ml" 989 34181 34233
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/invfun.ml" 989 34181 34234 "plugins/funind/invfun.ml" 989 34181 34236
type(
  Term.constr
)
ident(
  int_ref f1 "plugins/funind/invfun.ml" 986 34079 34090 "plugins/funind/invfun.ml" 986 34079 34092
)
"plugins/funind/invfun.ml" 989 34181 34223 "plugins/funind/invfun.ml" 989 34181 34237
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 989 34181 34203 "plugins/funind/invfun.ml" 989 34181 34237
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 990 34241 34254 "plugins/funind/invfun.ml" 990 34241 34263
type(
  Term.constr
)
ident(
  def f_correct "plugins/funind/invfun.ml" 993 34362 34371 "plugins/funind/invfun.ml" 993 34362 34413
)
"plugins/funind/invfun.ml" 990 34241 34266 "plugins/funind/invfun.ml" 990 34241 34273
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/invfun.ml" 990 34241 34274 "plugins/funind/invfun.ml" 990 34241 34284
type(
  Names.constant option -> Names.constant
)
ident(
  ext_ref Option.get
)
"plugins/funind/invfun.ml" 990 34241 34285 "plugins/funind/invfun.ml" 990 34241 34291
type(
  Indfun_common.function_info
)
ident(
  int_ref finfos "plugins/funind/invfun.ml" 989 34181 34194 "plugins/funind/invfun.ml" 989 34181 34200
)
"plugins/funind/invfun.ml" 990 34241 34285 "plugins/funind/invfun.ml" 990 34241 34309
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 990 34241 34273 "plugins/funind/invfun.ml" 990 34241 34310
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 990 34241 34266 "plugins/funind/invfun.ml" 990 34241 34310
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 991 34311 34324 "plugins/funind/invfun.ml" 991 34311 34326
type(
  Names.mutual_inductive
)
ident(
  def kn "plugins/funind/invfun.ml" 993 34362 34371 "plugins/funind/invfun.ml" 993 34362 34413
)
"plugins/funind/invfun.ml" 991 34311 34329 "plugins/funind/invfun.ml" 991 34311 34332
type(
  Names.inductive -> Names.mutual_inductive
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 991 34311 34333 "plugins/funind/invfun.ml" 991 34311 34339
type(
  Indfun_common.function_info
)
ident(
  int_ref finfos "plugins/funind/invfun.ml" 989 34181 34194 "plugins/funind/invfun.ml" 989 34181 34200
)
"plugins/funind/invfun.ml" 991 34311 34333 "plugins/funind/invfun.ml" 991 34311 34349
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 991 34311 34329 "plugins/funind/invfun.ml" 991 34311 34349
type(
  Names.mutual_inductive
)
"plugins/funind/invfun.ml" 993 34362 34371 "plugins/funind/invfun.ml" 993 34362 34391
type(
  Names.mutual_inductive ->
  Names.Idset.elt -> Term.constr -> Term.constr -> Tacmach.tactic
)
ident(
  int_ref functional_inversion "plugins/funind/invfun.ml" 930 32192 32196 "plugins/funind/invfun.ml" 930 32192 32216
)
"plugins/funind/invfun.ml" 993 34362 34392 "plugins/funind/invfun.ml" 993 34362 34394
type(
  Names.mutual_inductive
)
ident(
  int_ref kn "plugins/funind/invfun.ml" 991 34311 34324 "plugins/funind/invfun.ml" 991 34311 34326
)
"plugins/funind/invfun.ml" 993 34362 34395 "plugins/funind/invfun.ml" 993 34362 34398
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 981 33895 33903 "plugins/funind/invfun.ml" 981 33895 33906
)
"plugins/funind/invfun.ml" 993 34362 34399 "plugins/funind/invfun.ml" 993 34362 34401
type(
  Term.constr
)
ident(
  int_ref f1 "plugins/funind/invfun.ml" 986 34079 34090 "plugins/funind/invfun.ml" 986 34079 34092
)
"plugins/funind/invfun.ml" 993 34362 34402 "plugins/funind/invfun.ml" 993 34362 34411
type(
  Term.constr
)
ident(
  int_ref f_correct "plugins/funind/invfun.ml" 990 34241 34254 "plugins/funind/invfun.ml" 990 34241 34263
)
"plugins/funind/invfun.ml" 993 34362 34412 "plugins/funind/invfun.ml" 993 34362 34413
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 981 33895 33907 "plugins/funind/invfun.ml" 981 33895 33908
)
"plugins/funind/invfun.ml" 993 34362 34371 "plugins/funind/invfun.ml" 993 34362 34413
call(
  stack
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 990 34241 34250 "plugins/funind/invfun.ml" 993 34362 34413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 989 34181 34190 "plugins/funind/invfun.ml" 993 34362 34413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 988 34134 34143 "plugins/funind/invfun.ml" 993 34362 34413
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 994 34414 34436 "plugins/funind/invfun.ml" 994 34414 34438
type(
  string
)
"plugins/funind/invfun.ml" 994 34414 34428 "plugins/funind/invfun.ml" 994 34414 34438
type(
  exn
)
"plugins/funind/invfun.ml" 994 34414 34441 "plugins/funind/invfun.ml" 994 34414 34454
type(
  exn
)
"plugins/funind/invfun.ml" 994 34414 34428 "plugins/funind/invfun.ml" 994 34414 34454
type(
  exn
)
"plugins/funind/invfun.ml" 994 34414 34457 "plugins/funind/invfun.ml" 994 34414 34466
type(
  exn
)
"plugins/funind/invfun.ml" 994 34414 34428 "plugins/funind/invfun.ml" 994 34414 34466
type(
  exn
)
"plugins/funind/invfun.ml" 996 34483 34491 "plugins/funind/invfun.ml" 996 34483 34493
type(
  Term.constr
)
ident(
  def f2 "plugins/funind/invfun.ml" 997 34524 34528 "plugins/funind/invfun.ml" 1002 34727 34774
)
"plugins/funind/invfun.ml" 996 34483 34494 "plugins/funind/invfun.ml" 996 34483 34495
type(
  Term.constr list
)
"plugins/funind/invfun.ml" 996 34483 34491 "plugins/funind/invfun.ml" 996 34483 34495
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 996 34483 34498 "plugins/funind/invfun.ml" 996 34483 34511
type(
  Term.constr -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/invfun.ml" 996 34483 34512 "plugins/funind/invfun.ml" 996 34483 34516
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/invfun.ml" 984 33999 34016 "plugins/funind/invfun.ml" 984 33999 34020
)
"plugins/funind/invfun.ml" 996 34483 34518 "plugins/funind/invfun.ml" 996 34483 34519
type(
  int
)
"plugins/funind/invfun.ml" 996 34483 34512 "plugins/funind/invfun.ml" 996 34483 34520
type(
  Term.constr
)
"plugins/funind/invfun.ml" 996 34483 34498 "plugins/funind/invfun.ml" 996 34483 34520
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/invfun.ml" 997 34524 34531 "plugins/funind/invfun.ml" 997 34524 34534
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/invfun.ml" 997 34524 34536 "plugins/funind/invfun.ml" 997 34524 34543
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isConst
)
"plugins/funind/invfun.ml" 997 34524 34544 "plugins/funind/invfun.ml" 997 34524 34546
type(
  Term.constr
)
ident(
  int_ref f2 "plugins/funind/invfun.ml" 996 34483 34491 "plugins/funind/invfun.ml" 996 34483 34493
)
"plugins/funind/invfun.ml" 997 34524 34535 "plugins/funind/invfun.ml" 997 34524 34547
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 997 34524 34531 "plugins/funind/invfun.ml" 997 34524 34547
type(
  bool
)
"plugins/funind/invfun.ml" 997 34524 34553 "plugins/funind/invfun.ml" 997 34524 34561
type(
  string -> unit
)
ident(
  ext_ref Pervasives.failwith
)
"plugins/funind/invfun.ml" 997 34524 34562 "plugins/funind/invfun.ml" 997 34524 34564
type(
  string
)
"plugins/funind/invfun.ml" 997 34524 34553 "plugins/funind/invfun.ml" 997 34524 34564
call(
  stack
)
type(
  unit
)
"plugins/funind/invfun.ml" 997 34524 34528 "plugins/funind/invfun.ml" 997 34524 34564
type(
  unit
)
"plugins/funind/invfun.ml" 998 34566 34574 "plugins/funind/invfun.ml" 998 34566 34580
type(
  Indfun_common.function_info
)
ident(
  def finfos "plugins/funind/invfun.ml" 999 34621 34625 "plugins/funind/invfun.ml" 1002 34727 34774
)
"plugins/funind/invfun.ml" 998 34566 34583 "plugins/funind/invfun.ml" 998 34566 34602
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/invfun.ml" 998 34566 34604 "plugins/funind/invfun.ml" 998 34566 34613
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/invfun.ml" 998 34566 34614 "plugins/funind/invfun.ml" 998 34566 34616
type(
  Term.constr
)
ident(
  int_ref f2 "plugins/funind/invfun.ml" 996 34483 34491 "plugins/funind/invfun.ml" 996 34483 34493
)
"plugins/funind/invfun.ml" 998 34566 34603 "plugins/funind/invfun.ml" 998 34566 34617
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 998 34566 34583 "plugins/funind/invfun.ml" 998 34566 34617
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/invfun.ml" 999 34621 34629 "plugins/funind/invfun.ml" 999 34621 34638
type(
  Term.constr
)
ident(
  def f_correct "plugins/funind/invfun.ml" 1002 34727 34731 "plugins/funind/invfun.ml" 1002 34727 34774
)
"plugins/funind/invfun.ml" 999 34621 34641 "plugins/funind/invfun.ml" 999 34621 34648
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/invfun.ml" 999 34621 34649 "plugins/funind/invfun.ml" 999 34621 34659
type(
  Names.constant option -> Names.constant
)
ident(
  ext_ref Option.get
)
"plugins/funind/invfun.ml" 999 34621 34660 "plugins/funind/invfun.ml" 999 34621 34666
type(
  Indfun_common.function_info
)
ident(
  int_ref finfos "plugins/funind/invfun.ml" 998 34566 34574 "plugins/funind/invfun.ml" 998 34566 34580
)
"plugins/funind/invfun.ml" 999 34621 34660 "plugins/funind/invfun.ml" 999 34621 34684
type(
  Names.constant option
)
"plugins/funind/invfun.ml" 999 34621 34648 "plugins/funind/invfun.ml" 999 34621 34685
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/invfun.ml" 999 34621 34641 "plugins/funind/invfun.ml" 999 34621 34685
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/invfun.ml" 1000 34686 34694 "plugins/funind/invfun.ml" 1000 34686 34696
type(
  Names.mutual_inductive
)
ident(
  def kn "plugins/funind/invfun.ml" 1002 34727 34731 "plugins/funind/invfun.ml" 1002 34727 34774
)
"plugins/funind/invfun.ml" 1000 34686 34699 "plugins/funind/invfun.ml" 1000 34686 34702
type(
  Names.inductive -> Names.mutual_inductive
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/invfun.ml" 1000 34686 34703 "plugins/funind/invfun.ml" 1000 34686 34709
type(
  Indfun_common.function_info
)
ident(
  int_ref finfos "plugins/funind/invfun.ml" 998 34566 34574 "plugins/funind/invfun.ml" 998 34566 34580
)
"plugins/funind/invfun.ml" 1000 34686 34703 "plugins/funind/invfun.ml" 1000 34686 34719
type(
  Names.inductive
)
"plugins/funind/invfun.ml" 1000 34686 34699 "plugins/funind/invfun.ml" 1000 34686 34719
type(
  Names.mutual_inductive
)
"plugins/funind/invfun.ml" 1002 34727 34731 "plugins/funind/invfun.ml" 1002 34727 34751
type(
  Names.mutual_inductive ->
  Names.Idset.elt -> Term.constr -> Term.constr -> Tacmach.tactic
)
ident(
  int_ref functional_inversion "plugins/funind/invfun.ml" 930 32192 32196 "plugins/funind/invfun.ml" 930 32192 32216
)
"plugins/funind/invfun.ml" 1002 34727 34752 "plugins/funind/invfun.ml" 1002 34727 34754
type(
  Names.mutual_inductive
)
ident(
  int_ref kn "plugins/funind/invfun.ml" 1000 34686 34694 "plugins/funind/invfun.ml" 1000 34686 34696
)
"plugins/funind/invfun.ml" 1002 34727 34755 "plugins/funind/invfun.ml" 1002 34727 34758
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 981 33895 33903 "plugins/funind/invfun.ml" 981 33895 33906
)
"plugins/funind/invfun.ml" 1002 34727 34760 "plugins/funind/invfun.ml" 1002 34727 34762
type(
  Term.constr
)
ident(
  int_ref f2 "plugins/funind/invfun.ml" 996 34483 34491 "plugins/funind/invfun.ml" 996 34483 34493
)
"plugins/funind/invfun.ml" 1002 34727 34763 "plugins/funind/invfun.ml" 1002 34727 34772
type(
  Term.constr
)
ident(
  int_ref f_correct "plugins/funind/invfun.ml" 999 34621 34629 "plugins/funind/invfun.ml" 999 34621 34638
)
"plugins/funind/invfun.ml" 1002 34727 34773 "plugins/funind/invfun.ml" 1002 34727 34774
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 981 33895 33907 "plugins/funind/invfun.ml" 981 33895 33908
)
"plugins/funind/invfun.ml" 1002 34727 34731 "plugins/funind/invfun.ml" 1002 34727 34774
call(
  stack
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 999 34621 34625 "plugins/funind/invfun.ml" 1002 34727 34774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 998 34566 34570 "plugins/funind/invfun.ml" 1002 34727 34774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 997 34524 34528 "plugins/funind/invfun.ml" 1002 34727 34774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 996 34483 34487 "plugins/funind/invfun.ml" 1002 34727 34774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 1004 34789 34803 "plugins/funind/invfun.ml" 1004 34789 34805
type(
  string
)
"plugins/funind/invfun.ml" 1004 34789 34795 "plugins/funind/invfun.ml" 1004 34789 34805
type(
  exn
)
"plugins/funind/invfun.ml" 1005 34809 34817 "plugins/funind/invfun.ml" 1005 34809 34829
type(
  string ->
  Pp.std_ppcmds -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.errorlabstrm
)
"plugins/funind/invfun.ml" 1005 34809 34830 "plugins/funind/invfun.ml" 1005 34809 34832
type(
  string
)
"plugins/funind/invfun.ml" 1005 34809 34834 "plugins/funind/invfun.ml" 1005 34809 34837
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 1005 34809 34838 "plugins/funind/invfun.ml" 1005 34809 34850
type(
  string
)
"plugins/funind/invfun.ml" 1005 34809 34834 "plugins/funind/invfun.ml" 1005 34809 34850
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1005 34809 34851 "plugins/funind/invfun.ml" 1005 34809 34853
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 1005 34809 34854 "plugins/funind/invfun.ml" 1005 34809 34868
type(
  Names.Idset.elt -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_id
)
"plugins/funind/invfun.ml" 1005 34809 34869 "plugins/funind/invfun.ml" 1005 34809 34872
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 981 33895 33903 "plugins/funind/invfun.ml" 981 33895 33906
)
"plugins/funind/invfun.ml" 1005 34809 34854 "plugins/funind/invfun.ml" 1005 34809 34872
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1005 34809 34834 "plugins/funind/invfun.ml" 1005 34809 34872
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1005 34809 34873 "plugins/funind/invfun.ml" 1005 34809 34875
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 1005 34809 34876 "plugins/funind/invfun.ml" 1005 34809 34879
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 1005 34809 34880 "plugins/funind/invfun.ml" 1005 34809 34916
type(
  string
)
"plugins/funind/invfun.ml" 1005 34809 34876 "plugins/funind/invfun.ml" 1005 34809 34916
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1005 34809 34833 "plugins/funind/invfun.ml" 1005 34809 34917
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1005 34809 34817 "plugins/funind/invfun.ml" 1005 34809 34917
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 1006 34918 34924 "plugins/funind/invfun.ml" 1006 34918 34937
type(
  exn
)
"plugins/funind/invfun.ml" 1007 34942 34953 "plugins/funind/invfun.ml" 1007 34942 34963
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/invfun.ml" 1007 34942 34964 "plugins/funind/invfun.ml" 1007 34942 34966
type(
  unit
)
"plugins/funind/invfun.ml" 1007 34942 34953 "plugins/funind/invfun.ml" 1007 34942 34966
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 1009 34980 34990 "plugins/funind/invfun.ml" 1009 34980 34995
type(
  string -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.error
)
"plugins/funind/invfun.ml" 1009 34980 34996 "plugins/funind/invfun.ml" 1009 34980 35060
type(
  string
)
"plugins/funind/invfun.ml" 1009 34980 34990 "plugins/funind/invfun.ml" 1009 34980 35060
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 1010 35061 35074 "plugins/funind/invfun.ml" 1010 35061 35086
type(
  string ->
  Pp.std_ppcmds -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.errorlabstrm
)
"plugins/funind/invfun.ml" 1010 35061 35087 "plugins/funind/invfun.ml" 1010 35061 35089
type(
  string
)
"plugins/funind/invfun.ml" 1010 35061 35091 "plugins/funind/invfun.ml" 1010 35061 35094
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 1010 35061 35095 "plugins/funind/invfun.ml" 1010 35061 35146
type(
  string
)
"plugins/funind/invfun.ml" 1010 35061 35091 "plugins/funind/invfun.ml" 1010 35061 35146
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1010 35061 35147 "plugins/funind/invfun.ml" 1010 35061 35149
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 1010 35061 35150 "plugins/funind/invfun.ml" 1010 35061 35164
type(
  Names.Idset.elt -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_id
)
"plugins/funind/invfun.ml" 1010 35061 35165 "plugins/funind/invfun.ml" 1010 35061 35168
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 981 33895 33903 "plugins/funind/invfun.ml" 981 33895 33906
)
"plugins/funind/invfun.ml" 1010 35061 35150 "plugins/funind/invfun.ml" 1010 35061 35168
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1010 35061 35090 "plugins/funind/invfun.ml" 1010 35061 35169
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1010 35061 35074 "plugins/funind/invfun.ml" 1010 35061 35169
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 1007 34942 34950 "plugins/funind/invfun.ml" 1010 35061 35169
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 1011 35170 35176 "plugins/funind/invfun.ml" 1011 35170 35185
type(
  exn
)
"plugins/funind/invfun.ml" 1012 35189 35200 "plugins/funind/invfun.ml" 1012 35189 35210
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/invfun.ml" 1012 35189 35211 "plugins/funind/invfun.ml" 1012 35189 35213
type(
  unit
)
"plugins/funind/invfun.ml" 1012 35189 35200 "plugins/funind/invfun.ml" 1012 35189 35213
call(
  stack
)
type(
  bool
)
"plugins/funind/invfun.ml" 1014 35227 35237 "plugins/funind/invfun.ml" 1014 35227 35242
type(
  string -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.error
)
"plugins/funind/invfun.ml" 1014 35227 35243 "plugins/funind/invfun.ml" 1014 35227 35284
type(
  string
)
"plugins/funind/invfun.ml" 1014 35227 35237 "plugins/funind/invfun.ml" 1014 35227 35284
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 1015 35285 35298 "plugins/funind/invfun.ml" 1015 35285 35310
type(
  string ->
  Pp.std_ppcmds -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.errorlabstrm
)
"plugins/funind/invfun.ml" 1015 35285 35311 "plugins/funind/invfun.ml" 1015 35285 35313
type(
  string
)
"plugins/funind/invfun.ml" 1015 35285 35315 "plugins/funind/invfun.ml" 1015 35285 35318
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 1015 35285 35319 "plugins/funind/invfun.ml" 1015 35285 35370
type(
  string
)
"plugins/funind/invfun.ml" 1015 35285 35315 "plugins/funind/invfun.ml" 1015 35285 35370
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1015 35285 35371 "plugins/funind/invfun.ml" 1015 35285 35373
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 1015 35285 35374 "plugins/funind/invfun.ml" 1015 35285 35388
type(
  Names.Idset.elt -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_id
)
"plugins/funind/invfun.ml" 1015 35285 35389 "plugins/funind/invfun.ml" 1015 35285 35392
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 981 33895 33903 "plugins/funind/invfun.ml" 981 33895 33906
)
"plugins/funind/invfun.ml" 1015 35285 35374 "plugins/funind/invfun.ml" 1015 35285 35392
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1015 35285 35314 "plugins/funind/invfun.ml" 1015 35285 35393
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1015 35285 35298 "plugins/funind/invfun.ml" 1015 35285 35393
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 1012 35189 35197 "plugins/funind/invfun.ml" 1015 35285 35393
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 995 34470 34479 "plugins/funind/invfun.ml" 1015 35285 35393
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 987 34123 34130 "plugins/funind/invfun.ml" 1015 35285 35393
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 985 34068 34073 "plugins/funind/invfun.ml" 1016 35394 35402
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 984 33999 34022 "plugins/funind/invfun.ml" 1016 35394 35402
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 1017 35403 35413 "plugins/funind/invfun.ml" 1017 35403 35414
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/invfun.ml" 1017 35403 35418 "plugins/funind/invfun.ml" 1017 35403 35430
type(
  string ->
  Pp.std_ppcmds -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.errorlabstrm
)
"plugins/funind/invfun.ml" 1017 35403 35431 "plugins/funind/invfun.ml" 1017 35403 35433
type(
  string
)
"plugins/funind/invfun.ml" 1017 35403 35435 "plugins/funind/invfun.ml" 1017 35403 35449
type(
  Names.Idset.elt -> Pp.std_ppcmds
)
ident(
  ext_ref Ppconstr.pr_id
)
"plugins/funind/invfun.ml" 1017 35403 35450 "plugins/funind/invfun.ml" 1017 35403 35453
type(
  Names.Idset.elt
)
ident(
  int_ref hid "plugins/funind/invfun.ml" 981 33895 33903 "plugins/funind/invfun.ml" 981 33895 33906
)
"plugins/funind/invfun.ml" 1017 35403 35435 "plugins/funind/invfun.ml" 1017 35403 35453
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1017 35403 35454 "plugins/funind/invfun.ml" 1017 35403 35456
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/invfun.ml" 1017 35403 35457 "plugins/funind/invfun.ml" 1017 35403 35460
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/invfun.ml" 1017 35403 35461 "plugins/funind/invfun.ml" 1017 35403 35484
type(
  string
)
"plugins/funind/invfun.ml" 1017 35403 35457 "plugins/funind/invfun.ml" 1017 35403 35484
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1017 35403 35434 "plugins/funind/invfun.ml" 1017 35403 35485
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/invfun.ml" 1017 35403 35418 "plugins/funind/invfun.ml" 1017 35403 35485
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 983 33961 33967 "plugins/funind/invfun.ml" 1017 35403 35485
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 982 33912 33918 "plugins/funind/invfun.ml" 1017 35403 35485
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 981 33895 33898 "plugins/funind/invfun.ml" 1018 35486 35490
type(
  Names.Idset.elt -> Proof_type.tactic
)
"plugins/funind/invfun.ml" 1019 35491 35494 "plugins/funind/invfun.ml" 1019 35491 35498
type(
  Rawterm.quantified_hypothesis
)
ident(
  int_ref qhyp "plugins/funind/invfun.ml" 976 33786 33797 "plugins/funind/invfun.ml" 976 33786 33801
)
"plugins/funind/invfun.ml" 1020 35499 35502 "plugins/funind/invfun.ml" 1020 35499 35503
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/invfun.ml" 976 33786 33804 "plugins/funind/invfun.ml" 976 33786 33805
)
"plugins/funind/invfun.ml" 980 33869 33870 "plugins/funind/invfun.ml" 1020 35499 35503
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/invfun.ml" 977 33808 33810 "plugins/funind/invfun.ml" 1020 35499 35503
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
