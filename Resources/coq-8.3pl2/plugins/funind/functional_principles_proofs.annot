"plugins/funind/functional_principles_proofs.ml" 19 224 228 "plugins/funind/functional_principles_proofs.ml" 19 224 233
type(
  Pp.std_ppcmds -> unit
)
ident(
  def msgnl "plugins/funind/functional_principles_proofs.ml" 22 247 247 --
)
"plugins/funind/functional_principles_proofs.ml" 19 224 236 "plugins/funind/functional_principles_proofs.ml" 19 224 244
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msgnl
)
"plugins/funind/functional_principles_proofs.ml" 22 247 251 "plugins/funind/functional_principles_proofs.ml" 22 247 258
type(
  Pp.std_ppcmds -> unit
)
ident(
  def observe "plugins/funind/functional_principles_proofs.ml" 27 317 317 --
)
"plugins/funind/functional_principles_proofs.ml" 22 247 259 "plugins/funind/functional_principles_proofs.ml" 22 247 263
type(
  Pp.std_ppcmds
)
ident(
  def strm "plugins/funind/functional_principles_proofs.ml" 23 266 268 "plugins/funind/functional_principles_proofs.ml" 25 306 315
)
"plugins/funind/functional_principles_proofs.ml" 23 266 271 "plugins/funind/functional_principles_proofs.ml" 23 266 281
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/functional_principles_proofs.ml" 23 266 282 "plugins/funind/functional_principles_proofs.ml" 23 266 284
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 23 266 271 "plugins/funind/functional_principles_proofs.ml" 23 266 284
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 24 285 292 "plugins/funind/functional_principles_proofs.ml" 24 285 300
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msgnl
)
"plugins/funind/functional_principles_proofs.ml" 24 285 301 "plugins/funind/functional_principles_proofs.ml" 24 285 305
type(
  Pp.std_ppcmds
)
ident(
  int_ref strm "plugins/funind/functional_principles_proofs.ml" 22 247 259 "plugins/funind/functional_principles_proofs.ml" 22 247 263
)
"plugins/funind/functional_principles_proofs.ml" 24 285 292 "plugins/funind/functional_principles_proofs.ml" 24 285 305
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 25 306 313 "plugins/funind/functional_principles_proofs.ml" 25 306 315
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 23 266 268 "plugins/funind/functional_principles_proofs.ml" 25 306 315
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 27 317 321 "plugins/funind/functional_principles_proofs.ml" 27 317 331
type(
  Pp.std_ppcmds -> unit
)
ident(
  def observennl "plugins/funind/functional_principles_proofs.ml" 35 416 416 --
)
"plugins/funind/functional_principles_proofs.ml" 27 317 332 "plugins/funind/functional_principles_proofs.ml" 27 317 336
type(
  Pp.std_ppcmds
)
ident(
  def strm "plugins/funind/functional_principles_proofs.ml" 28 339 341 "plugins/funind/functional_principles_proofs.ml" 30 402 411
)
"plugins/funind/functional_principles_proofs.ml" 28 339 344 "plugins/funind/functional_principles_proofs.ml" 28 339 354
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/functional_principles_proofs.ml" 28 339 355 "plugins/funind/functional_principles_proofs.ml" 28 339 357
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 28 339 344 "plugins/funind/functional_principles_proofs.ml" 28 339 357
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 29 358 371 "plugins/funind/functional_principles_proofs.ml" 29 358 377
type(
  Pp.std_ppcmds -> unit
)
ident(
  ext_ref Pp.msg
)
"plugins/funind/functional_principles_proofs.ml" 29 358 378 "plugins/funind/functional_principles_proofs.ml" 29 358 382
type(
  Pp.std_ppcmds
)
ident(
  int_ref strm "plugins/funind/functional_principles_proofs.ml" 27 317 332 "plugins/funind/functional_principles_proofs.ml" 27 317 336
)
"plugins/funind/functional_principles_proofs.ml" 29 358 371 "plugins/funind/functional_principles_proofs.ml" 29 358 382
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 29 358 383 "plugins/funind/functional_principles_proofs.ml" 29 358 394
type(
  unit -> unit
)
ident(
  ext_ref Pp.pp_flush
)
"plugins/funind/functional_principles_proofs.ml" 29 358 395 "plugins/funind/functional_principles_proofs.ml" 29 358 397
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 29 358 383 "plugins/funind/functional_principles_proofs.ml" 29 358 397
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 29 358 365 "plugins/funind/functional_principles_proofs.ml" 29 358 401
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 30 402 409 "plugins/funind/functional_principles_proofs.ml" 30 402 411
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 28 339 341 "plugins/funind/functional_principles_proofs.ml" 30 402 411
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 35 416 420 "plugins/funind/functional_principles_proofs.ml" 35 416 434
type(
  Pp.std_ppcmds ->
  (Proof_type.goal Tacmach.sigma -> 'a) ->
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def do_observe_tac "plugins/funind/functional_principles_proofs.ml" 43 766 766 --
)
"plugins/funind/functional_principles_proofs.ml" 35 416 435 "plugins/funind/functional_principles_proofs.ml" 35 416 436
type(
  Pp.std_ppcmds
)
ident(
  def s "plugins/funind/functional_principles_proofs.ml" 35 416 437 "plugins/funind/functional_principles_proofs.ml" 41 752 762
)
"plugins/funind/functional_principles_proofs.ml" 35 416 437 "plugins/funind/functional_principles_proofs.ml" 35 416 440
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def tac "plugins/funind/functional_principles_proofs.ml" 35 416 441 "plugins/funind/functional_principles_proofs.ml" 41 752 762
)
"plugins/funind/functional_principles_proofs.ml" 35 416 441 "plugins/funind/functional_principles_proofs.ml" 35 416 442
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 36 445 446 "plugins/funind/functional_principles_proofs.ml" 41 752 762
)
"plugins/funind/functional_principles_proofs.ml" 36 445 454 "plugins/funind/functional_principles_proofs.ml" 36 445 455
type(
  'a
)
ident(
  def v "plugins/funind/functional_principles_proofs.ml" 36 445 537 "plugins/funind/functional_principles_proofs.ml" 36 445 538
)
"plugins/funind/functional_principles_proofs.ml" 36 445 458 "plugins/funind/functional_principles_proofs.ml" 36 445 461
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref tac "plugins/funind/functional_principles_proofs.ml" 35 416 437 "plugins/funind/functional_principles_proofs.ml" 35 416 440
)
"plugins/funind/functional_principles_proofs.ml" 36 445 462 "plugins/funind/functional_principles_proofs.ml" 36 445 463
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 35 416 441 "plugins/funind/functional_principles_proofs.ml" 35 416 442
)
"plugins/funind/functional_principles_proofs.ml" 36 445 458 "plugins/funind/functional_principles_proofs.ml" 36 445 463
call(
  stack
)
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 36 445 537 "plugins/funind/functional_principles_proofs.ml" 36 445 538
type(
  'a
)
ident(
  int_ref v "plugins/funind/functional_principles_proofs.ml" 36 445 454 "plugins/funind/functional_principles_proofs.ml" 36 445 455
)
"plugins/funind/functional_principles_proofs.ml" 36 445 450 "plugins/funind/functional_principles_proofs.ml" 36 445 538
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 37 539 545 "plugins/funind/functional_principles_proofs.ml" 37 539 546
type(
  exn
)
ident(
  def e "plugins/funind/functional_principles_proofs.ml" 38 550 553 "plugins/funind/functional_principles_proofs.ml" 41 752 762
)
"plugins/funind/functional_principles_proofs.ml" 38 550 557 "plugins/funind/functional_principles_proofs.ml" 38 550 561
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 38 550 575 "plugins/funind/functional_principles_proofs.ml" 38 550 590
type(
  Proof_type.goal -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_goal
)
"plugins/funind/functional_principles_proofs.ml" 38 550 592 "plugins/funind/functional_principles_proofs.ml" 38 550 598
type(
  Proof_type.goal Tacmach.sigma -> Proof_type.goal
)
ident(
  ext_ref Tacmach.sig_it
)
"plugins/funind/functional_principles_proofs.ml" 38 550 599 "plugins/funind/functional_principles_proofs.ml" 38 550 600
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 35 416 441 "plugins/funind/functional_principles_proofs.ml" 35 416 442
)
"plugins/funind/functional_principles_proofs.ml" 38 550 591 "plugins/funind/functional_principles_proofs.ml" 38 550 601
call(
  stack
)
type(
  Proof_type.goal
)
"plugins/funind/functional_principles_proofs.ml" 38 550 574 "plugins/funind/functional_principles_proofs.ml" 38 550 602
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 38 550 608 "plugins/funind/functional_principles_proofs.ml" 38 550 609
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 38 550 613 "plugins/funind/functional_principles_proofs.ml" 38 550 625
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 38 550 564 "plugins/funind/functional_principles_proofs.ml" 38 550 629
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 39 633 636 "plugins/funind/functional_principles_proofs.ml" 39 633 641
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref msgnl "plugins/funind/functional_principles_proofs.ml" 19 224 228 "plugins/funind/functional_principles_proofs.ml" 19 224 233
)
"plugins/funind/functional_principles_proofs.ml" 39 633 643 "plugins/funind/functional_principles_proofs.ml" 39 633 646
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 39 633 647 "plugins/funind/functional_principles_proofs.ml" 39 633 661
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 39 633 643 "plugins/funind/functional_principles_proofs.ml" 39 633 661
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 39 633 661 "plugins/funind/functional_principles_proofs.ml" 39 633 663
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 39 633 664 "plugins/funind/functional_principles_proofs.ml" 39 633 665
type(
  Pp.std_ppcmds
)
ident(
  int_ref s "plugins/funind/functional_principles_proofs.ml" 35 416 435 "plugins/funind/functional_principles_proofs.ml" 35 416 436
)
"plugins/funind/functional_principles_proofs.ml" 39 633 643 "plugins/funind/functional_principles_proofs.ml" 39 633 665
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 39 633 665 "plugins/funind/functional_principles_proofs.ml" 39 633 667
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 39 633 667 "plugins/funind/functional_principles_proofs.ml" 39 633 670
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 39 633 671 "plugins/funind/functional_principles_proofs.ml" 39 633 691
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 39 633 667 "plugins/funind/functional_principles_proofs.ml" 39 633 691
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 39 633 643 "plugins/funind/functional_principles_proofs.ml" 39 633 691
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 39 633 692 "plugins/funind/functional_principles_proofs.ml" 39 633 694
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 40 695 700 "plugins/funind/functional_principles_proofs.ml" 40 695 719
type(
  exn -> Pp.std_ppcmds
)
ident(
  ext_ref Cerrors.explain_exn
)
"plugins/funind/functional_principles_proofs.ml" 40 695 720 "plugins/funind/functional_principles_proofs.ml" 40 695 721
type(
  exn
)
ident(
  int_ref e "plugins/funind/functional_principles_proofs.ml" 37 539 545 "plugins/funind/functional_principles_proofs.ml" 37 539 546
)
"plugins/funind/functional_principles_proofs.ml" 40 695 700 "plugins/funind/functional_principles_proofs.ml" 40 695 721
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 39 633 643 "plugins/funind/functional_principles_proofs.ml" 40 695 721
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 40 695 722 "plugins/funind/functional_principles_proofs.ml" 40 695 724
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 40 695 725 "plugins/funind/functional_principles_proofs.ml" 40 695 728
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 40 695 729 "plugins/funind/functional_principles_proofs.ml" 40 695 740
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 40 695 725 "plugins/funind/functional_principles_proofs.ml" 40 695 740
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 39 633 643 "plugins/funind/functional_principles_proofs.ml" 40 695 740
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 40 695 741 "plugins/funind/functional_principles_proofs.ml" 40 695 743
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 40 695 744 "plugins/funind/functional_principles_proofs.ml" 40 695 748
type(
  Pp.std_ppcmds
)
ident(
  int_ref goal "plugins/funind/functional_principles_proofs.ml" 38 550 557 "plugins/funind/functional_principles_proofs.ml" 38 550 561
)
"plugins/funind/functional_principles_proofs.ml" 39 633 642 "plugins/funind/functional_principles_proofs.ml" 40 695 750
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 39 633 636 "plugins/funind/functional_principles_proofs.ml" 40 695 750
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 41 752 755 "plugins/funind/functional_principles_proofs.ml" 41 752 760
type(
  exn -> 'a
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_proofs.ml" 41 752 761 "plugins/funind/functional_principles_proofs.ml" 41 752 762
type(
  exn
)
ident(
  int_ref e "plugins/funind/functional_principles_proofs.ml" 37 539 545 "plugins/funind/functional_principles_proofs.ml" 37 539 546
)
"plugins/funind/functional_principles_proofs.ml" 41 752 755 "plugins/funind/functional_principles_proofs.ml" 41 752 762
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 39 633 636 "plugins/funind/functional_principles_proofs.ml" 41 752 762
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 38 550 553 "plugins/funind/functional_principles_proofs.ml" 41 752 762
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 36 445 446 "plugins/funind/functional_principles_proofs.ml" 41 752 762
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 43 766 770 "plugins/funind/functional_principles_proofs.ml" 43 766 788
type(
  Pp.std_ppcmds ->
  (Proof_type.goal Tacmach.sigma -> 'a) ->
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def observe_tac_stream "plugins/funind/functional_principles_proofs.ml" 48 863 863 --
)
"plugins/funind/functional_principles_proofs.ml" 43 766 789 "plugins/funind/functional_principles_proofs.ml" 43 766 790
type(
  Pp.std_ppcmds
)
ident(
  def s "plugins/funind/functional_principles_proofs.ml" 43 766 791 "plugins/funind/functional_principles_proofs.ml" 46 849 861
)
"plugins/funind/functional_principles_proofs.ml" 43 766 791 "plugins/funind/functional_principles_proofs.ml" 43 766 794
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def tac "plugins/funind/functional_principles_proofs.ml" 43 766 795 "plugins/funind/functional_principles_proofs.ml" 46 849 861
)
"plugins/funind/functional_principles_proofs.ml" 43 766 795 "plugins/funind/functional_principles_proofs.ml" 43 766 796
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 44 799 801 "plugins/funind/functional_principles_proofs.ml" 46 849 861
)
"plugins/funind/functional_principles_proofs.ml" 44 799 804 "plugins/funind/functional_principles_proofs.ml" 44 799 814
type(
  unit -> bool
)
ident(
  ext_ref Indfun_common.do_observe
)
"plugins/funind/functional_principles_proofs.ml" 44 799 815 "plugins/funind/functional_principles_proofs.ml" 44 799 817
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 44 799 804 "plugins/funind/functional_principles_proofs.ml" 44 799 817
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 45 818 825 "plugins/funind/functional_principles_proofs.ml" 45 818 839
type(
  Pp.std_ppcmds ->
  (Proof_type.goal Tacmach.sigma -> 'a) ->
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref do_observe_tac "plugins/funind/functional_principles_proofs.ml" 35 416 420 "plugins/funind/functional_principles_proofs.ml" 35 416 434
)
"plugins/funind/functional_principles_proofs.ml" 45 818 841 "plugins/funind/functional_principles_proofs.ml" 45 818 842
type(
  Pp.std_ppcmds
)
ident(
  int_ref s "plugins/funind/functional_principles_proofs.ml" 43 766 789 "plugins/funind/functional_principles_proofs.ml" 43 766 790
)
"plugins/funind/functional_principles_proofs.ml" 45 818 843 "plugins/funind/functional_principles_proofs.ml" 45 818 846
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref tac "plugins/funind/functional_principles_proofs.ml" 43 766 791 "plugins/funind/functional_principles_proofs.ml" 43 766 794
)
"plugins/funind/functional_principles_proofs.ml" 45 818 847 "plugins/funind/functional_principles_proofs.ml" 45 818 848
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 43 766 795 "plugins/funind/functional_principles_proofs.ml" 43 766 796
)
"plugins/funind/functional_principles_proofs.ml" 45 818 825 "plugins/funind/functional_principles_proofs.ml" 45 818 848
call(
  tail
)
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 46 849 856 "plugins/funind/functional_principles_proofs.ml" 46 849 859
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref tac "plugins/funind/functional_principles_proofs.ml" 43 766 791 "plugins/funind/functional_principles_proofs.ml" 43 766 794
)
"plugins/funind/functional_principles_proofs.ml" 46 849 860 "plugins/funind/functional_principles_proofs.ml" 46 849 861
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 43 766 795 "plugins/funind/functional_principles_proofs.ml" 43 766 796
)
"plugins/funind/functional_principles_proofs.ml" 46 849 856 "plugins/funind/functional_principles_proofs.ml" 46 849 861
call(
  tail
)
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 44 799 801 "plugins/funind/functional_principles_proofs.ml" 46 849 861
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
type(
  string ->
  (Proof_type.goal Tacmach.sigma -> 'a) ->
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def observe_tac "plugins/funind/functional_principles_proofs.ml" 56 1091 1091 --
)
"plugins/funind/functional_principles_proofs.ml" 48 863 879 "plugins/funind/functional_principles_proofs.ml" 48 863 880
type(
  string
)
ident(
  def s "plugins/funind/functional_principles_proofs.ml" 48 863 881 "plugins/funind/functional_principles_proofs.ml" 48 863 921
)
"plugins/funind/functional_principles_proofs.ml" 48 863 881 "plugins/funind/functional_principles_proofs.ml" 48 863 884
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  def tac "plugins/funind/functional_principles_proofs.ml" 48 863 885 "plugins/funind/functional_principles_proofs.ml" 48 863 921
)
"plugins/funind/functional_principles_proofs.ml" 48 863 885 "plugins/funind/functional_principles_proofs.ml" 48 863 886
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 48 863 889 "plugins/funind/functional_principles_proofs.ml" 48 863 921
)
"plugins/funind/functional_principles_proofs.ml" 48 863 889 "plugins/funind/functional_principles_proofs.ml" 48 863 907
type(
  Pp.std_ppcmds ->
  (Proof_type.goal Tacmach.sigma -> 'a) ->
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref observe_tac_stream "plugins/funind/functional_principles_proofs.ml" 43 766 770 "plugins/funind/functional_principles_proofs.ml" 43 766 788
)
"plugins/funind/functional_principles_proofs.ml" 48 863 909 "plugins/funind/functional_principles_proofs.ml" 48 863 912
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 48 863 913 "plugins/funind/functional_principles_proofs.ml" 48 863 914
type(
  string
)
ident(
  int_ref s "plugins/funind/functional_principles_proofs.ml" 48 863 879 "plugins/funind/functional_principles_proofs.ml" 48 863 880
)
"plugins/funind/functional_principles_proofs.ml" 48 863 908 "plugins/funind/functional_principles_proofs.ml" 48 863 915
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 48 863 916 "plugins/funind/functional_principles_proofs.ml" 48 863 919
type(
  Proof_type.goal Tacmach.sigma -> 'a
)
ident(
  int_ref tac "plugins/funind/functional_principles_proofs.ml" 48 863 881 "plugins/funind/functional_principles_proofs.ml" 48 863 884
)
"plugins/funind/functional_principles_proofs.ml" 48 863 920 "plugins/funind/functional_principles_proofs.ml" 48 863 921
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 48 863 885 "plugins/funind/functional_principles_proofs.ml" 48 863 886
)
"plugins/funind/functional_principles_proofs.ml" 48 863 889 "plugins/funind/functional_principles_proofs.ml" 48 863 921
call(
  tail
)
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 56 1091 1095 "plugins/funind/functional_principles_proofs.ml" 56 1091 1104
type(
  ?msg:string -> int -> 'a list -> 'a list * 'a list
)
ident(
  def list_chop "plugins/funind/functional_principles_proofs.ml" 63 1198 1198 --
)
"plugins/funind/functional_principles_proofs.ml" 56 1091 1107 "plugins/funind/functional_principles_proofs.ml" 56 1091 1110
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 56 1091 1111 "plugins/funind/functional_principles_proofs.ml" 56 1091 1113
type(
  string
)
type(
  string
)
ident(
  int_ref *sth* "plugins/funind/functional_principles_proofs.ml" 56 1091 1111 "plugins/funind/functional_principles_proofs.ml" 56 1091 1113
)
type(
  string option
)
type(
  string option
)
type(
  string
)
ident(
  def *sth* "plugins/funind/functional_principles_proofs.ml" 56 1091 1111 "plugins/funind/functional_principles_proofs.ml" 56 1091 1113
)
"plugins/funind/functional_principles_proofs.ml" 56 1091 1115 "plugins/funind/functional_principles_proofs.ml" 56 1091 1116
type(
  int
)
ident(
  def n "plugins/funind/functional_principles_proofs.ml" 56 1091 1117 "plugins/funind/functional_principles_proofs.ml" 60 1170 1195
)
"plugins/funind/functional_principles_proofs.ml" 56 1091 1117 "plugins/funind/functional_principles_proofs.ml" 56 1091 1118
type(
  'a list
)
ident(
  def l "plugins/funind/functional_principles_proofs.ml" 57 1121 1123 "plugins/funind/functional_principles_proofs.ml" 60 1170 1195
)
"plugins/funind/functional_principles_proofs.ml" 58 1127 1131 "plugins/funind/functional_principles_proofs.ml" 58 1127 1140
type(
  int -> 'a list -> 'a list * 'a list
)
ident(
  ext_ref Util.list_chop
)
"plugins/funind/functional_principles_proofs.ml" 58 1127 1141 "plugins/funind/functional_principles_proofs.ml" 58 1127 1142
type(
  int
)
ident(
  int_ref n "plugins/funind/functional_principles_proofs.ml" 56 1091 1115 "plugins/funind/functional_principles_proofs.ml" 56 1091 1116
)
"plugins/funind/functional_principles_proofs.ml" 58 1127 1143 "plugins/funind/functional_principles_proofs.ml" 58 1127 1144
type(
  'a list
)
ident(
  int_ref l "plugins/funind/functional_principles_proofs.ml" 56 1091 1117 "plugins/funind/functional_principles_proofs.ml" 56 1091 1118
)
"plugins/funind/functional_principles_proofs.ml" 58 1127 1131 "plugins/funind/functional_principles_proofs.ml" 58 1127 1144
call(
  stack
)
type(
  'a list * 'a list
)
"plugins/funind/functional_principles_proofs.ml" 59 1145 1160 "plugins/funind/functional_principles_proofs.ml" 59 1145 1166
type(
  string
)
ident(
  def msg' "plugins/funind/functional_principles_proofs.ml" 60 1170 1174 "plugins/funind/functional_principles_proofs.ml" 60 1170 1195
)
"plugins/funind/functional_principles_proofs.ml" 59 1145 1152 "plugins/funind/functional_principles_proofs.ml" 59 1145 1166
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 60 1170 1174 "plugins/funind/functional_principles_proofs.ml" 60 1170 1182
type(
  string -> 'a list * 'a list
)
ident(
  ext_ref Pervasives.failwith
)
"plugins/funind/functional_principles_proofs.ml" 60 1170 1184 "plugins/funind/functional_principles_proofs.ml" 60 1170 1187
type(
  string
)
ident(
  int_ref msg "plugins/funind/functional_principles_proofs.ml" 56 1091 1107 "plugins/funind/functional_principles_proofs.ml" 56 1091 1110
)
"plugins/funind/functional_principles_proofs.ml" 60 1170 1188 "plugins/funind/functional_principles_proofs.ml" 60 1170 1189
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/functional_principles_proofs.ml" 60 1170 1190 "plugins/funind/functional_principles_proofs.ml" 60 1170 1194
type(
  string
)
ident(
  int_ref msg' "plugins/funind/functional_principles_proofs.ml" 59 1145 1160 "plugins/funind/functional_principles_proofs.ml" 59 1145 1166
)
"plugins/funind/functional_principles_proofs.ml" 60 1170 1183 "plugins/funind/functional_principles_proofs.ml" 60 1170 1195
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 60 1170 1174 "plugins/funind/functional_principles_proofs.ml" 60 1170 1195
call(
  tail
)
type(
  'a list * 'a list
)
"plugins/funind/functional_principles_proofs.ml" 57 1121 1123 "plugins/funind/functional_principles_proofs.ml" 60 1170 1195
type(
  'a list * 'a list
)
"plugins/funind/functional_principles_proofs.ml" 63 1198 1202 "plugins/funind/functional_principles_proofs.ml" 63 1198 1214
type(
  Term.constr -> Term.constr -> Term.constr -> Term.constr
)
ident(
  def make_refl_eq "plugins/funind/functional_principles_proofs.ml" 68 1336 1336 --
)
"plugins/funind/functional_principles_proofs.ml" 63 1198 1215 "plugins/funind/functional_principles_proofs.ml" 63 1198 1226
type(
  Term.constr
)
ident(
  def constructor "plugins/funind/functional_principles_proofs.ml" 63 1198 1227 "plugins/funind/functional_principles_proofs.ml" 65 1297 1333
)
"plugins/funind/functional_principles_proofs.ml" 63 1198 1227 "plugins/funind/functional_principles_proofs.ml" 63 1198 1236
type(
  Term.constr
)
ident(
  def type_of_t "plugins/funind/functional_principles_proofs.ml" 63 1198 1237 "plugins/funind/functional_principles_proofs.ml" 65 1297 1333
)
"plugins/funind/functional_principles_proofs.ml" 63 1198 1237 "plugins/funind/functional_principles_proofs.ml" 63 1198 1238
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 65 1297 1299 "plugins/funind/functional_principles_proofs.ml" 65 1297 1333
)
"plugins/funind/functional_principles_proofs.ml" 65 1297 1299 "plugins/funind/functional_principles_proofs.ml" 65 1297 1304
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 65 1297 1305 "plugins/funind/functional_principles_proofs.ml" 65 1297 1316
type(
  Term.constr
)
ident(
  int_ref constructor "plugins/funind/functional_principles_proofs.ml" 63 1198 1215 "plugins/funind/functional_principles_proofs.ml" 63 1198 1226
)
"plugins/funind/functional_principles_proofs.ml" 65 1297 1319 "plugins/funind/functional_principles_proofs.ml" 65 1297 1328
type(
  Term.constr
)
ident(
  int_ref type_of_t "plugins/funind/functional_principles_proofs.ml" 63 1198 1227 "plugins/funind/functional_principles_proofs.ml" 63 1198 1236
)
"plugins/funind/functional_principles_proofs.ml" 65 1297 1329 "plugins/funind/functional_principles_proofs.ml" 65 1297 1330
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 63 1198 1237 "plugins/funind/functional_principles_proofs.ml" 63 1198 1238
)
"plugins/funind/functional_principles_proofs.ml" 65 1297 1317 "plugins/funind/functional_principles_proofs.ml" 65 1297 1332
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 65 1297 1304 "plugins/funind/functional_principles_proofs.ml" 65 1297 1333
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 65 1297 1299 "plugins/funind/functional_principles_proofs.ml" 65 1297 1333
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 87 1674 1678 "plugins/funind/functional_principles_proofs.ml" 87 1674 1690
type(
  'a ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def finish_proof "plugins/funind/functional_principles_proofs.ml" 93 1760 1760 --
)
"plugins/funind/functional_principles_proofs.ml" 87 1674 1691 "plugins/funind/functional_principles_proofs.ml" 87 1674 1704
type(
  'a
)
ident(
  def dynamic_infos "plugins/funind/functional_principles_proofs.ml" 87 1674 1705 "plugins/funind/functional_principles_proofs.ml" 90 1752 1757
)
"plugins/funind/functional_principles_proofs.ml" 87 1674 1705 "plugins/funind/functional_principles_proofs.ml" 87 1674 1706
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 88 1709 1711 "plugins/funind/functional_principles_proofs.ml" 90 1752 1757
)
"plugins/funind/functional_principles_proofs.ml" 88 1709 1711 "plugins/funind/functional_principles_proofs.ml" 88 1709 1722
type(
  string ->
  Tacmach.tactic ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 88 1709 1723 "plugins/funind/functional_principles_proofs.ml" 88 1709 1731
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 89 1732 1736 "plugins/funind/functional_principles_proofs.ml" 89 1732 1751
type(
  Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_assumption
)
"plugins/funind/functional_principles_proofs.ml" 90 1752 1756 "plugins/funind/functional_principles_proofs.ml" 90 1752 1757
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 87 1674 1705 "plugins/funind/functional_principles_proofs.ml" 87 1674 1706
)
"plugins/funind/functional_principles_proofs.ml" 88 1709 1711 "plugins/funind/functional_principles_proofs.ml" 90 1752 1757
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 93 1760 1764 "plugins/funind/functional_principles_proofs.ml" 93 1760 1770
type(
  Term.constr -> Tacmach.tactic
)
ident(
  def refine "plugins/funind/functional_principles_proofs.ml" 96 1804 1804 --
)
"plugins/funind/functional_principles_proofs.ml" 93 1760 1771 "plugins/funind/functional_principles_proofs.ml" 93 1760 1772
type(
  Term.constr
)
ident(
  def c "plugins/funind/functional_principles_proofs.ml" 94 1775 1777 "plugins/funind/functional_principles_proofs.ml" 94 1775 1802
)
"plugins/funind/functional_principles_proofs.ml" 94 1775 1777 "plugins/funind/functional_principles_proofs.ml" 94 1775 1800
type(
  Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.refine_no_check
)
"plugins/funind/functional_principles_proofs.ml" 94 1775 1801 "plugins/funind/functional_principles_proofs.ml" 94 1775 1802
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/functional_principles_proofs.ml" 93 1760 1771 "plugins/funind/functional_principles_proofs.ml" 93 1760 1772
)
"plugins/funind/functional_principles_proofs.ml" 94 1775 1777 "plugins/funind/functional_principles_proofs.ml" 94 1775 1802
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  def thin "plugins/funind/functional_principles_proofs.ml" 100 1845 1845 --
)
"plugins/funind/functional_principles_proofs.ml" 96 1804 1813 "plugins/funind/functional_principles_proofs.ml" 96 1804 1814
type(
  Names.identifier list
)
ident(
  def l "plugins/funind/functional_principles_proofs.ml" 97 1817 1819 "plugins/funind/functional_principles_proofs.ml" 97 1817 1842
)
"plugins/funind/functional_principles_proofs.ml" 97 1817 1819 "plugins/funind/functional_principles_proofs.ml" 97 1817 1840
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.thin_no_check
)
"plugins/funind/functional_principles_proofs.ml" 97 1817 1841 "plugins/funind/functional_principles_proofs.ml" 97 1817 1842
type(
  Names.identifier list
)
ident(
  int_ref l "plugins/funind/functional_principles_proofs.ml" 96 1804 1813 "plugins/funind/functional_principles_proofs.ml" 96 1804 1814
)
"plugins/funind/functional_principles_proofs.ml" 97 1817 1819 "plugins/funind/functional_principles_proofs.ml" 97 1817 1842
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 100 1845 1849 "plugins/funind/functional_principles_proofs.ml" 100 1845 1862
type(
  Names.identifier -> Term.constr -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  def cut_replacing "plugins/funind/functional_principles_proofs.ml" 106 1980 1980 --
)
"plugins/funind/functional_principles_proofs.ml" 100 1845 1863 "plugins/funind/functional_principles_proofs.ml" 100 1845 1865
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 100 1845 1866 "plugins/funind/functional_principles_proofs.ml" 104 1973 1978
)
"plugins/funind/functional_principles_proofs.ml" 100 1845 1866 "plugins/funind/functional_principles_proofs.ml" 100 1845 1867
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 100 1845 1868 "plugins/funind/functional_principles_proofs.ml" 104 1973 1978
)
"plugins/funind/functional_principles_proofs.ml" 100 1845 1868 "plugins/funind/functional_principles_proofs.ml" 100 1845 1871
type(
  Proof_type.tactic
)
ident(
  def tac "plugins/funind/functional_principles_proofs.ml" 100 1845 1872 "plugins/funind/functional_principles_proofs.ml" 104 1973 1978
)
"plugins/funind/functional_principles_proofs.ml" 101 1881 1883 "plugins/funind/functional_principles_proofs.ml" 101 1881 1891
type(
  Proof_type.tactic -> Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENS
)
"plugins/funind/functional_principles_proofs.ml" 101 1881 1893 "plugins/funind/functional_principles_proofs.ml" 101 1881 1896
type(
  Term.constr -> Proof_type.tactic
)
ident(
  ext_ref Tactics.cut
)
"plugins/funind/functional_principles_proofs.ml" 101 1881 1897 "plugins/funind/functional_principles_proofs.ml" 101 1881 1898
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 100 1845 1866 "plugins/funind/functional_principles_proofs.ml" 100 1845 1867
)
"plugins/funind/functional_principles_proofs.ml" 101 1881 1892 "plugins/funind/functional_principles_proofs.ml" 101 1881 1899
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1906 "plugins/funind/functional_principles_proofs.ml" 102 1900 1913
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1915 "plugins/funind/functional_principles_proofs.ml" 102 1900 1928
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.thin_no_check
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1930 "plugins/funind/functional_principles_proofs.ml" 102 1900 1932
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 100 1845 1863 "plugins/funind/functional_principles_proofs.ml" 100 1845 1865
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1929 "plugins/funind/functional_principles_proofs.ml" 102 1900 1933
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1914 "plugins/funind/functional_principles_proofs.ml" 102 1900 1934
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1936 "plugins/funind/functional_principles_proofs.ml" 102 1900 1957
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Tacmach.introduction_no_check
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1958 "plugins/funind/functional_principles_proofs.ml" 102 1900 1960
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 100 1845 1863 "plugins/funind/functional_principles_proofs.ml" 100 1845 1865
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1935 "plugins/funind/functional_principles_proofs.ml" 102 1900 1961
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1906 "plugins/funind/functional_principles_proofs.ml" 102 1900 1961
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 103 1963 1969 "plugins/funind/functional_principles_proofs.ml" 103 1963 1972
type(
  Proof_type.tactic
)
ident(
  int_ref tac "plugins/funind/functional_principles_proofs.ml" 100 1845 1868 "plugins/funind/functional_principles_proofs.ml" 100 1845 1871
)
"plugins/funind/functional_principles_proofs.ml" 102 1900 1904 "plugins/funind/functional_principles_proofs.ml" 104 1973 1978
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 101 1881 1883 "plugins/funind/functional_principles_proofs.ml" 104 1973 1978
call(
  tail
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 1984 "plugins/funind/functional_principles_proofs.ml" 106 1980 1997
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  def intro_erasing "plugins/funind/functional_principles_proofs.ml" 110 2044 2044 --
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 1998 "plugins/funind/functional_principles_proofs.ml" 106 1980 2000
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 106 1980 2003 "plugins/funind/functional_principles_proofs.ml" 106 1980 2040
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 2003 "plugins/funind/functional_principles_proofs.ml" 106 1980 2010
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 2012 "plugins/funind/functional_principles_proofs.ml" 106 1980 2016
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref thin "plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 2018 "plugins/funind/functional_principles_proofs.ml" 106 1980 2020
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 106 1980 1998 "plugins/funind/functional_principles_proofs.ml" 106 1980 2000
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 2017 "plugins/funind/functional_principles_proofs.ml" 106 1980 2021
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 2011 "plugins/funind/functional_principles_proofs.ml" 106 1980 2022
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 2024 "plugins/funind/functional_principles_proofs.ml" 106 1980 2036
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  ext_ref Tactics.introduction
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 2037 "plugins/funind/functional_principles_proofs.ml" 106 1980 2039
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 106 1980 1998 "plugins/funind/functional_principles_proofs.ml" 106 1980 2000
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 2023 "plugins/funind/functional_principles_proofs.ml" 106 1980 2040
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 106 1980 2003 "plugins/funind/functional_principles_proofs.ml" 106 1980 2040
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 110 2044 2048 "plugins/funind/functional_principles_proofs.ml" 110 2044 2058
type(
  Names.identifier
)
ident(
  def rec_hyp_id "plugins/funind/functional_principles_proofs.ml" 112 2085 2085 --
)
"plugins/funind/functional_principles_proofs.ml" 110 2044 2061 "plugins/funind/functional_principles_proofs.ml" 110 2044 2073
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/functional_principles_proofs.ml" 110 2044 2074 "plugins/funind/functional_principles_proofs.ml" 110 2044 2083
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 110 2044 2061 "plugins/funind/functional_principles_proofs.ml" 110 2044 2083
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 112 2085 2089 "plugins/funind/functional_principles_proofs.ml" 112 2085 2102
type(
  Term.constr -> bool
)
ident(
  def is_trivial_eq "plugins/funind/functional_principles_proofs.ml" 127 2506 2506 --
)
"plugins/funind/functional_principles_proofs.ml" 112 2085 2103 "plugins/funind/functional_principles_proofs.ml" 112 2085 2104
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 113 2107 2109 "plugins/funind/functional_principles_proofs.ml" 125 2499 2504
)
"plugins/funind/functional_principles_proofs.ml" 113 2107 2113 "plugins/funind/functional_principles_proofs.ml" 113 2107 2116
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 115 2135 2147 "plugins/funind/functional_principles_proofs.ml" 115 2135 2159
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 115 2135 2160 "plugins/funind/functional_principles_proofs.ml" 115 2135 2161
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 112 2085 2103 "plugins/funind/functional_principles_proofs.ml" 112 2085 2104
)
"plugins/funind/functional_principles_proofs.ml" 115 2135 2147 "plugins/funind/functional_principles_proofs.ml" 115 2135 2161
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2174 "plugins/funind/functional_principles_proofs.ml" 116 2167 2175
type(
  Term.constr
)
ident(
  def f "plugins/funind/functional_principles_proofs.ml" 116 2167 2189 "plugins/funind/functional_principles_proofs.ml" 117 2225 2245
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2178 "plugins/funind/functional_principles_proofs.ml" 116 2167 2179
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2180 "plugins/funind/functional_principles_proofs.ml" 116 2167 2182
type(
  Term.constr
)
ident(
  def t1 "plugins/funind/functional_principles_proofs.ml" 116 2167 2189 "plugins/funind/functional_principles_proofs.ml" 117 2225 2245
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2183 "plugins/funind/functional_principles_proofs.ml" 116 2167 2185
type(
  Term.constr
)
ident(
  def t2 "plugins/funind/functional_principles_proofs.ml" 116 2167 2189 "plugins/funind/functional_principles_proofs.ml" 117 2225 2245
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2176 "plugins/funind/functional_principles_proofs.ml" 116 2167 2187
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2170 "plugins/funind/functional_principles_proofs.ml" 116 2167 2188
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2194 "plugins/funind/functional_principles_proofs.ml" 116 2167 2203
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2204 "plugins/funind/functional_principles_proofs.ml" 116 2167 2205
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 116 2167 2174 "plugins/funind/functional_principles_proofs.ml" 116 2167 2175
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2207 "plugins/funind/functional_principles_proofs.ml" 116 2167 2217
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2218 "plugins/funind/functional_principles_proofs.ml" 116 2167 2220
type(
  Term.constr Lazy.t
)
ident(
  ext_ref Indfun_common.eq
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2206 "plugins/funind/functional_principles_proofs.ml" 116 2167 2221
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2194 "plugins/funind/functional_principles_proofs.ml" 116 2167 2221
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 117 2225 2230 "plugins/funind/functional_principles_proofs.ml" 117 2225 2239
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 117 2225 2240 "plugins/funind/functional_principles_proofs.ml" 117 2225 2242
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 116 2167 2180 "plugins/funind/functional_principles_proofs.ml" 116 2167 2182
)
"plugins/funind/functional_principles_proofs.ml" 117 2225 2243 "plugins/funind/functional_principles_proofs.ml" 117 2225 2245
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 116 2167 2183 "plugins/funind/functional_principles_proofs.ml" 116 2167 2185
)
"plugins/funind/functional_principles_proofs.ml" 117 2225 2230 "plugins/funind/functional_principles_proofs.ml" 117 2225 2245
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 116 2167 2189 "plugins/funind/functional_principles_proofs.ml" 117 2225 2245
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2253 "plugins/funind/functional_principles_proofs.ml" 118 2246 2254
type(
  Term.constr
)
ident(
  def f "plugins/funind/functional_principles_proofs.ml" 118 2246 2272 "plugins/funind/functional_principles_proofs.ml" 119 2303 2342
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2257 "plugins/funind/functional_principles_proofs.ml" 118 2246 2259
type(
  Term.constr
)
ident(
  def t1 "plugins/funind/functional_principles_proofs.ml" 118 2246 2272 "plugins/funind/functional_principles_proofs.ml" 119 2303 2342
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2260 "plugins/funind/functional_principles_proofs.ml" 118 2246 2262
type(
  Term.constr
)
ident(
  def a1 "plugins/funind/functional_principles_proofs.ml" 118 2246 2272 "plugins/funind/functional_principles_proofs.ml" 119 2303 2342
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2263 "plugins/funind/functional_principles_proofs.ml" 118 2246 2265
type(
  Term.constr
)
ident(
  def t2 "plugins/funind/functional_principles_proofs.ml" 118 2246 2272 "plugins/funind/functional_principles_proofs.ml" 119 2303 2342
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2266 "plugins/funind/functional_principles_proofs.ml" 118 2246 2268
type(
  Term.constr
)
ident(
  def a2 "plugins/funind/functional_principles_proofs.ml" 118 2246 2272 "plugins/funind/functional_principles_proofs.ml" 119 2303 2342
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2255 "plugins/funind/functional_principles_proofs.ml" 118 2246 2270
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2249 "plugins/funind/functional_principles_proofs.ml" 118 2246 2271
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2277 "plugins/funind/functional_principles_proofs.ml" 118 2246 2286
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2287 "plugins/funind/functional_principles_proofs.ml" 118 2246 2288
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 118 2246 2253 "plugins/funind/functional_principles_proofs.ml" 118 2246 2254
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2290 "plugins/funind/functional_principles_proofs.ml" 118 2246 2294
type(
  unit -> Term.constr
)
ident(
  ext_ref Indfun_common.jmeq
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2295 "plugins/funind/functional_principles_proofs.ml" 118 2246 2297
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2289 "plugins/funind/functional_principles_proofs.ml" 118 2246 2298
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2277 "plugins/funind/functional_principles_proofs.ml" 118 2246 2298
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2308 "plugins/funind/functional_principles_proofs.ml" 119 2303 2317
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2318 "plugins/funind/functional_principles_proofs.ml" 119 2303 2320
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 118 2246 2257 "plugins/funind/functional_principles_proofs.ml" 118 2246 2259
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2321 "plugins/funind/functional_principles_proofs.ml" 119 2303 2323
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 118 2246 2263 "plugins/funind/functional_principles_proofs.ml" 118 2246 2265
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2308 "plugins/funind/functional_principles_proofs.ml" 119 2303 2323
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2324 "plugins/funind/functional_principles_proofs.ml" 119 2303 2326
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2327 "plugins/funind/functional_principles_proofs.ml" 119 2303 2336
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2337 "plugins/funind/functional_principles_proofs.ml" 119 2303 2339
type(
  Term.constr
)
ident(
  int_ref a1 "plugins/funind/functional_principles_proofs.ml" 118 2246 2260 "plugins/funind/functional_principles_proofs.ml" 118 2246 2262
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2340 "plugins/funind/functional_principles_proofs.ml" 119 2303 2342
type(
  Term.constr
)
ident(
  int_ref a2 "plugins/funind/functional_principles_proofs.ml" 118 2246 2266 "plugins/funind/functional_principles_proofs.ml" 118 2246 2268
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2327 "plugins/funind/functional_principles_proofs.ml" 119 2303 2342
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 119 2303 2308 "plugins/funind/functional_principles_proofs.ml" 119 2303 2342
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 118 2246 2272 "plugins/funind/functional_principles_proofs.ml" 119 2303 2342
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 120 2343 2346 "plugins/funind/functional_principles_proofs.ml" 120 2343 2347
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 120 2343 2351 "plugins/funind/functional_principles_proofs.ml" 120 2343 2356
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 114 2125 2129 "plugins/funind/functional_principles_proofs.ml" 121 2357 2364
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 122 2365 2372 "plugins/funind/functional_principles_proofs.ml" 122 2365 2373
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 122 2365 2377 "plugins/funind/functional_principles_proofs.ml" 122 2365 2382
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 113 2107 2121 "plugins/funind/functional_principles_proofs.ml" 122 2365 2382
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 125 2499 2501 "plugins/funind/functional_principles_proofs.ml" 125 2499 2504
type(
  bool
)
ident(
  int_ref res "plugins/funind/functional_principles_proofs.ml" 113 2107 2113 "plugins/funind/functional_principles_proofs.ml" 113 2107 2116
)
"plugins/funind/functional_principles_proofs.ml" 113 2107 2109 "plugins/funind/functional_principles_proofs.ml" 125 2499 2504
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 127 2506 2514 "plugins/funind/functional_principles_proofs.ml" 127 2506 2544
type(
  Term.constr -> Term.constr -> bool
)
ident(
  def incompatible_constructor_terms "plugins/funind/functional_principles_proofs.ml" 127 2506 2506 --
)
"plugins/funind/functional_principles_proofs.ml" 127 2506 2545 "plugins/funind/functional_principles_proofs.ml" 127 2506 2547
type(
  Term.constr
)
ident(
  def t1 "plugins/funind/functional_principles_proofs.ml" 127 2506 2548 "plugins/funind/functional_principles_proofs.ml" 136 2785 2790
)
"plugins/funind/functional_principles_proofs.ml" 127 2506 2548 "plugins/funind/functional_principles_proofs.ml" 127 2506 2550
type(
  Term.constr
)
ident(
  def t2 "plugins/funind/functional_principles_proofs.ml" 128 2553 2555 "plugins/funind/functional_principles_proofs.ml" 136 2785 2790
)
"plugins/funind/functional_principles_proofs.ml" 128 2553 2559 "plugins/funind/functional_principles_proofs.ml" 128 2553 2561
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 128 2553 2562 "plugins/funind/functional_principles_proofs.ml" 128 2553 2566
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 128 2553 2559 "plugins/funind/functional_principles_proofs.ml" 128 2553 2566
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 128 2553 2569 "plugins/funind/functional_principles_proofs.ml" 128 2553 2582
type(
  Term.constr -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_proofs.ml" 128 2553 2583 "plugins/funind/functional_principles_proofs.ml" 128 2553 2585
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 127 2506 2545 "plugins/funind/functional_principles_proofs.ml" 127 2506 2547
)
"plugins/funind/functional_principles_proofs.ml" 128 2553 2569 "plugins/funind/functional_principles_proofs.ml" 128 2553 2585
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 129 2586 2592 "plugins/funind/functional_principles_proofs.ml" 129 2586 2594
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 129 2586 2595 "plugins/funind/functional_principles_proofs.ml" 129 2586 2599
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 129 2586 2592 "plugins/funind/functional_principles_proofs.ml" 129 2586 2599
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 129 2586 2602 "plugins/funind/functional_principles_proofs.ml" 129 2586 2615
type(
  Term.constr -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_proofs.ml" 129 2586 2616 "plugins/funind/functional_principles_proofs.ml" 129 2586 2618
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 127 2506 2548 "plugins/funind/functional_principles_proofs.ml" 127 2506 2550
)
"plugins/funind/functional_principles_proofs.ml" 129 2586 2602 "plugins/funind/functional_principles_proofs.ml" 129 2586 2618
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 131 2624 2627 "plugins/funind/functional_principles_proofs.ml" 131 2624 2630
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_proofs.ml" 131 2624 2632 "plugins/funind/functional_principles_proofs.ml" 131 2624 2641
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 131 2624 2642 "plugins/funind/functional_principles_proofs.ml" 131 2624 2644
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 127 2506 2545 "plugins/funind/functional_principles_proofs.ml" 127 2506 2547
)
"plugins/funind/functional_principles_proofs.ml" 131 2624 2645 "plugins/funind/functional_principles_proofs.ml" 131 2624 2647
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 127 2506 2548 "plugins/funind/functional_principles_proofs.ml" 127 2506 2550
)
"plugins/funind/functional_principles_proofs.ml" 131 2624 2631 "plugins/funind/functional_principles_proofs.ml" 131 2624 2648
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 131 2624 2626 "plugins/funind/functional_principles_proofs.ml" 131 2624 2649
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 131 2624 2650 "plugins/funind/functional_principles_proofs.ml" 131 2624 2652
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2657 "plugins/funind/functional_principles_proofs.ml" 132 2653 2668
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isConstruct
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2669 "plugins/funind/functional_principles_proofs.ml" 132 2653 2671
type(
  Term.constr
)
ident(
  int_ref c1 "plugins/funind/functional_principles_proofs.ml" 128 2553 2559 "plugins/funind/functional_principles_proofs.ml" 128 2553 2561
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2657 "plugins/funind/functional_principles_proofs.ml" 132 2653 2671
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2672 "plugins/funind/functional_principles_proofs.ml" 132 2653 2674
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2675 "plugins/funind/functional_principles_proofs.ml" 132 2653 2686
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isConstruct
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2687 "plugins/funind/functional_principles_proofs.ml" 132 2653 2689
type(
  Term.constr
)
ident(
  int_ref c2 "plugins/funind/functional_principles_proofs.ml" 129 2586 2592 "plugins/funind/functional_principles_proofs.ml" 129 2586 2594
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2675 "plugins/funind/functional_principles_proofs.ml" 132 2653 2689
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2690 "plugins/funind/functional_principles_proofs.ml" 132 2653 2692
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_proofs.ml" 134 2699 2705 "plugins/funind/functional_principles_proofs.ml" 134 2699 2708
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_proofs.ml" 134 2699 2710 "plugins/funind/functional_principles_proofs.ml" 134 2699 2719
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 134 2699 2720 "plugins/funind/functional_principles_proofs.ml" 134 2699 2722
type(
  Term.constr
)
ident(
  int_ref c1 "plugins/funind/functional_principles_proofs.ml" 128 2553 2559 "plugins/funind/functional_principles_proofs.ml" 128 2553 2561
)
"plugins/funind/functional_principles_proofs.ml" 134 2699 2723 "plugins/funind/functional_principles_proofs.ml" 134 2699 2725
type(
  Term.constr
)
ident(
  int_ref c2 "plugins/funind/functional_principles_proofs.ml" 129 2586 2592 "plugins/funind/functional_principles_proofs.ml" 129 2586 2594
)
"plugins/funind/functional_principles_proofs.ml" 134 2699 2709 "plugins/funind/functional_principles_proofs.ml" 134 2699 2726
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 134 2699 2705 "plugins/funind/functional_principles_proofs.ml" 134 2699 2726
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 134 2699 2727 "plugins/funind/functional_principles_proofs.ml" 134 2699 2729
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"plugins/funind/functional_principles_proofs.ml" 135 2730 2731 "plugins/funind/functional_principles_proofs.ml" 135 2730 2743
type(
  (Term.constr -> Term.constr -> bool) ->
  Term.constr list -> Term.constr list -> bool
)
ident(
  ext_ref List.exists2
)
"plugins/funind/functional_principles_proofs.ml" 135 2730 2744 "plugins/funind/functional_principles_proofs.ml" 135 2730 2774
type(
  Term.constr -> Term.constr -> bool
)
ident(
  int_ref incompatible_constructor_terms "plugins/funind/functional_principles_proofs.ml" 127 2506 2514 "plugins/funind/functional_principles_proofs.ml" 127 2506 2544
)
"plugins/funind/functional_principles_proofs.ml" 135 2730 2775 "plugins/funind/functional_principles_proofs.ml" 135 2730 2779
type(
  Term.constr list
)
ident(
  int_ref arg1 "plugins/funind/functional_principles_proofs.ml" 128 2553 2562 "plugins/funind/functional_principles_proofs.ml" 128 2553 2566
)
"plugins/funind/functional_principles_proofs.ml" 135 2730 2780 "plugins/funind/functional_principles_proofs.ml" 135 2730 2784
type(
  Term.constr list
)
ident(
  int_ref arg2 "plugins/funind/functional_principles_proofs.ml" 129 2586 2595 "plugins/funind/functional_principles_proofs.ml" 129 2586 2599
)
"plugins/funind/functional_principles_proofs.ml" 135 2730 2731 "plugins/funind/functional_principles_proofs.ml" 135 2730 2784
call(
  tail
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 133 2693 2697 "plugins/funind/functional_principles_proofs.ml" 136 2785 2790
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2675 "plugins/funind/functional_principles_proofs.ml" 136 2785 2790
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 132 2653 2657 "plugins/funind/functional_principles_proofs.ml" 136 2785 2790
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 131 2624 2626 "plugins/funind/functional_principles_proofs.ml" 136 2785 2790
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 128 2553 2555 "plugins/funind/functional_principles_proofs.ml" 136 2785 2790
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 138 2792 2796 "plugins/funind/functional_principles_proofs.ml" 138 2792 2814
type(
  Term.constr -> bool
)
ident(
  def is_incompatible_eq "plugins/funind/functional_principles_proofs.ml" 153 3221 3221 --
)
"plugins/funind/functional_principles_proofs.ml" 138 2792 2815 "plugins/funind/functional_principles_proofs.ml" 138 2792 2816
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 139 2819 2821 "plugins/funind/functional_principles_proofs.ml" 151 3214 3219
)
"plugins/funind/functional_principles_proofs.ml" 139 2819 2825 "plugins/funind/functional_principles_proofs.ml" 139 2819 2828
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 141 2839 2851 "plugins/funind/functional_principles_proofs.ml" 141 2839 2863
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 141 2839 2864 "plugins/funind/functional_principles_proofs.ml" 141 2839 2865
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 138 2792 2815 "plugins/funind/functional_principles_proofs.ml" 138 2792 2816
)
"plugins/funind/functional_principles_proofs.ml" 141 2839 2851 "plugins/funind/functional_principles_proofs.ml" 141 2839 2865
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2878 "plugins/funind/functional_principles_proofs.ml" 142 2871 2879
type(
  Term.constr
)
ident(
  def f "plugins/funind/functional_principles_proofs.ml" 142 2871 2893 "plugins/funind/functional_principles_proofs.ml" 143 2929 2970
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2882 "plugins/funind/functional_principles_proofs.ml" 142 2871 2883
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2884 "plugins/funind/functional_principles_proofs.ml" 142 2871 2886
type(
  Term.constr
)
ident(
  def t1 "plugins/funind/functional_principles_proofs.ml" 142 2871 2893 "plugins/funind/functional_principles_proofs.ml" 143 2929 2970
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2887 "plugins/funind/functional_principles_proofs.ml" 142 2871 2889
type(
  Term.constr
)
ident(
  def t2 "plugins/funind/functional_principles_proofs.ml" 142 2871 2893 "plugins/funind/functional_principles_proofs.ml" 143 2929 2970
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2880 "plugins/funind/functional_principles_proofs.ml" 142 2871 2891
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2874 "plugins/funind/functional_principles_proofs.ml" 142 2871 2892
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2898 "plugins/funind/functional_principles_proofs.ml" 142 2871 2907
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2908 "plugins/funind/functional_principles_proofs.ml" 142 2871 2909
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 142 2871 2878 "plugins/funind/functional_principles_proofs.ml" 142 2871 2879
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2911 "plugins/funind/functional_principles_proofs.ml" 142 2871 2921
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2922 "plugins/funind/functional_principles_proofs.ml" 142 2871 2924
type(
  Term.constr Lazy.t
)
ident(
  ext_ref Indfun_common.eq
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2910 "plugins/funind/functional_principles_proofs.ml" 142 2871 2925
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2898 "plugins/funind/functional_principles_proofs.ml" 142 2871 2925
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 143 2929 2934 "plugins/funind/functional_principles_proofs.ml" 143 2929 2964
type(
  Term.constr -> Term.constr -> bool
)
ident(
  int_ref incompatible_constructor_terms "plugins/funind/functional_principles_proofs.ml" 127 2506 2514 "plugins/funind/functional_principles_proofs.ml" 127 2506 2544
)
"plugins/funind/functional_principles_proofs.ml" 143 2929 2965 "plugins/funind/functional_principles_proofs.ml" 143 2929 2967
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 142 2871 2884 "plugins/funind/functional_principles_proofs.ml" 142 2871 2886
)
"plugins/funind/functional_principles_proofs.ml" 143 2929 2968 "plugins/funind/functional_principles_proofs.ml" 143 2929 2970
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 142 2871 2887 "plugins/funind/functional_principles_proofs.ml" 142 2871 2889
)
"plugins/funind/functional_principles_proofs.ml" 143 2929 2934 "plugins/funind/functional_principles_proofs.ml" 143 2929 2970
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 142 2871 2893 "plugins/funind/functional_principles_proofs.ml" 143 2929 2970
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 2978 "plugins/funind/functional_principles_proofs.ml" 144 2971 2979
type(
  Term.constr
)
ident(
  def f "plugins/funind/functional_principles_proofs.ml" 144 2971 2997 "plugins/funind/functional_principles_proofs.ml" 146 3052 3097
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 2982 "plugins/funind/functional_principles_proofs.ml" 144 2971 2984
type(
  Term.constr
)
ident(
  def u1 "plugins/funind/functional_principles_proofs.ml" 144 2971 2997 "plugins/funind/functional_principles_proofs.ml" 146 3052 3097
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 2985 "plugins/funind/functional_principles_proofs.ml" 144 2971 2987
type(
  Term.constr
)
ident(
  def t1 "plugins/funind/functional_principles_proofs.ml" 144 2971 2997 "plugins/funind/functional_principles_proofs.ml" 146 3052 3097
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 2988 "plugins/funind/functional_principles_proofs.ml" 144 2971 2990
type(
  Term.constr
)
ident(
  def u2 "plugins/funind/functional_principles_proofs.ml" 144 2971 2997 "plugins/funind/functional_principles_proofs.ml" 146 3052 3097
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 2991 "plugins/funind/functional_principles_proofs.ml" 144 2971 2993
type(
  Term.constr
)
ident(
  def t2 "plugins/funind/functional_principles_proofs.ml" 144 2971 2997 "plugins/funind/functional_principles_proofs.ml" 146 3052 3097
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 2980 "plugins/funind/functional_principles_proofs.ml" 144 2971 2995
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 2974 "plugins/funind/functional_principles_proofs.ml" 144 2971 2996
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 3002 "plugins/funind/functional_principles_proofs.ml" 144 2971 3011
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 3012 "plugins/funind/functional_principles_proofs.ml" 144 2971 3013
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 144 2971 2978 "plugins/funind/functional_principles_proofs.ml" 144 2971 2979
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 3015 "plugins/funind/functional_principles_proofs.ml" 144 2971 3019
type(
  unit -> Term.constr
)
ident(
  ext_ref Indfun_common.jmeq
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 3020 "plugins/funind/functional_principles_proofs.ml" 144 2971 3022
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 3014 "plugins/funind/functional_principles_proofs.ml" 144 2971 3023
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 3002 "plugins/funind/functional_principles_proofs.ml" 144 2971 3023
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 145 3027 3033 "plugins/funind/functional_principles_proofs.ml" 145 3027 3042
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 145 3027 3043 "plugins/funind/functional_principles_proofs.ml" 145 3027 3045
type(
  Term.constr
)
ident(
  int_ref u1 "plugins/funind/functional_principles_proofs.ml" 144 2971 2982 "plugins/funind/functional_principles_proofs.ml" 144 2971 2984
)
"plugins/funind/functional_principles_proofs.ml" 145 3027 3046 "plugins/funind/functional_principles_proofs.ml" 145 3027 3048
type(
  Term.constr
)
ident(
  int_ref u2 "plugins/funind/functional_principles_proofs.ml" 144 2971 2988 "plugins/funind/functional_principles_proofs.ml" 144 2971 2990
)
"plugins/funind/functional_principles_proofs.ml" 145 3027 3033 "plugins/funind/functional_principles_proofs.ml" 145 3027 3048
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 145 3027 3049 "plugins/funind/functional_principles_proofs.ml" 145 3027 3051
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_proofs.ml" 146 3052 3060 "plugins/funind/functional_principles_proofs.ml" 146 3052 3090
type(
  Term.constr -> Term.constr -> bool
)
ident(
  int_ref incompatible_constructor_terms "plugins/funind/functional_principles_proofs.ml" 127 2506 2514 "plugins/funind/functional_principles_proofs.ml" 127 2506 2544
)
"plugins/funind/functional_principles_proofs.ml" 146 3052 3091 "plugins/funind/functional_principles_proofs.ml" 146 3052 3093
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 144 2971 2985 "plugins/funind/functional_principles_proofs.ml" 144 2971 2987
)
"plugins/funind/functional_principles_proofs.ml" 146 3052 3094 "plugins/funind/functional_principles_proofs.ml" 146 3052 3096
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 144 2971 2991 "plugins/funind/functional_principles_proofs.ml" 144 2971 2993
)
"plugins/funind/functional_principles_proofs.ml" 146 3052 3060 "plugins/funind/functional_principles_proofs.ml" 146 3052 3096
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 145 3027 3032 "plugins/funind/functional_principles_proofs.ml" 146 3052 3097
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 144 2971 2997 "plugins/funind/functional_principles_proofs.ml" 146 3052 3097
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 147 3098 3101 "plugins/funind/functional_principles_proofs.ml" 147 3098 3102
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 147 3098 3106 "plugins/funind/functional_principles_proofs.ml" 147 3098 3111
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 141 2839 2845 "plugins/funind/functional_principles_proofs.ml" 147 3098 3111
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 148 3112 3121 "plugins/funind/functional_principles_proofs.ml" 148 3112 3122
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 148 3112 3126 "plugins/funind/functional_principles_proofs.ml" 148 3112 3131
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 140 2831 2835 "plugins/funind/functional_principles_proofs.ml" 148 3112 3131
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3142 "plugins/funind/functional_principles_proofs.ml" 150 3137 3145
type(
  bool
)
ident(
  int_ref res "plugins/funind/functional_principles_proofs.ml" 139 2819 2825 "plugins/funind/functional_principles_proofs.ml" 139 2819 2828
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3153 "plugins/funind/functional_principles_proofs.ml" 150 3137 3160
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/functional_principles_proofs.ml" 22 247 251 "plugins/funind/functional_principles_proofs.ml" 22 247 258
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3162 "plugins/funind/functional_principles_proofs.ml" 150 3137 3165
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3166 "plugins/funind/functional_principles_proofs.ml" 150 3137 3187
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3162 "plugins/funind/functional_principles_proofs.ml" 150 3137 3187
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3188 "plugins/funind/functional_principles_proofs.ml" 150 3137 3190
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3191 "plugins/funind/functional_principles_proofs.ml" 150 3137 3209
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3210 "plugins/funind/functional_principles_proofs.ml" 150 3137 3211
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 138 2792 2815 "plugins/funind/functional_principles_proofs.ml" 138 2792 2816
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3191 "plugins/funind/functional_principles_proofs.ml" 150 3137 3211
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3161 "plugins/funind/functional_principles_proofs.ml" 150 3137 3212
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3153 "plugins/funind/functional_principles_proofs.ml" 150 3137 3212
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3139 "plugins/funind/functional_principles_proofs.ml" 150 3137 3212
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 151 3214 3216 "plugins/funind/functional_principles_proofs.ml" 151 3214 3219
type(
  bool
)
ident(
  int_ref res "plugins/funind/functional_principles_proofs.ml" 139 2819 2825 "plugins/funind/functional_principles_proofs.ml" 139 2819 2828
)
"plugins/funind/functional_principles_proofs.ml" 150 3137 3139 "plugins/funind/functional_principles_proofs.ml" 151 3214 3219
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 139 2819 2821 "plugins/funind/functional_principles_proofs.ml" 151 3214 3219
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 153 3221 3225 "plugins/funind/functional_principles_proofs.ml" 153 3221 3246
type(
  'a ->
  Names.identifier -> Term.types -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  def change_hyp_with_using "plugins/funind/functional_principles_proofs.ml" 164 3603 3603 --
)
"plugins/funind/functional_principles_proofs.ml" 153 3221 3247 "plugins/funind/functional_principles_proofs.ml" 153 3221 3250
type(
  'a
)
ident(
  def msg "plugins/funind/functional_principles_proofs.ml" 153 3221 3251 "plugins/funind/functional_principles_proofs.ml" 162 3591 3601
)
"plugins/funind/functional_principles_proofs.ml" 153 3221 3251 "plugins/funind/functional_principles_proofs.ml" 153 3221 3257
type(
  Names.identifier
)
ident(
  def hyp_id "plugins/funind/functional_principles_proofs.ml" 153 3221 3258 "plugins/funind/functional_principles_proofs.ml" 162 3591 3601
)
"plugins/funind/functional_principles_proofs.ml" 153 3221 3258 "plugins/funind/functional_principles_proofs.ml" 153 3221 3259
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 153 3221 3260 "plugins/funind/functional_principles_proofs.ml" 162 3591 3601
)
"plugins/funind/functional_principles_proofs.ml" 153 3221 3260 "plugins/funind/functional_principles_proofs.ml" 153 3221 3263
type(
  Proof_type.tactic
)
ident(
  def tac "plugins/funind/functional_principles_proofs.ml" 153 3221 3264 "plugins/funind/functional_principles_proofs.ml" 162 3591 3601
)
"plugins/funind/functional_principles_proofs.ml" 154 3275 3281 "plugins/funind/functional_principles_proofs.ml" 154 3275 3282
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 155 3286 3290 "plugins/funind/functional_principles_proofs.ml" 162 3591 3601
)
"plugins/funind/functional_principles_proofs.ml" 155 3286 3294 "plugins/funind/functional_principles_proofs.ml" 155 3286 3301
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 155 3286 3304 "plugins/funind/functional_principles_proofs.ml" 155 3286 3317
type(
  Names.identifier -> Proof_type.goal Tacmach.sigma -> Names.identifier
)
ident(
  ext_ref Tacmach.pf_get_new_id
)
"plugins/funind/functional_principles_proofs.ml" 155 3286 3318 "plugins/funind/functional_principles_proofs.ml" 155 3286 3324
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 153 3221 3251 "plugins/funind/functional_principles_proofs.ml" 153 3221 3257
)
"plugins/funind/functional_principles_proofs.ml" 155 3286 3325 "plugins/funind/functional_principles_proofs.ml" 155 3286 3326
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 154 3275 3281 "plugins/funind/functional_principles_proofs.ml" 154 3275 3282
)
"plugins/funind/functional_principles_proofs.ml" 155 3286 3304 "plugins/funind/functional_principles_proofs.ml" 155 3286 3326
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 156 3330 3334 "plugins/funind/functional_principles_proofs.ml" 156 3330 3342
type(
  Proof_type.tactic -> Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENS
)
"plugins/funind/functional_principles_proofs.ml" 157 3343 3373 "plugins/funind/functional_principles_proofs.ml" 157 3343 3382
type(
  Names.name -> Term.types -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tactics.assert_by
)
"plugins/funind/functional_principles_proofs.ml" 157 3343 3389 "plugins/funind/functional_principles_proofs.ml" 157 3343 3396
type(
  Names.identifier
)
ident(
  int_ref prov_id "plugins/funind/functional_principles_proofs.ml" 155 3286 3294 "plugins/funind/functional_principles_proofs.ml" 155 3286 3301
)
"plugins/funind/functional_principles_proofs.ml" 157 3343 3383 "plugins/funind/functional_principles_proofs.ml" 157 3343 3397
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 157 3343 3398 "plugins/funind/functional_principles_proofs.ml" 157 3343 3399
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 153 3221 3258 "plugins/funind/functional_principles_proofs.ml" 153 3221 3259
)
"plugins/funind/functional_principles_proofs.ml" 157 3343 3401 "plugins/funind/functional_principles_proofs.ml" 157 3343 3412
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclCOMPLETE
)
"plugins/funind/functional_principles_proofs.ml" 157 3343 3413 "plugins/funind/functional_principles_proofs.ml" 157 3343 3416
type(
  Proof_type.tactic
)
ident(
  int_ref tac "plugins/funind/functional_principles_proofs.ml" 153 3221 3260 "plugins/funind/functional_principles_proofs.ml" 153 3221 3263
)
"plugins/funind/functional_principles_proofs.ml" 157 3343 3400 "plugins/funind/functional_principles_proofs.ml" 157 3343 3417
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 157 3343 3349 "plugins/funind/functional_principles_proofs.ml" 157 3343 3419
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 158 3420 3427 "plugins/funind/functional_principles_proofs.ml" 158 3420 3438
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 160 3447 3496 "plugins/funind/functional_principles_proofs.ml" 160 3447 3500
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref thin "plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
)
"plugins/funind/functional_principles_proofs.ml" 160 3447 3502 "plugins/funind/functional_principles_proofs.ml" 160 3447 3508
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 153 3221 3251 "plugins/funind/functional_principles_proofs.ml" 153 3221 3257
)
"plugins/funind/functional_principles_proofs.ml" 160 3447 3501 "plugins/funind/functional_principles_proofs.ml" 160 3447 3509
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 160 3447 3495 "plugins/funind/functional_principles_proofs.ml" 160 3447 3510
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 161 3512 3564 "plugins/funind/functional_principles_proofs.ml" 161 3512 3572
type(
  (Names.identifier * Names.identifier) list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_rename
)
"plugins/funind/functional_principles_proofs.ml" 161 3512 3574 "plugins/funind/functional_principles_proofs.ml" 161 3512 3581
type(
  Names.identifier
)
ident(
  int_ref prov_id "plugins/funind/functional_principles_proofs.ml" 155 3286 3294 "plugins/funind/functional_principles_proofs.ml" 155 3286 3301
)
"plugins/funind/functional_principles_proofs.ml" 161 3512 3582 "plugins/funind/functional_principles_proofs.ml" 161 3512 3588
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 153 3221 3251 "plugins/funind/functional_principles_proofs.ml" 153 3221 3257
)
"plugins/funind/functional_principles_proofs.ml" 161 3512 3574 "plugins/funind/functional_principles_proofs.ml" 161 3512 3588
type(
  Names.identifier * Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 161 3512 3573 "plugins/funind/functional_principles_proofs.ml" 161 3512 3589
type(
  (Names.identifier * Names.identifier) list
)
"plugins/funind/functional_principles_proofs.ml" 161 3512 3563 "plugins/funind/functional_principles_proofs.ml" 161 3512 3590
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 159 3439 3445 "plugins/funind/functional_principles_proofs.ml" 162 3591 3598
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 158 3420 3427 "plugins/funind/functional_principles_proofs.ml" 162 3591 3598
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 158 3420 3426 "plugins/funind/functional_principles_proofs.ml" 162 3591 3599
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 162 3591 3600 "plugins/funind/functional_principles_proofs.ml" 162 3591 3601
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 154 3275 3281 "plugins/funind/functional_principles_proofs.ml" 154 3275 3282
)
"plugins/funind/functional_principles_proofs.ml" 156 3330 3334 "plugins/funind/functional_principles_proofs.ml" 162 3591 3601
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 155 3286 3290 "plugins/funind/functional_principles_proofs.ml" 162 3591 3601
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 154 3275 3277 "plugins/funind/functional_principles_proofs.ml" 162 3591 3601
type(
  Proof_type.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 167 3624 3628 "plugins/funind/functional_principles_proofs.ml" 167 3624 3644
type(
  Names.identifier ->
  'a list -> Term.constr * Term.constr * Term.constr -> Proof_type.tactic
)
ident(
  def prove_trivial_eq "plugins/funind/functional_principles_proofs.ml" 187 4140 4140 --
)
"plugins/funind/functional_principles_proofs.ml" 167 3624 3645 "plugins/funind/functional_principles_proofs.ml" 167 3624 3649
type(
  Names.identifier
)
ident(
  def h_id "plugins/funind/functional_principles_proofs.ml" 167 3624 3650 "plugins/funind/functional_principles_proofs.ml" 183 4131 4136
)
"plugins/funind/functional_principles_proofs.ml" 167 3624 3650 "plugins/funind/functional_principles_proofs.ml" 167 3624 3657
type(
  'a list
)
ident(
  def context "plugins/funind/functional_principles_proofs.ml" 167 3624 3658 "plugins/funind/functional_principles_proofs.ml" 183 4131 4136
)
"plugins/funind/functional_principles_proofs.ml" 167 3624 3659 "plugins/funind/functional_principles_proofs.ml" 167 3624 3670
type(
  Term.constr
)
ident(
  def constructor "plugins/funind/functional_principles_proofs.ml" 168 3692 3694 "plugins/funind/functional_principles_proofs.ml" 183 4131 4136
)
"plugins/funind/functional_principles_proofs.ml" 167 3624 3671 "plugins/funind/functional_principles_proofs.ml" 167 3624 3683
type(
  Term.constr
)
ident(
  def type_of_term "plugins/funind/functional_principles_proofs.ml" 168 3692 3694 "plugins/funind/functional_principles_proofs.ml" 183 4131 4136
)
"plugins/funind/functional_principles_proofs.ml" 167 3624 3684 "plugins/funind/functional_principles_proofs.ml" 167 3624 3688
type(
  Term.constr
)
ident(
  def term "plugins/funind/functional_principles_proofs.ml" 168 3692 3694 "plugins/funind/functional_principles_proofs.ml" 183 4131 4136
)
"plugins/funind/functional_principles_proofs.ml" 167 3624 3658 "plugins/funind/functional_principles_proofs.ml" 167 3624 3689
type(
  Term.constr * Term.constr * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 168 3692 3698 "plugins/funind/functional_principles_proofs.ml" 168 3692 3707
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 168 3692 3710 "plugins/funind/functional_principles_proofs.ml" 168 3692 3721
type(
  'a list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 168 3692 3722 "plugins/funind/functional_principles_proofs.ml" 168 3692 3729
type(
  'a list
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 167 3624 3650 "plugins/funind/functional_principles_proofs.ml" 167 3624 3657
)
"plugins/funind/functional_principles_proofs.ml" 168 3692 3710 "plugins/funind/functional_principles_proofs.ml" 168 3692 3729
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 169 3733 3735 "plugins/funind/functional_principles_proofs.ml" 169 3733 3746
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 171 3753 3759 "plugins/funind/functional_principles_proofs.ml" 171 3753 3764
type(
  int -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclDO
)
"plugins/funind/functional_principles_proofs.ml" 171 3753 3765 "plugins/funind/functional_principles_proofs.ml" 171 3753 3774
type(
  int
)
ident(
  int_ref nb_intros "plugins/funind/functional_principles_proofs.ml" 168 3692 3698 "plugins/funind/functional_principles_proofs.ml" 168 3692 3707
)
"plugins/funind/functional_principles_proofs.ml" 171 3753 3775 "plugins/funind/functional_principles_proofs.ml" 171 3753 3780
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intro
)
"plugins/funind/functional_principles_proofs.ml" 171 3753 3759 "plugins/funind/functional_principles_proofs.ml" 171 3753 3780
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 172 3808 3819 "plugins/funind/functional_principles_proofs.ml" 172 3808 3820
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 173 3824 3826 "plugins/funind/functional_principles_proofs.ml" 181 4102 4122
)
"plugins/funind/functional_principles_proofs.ml" 173 3824 3830 "plugins/funind/functional_principles_proofs.ml" 173 3824 3842
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 174 3845 3849 "plugins/funind/functional_principles_proofs.ml" 174 3845 3852
type(
  Names.identifier list * Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 174 3845 3854 "plugins/funind/functional_principles_proofs.ml" 174 3845 3863
type(
  ?msg:string ->
  int ->
  Names.identifier list -> Names.identifier list * Names.identifier list
)
ident(
  int_ref list_chop "plugins/funind/functional_principles_proofs.ml" 56 1091 1095 "plugins/funind/functional_principles_proofs.ml" 56 1091 1104
)
"plugins/funind/functional_principles_proofs.ml" 174 3845 3869 "plugins/funind/functional_principles_proofs.ml" 174 3845 3890
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 174 3845 3891 "plugins/funind/functional_principles_proofs.ml" 174 3845 3900
type(
  int
)
ident(
  int_ref nb_intros "plugins/funind/functional_principles_proofs.ml" 168 3692 3698 "plugins/funind/functional_principles_proofs.ml" 168 3692 3707
)
"plugins/funind/functional_principles_proofs.ml" 174 3845 3902 "plugins/funind/functional_principles_proofs.ml" 174 3845 3916
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/functional_principles_proofs.ml" 174 3845 3917 "plugins/funind/functional_principles_proofs.ml" 174 3845 3918
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 172 3808 3819 "plugins/funind/functional_principles_proofs.ml" 172 3808 3820
)
"plugins/funind/functional_principles_proofs.ml" 174 3845 3901 "plugins/funind/functional_principles_proofs.ml" 174 3845 3919
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 174 3845 3853 "plugins/funind/functional_principles_proofs.ml" 174 3845 3920
call(
  stack
)
type(
  Names.identifier list * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 174 3845 3849 "plugins/funind/functional_principles_proofs.ml" 174 3845 3920
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 176 3926 3932 "plugins/funind/functional_principles_proofs.ml" 176 3926 3945
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 177 3948 3953 "plugins/funind/functional_principles_proofs.ml" 177 3948 3958
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 177 3948 3959 "plugins/funind/functional_principles_proofs.ml" 177 3948 3970
type(
  Term.constr
)
ident(
  int_ref constructor "plugins/funind/functional_principles_proofs.ml" 167 3624 3659 "plugins/funind/functional_principles_proofs.ml" 167 3624 3670
)
"plugins/funind/functional_principles_proofs.ml" 177 3948 3973 "plugins/funind/functional_principles_proofs.ml" 177 3948 3985
type(
  Term.constr
)
ident(
  int_ref type_of_term "plugins/funind/functional_principles_proofs.ml" 167 3624 3671 "plugins/funind/functional_principles_proofs.ml" 167 3624 3683
)
"plugins/funind/functional_principles_proofs.ml" 177 3948 3986 "plugins/funind/functional_principles_proofs.ml" 177 3948 3990
type(
  Term.constr
)
ident(
  int_ref term "plugins/funind/functional_principles_proofs.ml" 167 3624 3684 "plugins/funind/functional_principles_proofs.ml" 167 3624 3688
)
"plugins/funind/functional_principles_proofs.ml" 177 3948 3971 "plugins/funind/functional_principles_proofs.ml" 177 3948 3992
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 177 3948 3958 "plugins/funind/functional_principles_proofs.ml" 177 3948 3993
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 177 3948 3952 "plugins/funind/functional_principles_proofs.ml" 177 3948 3994
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 178 3997 4004 "plugins/funind/functional_principles_proofs.ml" 178 3997 4012
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 178 3997 4013 "plugins/funind/functional_principles_proofs.ml" 178 3997 4018
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 178 3997 4019 "plugins/funind/functional_principles_proofs.ml" 178 3997 4031
type(
  Names.identifier list
)
ident(
  int_ref context_hyps "plugins/funind/functional_principles_proofs.ml" 173 3824 3830 "plugins/funind/functional_principles_proofs.ml" 173 3824 3842
)
"plugins/funind/functional_principles_proofs.ml" 178 3997 4003 "plugins/funind/functional_principles_proofs.ml" 178 3997 4032
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 177 3948 3952 "plugins/funind/functional_principles_proofs.ml" 178 3997 4032
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4044 "plugins/funind/functional_principles_proofs.ml" 180 4038 4053
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4056 "plugins/funind/functional_principles_proofs.ml" 180 4038 4063
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4064 "plugins/funind/functional_principles_proofs.ml" 180 4038 4069
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4070 "plugins/funind/functional_principles_proofs.ml" 180 4038 4074
type(
  Names.identifier
)
ident(
  int_ref h_id "plugins/funind/functional_principles_proofs.ml" 167 3624 3645 "plugins/funind/functional_principles_proofs.ml" 167 3624 3649
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4064 "plugins/funind/functional_principles_proofs.ml" 180 4038 4074
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4075 "plugins/funind/functional_principles_proofs.ml" 180 4038 4083
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4084 "plugins/funind/functional_principles_proofs.ml" 180 4038 4097
type(
  Term.constr list
)
ident(
  int_ref context_hyps' "plugins/funind/functional_principles_proofs.ml" 176 3926 3932 "plugins/funind/functional_principles_proofs.ml" 176 3926 3945
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4075 "plugins/funind/functional_principles_proofs.ml" 180 4038 4097
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4063 "plugins/funind/functional_principles_proofs.ml" 180 4038 4098
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4056 "plugins/funind/functional_principles_proofs.ml" 180 4038 4098
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 181 4102 4104 "plugins/funind/functional_principles_proofs.ml" 181 4102 4110
type(
  Term.constr -> Tacmach.tactic
)
ident(
  int_ref refine "plugins/funind/functional_principles_proofs.ml" 93 1760 1764 "plugins/funind/functional_principles_proofs.ml" 93 1760 1770
)
"plugins/funind/functional_principles_proofs.ml" 181 4102 4111 "plugins/funind/functional_principles_proofs.ml" 181 4102 4120
type(
  Term.constr
)
ident(
  int_ref to_refine "plugins/funind/functional_principles_proofs.ml" 180 4038 4044 "plugins/funind/functional_principles_proofs.ml" 180 4038 4053
)
"plugins/funind/functional_principles_proofs.ml" 181 4102 4121 "plugins/funind/functional_principles_proofs.ml" 181 4102 4122
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 172 3808 3819 "plugins/funind/functional_principles_proofs.ml" 172 3808 3820
)
"plugins/funind/functional_principles_proofs.ml" 181 4102 4104 "plugins/funind/functional_principles_proofs.ml" 181 4102 4122
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 180 4038 4040 "plugins/funind/functional_principles_proofs.ml" 181 4102 4122
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 176 3926 3928 "plugins/funind/functional_principles_proofs.ml" 181 4102 4122
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 173 3824 3826 "plugins/funind/functional_principles_proofs.ml" 181 4102 4122
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 172 3808 3814 "plugins/funind/functional_principles_proofs.ml" 182 4123 4130
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 170 3747 3751 "plugins/funind/functional_principles_proofs.ml" 183 4131 4136
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 169 3733 3735 "plugins/funind/functional_principles_proofs.ml" 183 4131 4136
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 168 3692 3694 "plugins/funind/functional_principles_proofs.ml" 183 4131 4136
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 187 4140 4144 "plugins/funind/functional_principles_proofs.ml" 187 4140 4156
type(
  Environ.env -> Term.constr -> Term.constr * Term.constr list
)
ident(
  def find_rectype "plugins/funind/functional_principles_proofs.ml" 195 4335 4335 --
)
"plugins/funind/functional_principles_proofs.ml" 187 4140 4157 "plugins/funind/functional_principles_proofs.ml" 187 4140 4160
type(
  Environ.env
)
ident(
  def env "plugins/funind/functional_principles_proofs.ml" 187 4140 4161 "plugins/funind/functional_principles_proofs.ml" 192 4308 4332
)
"plugins/funind/functional_principles_proofs.ml" 187 4140 4161 "plugins/funind/functional_principles_proofs.ml" 187 4140 4162
type(
  Term.constr
)
ident(
  def c "plugins/funind/functional_principles_proofs.ml" 188 4165 4167 "plugins/funind/functional_principles_proofs.ml" 192 4308 4332
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4172 "plugins/funind/functional_principles_proofs.ml" 188 4165 4173
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4175 "plugins/funind/functional_principles_proofs.ml" 188 4165 4176
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4171 "plugins/funind/functional_principles_proofs.ml" 188 4165 4177
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4180 "plugins/funind/functional_principles_proofs.ml" 188 4165 4193
type(
  Term.constr -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4195 "plugins/funind/functional_principles_proofs.ml" 188 4165 4222
type(
  Environ.env -> Term.constr -> Term.constr
)
ident(
  ext_ref Reduction.whd_betadeltaiota
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4223 "plugins/funind/functional_principles_proofs.ml" 188 4165 4226
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 187 4140 4157 "plugins/funind/functional_principles_proofs.ml" 187 4140 4160
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4227 "plugins/funind/functional_principles_proofs.ml" 188 4165 4228
type(
  Term.constr
)
ident(
  int_ref c "plugins/funind/functional_principles_proofs.ml" 187 4140 4161 "plugins/funind/functional_principles_proofs.ml" 187 4140 4162
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4194 "plugins/funind/functional_principles_proofs.ml" 188 4165 4229
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4180 "plugins/funind/functional_principles_proofs.ml" 188 4165 4229
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 189 4233 4241 "plugins/funind/functional_principles_proofs.ml" 189 4233 4253
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 189 4233 4254 "plugins/funind/functional_principles_proofs.ml" 189 4233 4255
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 188 4165 4172 "plugins/funind/functional_principles_proofs.ml" 188 4165 4173
)
"plugins/funind/functional_principles_proofs.ml" 189 4233 4241 "plugins/funind/functional_principles_proofs.ml" 189 4233 4255
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 190 4261 4269 "plugins/funind/functional_principles_proofs.ml" 190 4261 4272
type(
  Names.inductive
)
ident(
  def ind "plugins/funind/functional_principles_proofs.ml" 190 4261 4276 "plugins/funind/functional_principles_proofs.ml" 190 4261 4282
)
"plugins/funind/functional_principles_proofs.ml" 190 4261 4265 "plugins/funind/functional_principles_proofs.ml" 190 4261 4272
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 190 4261 4277 "plugins/funind/functional_principles_proofs.ml" 190 4261 4278
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 188 4165 4172 "plugins/funind/functional_principles_proofs.ml" 188 4165 4173
)
"plugins/funind/functional_principles_proofs.ml" 190 4261 4280 "plugins/funind/functional_principles_proofs.ml" 190 4261 4281
type(
  Term.constr list
)
ident(
  int_ref l "plugins/funind/functional_principles_proofs.ml" 188 4165 4175 "plugins/funind/functional_principles_proofs.ml" 188 4165 4176
)
"plugins/funind/functional_principles_proofs.ml" 190 4261 4276 "plugins/funind/functional_principles_proofs.ml" 190 4261 4282
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 191 4283 4297 "plugins/funind/functional_principles_proofs.ml" 191 4283 4298
type(
  Names.constructor
)
"plugins/funind/functional_principles_proofs.ml" 191 4283 4287 "plugins/funind/functional_principles_proofs.ml" 191 4283 4298
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 191 4283 4303 "plugins/funind/functional_principles_proofs.ml" 191 4283 4304
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 188 4165 4172 "plugins/funind/functional_principles_proofs.ml" 188 4165 4173
)
"plugins/funind/functional_principles_proofs.ml" 191 4283 4305 "plugins/funind/functional_principles_proofs.ml" 191 4283 4306
type(
  Term.constr list
)
ident(
  int_ref l "plugins/funind/functional_principles_proofs.ml" 188 4165 4175 "plugins/funind/functional_principles_proofs.ml" 188 4165 4176
)
"plugins/funind/functional_principles_proofs.ml" 191 4283 4302 "plugins/funind/functional_principles_proofs.ml" 191 4283 4307
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 192 4308 4312 "plugins/funind/functional_principles_proofs.ml" 192 4308 4313
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 192 4308 4317 "plugins/funind/functional_principles_proofs.ml" 192 4308 4322
type(
  exn -> Term.constr * Term.constr list
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_proofs.ml" 192 4308 4323 "plugins/funind/functional_principles_proofs.ml" 192 4308 4332
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 192 4308 4317 "plugins/funind/functional_principles_proofs.ml" 192 4308 4332
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 189 4233 4235 "plugins/funind/functional_principles_proofs.ml" 192 4308 4332
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 188 4165 4167 "plugins/funind/functional_principles_proofs.ml" 192 4308 4332
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 195 4335 4339 "plugins/funind/functional_principles_proofs.ml" 195 4335 4353
type(
  ?env:Environ.env -> Term.constr -> bool
)
ident(
  def isAppConstruct "plugins/funind/functional_principles_proofs.ml" 202 4587 4587 --
)
"plugins/funind/functional_principles_proofs.ml" 195 4335 4356 "plugins/funind/functional_principles_proofs.ml" 195 4335 4359
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 195 4335 4360 "plugins/funind/functional_principles_proofs.ml" 195 4335 4370
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_proofs.ml" 195 4335 4371 "plugins/funind/functional_principles_proofs.ml" 195 4335 4373
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 195 4335 4360 "plugins/funind/functional_principles_proofs.ml" 195 4335 4373
call(
  stack
)
type(
  Environ.env
)
type(
  Environ.env
)
ident(
  int_ref *sth* "plugins/funind/functional_principles_proofs.ml" 195 4335 4360 "plugins/funind/functional_principles_proofs.ml" 195 4335 4373
)
type(
  Environ.env option
)
type(
  Environ.env option
)
type(
  Environ.env
)
ident(
  def *sth* "plugins/funind/functional_principles_proofs.ml" 195 4335 4360 "plugins/funind/functional_principles_proofs.ml" 195 4335 4373
)
"plugins/funind/functional_principles_proofs.ml" 195 4335 4375 "plugins/funind/functional_principles_proofs.ml" 195 4335 4376
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 196 4379 4381 "plugins/funind/functional_principles_proofs.ml" 200 4560 4585
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4393 "plugins/funind/functional_principles_proofs.ml" 197 4385 4395
type(
  Term.constr
)
ident(
  def t' "plugins/funind/functional_principles_proofs.ml" 198 4434 4438 "plugins/funind/functional_principles_proofs.ml" 199 4551 4559
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4396 "plugins/funind/functional_principles_proofs.ml" 197 4385 4397
type(
  Term.constr list
)
ident(
  def l "plugins/funind/functional_principles_proofs.ml" 198 4434 4438 "plugins/funind/functional_principles_proofs.ml" 199 4551 4559
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4393 "plugins/funind/functional_principles_proofs.ml" 197 4385 4397
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4400 "plugins/funind/functional_principles_proofs.ml" 197 4385 4412
type(
  Environ.env -> Term.constr -> Term.constr * Term.constr list
)
ident(
  int_ref find_rectype "plugins/funind/functional_principles_proofs.ml" 187 4140 4144 "plugins/funind/functional_principles_proofs.ml" 187 4140 4156
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4414 "plugins/funind/functional_principles_proofs.ml" 197 4385 4424
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4425 "plugins/funind/functional_principles_proofs.ml" 197 4385 4427
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4413 "plugins/funind/functional_principles_proofs.ml" 197 4385 4428
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4429 "plugins/funind/functional_principles_proofs.ml" 197 4385 4430
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 195 4335 4375 "plugins/funind/functional_principles_proofs.ml" 195 4335 4376
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4400 "plugins/funind/functional_principles_proofs.ml" 197 4385 4430
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4438 "plugins/funind/functional_principles_proofs.ml" 198 4434 4445
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/functional_principles_proofs.ml" 22 247 251 "plugins/funind/functional_principles_proofs.ml" 22 247 258
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4447 "plugins/funind/functional_principles_proofs.ml" 198 4434 4450
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4451 "plugins/funind/functional_principles_proofs.ml" 198 4434 4470
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4447 "plugins/funind/functional_principles_proofs.ml" 198 4434 4470
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4471 "plugins/funind/functional_principles_proofs.ml" 198 4434 4473
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4474 "plugins/funind/functional_principles_proofs.ml" 198 4434 4492
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4493 "plugins/funind/functional_principles_proofs.ml" 198 4434 4494
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 195 4335 4375 "plugins/funind/functional_principles_proofs.ml" 195 4335 4376
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4474 "plugins/funind/functional_principles_proofs.ml" 198 4434 4494
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4447 "plugins/funind/functional_principles_proofs.ml" 198 4434 4494
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4495 "plugins/funind/functional_principles_proofs.ml" 198 4434 4497
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4498 "plugins/funind/functional_principles_proofs.ml" 198 4434 4501
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4502 "plugins/funind/functional_principles_proofs.ml" 198 4434 4508
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4498 "plugins/funind/functional_principles_proofs.ml" 198 4434 4508
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4447 "plugins/funind/functional_principles_proofs.ml" 198 4434 4508
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4509 "plugins/funind/functional_principles_proofs.ml" 198 4434 4511
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4512 "plugins/funind/functional_principles_proofs.ml" 198 4434 4530
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4532 "plugins/funind/functional_principles_proofs.ml" 198 4434 4539
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4542 "plugins/funind/functional_principles_proofs.ml" 198 4434 4544
type(
  Term.constr
)
ident(
  int_ref t' "plugins/funind/functional_principles_proofs.ml" 197 4385 4393 "plugins/funind/functional_principles_proofs.ml" 197 4385 4395
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4545 "plugins/funind/functional_principles_proofs.ml" 198 4434 4546
type(
  Term.constr list
)
ident(
  int_ref l "plugins/funind/functional_principles_proofs.ml" 197 4385 4396 "plugins/funind/functional_principles_proofs.ml" 197 4385 4397
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4541 "plugins/funind/functional_principles_proofs.ml" 198 4434 4547
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4531 "plugins/funind/functional_principles_proofs.ml" 198 4434 4548
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4512 "plugins/funind/functional_principles_proofs.ml" 198 4434 4548
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4446 "plugins/funind/functional_principles_proofs.ml" 198 4434 4549
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4438 "plugins/funind/functional_principles_proofs.ml" 198 4434 4549
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 199 4551 4555 "plugins/funind/functional_principles_proofs.ml" 199 4551 4559
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 198 4434 4438 "plugins/funind/functional_principles_proofs.ml" 199 4551 4559
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 197 4385 4389 "plugins/funind/functional_principles_proofs.ml" 199 4551 4559
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 200 4560 4567 "plugins/funind/functional_principles_proofs.ml" 200 4560 4576
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 200 4560 4580 "plugins/funind/functional_principles_proofs.ml" 200 4560 4585
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 196 4379 4381 "plugins/funind/functional_principles_proofs.ml" 200 4560 4585
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 202 4587 4591 "plugins/funind/functional_principles_proofs.ml" 202 4587 4606
type(
  Term.types -> Term.constr
)
ident(
  def nf_betaiotazeta "plugins/funind/functional_principles_proofs.ml" 209 4893 4893 --
)
"plugins/funind/functional_principles_proofs.ml" 203 4672 4678 "plugins/funind/functional_principles_proofs.ml" 203 4672 4693
type(
  Closure.RedFlags.reds ->
  Environ.env -> Evd.evar_map -> Term.constr -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 203 4672 4694 "plugins/funind/functional_principles_proofs.ml" 203 4672 4698
type(
  Closure.RedFlags.reds
)
ident(
  def flgs "plugins/funind/functional_principles_proofs.ml" 203 4672 4699 "plugins/funind/functional_principles_proofs.ml" 204 4713 4818
)
"plugins/funind/functional_principles_proofs.ml" 203 4672 4699 "plugins/funind/functional_principles_proofs.ml" 203 4672 4702
type(
  Environ.env
)
ident(
  def env "plugins/funind/functional_principles_proofs.ml" 203 4672 4703 "plugins/funind/functional_principles_proofs.ml" 204 4713 4818
)
"plugins/funind/functional_principles_proofs.ml" 203 4672 4703 "plugins/funind/functional_principles_proofs.ml" 203 4672 4708
type(
  Evd.evar_map
)
ident(
  def sigma "plugins/funind/functional_principles_proofs.ml" 203 4672 4709 "plugins/funind/functional_principles_proofs.ml" 204 4713 4818
)
"plugins/funind/functional_principles_proofs.ml" 203 4672 4709 "plugins/funind/functional_principles_proofs.ml" 203 4672 4710
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 204 4713 4717 "plugins/funind/functional_principles_proofs.ml" 204 4713 4818
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4717 "plugins/funind/functional_principles_proofs.ml" 204 4713 4733
type(
  Closure.clos_infos -> Closure.fconstr -> Term.constr
)
ident(
  ext_ref Closure.norm_val
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4735 "plugins/funind/functional_principles_proofs.ml" 204 4713 4760
type(
  ?evars:(Term.existential -> Term.constr option) ->
  Closure.RedFlags.reds -> Environ.env -> Closure.clos_infos
)
ident(
  ext_ref Closure.create_clos_infos
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4761 "plugins/funind/functional_principles_proofs.ml" 204 4713 4765
type(
  Closure.RedFlags.reds
)
ident(
  int_ref flgs "plugins/funind/functional_principles_proofs.ml" 203 4672 4694 "plugins/funind/functional_principles_proofs.ml" 203 4672 4698
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4766 "plugins/funind/functional_principles_proofs.ml" 204 4713 4769
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 203 4672 4699 "plugins/funind/functional_principles_proofs.ml" 203 4672 4702
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4734 "plugins/funind/functional_principles_proofs.ml" 204 4713 4770
call(
  stack
)
type(
  Closure.clos_infos
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4772 "plugins/funind/functional_principles_proofs.ml" 204 4713 4786
type(
  Term.constr -> Closure.fconstr
)
ident(
  ext_ref Closure.inject
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4788 "plugins/funind/functional_principles_proofs.ml" 204 4713 4808
type(
  Evd.evar_map -> Term.constr -> Term.constr
)
ident(
  ext_ref Reductionops.nf_evar
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4809 "plugins/funind/functional_principles_proofs.ml" 204 4713 4814
type(
  Evd.evar_map
)
ident(
  int_ref sigma "plugins/funind/functional_principles_proofs.ml" 203 4672 4703 "plugins/funind/functional_principles_proofs.ml" 203 4672 4708
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4815 "plugins/funind/functional_principles_proofs.ml" 204 4713 4816
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 203 4672 4709 "plugins/funind/functional_principles_proofs.ml" 203 4672 4710
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4787 "plugins/funind/functional_principles_proofs.ml" 204 4713 4817
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4771 "plugins/funind/functional_principles_proofs.ml" 204 4713 4818
call(
  stack
)
type(
  Closure.fconstr
)
"plugins/funind/functional_principles_proofs.ml" 204 4713 4717 "plugins/funind/functional_principles_proofs.ml" 204 4713 4818
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 205 4822 4824 "plugins/funind/functional_principles_proofs.ml" 205 4822 4839
type(
  Closure.RedFlags.reds ->
  Environ.env -> Evd.evar_map -> Term.types -> Term.constr
)
ident(
  int_ref clos_norm_flags "plugins/funind/functional_principles_proofs.ml" 203 4672 4678 "plugins/funind/functional_principles_proofs.ml" 203 4672 4693
)
"plugins/funind/functional_principles_proofs.ml" 205 4822 4840 "plugins/funind/functional_principles_proofs.ml" 205 4822 4860
type(
  Closure.RedFlags.reds
)
ident(
  ext_ref Closure.betaiotazeta
)
"plugins/funind/functional_principles_proofs.ml" 205 4822 4862 "plugins/funind/functional_principles_proofs.ml" 205 4822 4879
type(
  Environ.env
)
ident(
  ext_ref Environ.empty_env
)
"plugins/funind/functional_principles_proofs.ml" 205 4822 4880 "plugins/funind/functional_principles_proofs.ml" 205 4822 4889
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_proofs.ml" 205 4822 4824 "plugins/funind/functional_principles_proofs.ml" 205 4822 4889
call(
  stack
)
type(
  Term.types -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 203 4672 4674 "plugins/funind/functional_principles_proofs.ml" 205 4822 4889
type(
  Term.types -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 209 4893 4897 "plugins/funind/functional_principles_proofs.ml" 209 4893 4906
type(
  Environ.env ->
  Evd.evar_map ->
  Names.identifier ->
  Term.rel_context ->
  'a ->
  Term.types ->
  Term.constr -> Term.rel_context * Term.types * Proof_type.tactic
)
ident(
  def change_eq "plugins/funind/functional_principles_proofs.ml" 332 9591 9591 --
)
"plugins/funind/functional_principles_proofs.ml" 209 4893 4907 "plugins/funind/functional_principles_proofs.ml" 209 4893 4910
type(
  Environ.env
)
ident(
  def env "plugins/funind/functional_principles_proofs.ml" 209 4893 4911 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
)
"plugins/funind/functional_principles_proofs.ml" 209 4893 4911 "plugins/funind/functional_principles_proofs.ml" 209 4893 4916
type(
  Evd.evar_map
)
ident(
  def sigma "plugins/funind/functional_principles_proofs.ml" 209 4893 4917 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
)
"plugins/funind/functional_principles_proofs.ml" 209 4893 4917 "plugins/funind/functional_principles_proofs.ml" 209 4893 4923
type(
  Names.identifier
)
ident(
  def hyp_id "plugins/funind/functional_principles_proofs.ml" 209 4893 4924 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
)
"plugins/funind/functional_principles_proofs.ml" 209 4893 4925 "plugins/funind/functional_principles_proofs.ml" 209 4893 4932
type(
  Term.rel_context
)
ident(
  def context "plugins/funind/functional_principles_proofs.ml" 209 4893 4946 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
)
"plugins/funind/functional_principles_proofs.ml" 209 4893 4946 "plugins/funind/functional_principles_proofs.ml" 209 4893 4947
type(
  'a
)
ident(
  def x "plugins/funind/functional_principles_proofs.ml" 209 4893 4948 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
)
"plugins/funind/functional_principles_proofs.ml" 209 4893 4948 "plugins/funind/functional_principles_proofs.ml" 209 4893 4949
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 209 4893 4950 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
)
"plugins/funind/functional_principles_proofs.ml" 209 4893 4950 "plugins/funind/functional_principles_proofs.ml" 209 4893 4961
type(
  Term.constr
)
ident(
  def end_of_type "plugins/funind/functional_principles_proofs.ml" 210 4965 4967 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
)
"plugins/funind/functional_principles_proofs.ml" 210 4965 4971 "plugins/funind/functional_principles_proofs.ml" 210 4965 4979
type(
  ?t':Term.constr -> string -> 'b
)
"plugins/funind/functional_principles_proofs.ml" 210 4965 4981 "plugins/funind/functional_principles_proofs.ml" 210 4965 4983
type(
  Term.constr option
)
ident(
  def t' "plugins/funind/functional_principles_proofs.ml" 210 4965 4984 "plugins/funind/functional_principles_proofs.ml" 214 5175 5182
)
"plugins/funind/functional_principles_proofs.ml" 210 4965 4984 "plugins/funind/functional_principles_proofs.ml" 210 4965 4987
type(
  string
)
ident(
  def msg "plugins/funind/functional_principles_proofs.ml" 211 4991 4995 "plugins/funind/functional_principles_proofs.ml" 214 5175 5182
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5007 "plugins/funind/functional_principles_proofs.ml" 212 5001 5014
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/functional_principles_proofs.ml" 22 247 251 "plugins/funind/functional_principles_proofs.ml" 22 247 258
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5016 "plugins/funind/functional_principles_proofs.ml" 212 5001 5019
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5021 "plugins/funind/functional_principles_proofs.ml" 212 5001 5038
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5038 "plugins/funind/functional_principles_proofs.ml" 212 5001 5039
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5039 "plugins/funind/functional_principles_proofs.ml" 212 5001 5042
type(
  string
)
ident(
  int_ref msg "plugins/funind/functional_principles_proofs.ml" 210 4965 4984 "plugins/funind/functional_principles_proofs.ml" 210 4965 4987
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5042 "plugins/funind/functional_principles_proofs.ml" 212 5001 5043
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5043 "plugins/funind/functional_principles_proofs.ml" 212 5001 5047
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5039 "plugins/funind/functional_principles_proofs.ml" 212 5001 5047
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5020 "plugins/funind/functional_principles_proofs.ml" 212 5001 5048
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5016 "plugins/funind/functional_principles_proofs.ml" 212 5001 5048
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5049 "plugins/funind/functional_principles_proofs.ml" 212 5001 5051
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5052 "plugins/funind/functional_principles_proofs.ml" 212 5001 5062
type(
  Term.types -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5063 "plugins/funind/functional_principles_proofs.ml" 212 5001 5064
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 209 4893 4948 "plugins/funind/functional_principles_proofs.ml" 209 4893 4949
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5052 "plugins/funind/functional_principles_proofs.ml" 212 5001 5064
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5016 "plugins/funind/functional_principles_proofs.ml" 212 5001 5064
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5066 "plugins/funind/functional_principles_proofs.ml" 212 5001 5068
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5069 "plugins/funind/functional_principles_proofs.ml" 212 5001 5072
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5073 "plugins/funind/functional_principles_proofs.ml" 212 5001 5079
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5069 "plugins/funind/functional_principles_proofs.ml" 212 5001 5079
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5016 "plugins/funind/functional_principles_proofs.ml" 212 5001 5079
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5080 "plugins/funind/functional_principles_proofs.ml" 212 5001 5082
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5089 "plugins/funind/functional_principles_proofs.ml" 212 5001 5091
type(
  Term.constr option
)
ident(
  int_ref t' "plugins/funind/functional_principles_proofs.ml" 210 4965 4981 "plugins/funind/functional_principles_proofs.ml" 210 4965 4983
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5097 "plugins/funind/functional_principles_proofs.ml" 212 5001 5101
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5105 "plugins/funind/functional_principles_proofs.ml" 212 5001 5108
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5109 "plugins/funind/functional_principles_proofs.ml" 212 5001 5111
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5105 "plugins/funind/functional_principles_proofs.ml" 212 5001 5111
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5119 "plugins/funind/functional_principles_proofs.ml" 212 5001 5120
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 212 5001 5124 "plugins/funind/functional_principles_proofs.ml" 212 5001 5144
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5114 "plugins/funind/functional_principles_proofs.ml" 212 5001 5120
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5124 "plugins/funind/functional_principles_proofs.ml" 212 5001 5142
type(
  Term.constr -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5143 "plugins/funind/functional_principles_proofs.ml" 212 5001 5144
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 212 5001 5119 "plugins/funind/functional_principles_proofs.ml" 212 5001 5120
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5124 "plugins/funind/functional_principles_proofs.ml" 212 5001 5144
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5083 "plugins/funind/functional_principles_proofs.ml" 212 5001 5144
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5015 "plugins/funind/functional_principles_proofs.ml" 212 5001 5146
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 212 5001 5007 "plugins/funind/functional_principles_proofs.ml" 212 5001 5146
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 213 5148 5154 "plugins/funind/functional_principles_proofs.ml" 213 5148 5162
type(
  string -> 'b
)
ident(
  ext_ref Pervasives.failwith
)
"plugins/funind/functional_principles_proofs.ml" 213 5148 5163 "plugins/funind/functional_principles_proofs.ml" 213 5148 5173
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 213 5148 5154 "plugins/funind/functional_principles_proofs.ml" 213 5148 5174
call(
  tail
)
type(
  'b
)
"plugins/funind/functional_principles_proofs.ml" 211 4991 4995 "plugins/funind/functional_principles_proofs.ml" 214 5175 5182
type(
  'b
)
"plugins/funind/functional_principles_proofs.ml" 216 5188 5194 "plugins/funind/functional_principles_proofs.ml" 216 5188 5203
type(
  Term.constr -> Term.constr -> bool
)
"plugins/funind/functional_principles_proofs.ml" 216 5188 5206 "plugins/funind/functional_principles_proofs.ml" 216 5188 5226
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Reductionops.is_conv
)
"plugins/funind/functional_principles_proofs.ml" 216 5188 5227 "plugins/funind/functional_principles_proofs.ml" 216 5188 5230
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 209 4893 4907 "plugins/funind/functional_principles_proofs.ml" 209 4893 4910
)
"plugins/funind/functional_principles_proofs.ml" 216 5188 5231 "plugins/funind/functional_principles_proofs.ml" 216 5188 5236
type(
  Evd.evar_map
)
ident(
  int_ref sigma "plugins/funind/functional_principles_proofs.ml" 209 4893 4911 "plugins/funind/functional_principles_proofs.ml" 209 4893 4916
)
"plugins/funind/functional_principles_proofs.ml" 216 5188 5206 "plugins/funind/functional_principles_proofs.ml" 216 5188 5236
call(
  stack
)
type(
  Term.constr -> Term.constr -> bool
)
"plugins/funind/functional_principles_proofs.ml" 217 5240 5245 "plugins/funind/functional_principles_proofs.ml" 217 5240 5248
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_proofs.ml" 217 5240 5250 "plugins/funind/functional_principles_proofs.ml" 217 5240 5257
type(
  int -> Term.constr -> bool
)
ident(
  ext_ref Term.noccurn
)
"plugins/funind/functional_principles_proofs.ml" 217 5240 5258 "plugins/funind/functional_principles_proofs.ml" 217 5240 5259
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 217 5240 5260 "plugins/funind/functional_principles_proofs.ml" 217 5240 5271
type(
  Term.constr
)
ident(
  int_ref end_of_type "plugins/funind/functional_principles_proofs.ml" 209 4893 4950 "plugins/funind/functional_principles_proofs.ml" 209 4893 4961
)
"plugins/funind/functional_principles_proofs.ml" 217 5240 5249 "plugins/funind/functional_principles_proofs.ml" 217 5240 5272
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 217 5240 5245 "plugins/funind/functional_principles_proofs.ml" 217 5240 5272
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 218 5273 5280 "plugins/funind/functional_principles_proofs.ml" 218 5273 5288
type(
  ?t':Term.constr -> string -> unit
)
ident(
  int_ref nochange "plugins/funind/functional_principles_proofs.ml" 210 4965 4971 "plugins/funind/functional_principles_proofs.ml" 210 4965 4979
)
"plugins/funind/functional_principles_proofs.ml" 218 5273 5289 "plugins/funind/functional_principles_proofs.ml" 218 5273 5300
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 218 5273 5280 "plugins/funind/functional_principles_proofs.ml" 218 5273 5300
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 217 5240 5242 "plugins/funind/functional_principles_proofs.ml" 218 5273 5300
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5370 "plugins/funind/functional_principles_proofs.ml" 219 5363 5373
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5375 "plugins/funind/functional_principles_proofs.ml" 219 5363 5380
type(
  Term.types -> bool
)
ident(
  ext_ref Term.isApp
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5381 "plugins/funind/functional_principles_proofs.ml" 219 5363 5382
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 209 4893 4948 "plugins/funind/functional_principles_proofs.ml" 209 4893 4949
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5374 "plugins/funind/functional_principles_proofs.ml" 219 5363 5383
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5370 "plugins/funind/functional_principles_proofs.ml" 219 5363 5383
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5389 "plugins/funind/functional_principles_proofs.ml" 219 5363 5397
type(
  ?t':Term.constr -> string -> unit
)
ident(
  int_ref nochange "plugins/funind/functional_principles_proofs.ml" 210 4965 4971 "plugins/funind/functional_principles_proofs.ml" 210 4965 4979
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5398 "plugins/funind/functional_principles_proofs.ml" 219 5363 5415
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5389 "plugins/funind/functional_principles_proofs.ml" 219 5363 5415
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5367 "plugins/funind/functional_principles_proofs.ml" 219 5363 5415
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 220 5417 5425 "plugins/funind/functional_principles_proofs.ml" 220 5417 5429
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 220 5417 5425 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 220 5417 5437 "plugins/funind/functional_principles_proofs.ml" 220 5417 5444
type(
  Term.types -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 220 5417 5445 "plugins/funind/functional_principles_proofs.ml" 220 5417 5446
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 209 4893 4948 "plugins/funind/functional_principles_proofs.ml" 209 4893 4949
)
"plugins/funind/functional_principles_proofs.ml" 220 5417 5437 "plugins/funind/functional_principles_proofs.ml" 220 5417 5446
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 221 5450 5458 "plugins/funind/functional_principles_proofs.ml" 221 5450 5469
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 221 5450 5470 "plugins/funind/functional_principles_proofs.ml" 221 5450 5472
type(
  Term.constr * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 221 5450 5473 "plugins/funind/functional_principles_proofs.ml" 221 5450 5475
type(
  Term.constr * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 221 5450 5476 "plugins/funind/functional_principles_proofs.ml" 221 5450 5482
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 221 5450 5458 "plugins/funind/functional_principles_proofs.ml" 221 5450 5482
type(
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 223 5495 5500 "plugins/funind/functional_principles_proofs.ml" 223 5495 5509
type(
  Term.constr -> Term.constr -> bool
)
ident(
  int_ref eq_constr "plugins/funind/functional_principles_proofs.ml" 216 5188 5194 "plugins/funind/functional_principles_proofs.ml" 216 5188 5203
)
"plugins/funind/functional_principles_proofs.ml" 223 5495 5510 "plugins/funind/functional_principles_proofs.ml" 223 5495 5514
type(
  Term.constr
)
ident(
  int_ref f_eq "plugins/funind/functional_principles_proofs.ml" 220 5417 5425 "plugins/funind/functional_principles_proofs.ml" 220 5417 5429
)
"plugins/funind/functional_principles_proofs.ml" 223 5495 5516 "plugins/funind/functional_principles_proofs.ml" 223 5495 5526
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 223 5495 5527 "plugins/funind/functional_principles_proofs.ml" 223 5495 5529
type(
  Term.constr Lazy.t
)
ident(
  ext_ref Indfun_common.eq
)
"plugins/funind/functional_principles_proofs.ml" 223 5495 5515 "plugins/funind/functional_principles_proofs.ml" 223 5495 5530
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 223 5495 5499 "plugins/funind/functional_principles_proofs.ml" 223 5495 5531
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 225 5538 5545 "plugins/funind/functional_principles_proofs.ml" 225 5538 5547
type(
  Term.constr * Term.constr
)
ident(
  def t1 "plugins/funind/functional_principles_proofs.ml" 229 5633 5636 "plugins/funind/functional_principles_proofs.ml" 229 5633 5672
)
"plugins/funind/functional_principles_proofs.ml" 225 5538 5551 "plugins/funind/functional_principles_proofs.ml" 225 5538 5555
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 225 5538 5557 "plugins/funind/functional_principles_proofs.ml" 225 5538 5558
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 225 5538 5551 "plugins/funind/functional_principles_proofs.ml" 225 5538 5559
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 225 5538 5560 "plugins/funind/functional_principles_proofs.ml" 225 5538 5564
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 225 5538 5566 "plugins/funind/functional_principles_proofs.ml" 225 5538 5567
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 225 5538 5560 "plugins/funind/functional_principles_proofs.ml" 225 5538 5568
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 225 5538 5550 "plugins/funind/functional_principles_proofs.ml" 225 5538 5569
type(
  Term.constr * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 226 5570 5577 "plugins/funind/functional_principles_proofs.ml" 226 5570 5579
type(
  Term.constr * Term.constr
)
ident(
  def t2 "plugins/funind/functional_principles_proofs.ml" 229 5633 5636 "plugins/funind/functional_principles_proofs.ml" 229 5633 5672
)
"plugins/funind/functional_principles_proofs.ml" 226 5570 5583 "plugins/funind/functional_principles_proofs.ml" 226 5570 5587
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 226 5570 5589 "plugins/funind/functional_principles_proofs.ml" 226 5570 5590
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 226 5570 5583 "plugins/funind/functional_principles_proofs.ml" 226 5570 5591
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 226 5570 5592 "plugins/funind/functional_principles_proofs.ml" 226 5570 5596
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 226 5570 5598 "plugins/funind/functional_principles_proofs.ml" 226 5570 5599
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 226 5570 5592 "plugins/funind/functional_principles_proofs.ml" 226 5570 5600
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 226 5570 5582 "plugins/funind/functional_principles_proofs.ml" 226 5570 5601
type(
  Term.constr * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 227 5602 5609 "plugins/funind/functional_principles_proofs.ml" 227 5602 5615
type(
  Term.constr
)
ident(
  def t1_typ "plugins/funind/functional_principles_proofs.ml" 229 5633 5636 "plugins/funind/functional_principles_proofs.ml" 229 5633 5672
)
"plugins/funind/functional_principles_proofs.ml" 227 5602 5618 "plugins/funind/functional_principles_proofs.ml" 227 5602 5622
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 227 5602 5624 "plugins/funind/functional_principles_proofs.ml" 227 5602 5625
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 227 5602 5618 "plugins/funind/functional_principles_proofs.ml" 227 5602 5626
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 229 5633 5637 "plugins/funind/functional_principles_proofs.ml" 229 5633 5647
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 229 5633 5648 "plugins/funind/functional_principles_proofs.ml" 229 5633 5658
type(
  Term.constr Lazy.t
)
ident(
  ext_ref Indfun_common.refl_equal
)
"plugins/funind/functional_principles_proofs.ml" 229 5633 5637 "plugins/funind/functional_principles_proofs.ml" 229 5633 5658
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 229 5633 5659 "plugins/funind/functional_principles_proofs.ml" 229 5633 5661
type(
  Term.constr * Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 225 5538 5545 "plugins/funind/functional_principles_proofs.ml" 225 5538 5547
)
"plugins/funind/functional_principles_proofs.ml" 229 5633 5662 "plugins/funind/functional_principles_proofs.ml" 229 5633 5664
type(
  Term.constr * Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 226 5570 5577 "plugins/funind/functional_principles_proofs.ml" 226 5570 5579
)
"plugins/funind/functional_principles_proofs.ml" 229 5633 5665 "plugins/funind/functional_principles_proofs.ml" 229 5633 5671
type(
  Term.constr
)
ident(
  int_ref t1_typ "plugins/funind/functional_principles_proofs.ml" 227 5602 5609 "plugins/funind/functional_principles_proofs.ml" 227 5602 5615
)
"plugins/funind/functional_principles_proofs.ml" 229 5633 5636 "plugins/funind/functional_principles_proofs.ml" 229 5633 5672
type(
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 225 5538 5541 "plugins/funind/functional_principles_proofs.ml" 229 5633 5672
type(
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 231 5679 5686 "plugins/funind/functional_principles_proofs.ml" 231 5679 5695
type(
  Term.constr -> Term.constr -> bool
)
ident(
  int_ref eq_constr "plugins/funind/functional_principles_proofs.ml" 216 5188 5194 "plugins/funind/functional_principles_proofs.ml" 216 5188 5203
)
"plugins/funind/functional_principles_proofs.ml" 231 5679 5696 "plugins/funind/functional_principles_proofs.ml" 231 5679 5700
type(
  Term.constr
)
ident(
  int_ref f_eq "plugins/funind/functional_principles_proofs.ml" 220 5417 5425 "plugins/funind/functional_principles_proofs.ml" 220 5417 5429
)
"plugins/funind/functional_principles_proofs.ml" 231 5679 5702 "plugins/funind/functional_principles_proofs.ml" 231 5679 5706
type(
  unit -> Term.constr
)
ident(
  ext_ref Indfun_common.jmeq
)
"plugins/funind/functional_principles_proofs.ml" 231 5679 5707 "plugins/funind/functional_principles_proofs.ml" 231 5679 5709
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 231 5679 5701 "plugins/funind/functional_principles_proofs.ml" 231 5679 5710
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 231 5679 5685 "plugins/funind/functional_principles_proofs.ml" 231 5679 5711
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5726 "plugins/funind/functional_principles_proofs.ml" 233 5720 5735
type(
  unit -> Term.constr
)
ident(
  ext_ref Indfun_common.jmeq_refl
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5736 "plugins/funind/functional_principles_proofs.ml" 233 5720 5738
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5726 "plugins/funind/functional_principles_proofs.ml" 233 5720 5738
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5740 "plugins/funind/functional_principles_proofs.ml" 233 5720 5744
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5746 "plugins/funind/functional_principles_proofs.ml" 233 5720 5747
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5740 "plugins/funind/functional_principles_proofs.ml" 233 5720 5748
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5749 "plugins/funind/functional_principles_proofs.ml" 233 5720 5753
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5755 "plugins/funind/functional_principles_proofs.ml" 233 5720 5756
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5749 "plugins/funind/functional_principles_proofs.ml" 233 5720 5757
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5739 "plugins/funind/functional_principles_proofs.ml" 233 5720 5758
type(
  Term.constr * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5760 "plugins/funind/functional_principles_proofs.ml" 233 5720 5764
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5766 "plugins/funind/functional_principles_proofs.ml" 233 5720 5767
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5760 "plugins/funind/functional_principles_proofs.ml" 233 5720 5768
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5769 "plugins/funind/functional_principles_proofs.ml" 233 5720 5773
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5775 "plugins/funind/functional_principles_proofs.ml" 233 5720 5776
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5769 "plugins/funind/functional_principles_proofs.ml" 233 5720 5777
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5759 "plugins/funind/functional_principles_proofs.ml" 233 5720 5778
type(
  Term.constr * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5779 "plugins/funind/functional_principles_proofs.ml" 233 5720 5783
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 220 5417 5430 "plugins/funind/functional_principles_proofs.ml" 220 5417 5434
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5785 "plugins/funind/functional_principles_proofs.ml" 233 5720 5786
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5779 "plugins/funind/functional_principles_proofs.ml" 233 5720 5787
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 233 5720 5725 "plugins/funind/functional_principles_proofs.ml" 233 5720 5788
type(
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 234 5789 5797 "plugins/funind/functional_principles_proofs.ml" 234 5789 5805
type(
  ?t':Term.constr ->
  string ->
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
ident(
  int_ref nochange "plugins/funind/functional_principles_proofs.ml" 210 4965 4971 "plugins/funind/functional_principles_proofs.ml" 210 4965 4979
)
"plugins/funind/functional_principles_proofs.ml" 234 5789 5806 "plugins/funind/functional_principles_proofs.ml" 234 5789 5823
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 234 5789 5797 "plugins/funind/functional_principles_proofs.ml" 234 5789 5823
call(
  stack
)
type(
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 231 5679 5682 "plugins/funind/functional_principles_proofs.ml" 234 5789 5823
type(
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 223 5495 5496 "plugins/funind/functional_principles_proofs.ml" 234 5789 5823
type(
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 235 5824 5835 "plugins/funind/functional_principles_proofs.ml" 235 5824 5836
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 235 5824 5840 "plugins/funind/functional_principles_proofs.ml" 235 5824 5848
type(
  ?t':Term.constr ->
  string ->
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
ident(
  int_ref nochange "plugins/funind/functional_principles_proofs.ml" 210 4965 4971 "plugins/funind/functional_principles_proofs.ml" 210 4965 4979
)
"plugins/funind/functional_principles_proofs.ml" 235 5824 5849 "plugins/funind/functional_principles_proofs.ml" 235 5824 5866
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 235 5824 5840 "plugins/funind/functional_principles_proofs.ml" 235 5824 5866
call(
  stack
)
type(
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 222 5485 5491 "plugins/funind/functional_principles_proofs.ml" 235 5824 5866
type(
  Term.constr * (Term.constr * Term.constr) * (Term.constr * Term.constr) *
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5881 "plugins/funind/functional_principles_proofs.ml" 237 5874 5884
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5887 "plugins/funind/functional_principles_proofs.ml" 237 5874 5894
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.closed0
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5896 "plugins/funind/functional_principles_proofs.ml" 237 5874 5899
type(
  Term.constr * Term.constr -> Term.constr
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5900 "plugins/funind/functional_principles_proofs.ml" 237 5874 5902
type(
  Term.constr * Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 221 5450 5470 "plugins/funind/functional_principles_proofs.ml" 221 5450 5472
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5895 "plugins/funind/functional_principles_proofs.ml" 237 5874 5903
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5886 "plugins/funind/functional_principles_proofs.ml" 237 5874 5904
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5905 "plugins/funind/functional_principles_proofs.ml" 237 5874 5907
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5909 "plugins/funind/functional_principles_proofs.ml" 237 5874 5916
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.closed0
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5918 "plugins/funind/functional_principles_proofs.ml" 237 5874 5921
type(
  Term.constr * Term.constr -> Term.constr
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5922 "plugins/funind/functional_principles_proofs.ml" 237 5874 5924
type(
  Term.constr * Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 221 5450 5470 "plugins/funind/functional_principles_proofs.ml" 221 5450 5472
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5917 "plugins/funind/functional_principles_proofs.ml" 237 5874 5925
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5908 "plugins/funind/functional_principles_proofs.ml" 237 5874 5926
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5885 "plugins/funind/functional_principles_proofs.ml" 237 5874 5927
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5881 "plugins/funind/functional_principles_proofs.ml" 237 5874 5927
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5932 "plugins/funind/functional_principles_proofs.ml" 237 5874 5940
type(
  ?t':Term.constr -> string -> unit
)
ident(
  int_ref nochange "plugins/funind/functional_principles_proofs.ml" 210 4965 4971 "plugins/funind/functional_principles_proofs.ml" 210 4965 4979
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5941 "plugins/funind/functional_principles_proofs.ml" 237 5874 5959
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5932 "plugins/funind/functional_principles_proofs.ml" 237 5874 5959
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5878 "plugins/funind/functional_principles_proofs.ml" 237 5874 5959
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 238 5961 5973 "plugins/funind/functional_principles_proofs.ml" 238 5961 5993
type(
  Term.constr Util.Intmap.t ->
  Term.constr -> Term.constr -> Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 238 5961 5994 "plugins/funind/functional_principles_proofs.ml" 238 5961 5997
type(
  Term.constr Util.Intmap.t
)
ident(
  def sub "plugins/funind/functional_principles_proofs.ml" 238 5961 5998 "plugins/funind/functional_principles_proofs.ml" 262 6660 6798
)
"plugins/funind/functional_principles_proofs.ml" 238 5961 5998 "plugins/funind/functional_principles_proofs.ml" 238 5961 6000
type(
  Term.constr
)
ident(
  def t1 "plugins/funind/functional_principles_proofs.ml" 238 5961 6001 "plugins/funind/functional_principles_proofs.ml" 262 6660 6798
)
"plugins/funind/functional_principles_proofs.ml" 238 5961 6001 "plugins/funind/functional_principles_proofs.ml" 238 5961 6003
type(
  Term.constr
)
ident(
  def t2 "plugins/funind/functional_principles_proofs.ml" 240 6108 6114 "plugins/funind/functional_principles_proofs.ml" 262 6660 6798
)
"plugins/funind/functional_principles_proofs.ml" 240 6108 6117 "plugins/funind/functional_principles_proofs.ml" 240 6108 6122
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isRel
)
"plugins/funind/functional_principles_proofs.ml" 240 6108 6123 "plugins/funind/functional_principles_proofs.ml" 240 6108 6125
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 238 5961 6001 "plugins/funind/functional_principles_proofs.ml" 238 5961 6003
)
"plugins/funind/functional_principles_proofs.ml" 240 6108 6117 "plugins/funind/functional_principles_proofs.ml" 240 6108 6125
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 242 6137 6142 "plugins/funind/functional_principles_proofs.ml" 242 6137 6144
type(
  int
)
ident(
  def t2 "plugins/funind/functional_principles_proofs.ml" 243 6162 6163 "plugins/funind/functional_principles_proofs.ml" 251 6364 6368
)
"plugins/funind/functional_principles_proofs.ml" 242 6137 6147 "plugins/funind/functional_principles_proofs.ml" 242 6137 6154
type(
  Term.constr -> int
)
ident(
  ext_ref Term.destRel
)
"plugins/funind/functional_principles_proofs.ml" 242 6137 6155 "plugins/funind/functional_principles_proofs.ml" 242 6137 6157
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 238 5961 6001 "plugins/funind/functional_principles_proofs.ml" 238 5961 6003
)
"plugins/funind/functional_principles_proofs.ml" 242 6137 6147 "plugins/funind/functional_principles_proofs.ml" 242 6137 6157
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 245 6176 6185 "plugins/funind/functional_principles_proofs.ml" 245 6176 6188
type(
  Term.constr
)
ident(
  def t1' "plugins/funind/functional_principles_proofs.ml" 246 6213 6218 "plugins/funind/functional_principles_proofs.ml" 247 6282 6290
)
"plugins/funind/functional_principles_proofs.ml" 245 6176 6191 "plugins/funind/functional_principles_proofs.ml" 245 6176 6202
type(
  Util.Intmap.key -> Term.constr Util.Intmap.t -> Term.constr
)
ident(
  ext_ref Util.Intmap.find
)
"plugins/funind/functional_principles_proofs.ml" 245 6176 6203 "plugins/funind/functional_principles_proofs.ml" 245 6176 6205
type(
  Util.Intmap.key
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 242 6137 6142 "plugins/funind/functional_principles_proofs.ml" 242 6137 6144
)
"plugins/funind/functional_principles_proofs.ml" 245 6176 6206 "plugins/funind/functional_principles_proofs.ml" 245 6176 6209
type(
  Term.constr Util.Intmap.t
)
ident(
  int_ref sub "plugins/funind/functional_principles_proofs.ml" 238 5961 5994 "plugins/funind/functional_principles_proofs.ml" 238 5961 5997
)
"plugins/funind/functional_principles_proofs.ml" 245 6176 6191 "plugins/funind/functional_principles_proofs.ml" 245 6176 6209
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6221 "plugins/funind/functional_principles_proofs.ml" 246 6213 6224
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6226 "plugins/funind/functional_principles_proofs.ml" 246 6213 6235
type(
  Term.constr -> Term.constr -> bool
)
ident(
  int_ref eq_constr "plugins/funind/functional_principles_proofs.ml" 216 5188 5194 "plugins/funind/functional_principles_proofs.ml" 216 5188 5203
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6236 "plugins/funind/functional_principles_proofs.ml" 246 6213 6238
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 238 5961 5998 "plugins/funind/functional_principles_proofs.ml" 238 5961 6000
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6239 "plugins/funind/functional_principles_proofs.ml" 246 6213 6242
type(
  Term.constr
)
ident(
  int_ref t1' "plugins/funind/functional_principles_proofs.ml" 245 6176 6185 "plugins/funind/functional_principles_proofs.ml" 245 6176 6188
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6225 "plugins/funind/functional_principles_proofs.ml" 246 6213 6243
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6221 "plugins/funind/functional_principles_proofs.ml" 246 6213 6243
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6249 "plugins/funind/functional_principles_proofs.ml" 246 6213 6257
type(
  ?t':Term.constr -> string -> unit
)
ident(
  int_ref nochange "plugins/funind/functional_principles_proofs.ml" 210 4965 4971 "plugins/funind/functional_principles_proofs.ml" 210 4965 4979
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6258 "plugins/funind/functional_principles_proofs.ml" 246 6213 6280
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6249 "plugins/funind/functional_principles_proofs.ml" 246 6213 6280
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6218 "plugins/funind/functional_principles_proofs.ml" 246 6213 6280
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 247 6282 6287 "plugins/funind/functional_principles_proofs.ml" 247 6282 6290
type(
  Term.constr Util.Intmap.t
)
ident(
  int_ref sub "plugins/funind/functional_principles_proofs.ml" 238 5961 5994 "plugins/funind/functional_principles_proofs.ml" 238 5961 5997
)
"plugins/funind/functional_principles_proofs.ml" 246 6213 6218 "plugins/funind/functional_principles_proofs.ml" 247 6282 6290
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 245 6176 6181 "plugins/funind/functional_principles_proofs.ml" 247 6282 6290
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 248 6291 6299 "plugins/funind/functional_principles_proofs.ml" 248 6291 6308
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 249 6312 6325 "plugins/funind/functional_principles_proofs.ml" 249 6312 6332
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.closed0
)
"plugins/funind/functional_principles_proofs.ml" 249 6312 6333 "plugins/funind/functional_principles_proofs.ml" 249 6312 6335
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 238 5961 5998 "plugins/funind/functional_principles_proofs.ml" 238 5961 6000
)
"plugins/funind/functional_principles_proofs.ml" 249 6312 6324 "plugins/funind/functional_principles_proofs.ml" 249 6312 6336
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 249 6312 6317 "plugins/funind/functional_principles_proofs.ml" 249 6312 6336
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 250 6338 6343 "plugins/funind/functional_principles_proofs.ml" 250 6338 6353
type(
  Util.Intmap.key ->
  Term.constr -> Term.constr Util.Intmap.t -> Term.constr Util.Intmap.t
)
ident(
  ext_ref Util.Intmap.add
)
"plugins/funind/functional_principles_proofs.ml" 250 6338 6354 "plugins/funind/functional_principles_proofs.ml" 250 6338 6356
type(
  Util.Intmap.key
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 242 6137 6142 "plugins/funind/functional_principles_proofs.ml" 242 6137 6144
)
"plugins/funind/functional_principles_proofs.ml" 250 6338 6357 "plugins/funind/functional_principles_proofs.ml" 250 6338 6359
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 238 5961 5998 "plugins/funind/functional_principles_proofs.ml" 238 5961 6000
)
"plugins/funind/functional_principles_proofs.ml" 250 6338 6360 "plugins/funind/functional_principles_proofs.ml" 250 6338 6363
type(
  Term.constr Util.Intmap.t
)
ident(
  int_ref sub "plugins/funind/functional_principles_proofs.ml" 238 5961 5994 "plugins/funind/functional_principles_proofs.ml" 238 5961 5997
)
"plugins/funind/functional_principles_proofs.ml" 250 6338 6343 "plugins/funind/functional_principles_proofs.ml" 250 6338 6363
call(
  tail
)
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 249 6312 6317 "plugins/funind/functional_principles_proofs.ml" 250 6338 6363
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 243 6162 6163 "plugins/funind/functional_principles_proofs.ml" 251 6364 6368
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 242 6137 6138 "plugins/funind/functional_principles_proofs.ml" 251 6364 6368
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 252 6369 6383 "plugins/funind/functional_principles_proofs.ml" 252 6369 6397
type(
  ?env:Environ.env -> Term.constr -> bool
)
ident(
  int_ref isAppConstruct "plugins/funind/functional_principles_proofs.ml" 195 4335 4339 "plugins/funind/functional_principles_proofs.ml" 195 4335 4353
)
"plugins/funind/functional_principles_proofs.ml" 252 6369 6398 "plugins/funind/functional_principles_proofs.ml" 252 6369 6400
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 238 5961 5998 "plugins/funind/functional_principles_proofs.ml" 238 5961 6000
)
"plugins/funind/functional_principles_proofs.ml" 252 6369 6383 "plugins/funind/functional_principles_proofs.ml" 252 6369 6400
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 252 6369 6401 "plugins/funind/functional_principles_proofs.ml" 252 6369 6403
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_proofs.ml" 252 6369 6404 "plugins/funind/functional_principles_proofs.ml" 252 6369 6418
type(
  ?env:Environ.env -> Term.constr -> bool
)
ident(
  int_ref isAppConstruct "plugins/funind/functional_principles_proofs.ml" 195 4335 4339 "plugins/funind/functional_principles_proofs.ml" 195 4335 4353
)
"plugins/funind/functional_principles_proofs.ml" 252 6369 6419 "plugins/funind/functional_principles_proofs.ml" 252 6369 6421
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 238 5961 6001 "plugins/funind/functional_principles_proofs.ml" 238 5961 6003
)
"plugins/funind/functional_principles_proofs.ml" 252 6369 6404 "plugins/funind/functional_principles_proofs.ml" 252 6369 6421
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 252 6369 6383 "plugins/funind/functional_principles_proofs.ml" 252 6369 6421
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 255 6440 6447 "plugins/funind/functional_principles_proofs.ml" 255 6440 6449
type(
  Term.constr
)
ident(
  def c1 "plugins/funind/functional_principles_proofs.ml" 258 6523 6526 "plugins/funind/functional_principles_proofs.ml" 259 6588 6643
)
"plugins/funind/functional_principles_proofs.ml" 255 6440 6450 "plugins/funind/functional_principles_proofs.ml" 255 6440 6455
type(
  Term.constr list
)
ident(
  def args1 "plugins/funind/functional_principles_proofs.ml" 258 6523 6526 "plugins/funind/functional_principles_proofs.ml" 259 6588 6643
)
"plugins/funind/functional_principles_proofs.ml" 255 6440 6447 "plugins/funind/functional_principles_proofs.ml" 255 6440 6455
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 255 6440 6459 "plugins/funind/functional_principles_proofs.ml" 255 6440 6471
type(
  Environ.env -> Term.constr -> Term.constr * Term.constr list
)
ident(
  int_ref find_rectype "plugins/funind/functional_principles_proofs.ml" 187 4140 4144 "plugins/funind/functional_principles_proofs.ml" 187 4140 4156
)
"plugins/funind/functional_principles_proofs.ml" 255 6440 6472 "plugins/funind/functional_principles_proofs.ml" 255 6440 6475
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 209 4893 4907 "plugins/funind/functional_principles_proofs.ml" 209 4893 4910
)
"plugins/funind/functional_principles_proofs.ml" 255 6440 6476 "plugins/funind/functional_principles_proofs.ml" 255 6440 6478
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 238 5961 5998 "plugins/funind/functional_principles_proofs.ml" 238 5961 6000
)
"plugins/funind/functional_principles_proofs.ml" 255 6440 6459 "plugins/funind/functional_principles_proofs.ml" 255 6440 6478
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 256 6479 6486 "plugins/funind/functional_principles_proofs.ml" 256 6479 6488
type(
  Term.constr
)
ident(
  def c2 "plugins/funind/functional_principles_proofs.ml" 258 6523 6526 "plugins/funind/functional_principles_proofs.ml" 259 6588 6643
)
"plugins/funind/functional_principles_proofs.ml" 256 6479 6489 "plugins/funind/functional_principles_proofs.ml" 256 6479 6494
type(
  Term.constr list
)
ident(
  def args2 "plugins/funind/functional_principles_proofs.ml" 258 6523 6526 "plugins/funind/functional_principles_proofs.ml" 259 6588 6643
)
"plugins/funind/functional_principles_proofs.ml" 256 6479 6486 "plugins/funind/functional_principles_proofs.ml" 256 6479 6494
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 256 6479 6497 "plugins/funind/functional_principles_proofs.ml" 256 6479 6509
type(
  Environ.env -> Term.constr -> Term.constr * Term.constr list
)
ident(
  int_ref find_rectype "plugins/funind/functional_principles_proofs.ml" 187 4140 4144 "plugins/funind/functional_principles_proofs.ml" 187 4140 4156
)
"plugins/funind/functional_principles_proofs.ml" 256 6479 6510 "plugins/funind/functional_principles_proofs.ml" 256 6479 6513
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 209 4893 4907 "plugins/funind/functional_principles_proofs.ml" 209 4893 4910
)
"plugins/funind/functional_principles_proofs.ml" 256 6479 6514 "plugins/funind/functional_principles_proofs.ml" 256 6479 6516
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 238 5961 6001 "plugins/funind/functional_principles_proofs.ml" 238 5961 6003
)
"plugins/funind/functional_principles_proofs.ml" 256 6479 6497 "plugins/funind/functional_principles_proofs.ml" 256 6479 6516
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6529 "plugins/funind/functional_principles_proofs.ml" 258 6523 6532
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6534 "plugins/funind/functional_principles_proofs.ml" 258 6523 6543
type(
  Term.constr -> Term.constr -> bool
)
ident(
  int_ref eq_constr "plugins/funind/functional_principles_proofs.ml" 216 5188 5194 "plugins/funind/functional_principles_proofs.ml" 216 5188 5203
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6544 "plugins/funind/functional_principles_proofs.ml" 258 6523 6546
type(
  Term.constr
)
ident(
  int_ref c1 "plugins/funind/functional_principles_proofs.ml" 255 6440 6447 "plugins/funind/functional_principles_proofs.ml" 255 6440 6449
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6547 "plugins/funind/functional_principles_proofs.ml" 258 6523 6549
type(
  Term.constr
)
ident(
  int_ref c2 "plugins/funind/functional_principles_proofs.ml" 256 6479 6486 "plugins/funind/functional_principles_proofs.ml" 256 6479 6488
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6533 "plugins/funind/functional_principles_proofs.ml" 258 6523 6550
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6529 "plugins/funind/functional_principles_proofs.ml" 258 6523 6550
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6556 "plugins/funind/functional_principles_proofs.ml" 258 6523 6564
type(
  ?t':Term.constr -> string -> unit
)
ident(
  int_ref nochange "plugins/funind/functional_principles_proofs.ml" 210 4965 4971 "plugins/funind/functional_principles_proofs.ml" 210 4965 4979
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6565 "plugins/funind/functional_principles_proofs.ml" 258 6523 6586
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6556 "plugins/funind/functional_principles_proofs.ml" 258 6523 6586
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6526 "plugins/funind/functional_principles_proofs.ml" 258 6523 6586
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 259 6588 6591 "plugins/funind/functional_principles_proofs.ml" 259 6588 6606
type(
  (Term.constr Util.Intmap.t ->
   Term.constr -> Term.constr -> Term.constr Util.Intmap.t) ->
  Term.constr Util.Intmap.t ->
  Term.constr list -> Term.constr list -> Term.constr Util.Intmap.t
)
ident(
  ext_ref List.fold_left2
)
"plugins/funind/functional_principles_proofs.ml" 259 6588 6607 "plugins/funind/functional_principles_proofs.ml" 259 6588 6627
type(
  Term.constr Util.Intmap.t ->
  Term.constr -> Term.constr -> Term.constr Util.Intmap.t
)
ident(
  int_ref compute_substitution "plugins/funind/functional_principles_proofs.ml" 238 5961 5973 "plugins/funind/functional_principles_proofs.ml" 238 5961 5993
)
"plugins/funind/functional_principles_proofs.ml" 259 6588 6628 "plugins/funind/functional_principles_proofs.ml" 259 6588 6631
type(
  Term.constr Util.Intmap.t
)
ident(
  int_ref sub "plugins/funind/functional_principles_proofs.ml" 238 5961 5994 "plugins/funind/functional_principles_proofs.ml" 238 5961 5997
)
"plugins/funind/functional_principles_proofs.ml" 259 6588 6632 "plugins/funind/functional_principles_proofs.ml" 259 6588 6637
type(
  Term.constr list
)
ident(
  int_ref args1 "plugins/funind/functional_principles_proofs.ml" 255 6440 6450 "plugins/funind/functional_principles_proofs.ml" 255 6440 6455
)
"plugins/funind/functional_principles_proofs.ml" 259 6588 6638 "plugins/funind/functional_principles_proofs.ml" 259 6588 6643
type(
  Term.constr list
)
ident(
  int_ref args2 "plugins/funind/functional_principles_proofs.ml" 256 6479 6489 "plugins/funind/functional_principles_proofs.ml" 256 6479 6494
)
"plugins/funind/functional_principles_proofs.ml" 259 6588 6591 "plugins/funind/functional_principles_proofs.ml" 259 6588 6643
call(
  tail
)
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 258 6523 6526 "plugins/funind/functional_principles_proofs.ml" 259 6588 6643
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 254 6433 6434 "plugins/funind/functional_principles_proofs.ml" 260 6644 6648
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6665 "plugins/funind/functional_principles_proofs.ml" 262 6660 6674
type(
  Term.constr -> Term.constr -> bool
)
ident(
  int_ref eq_constr "plugins/funind/functional_principles_proofs.ml" 216 5188 5194 "plugins/funind/functional_principles_proofs.ml" 216 5188 5203
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6675 "plugins/funind/functional_principles_proofs.ml" 262 6660 6677
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 238 5961 5998 "plugins/funind/functional_principles_proofs.ml" 238 5961 6000
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6678 "plugins/funind/functional_principles_proofs.ml" 262 6660 6680
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 238 5961 6001 "plugins/funind/functional_principles_proofs.ml" 238 5961 6003
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6664 "plugins/funind/functional_principles_proofs.ml" 262 6660 6681
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6687 "plugins/funind/functional_principles_proofs.ml" 262 6660 6690
type(
  Term.constr Util.Intmap.t
)
ident(
  int_ref sub "plugins/funind/functional_principles_proofs.ml" 238 5961 5994 "plugins/funind/functional_principles_proofs.ml" 238 5961 5997
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6696 "plugins/funind/functional_principles_proofs.ml" 262 6660 6704
type(
  ?t':Term.constr -> string -> Term.constr Util.Intmap.t
)
ident(
  int_ref nochange "plugins/funind/functional_principles_proofs.ml" 210 4965 4971 "plugins/funind/functional_principles_proofs.ml" 210 4965 4979
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6710 "plugins/funind/functional_principles_proofs.ml" 262 6660 6722
type(
  Term.constr -> Term.constr -> Term.constr -> Term.constr
)
ident(
  int_ref make_refl_eq "plugins/funind/functional_principles_proofs.ml" 63 1198 1202 "plugins/funind/functional_principles_proofs.ml" 63 1198 1214
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6723 "plugins/funind/functional_principles_proofs.ml" 262 6660 6734
type(
  Term.constr
)
ident(
  int_ref constructor "plugins/funind/functional_principles_proofs.ml" 221 5450 5458 "plugins/funind/functional_principles_proofs.ml" 221 5450 5469
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6736 "plugins/funind/functional_principles_proofs.ml" 262 6660 6763
type(
  Environ.env -> Term.constr -> Term.constr
)
ident(
  ext_ref Reduction.whd_betadeltaiota
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6764 "plugins/funind/functional_principles_proofs.ml" 262 6660 6767
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 209 4893 4907 "plugins/funind/functional_principles_proofs.ml" 209 4893 4910
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6768 "plugins/funind/functional_principles_proofs.ml" 262 6660 6770
type(
  Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 238 5961 5998 "plugins/funind/functional_principles_proofs.ml" 238 5961 6000
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6735 "plugins/funind/functional_principles_proofs.ml" 262 6660 6771
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6772 "plugins/funind/functional_principles_proofs.ml" 262 6660 6774
type(
  Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 238 5961 6001 "plugins/funind/functional_principles_proofs.ml" 238 5961 6003
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6709 "plugins/funind/functional_principles_proofs.ml" 262 6660 6775
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6777 "plugins/funind/functional_principles_proofs.ml" 262 6660 6798
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6696 "plugins/funind/functional_principles_proofs.ml" 262 6660 6798
call(
  tail
)
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 262 6660 6661 "plugins/funind/functional_principles_proofs.ml" 262 6660 6798
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 252 6369 6380 "plugins/funind/functional_principles_proofs.ml" 262 6660 6798
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 240 6108 6114 "plugins/funind/functional_principles_proofs.ml" 262 6660 6798
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6814 "plugins/funind/functional_principles_proofs.ml" 264 6806 6817
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6820 "plugins/funind/functional_principles_proofs.ml" 264 6806 6840
type(
  Term.constr Util.Intmap.t ->
  Term.constr -> Term.constr -> Term.constr Util.Intmap.t
)
ident(
  int_ref compute_substitution "plugins/funind/functional_principles_proofs.ml" 238 5961 5973 "plugins/funind/functional_principles_proofs.ml" 238 5961 5993
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6841 "plugins/funind/functional_principles_proofs.ml" 264 6806 6853
type(
  Term.constr Util.Intmap.t
)
ident(
  ext_ref Util.Intmap.empty
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6855 "plugins/funind/functional_principles_proofs.ml" 264 6806 6858
type(
  Term.constr * Term.constr -> Term.constr
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6859 "plugins/funind/functional_principles_proofs.ml" 264 6806 6861
type(
  Term.constr * Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 221 5450 5470 "plugins/funind/functional_principles_proofs.ml" 221 5450 5472
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6854 "plugins/funind/functional_principles_proofs.ml" 264 6806 6862
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6864 "plugins/funind/functional_principles_proofs.ml" 264 6806 6867
type(
  Term.constr * Term.constr -> Term.constr
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6868 "plugins/funind/functional_principles_proofs.ml" 264 6806 6870
type(
  Term.constr * Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 221 5450 5473 "plugins/funind/functional_principles_proofs.ml" 221 5450 5475
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6863 "plugins/funind/functional_principles_proofs.ml" 264 6806 6871
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6820 "plugins/funind/functional_principles_proofs.ml" 264 6806 6871
call(
  stack
)
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6883 "plugins/funind/functional_principles_proofs.ml" 265 6875 6886
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6889 "plugins/funind/functional_principles_proofs.ml" 265 6875 6909
type(
  Term.constr Util.Intmap.t ->
  Term.constr -> Term.constr -> Term.constr Util.Intmap.t
)
ident(
  int_ref compute_substitution "plugins/funind/functional_principles_proofs.ml" 238 5961 5973 "plugins/funind/functional_principles_proofs.ml" 238 5961 5993
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6910 "plugins/funind/functional_principles_proofs.ml" 265 6875 6913
type(
  Term.constr Util.Intmap.t
)
ident(
  int_ref sub "plugins/funind/functional_principles_proofs.ml" 264 6806 6814 "plugins/funind/functional_principles_proofs.ml" 264 6806 6817
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6915 "plugins/funind/functional_principles_proofs.ml" 265 6875 6918
type(
  Term.constr * Term.constr -> Term.constr
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6919 "plugins/funind/functional_principles_proofs.ml" 265 6875 6921
type(
  Term.constr * Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 221 5450 5470 "plugins/funind/functional_principles_proofs.ml" 221 5450 5472
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6914 "plugins/funind/functional_principles_proofs.ml" 265 6875 6922
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6924 "plugins/funind/functional_principles_proofs.ml" 265 6875 6927
type(
  Term.constr * Term.constr -> Term.constr
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6928 "plugins/funind/functional_principles_proofs.ml" 265 6875 6930
type(
  Term.constr * Term.constr
)
ident(
  int_ref t2 "plugins/funind/functional_principles_proofs.ml" 221 5450 5473 "plugins/funind/functional_principles_proofs.ml" 221 5450 5475
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6923 "plugins/funind/functional_principles_proofs.ml" 265 6875 6931
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6889 "plugins/funind/functional_principles_proofs.ml" 265 6875 6931
call(
  stack
)
type(
  Term.constr Util.Intmap.t
)
"plugins/funind/functional_principles_proofs.ml" 266 6935 6943 "plugins/funind/functional_principles_proofs.ml" 266 6935 6963
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 266 6935 6966 "plugins/funind/functional_principles_proofs.ml" 266 6935 6969
type(
  Term.constr -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_proofs.ml" 266 6935 6970 "plugins/funind/functional_principles_proofs.ml" 266 6935 6981
type(
  Term.constr
)
ident(
  int_ref end_of_type "plugins/funind/functional_principles_proofs.ml" 209 4893 4950 "plugins/funind/functional_principles_proofs.ml" 209 4893 4961
)
"plugins/funind/functional_principles_proofs.ml" 266 6935 6966 "plugins/funind/functional_principles_proofs.ml" 266 6935 6981
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 267 7019 7027 "plugins/funind/functional_principles_proofs.ml" 267 7019 7042
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7219 "plugins/funind/functional_principles_proofs.ml" 271 7209 7223
type(
  (Util.Intmap.key * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7226 "plugins/funind/functional_principles_proofs.ml" 271 7209 7237
type(
  (Util.Intmap.key ->
   Term.constr ->
   (Util.Intmap.key * Term.constr) list ->
   (Util.Intmap.key * Term.constr) list) ->
  Term.constr Util.Intmap.t ->
  (Util.Intmap.key * Term.constr) list ->
  (Util.Intmap.key * Term.constr) list
)
ident(
  ext_ref Util.Intmap.fold
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7243 "plugins/funind/functional_principles_proofs.ml" 271 7209 7244
type(
  Util.Intmap.key
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 271 7209 7245 "plugins/funind/functional_principles_proofs.ml" 271 7209 7264
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7245 "plugins/funind/functional_principles_proofs.ml" 271 7209 7246
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 271 7209 7247 "plugins/funind/functional_principles_proofs.ml" 271 7209 7264
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7247 "plugins/funind/functional_principles_proofs.ml" 271 7209 7250
type(
  (Util.Intmap.key * Term.constr) list
)
ident(
  def acc "plugins/funind/functional_principles_proofs.ml" 271 7209 7254 "plugins/funind/functional_principles_proofs.ml" 271 7209 7264
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7255 "plugins/funind/functional_principles_proofs.ml" 271 7209 7256
type(
  Util.Intmap.key
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 271 7209 7243 "plugins/funind/functional_principles_proofs.ml" 271 7209 7244
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7257 "plugins/funind/functional_principles_proofs.ml" 271 7209 7258
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 271 7209 7245 "plugins/funind/functional_principles_proofs.ml" 271 7209 7246
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7254 "plugins/funind/functional_principles_proofs.ml" 271 7209 7259
type(
  Util.Intmap.key * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7261 "plugins/funind/functional_principles_proofs.ml" 271 7209 7264
type(
  (Util.Intmap.key * Term.constr) list
)
ident(
  int_ref acc "plugins/funind/functional_principles_proofs.ml" 271 7209 7247 "plugins/funind/functional_principles_proofs.ml" 271 7209 7250
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7254 "plugins/funind/functional_principles_proofs.ml" 271 7209 7264
type(
  (Util.Intmap.key * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7238 "plugins/funind/functional_principles_proofs.ml" 271 7209 7265
type(
  Util.Intmap.key ->
  Term.constr ->
  (Util.Intmap.key * Term.constr) list ->
  (Util.Intmap.key * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7266 "plugins/funind/functional_principles_proofs.ml" 271 7209 7269
type(
  Term.constr Util.Intmap.t
)
ident(
  int_ref sub "plugins/funind/functional_principles_proofs.ml" 265 6875 6883 "plugins/funind/functional_principles_proofs.ml" 265 6875 6886
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7270 "plugins/funind/functional_principles_proofs.ml" 271 7209 7272
type(
  (Util.Intmap.key * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7226 "plugins/funind/functional_principles_proofs.ml" 271 7209 7272
call(
  stack
)
type(
  (Util.Intmap.key * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7286 "plugins/funind/functional_principles_proofs.ml" 272 7276 7291
type(
  (Util.Intmap.key * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7294 "plugins/funind/functional_principles_proofs.ml" 272 7276 7303
type(
  (Util.Intmap.key * Term.constr -> Util.Intmap.key * Term.constr -> int) ->
  (Util.Intmap.key * Term.constr) list ->
  (Util.Intmap.key * Term.constr) list
)
ident(
  ext_ref List.sort
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7310 "plugins/funind/functional_principles_proofs.ml" 272 7276 7311
type(
  Util.Intmap.key
)
ident(
  def x "plugins/funind/functional_principles_proofs.ml" 272 7276 7315 "plugins/funind/functional_principles_proofs.ml" 272 7276 7346
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7312 "plugins/funind/functional_principles_proofs.ml" 272 7276 7313
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7309 "plugins/funind/functional_principles_proofs.ml" 272 7276 7314
type(
  Util.Intmap.key * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7316 "plugins/funind/functional_principles_proofs.ml" 272 7276 7317
type(
  Util.Intmap.key
)
ident(
  def y "plugins/funind/functional_principles_proofs.ml" 272 7276 7324 "plugins/funind/functional_principles_proofs.ml" 272 7276 7346
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7318 "plugins/funind/functional_principles_proofs.ml" 272 7276 7319
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7315 "plugins/funind/functional_principles_proofs.ml" 272 7276 7320
type(
  Util.Intmap.key * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7324 "plugins/funind/functional_principles_proofs.ml" 272 7276 7342
type(
  Util.Intmap.key -> Util.Intmap.key -> int
)
ident(
  ext_ref Pervasives.compare
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7343 "plugins/funind/functional_principles_proofs.ml" 272 7276 7344
type(
  Util.Intmap.key
)
ident(
  int_ref x "plugins/funind/functional_principles_proofs.ml" 272 7276 7310 "plugins/funind/functional_principles_proofs.ml" 272 7276 7311
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7345 "plugins/funind/functional_principles_proofs.ml" 272 7276 7346
type(
  Util.Intmap.key
)
ident(
  int_ref y "plugins/funind/functional_principles_proofs.ml" 272 7276 7316 "plugins/funind/functional_principles_proofs.ml" 272 7276 7317
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7324 "plugins/funind/functional_principles_proofs.ml" 272 7276 7346
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7304 "plugins/funind/functional_principles_proofs.ml" 272 7276 7347
type(
  Util.Intmap.key * Term.constr -> Util.Intmap.key * Term.constr -> int
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7348 "plugins/funind/functional_principles_proofs.ml" 272 7276 7352
type(
  (Util.Intmap.key * Term.constr) list
)
ident(
  int_ref sub' "plugins/funind/functional_principles_proofs.ml" 271 7209 7219 "plugins/funind/functional_principles_proofs.ml" 271 7209 7223
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7294 "plugins/funind/functional_principles_proofs.ml" 272 7276 7352
call(
  stack
)
type(
  (Util.Intmap.key * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7362 "plugins/funind/functional_principles_proofs.ml" 273 7356 7376
type(
  (Term.constr -> Util.Intmap.key * Term.constr -> Term.constr) ->
  Term.constr -> (Util.Intmap.key * Term.constr) list -> Term.constr
)
ident(
  ext_ref List.fold_left
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7382 "plugins/funind/functional_principles_proofs.ml" 273 7356 7393
type(
  Term.constr
)
ident(
  def end_of_type "plugins/funind/functional_principles_proofs.ml" 273 7356 7394 "plugins/funind/functional_principles_proofs.ml" 273 7356 7443
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7395 "plugins/funind/functional_principles_proofs.ml" 273 7356 7396
type(
  Util.Intmap.key
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 273 7356 7404 "plugins/funind/functional_principles_proofs.ml" 273 7356 7443
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7397 "plugins/funind/functional_principles_proofs.ml" 273 7356 7398
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 273 7356 7404 "plugins/funind/functional_principles_proofs.ml" 273 7356 7443
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7394 "plugins/funind/functional_principles_proofs.ml" 273 7356 7399
type(
  Util.Intmap.key * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7404 "plugins/funind/functional_principles_proofs.ml" 273 7356 7408
type(
  int -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.lift
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7409 "plugins/funind/functional_principles_proofs.ml" 273 7356 7410
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7412 "plugins/funind/functional_principles_proofs.ml" 273 7356 7419
type(
  Term.constr list -> int -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.substnl
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7422 "plugins/funind/functional_principles_proofs.ml" 273 7356 7423
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 273 7356 7397 "plugins/funind/functional_principles_proofs.ml" 273 7356 7398
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7421 "plugins/funind/functional_principles_proofs.ml" 273 7356 7424
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7426 "plugins/funind/functional_principles_proofs.ml" 273 7356 7427
type(
  Util.Intmap.key
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 273 7356 7395 "plugins/funind/functional_principles_proofs.ml" 273 7356 7396
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7427 "plugins/funind/functional_principles_proofs.ml" 273 7356 7428
type(
  Util.Intmap.key -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7428 "plugins/funind/functional_principles_proofs.ml" 273 7356 7429
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7425 "plugins/funind/functional_principles_proofs.ml" 273 7356 7430
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7431 "plugins/funind/functional_principles_proofs.ml" 273 7356 7442
type(
  Term.constr
)
ident(
  int_ref end_of_type "plugins/funind/functional_principles_proofs.ml" 273 7356 7382 "plugins/funind/functional_principles_proofs.ml" 273 7356 7393
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7411 "plugins/funind/functional_principles_proofs.ml" 273 7356 7443
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7404 "plugins/funind/functional_principles_proofs.ml" 273 7356 7443
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7377 "plugins/funind/functional_principles_proofs.ml" 273 7356 7444
type(
  Term.constr -> Util.Intmap.key * Term.constr -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 274 7445 7446 "plugins/funind/functional_principles_proofs.ml" 274 7445 7466
type(
  Term.constr
)
ident(
  int_ref end_of_type_with_pop "plugins/funind/functional_principles_proofs.ml" 266 6935 6943 "plugins/funind/functional_principles_proofs.ml" 266 6935 6963
)
"plugins/funind/functional_principles_proofs.ml" 275 7467 7468 "plugins/funind/functional_principles_proofs.ml" 275 7467 7473
type(
  (Util.Intmap.key * Term.constr) list
)
ident(
  int_ref sub'' "plugins/funind/functional_principles_proofs.ml" 272 7276 7286 "plugins/funind/functional_principles_proofs.ml" 272 7276 7291
)
"plugins/funind/functional_principles_proofs.ml" 273 7356 7362 "plugins/funind/functional_principles_proofs.ml" 275 7467 7473
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 272 7276 7282 "plugins/funind/functional_principles_proofs.ml" 275 7467 7473
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 271 7209 7215 "plugins/funind/functional_principles_proofs.ml" 275 7467 7473
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 277 7481 7489 "plugins/funind/functional_principles_proofs.ml" 277 7481 7507
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 277 7481 7510 "plugins/funind/functional_principles_proofs.ml" 277 7481 7521
type(
  Term.rel_context -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 277 7481 7522 "plugins/funind/functional_principles_proofs.ml" 277 7481 7529
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 209 4893 4925 "plugins/funind/functional_principles_proofs.ml" 209 4893 4932
)
"plugins/funind/functional_principles_proofs.ml" 277 7481 7510 "plugins/funind/functional_principles_proofs.ml" 277 7481 7529
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 277 7481 7530 "plugins/funind/functional_principles_proofs.ml" 277 7481 7531
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 277 7481 7532 "plugins/funind/functional_principles_proofs.ml" 277 7481 7533
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 277 7481 7510 "plugins/funind/functional_principles_proofs.ml" 277 7481 7533
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 278 7537 7545 "plugins/funind/functional_principles_proofs.ml" 278 7537 7556
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7565 "plugins/funind/functional_principles_proofs.ml" 279 7559 7572
type(
  Names.name * Term.constr * Term.types * Term.constr -> Term.constr
)
ident(
  ext_ref Term.mkLetIn
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7573 "plugins/funind/functional_principles_proofs.ml" 279 7559 7582
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7583 "plugins/funind/functional_principles_proofs.ml" 279 7559 7595
type(
  Term.constr -> Term.constr -> Term.constr -> Term.constr
)
ident(
  int_ref make_refl_eq "plugins/funind/functional_principles_proofs.ml" 63 1198 1202 "plugins/funind/functional_principles_proofs.ml" 63 1198 1214
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7596 "plugins/funind/functional_principles_proofs.ml" 279 7559 7607
type(
  Term.constr
)
ident(
  int_ref constructor "plugins/funind/functional_principles_proofs.ml" 221 5450 5458 "plugins/funind/functional_principles_proofs.ml" 221 5450 5469
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7608 "plugins/funind/functional_principles_proofs.ml" 279 7559 7614
type(
  Term.constr
)
ident(
  int_ref t1_typ "plugins/funind/functional_principles_proofs.ml" 221 5450 5476 "plugins/funind/functional_principles_proofs.ml" 221 5450 5482
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7616 "plugins/funind/functional_principles_proofs.ml" 279 7559 7619
type(
  Term.constr * Term.constr -> Term.constr
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7620 "plugins/funind/functional_principles_proofs.ml" 279 7559 7622
type(
  Term.constr * Term.constr
)
ident(
  int_ref t1 "plugins/funind/functional_principles_proofs.ml" 221 5450 5470 "plugins/funind/functional_principles_proofs.ml" 221 5450 5472
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7615 "plugins/funind/functional_principles_proofs.ml" 279 7559 7623
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7583 "plugins/funind/functional_principles_proofs.ml" 279 7559 7623
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7624 "plugins/funind/functional_principles_proofs.ml" 279 7559 7625
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 209 4893 4948 "plugins/funind/functional_principles_proofs.ml" 209 4893 4949
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7635 "plugins/funind/functional_principles_proofs.ml" 280 7627 7640
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7641 "plugins/funind/functional_principles_proofs.ml" 280 7627 7646
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7647 "plugins/funind/functional_principles_proofs.ml" 280 7627 7653
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 209 4893 4917 "plugins/funind/functional_principles_proofs.ml" 209 4893 4923
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7641 "plugins/funind/functional_principles_proofs.ml" 280 7627 7653
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7654 "plugins/funind/functional_principles_proofs.ml" 280 7627 7664
type(
  int -> (int -> Term.constr) -> Term.constr array
)
ident(
  ext_ref Array.init
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7665 "plugins/funind/functional_principles_proofs.ml" 280 7627 7683
type(
  int
)
ident(
  int_ref old_context_length "plugins/funind/functional_principles_proofs.ml" 277 7481 7489 "plugins/funind/functional_principles_proofs.ml" 277 7481 7507
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7689 "plugins/funind/functional_principles_proofs.ml" 280 7627 7690
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 280 7627 7694 "plugins/funind/functional_principles_proofs.ml" 280 7627 7724
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7694 "plugins/funind/functional_principles_proofs.ml" 280 7627 7699
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7701 "plugins/funind/functional_principles_proofs.ml" 280 7627 7719
type(
  int
)
ident(
  int_ref old_context_length "plugins/funind/functional_principles_proofs.ml" 277 7481 7489 "plugins/funind/functional_principles_proofs.ml" 277 7481 7507
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7720 "plugins/funind/functional_principles_proofs.ml" 280 7627 7721
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7722 "plugins/funind/functional_principles_proofs.ml" 280 7627 7723
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 280 7627 7689 "plugins/funind/functional_principles_proofs.ml" 280 7627 7690
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7700 "plugins/funind/functional_principles_proofs.ml" 280 7627 7724
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7694 "plugins/funind/functional_principles_proofs.ml" 280 7627 7724
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7684 "plugins/funind/functional_principles_proofs.ml" 280 7627 7725
type(
  int -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7654 "plugins/funind/functional_principles_proofs.ml" 280 7627 7725
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7640 "plugins/funind/functional_principles_proofs.ml" 280 7627 7726
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 280 7627 7635 "plugins/funind/functional_principles_proofs.ml" 280 7627 7726
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7572 "plugins/funind/functional_principles_proofs.ml" 281 7727 7735
type(
  Names.name * Term.constr * Term.types * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 279 7559 7565 "plugins/funind/functional_principles_proofs.ml" 281 7727 7735
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 283 7743 7751 "plugins/funind/functional_principles_proofs.ml" 283 7743 7766
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 283 7743 7767 "plugins/funind/functional_principles_proofs.ml" 283 7743 7776
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 283 7743 7777 "plugins/funind/functional_principles_proofs.ml" 283 7743 7788
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 283 7743 7751 "plugins/funind/functional_principles_proofs.ml" 283 7743 7788
type(
  Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 284 7791 7797 "plugins/funind/functional_principles_proofs.ml" 284 7791 7813
type(
  (Util.Intmap.key ->
   Term.types * int * Term.constr ->
   Term.rel_declaration -> Term.types * int * Term.constr) ->
  int ->
  Term.types * int * Term.constr ->
  Term.rel_context -> Term.types * int * Term.constr
)
ident(
  ext_ref Util.list_fold_left_i
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7820 "plugins/funind/functional_principles_proofs.ml" 285 7814 7821
type(
  Util.Intmap.key
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 285 7814 7822 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7823 "plugins/funind/functional_principles_proofs.ml" 285 7814 7834
type(
  Term.types
)
ident(
  def end_of_type "plugins/funind/functional_principles_proofs.ml" 285 7814 7858 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7835 "plugins/funind/functional_principles_proofs.ml" 285 7814 7844
type(
  int
)
ident(
  def ctxt_size "plugins/funind/functional_principles_proofs.ml" 285 7814 7858 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7845 "plugins/funind/functional_principles_proofs.ml" 285 7814 7856
type(
  Term.constr
)
ident(
  def witness_fun "plugins/funind/functional_principles_proofs.ml" 285 7814 7858 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7822 "plugins/funind/functional_principles_proofs.ml" 285 7814 7857
type(
  Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7860 "plugins/funind/functional_principles_proofs.ml" 285 7814 7862
type(
  Names.name
)
ident(
  def x' "plugins/funind/functional_principles_proofs.ml" 286 7882 7886 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7863 "plugins/funind/functional_principles_proofs.ml" 285 7814 7865
type(
  Term.constr option
)
ident(
  def b' "plugins/funind/functional_principles_proofs.ml" 286 7882 7886 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7866 "plugins/funind/functional_principles_proofs.ml" 285 7814 7868
type(
  Term.types
)
ident(
  def t' "plugins/funind/functional_principles_proofs.ml" 286 7882 7886 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7859 "plugins/funind/functional_principles_proofs.ml" 285 7814 7869
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7858 "plugins/funind/functional_principles_proofs.ml" 285 7814 7878
type(
  Term.rel_declaration
)
ident(
  def decl "plugins/funind/functional_principles_proofs.ml" 286 7882 7886 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
)
"plugins/funind/functional_principles_proofs.ml" 287 7890 7900 "plugins/funind/functional_principles_proofs.ml" 287 7890 7907
type(
  Term.constr
)
ident(
  def witness "plugins/funind/functional_principles_proofs.ml" 288 7931 7937 "plugins/funind/functional_principles_proofs.ml" 289 7991 8059
)
"plugins/funind/functional_principles_proofs.ml" 287 7890 7910 "plugins/funind/functional_principles_proofs.ml" 287 7890 7921
type(
  Util.Intmap.key -> Term.constr Util.Intmap.t -> Term.constr
)
ident(
  ext_ref Util.Intmap.find
)
"plugins/funind/functional_principles_proofs.ml" 287 7890 7922 "plugins/funind/functional_principles_proofs.ml" 287 7890 7923
type(
  Util.Intmap.key
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 285 7814 7820 "plugins/funind/functional_principles_proofs.ml" 285 7814 7821
)
"plugins/funind/functional_principles_proofs.ml" 287 7890 7924 "plugins/funind/functional_principles_proofs.ml" 287 7890 7927
type(
  Term.constr Util.Intmap.t
)
ident(
  int_ref sub "plugins/funind/functional_principles_proofs.ml" 265 6875 6883 "plugins/funind/functional_principles_proofs.ml" 265 6875 6886
)
"plugins/funind/functional_principles_proofs.ml" 287 7890 7910 "plugins/funind/functional_principles_proofs.ml" 287 7890 7927
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 288 7931 7940 "plugins/funind/functional_principles_proofs.ml" 288 7931 7942
type(
  Term.constr option
)
ident(
  int_ref b' "plugins/funind/functional_principles_proofs.ml" 285 7814 7863 "plugins/funind/functional_principles_proofs.ml" 285 7814 7865
)
"plugins/funind/functional_principles_proofs.ml" 288 7931 7943 "plugins/funind/functional_principles_proofs.ml" 288 7931 7945
type(
  Term.constr option -> Term.constr option -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"plugins/funind/functional_principles_proofs.ml" 288 7931 7946 "plugins/funind/functional_principles_proofs.ml" 288 7931 7950
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 288 7931 7940 "plugins/funind/functional_principles_proofs.ml" 288 7931 7950
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 288 7931 7956 "plugins/funind/functional_principles_proofs.ml" 288 7931 7963
type(
  string -> unit
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_proofs.ml" 288 7931 7964 "plugins/funind/functional_principles_proofs.ml" 288 7931 7989
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 288 7931 7956 "plugins/funind/functional_principles_proofs.ml" 288 7931 7989
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 288 7931 7937 "plugins/funind/functional_principles_proofs.ml" 288 7931 7989
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 7998 "plugins/funind/functional_principles_proofs.ml" 289 7991 8001
type(
  Term.types -> Term.types
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 8002 "plugins/funind/functional_principles_proofs.ml" 289 7991 8013
type(
  Term.types
)
ident(
  int_ref end_of_type "plugins/funind/functional_principles_proofs.ml" 285 7814 7823 "plugins/funind/functional_principles_proofs.ml" 285 7814 7834
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 7998 "plugins/funind/functional_principles_proofs.ml" 289 7991 8013
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 8014 "plugins/funind/functional_principles_proofs.ml" 289 7991 8023
type(
  int
)
ident(
  int_ref ctxt_size "plugins/funind/functional_principles_proofs.ml" 285 7814 7835 "plugins/funind/functional_principles_proofs.ml" 285 7814 7844
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 8024 "plugins/funind/functional_principles_proofs.ml" 289 7991 8031
type(
  Names.name * Term.constr * Term.types * Term.constr -> Term.constr
)
ident(
  ext_ref Term.mkLetIn
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 8032 "plugins/funind/functional_principles_proofs.ml" 289 7991 8034
type(
  Names.name
)
ident(
  int_ref x' "plugins/funind/functional_principles_proofs.ml" 285 7814 7860 "plugins/funind/functional_principles_proofs.ml" 285 7814 7862
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 8035 "plugins/funind/functional_principles_proofs.ml" 289 7991 8042
type(
  Term.constr
)
ident(
  int_ref witness "plugins/funind/functional_principles_proofs.ml" 287 7890 7900 "plugins/funind/functional_principles_proofs.ml" 287 7890 7907
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 8043 "plugins/funind/functional_principles_proofs.ml" 289 7991 8045
type(
  Term.types
)
ident(
  int_ref t' "plugins/funind/functional_principles_proofs.ml" 285 7814 7866 "plugins/funind/functional_principles_proofs.ml" 285 7814 7868
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 8046 "plugins/funind/functional_principles_proofs.ml" 289 7991 8057
type(
  Term.constr
)
ident(
  int_ref witness_fun "plugins/funind/functional_principles_proofs.ml" 285 7814 7845 "plugins/funind/functional_principles_proofs.ml" 285 7814 7856
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 8031 "plugins/funind/functional_principles_proofs.ml" 289 7991 8058
type(
  Names.name * Term.constr * Term.types * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 8024 "plugins/funind/functional_principles_proofs.ml" 289 7991 8058
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 289 7991 7997 "plugins/funind/functional_principles_proofs.ml" 289 7991 8059
type(
  Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 288 7931 7937 "plugins/funind/functional_principles_proofs.ml" 289 7991 8059
type(
  Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 287 7890 7896 "plugins/funind/functional_principles_proofs.ml" 289 7991 8059
type(
  Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 290 8060 8069 "plugins/funind/functional_principles_proofs.ml" 290 8060 8078
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8090 "plugins/funind/functional_principles_proofs.ml" 291 8083 8105
type(
  Term.rel_declaration -> Term.types -> Term.types
)
ident(
  ext_ref Termops.mkProd_or_LetIn
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8106 "plugins/funind/functional_principles_proofs.ml" 291 8083 8110
type(
  Term.rel_declaration
)
ident(
  int_ref decl "plugins/funind/functional_principles_proofs.ml" 285 7814 7858 "plugins/funind/functional_principles_proofs.ml" 285 7814 7878
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8111 "plugins/funind/functional_principles_proofs.ml" 291 8083 8122
type(
  Term.types
)
ident(
  int_ref end_of_type "plugins/funind/functional_principles_proofs.ml" 285 7814 7823 "plugins/funind/functional_principles_proofs.ml" 285 7814 7834
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8090 "plugins/funind/functional_principles_proofs.ml" 291 8083 8122
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8124 "plugins/funind/functional_principles_proofs.ml" 291 8083 8133
type(
  int
)
ident(
  int_ref ctxt_size "plugins/funind/functional_principles_proofs.ml" 285 7814 7835 "plugins/funind/functional_principles_proofs.ml" 285 7814 7844
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8134 "plugins/funind/functional_principles_proofs.ml" 291 8083 8135
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8136 "plugins/funind/functional_principles_proofs.ml" 291 8083 8137
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8124 "plugins/funind/functional_principles_proofs.ml" 291 8083 8137
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8139 "plugins/funind/functional_principles_proofs.ml" 291 8083 8156
type(
  Term.rel_declaration -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.mkLambda_or_LetIn
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8157 "plugins/funind/functional_principles_proofs.ml" 291 8083 8161
type(
  Term.rel_declaration
)
ident(
  int_ref decl "plugins/funind/functional_principles_proofs.ml" 285 7814 7858 "plugins/funind/functional_principles_proofs.ml" 285 7814 7878
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8162 "plugins/funind/functional_principles_proofs.ml" 291 8083 8173
type(
  Term.constr
)
ident(
  int_ref witness_fun "plugins/funind/functional_principles_proofs.ml" 285 7814 7845 "plugins/funind/functional_principles_proofs.ml" 285 7814 7856
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8139 "plugins/funind/functional_principles_proofs.ml" 291 8083 8173
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 291 8083 8089 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
type(
  Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 286 7882 7886 "plugins/funind/functional_principles_proofs.ml" 291 8083 8174
type(
  Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 285 7814 7815 "plugins/funind/functional_principles_proofs.ml" 292 8175 8177
type(
  Util.Intmap.key ->
  Term.types * int * Term.constr ->
  Term.rel_declaration -> Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 293 8178 8179 "plugins/funind/functional_principles_proofs.ml" 293 8178 8180
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 294 8181 8183 "plugins/funind/functional_principles_proofs.ml" 294 8181 8198
type(
  Term.types
)
ident(
  int_ref new_end_of_type "plugins/funind/functional_principles_proofs.ml" 267 7019 7027 "plugins/funind/functional_principles_proofs.ml" 267 7019 7042
)
"plugins/funind/functional_principles_proofs.ml" 294 8181 8199 "plugins/funind/functional_principles_proofs.ml" 294 8181 8200
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 294 8181 8201 "plugins/funind/functional_principles_proofs.ml" 294 8181 8212
type(
  Term.constr
)
ident(
  int_ref witness_fun "plugins/funind/functional_principles_proofs.ml" 278 7537 7545 "plugins/funind/functional_principles_proofs.ml" 278 7537 7556
)
"plugins/funind/functional_principles_proofs.ml" 294 8181 8182 "plugins/funind/functional_principles_proofs.ml" 294 8181 8213
type(
  Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 295 8214 8215 "plugins/funind/functional_principles_proofs.ml" 295 8214 8222
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 209 4893 4925 "plugins/funind/functional_principles_proofs.ml" 209 4893 4932
)
"plugins/funind/functional_principles_proofs.ml" 284 7791 7797 "plugins/funind/functional_principles_proofs.ml" 295 8214 8222
call(
  stack
)
type(
  Term.types * int * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 297 8230 8238 "plugins/funind/functional_principles_proofs.ml" 297 8230 8253
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 298 8256 8262 "plugins/funind/functional_principles_proofs.ml" 298 8256 8286
type(
  Reductionops.local_reduction_function
)
ident(
  ext_ref Reductionops.nf_betaiota
)
"plugins/funind/functional_principles_proofs.ml" 298 8256 8287 "plugins/funind/functional_principles_proofs.ml" 298 8256 8296
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_proofs.ml" 298 8256 8297 "plugins/funind/functional_principles_proofs.ml" 298 8256 8312
type(
  Term.types
)
ident(
  int_ref new_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 283 7743 7751 "plugins/funind/functional_principles_proofs.ml" 283 7743 7766
)
"plugins/funind/functional_principles_proofs.ml" 298 8256 8262 "plugins/funind/functional_principles_proofs.ml" 298 8256 8312
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 299 8316 8324 "plugins/funind/functional_principles_proofs.ml" 299 8316 8332
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 299 8316 8333 "plugins/funind/functional_principles_proofs.ml" 299 8316 8348
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 299 8316 8324 "plugins/funind/functional_principles_proofs.ml" 299 8316 8348
type(
  Term.rel_context * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 300 8351 8357 "plugins/funind/functional_principles_proofs.ml" 300 8351 8379
type(
  int -> Term.types -> Term.rel_context * Term.types
)
ident(
  ext_ref Term.decompose_prod_n_assum
)
"plugins/funind/functional_principles_proofs.ml" 300 8351 8380 "plugins/funind/functional_principles_proofs.ml" 300 8351 8389
type(
  int
)
ident(
  int_ref ctxt_size "plugins/funind/functional_principles_proofs.ml" 283 7743 7767 "plugins/funind/functional_principles_proofs.ml" 283 7743 7776
)
"plugins/funind/functional_principles_proofs.ml" 300 8351 8390 "plugins/funind/functional_principles_proofs.ml" 300 8351 8405
type(
  Term.types
)
ident(
  int_ref new_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 297 8230 8238 "plugins/funind/functional_principles_proofs.ml" 297 8230 8253
)
"plugins/funind/functional_principles_proofs.ml" 300 8351 8357 "plugins/funind/functional_principles_proofs.ml" 300 8351 8405
call(
  stack
)
type(
  Term.rel_context * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 302 8413 8421 "plugins/funind/functional_principles_proofs.ml" 302 8413 8434
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 303 8446 8452 "plugins/funind/functional_principles_proofs.ml" 303 8446 8459
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 304 8460 8462 "plugins/funind/functional_principles_proofs.ml" 304 8460 8467
type(
  int -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclDO
)
"plugins/funind/functional_principles_proofs.ml" 304 8460 8468 "plugins/funind/functional_principles_proofs.ml" 304 8460 8477
type(
  int
)
ident(
  int_ref ctxt_size "plugins/funind/functional_principles_proofs.ml" 283 7743 7767 "plugins/funind/functional_principles_proofs.ml" 283 7743 7776
)
"plugins/funind/functional_principles_proofs.ml" 304 8460 8478 "plugins/funind/functional_principles_proofs.ml" 304 8460 8483
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intro
)
"plugins/funind/functional_principles_proofs.ml" 304 8460 8461 "plugins/funind/functional_principles_proofs.ml" 304 8460 8484
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 305 8485 8491 "plugins/funind/functional_principles_proofs.ml" 305 8485 8492
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 306 8496 8500 "plugins/funind/functional_principles_proofs.ml" 309 8657 8679
)
"plugins/funind/functional_principles_proofs.ml" 306 8496 8504 "plugins/funind/functional_principles_proofs.ml" 306 8496 8511
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 306 8496 8514 "plugins/funind/functional_principles_proofs.ml" 306 8496 8528
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/functional_principles_proofs.ml" 306 8496 8529 "plugins/funind/functional_principles_proofs.ml" 306 8496 8530
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 305 8485 8491 "plugins/funind/functional_principles_proofs.ml" 305 8485 8492
)
"plugins/funind/functional_principles_proofs.ml" 306 8496 8514 "plugins/funind/functional_principles_proofs.ml" 306 8496 8530
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 307 8534 8542 "plugins/funind/functional_principles_proofs.ml" 307 8534 8549
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 307 8534 8550 "plugins/funind/functional_principles_proofs.ml" 307 8534 8551
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 307 8534 8542 "plugins/funind/functional_principles_proofs.ml" 307 8534 8551
type(
  Names.identifier list * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 307 8534 8555 "plugins/funind/functional_principles_proofs.ml" 307 8534 8564
type(
  ?msg:string ->
  int ->
  Names.identifier list -> Names.identifier list * Names.identifier list
)
ident(
  int_ref list_chop "plugins/funind/functional_principles_proofs.ml" 56 1091 1095 "plugins/funind/functional_principles_proofs.ml" 56 1091 1104
)
"plugins/funind/functional_principles_proofs.ml" 307 8534 8565 "plugins/funind/functional_principles_proofs.ml" 307 8534 8574
type(
  int
)
ident(
  int_ref ctxt_size "plugins/funind/functional_principles_proofs.ml" 283 7743 7767 "plugins/funind/functional_principles_proofs.ml" 283 7743 7776
)
"plugins/funind/functional_principles_proofs.ml" 307 8534 8575 "plugins/funind/functional_principles_proofs.ml" 307 8534 8582
type(
  Names.identifier list
)
ident(
  int_ref all_ids "plugins/funind/functional_principles_proofs.ml" 306 8496 8504 "plugins/funind/functional_principles_proofs.ml" 306 8496 8511
)
"plugins/funind/functional_principles_proofs.ml" 307 8534 8555 "plugins/funind/functional_principles_proofs.ml" 307 8534 8582
call(
  stack
)
type(
  Names.identifier list * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8594 "plugins/funind/functional_principles_proofs.ml" 308 8586 8603
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8606 "plugins/funind/functional_principles_proofs.ml" 308 8586 8613
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8614 "plugins/funind/functional_principles_proofs.ml" 308 8586 8625
type(
  Term.constr
)
ident(
  int_ref witness_fun "plugins/funind/functional_principles_proofs.ml" 283 7743 7777 "plugins/funind/functional_principles_proofs.ml" 283 7743 7788
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8626 "plugins/funind/functional_principles_proofs.ml" 308 8586 8638
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8639 "plugins/funind/functional_principles_proofs.ml" 308 8586 8644
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8645 "plugins/funind/functional_principles_proofs.ml" 308 8586 8652
type(
  Names.identifier list
)
ident(
  int_ref new_ids "plugins/funind/functional_principles_proofs.ml" 307 8534 8542 "plugins/funind/functional_principles_proofs.ml" 307 8534 8549
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8626 "plugins/funind/functional_principles_proofs.ml" 308 8586 8652
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8613 "plugins/funind/functional_principles_proofs.ml" 308 8586 8653
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8606 "plugins/funind/functional_principles_proofs.ml" 308 8586 8653
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 309 8657 8661 "plugins/funind/functional_principles_proofs.ml" 309 8657 8667
type(
  Term.constr -> Tacmach.tactic
)
ident(
  int_ref refine "plugins/funind/functional_principles_proofs.ml" 93 1760 1764 "plugins/funind/functional_principles_proofs.ml" 93 1760 1770
)
"plugins/funind/functional_principles_proofs.ml" 309 8657 8668 "plugins/funind/functional_principles_proofs.ml" 309 8657 8677
type(
  Term.constr
)
ident(
  int_ref to_refine "plugins/funind/functional_principles_proofs.ml" 308 8586 8594 "plugins/funind/functional_principles_proofs.ml" 308 8586 8603
)
"plugins/funind/functional_principles_proofs.ml" 309 8657 8678 "plugins/funind/functional_principles_proofs.ml" 309 8657 8679
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 305 8485 8491 "plugins/funind/functional_principles_proofs.ml" 305 8485 8492
)
"plugins/funind/functional_principles_proofs.ml" 309 8657 8661 "plugins/funind/functional_principles_proofs.ml" 309 8657 8679
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 308 8586 8590 "plugins/funind/functional_principles_proofs.ml" 309 8657 8679
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 307 8534 8538 "plugins/funind/functional_principles_proofs.ml" 309 8657 8679
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 306 8496 8500 "plugins/funind/functional_principles_proofs.ml" 309 8657 8679
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 305 8485 8486 "plugins/funind/functional_principles_proofs.ml" 310 8680 8682
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 303 8446 8452 "plugins/funind/functional_principles_proofs.ml" 310 8680 8682
call(
  stack
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 312 8690 8698 "plugins/funind/functional_principles_proofs.ml" 312 8690 8710
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 313 8713 8719 "plugins/funind/functional_principles_proofs.ml" 313 8713 8740
type(
  string ->
  Names.identifier -> Term.types -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref change_hyp_with_using "plugins/funind/functional_principles_proofs.ml" 153 3221 3225 "plugins/funind/functional_principles_proofs.ml" 153 3221 3246
)
"plugins/funind/functional_principles_proofs.ml" 313 8713 8741 "plugins/funind/functional_principles_proofs.ml" 313 8713 8771
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 313 8713 8772 "plugins/funind/functional_principles_proofs.ml" 313 8713 8778
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 209 4893 4917 "plugins/funind/functional_principles_proofs.ml" 209 4893 4923
)
"plugins/funind/functional_principles_proofs.ml" 313 8713 8779 "plugins/funind/functional_principles_proofs.ml" 313 8713 8794
type(
  Term.types
)
ident(
  int_ref new_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 297 8230 8238 "plugins/funind/functional_principles_proofs.ml" 297 8230 8253
)
"plugins/funind/functional_principles_proofs.ml" 313 8713 8795 "plugins/funind/functional_principles_proofs.ml" 313 8713 8808
type(
  Proof_type.tactic
)
ident(
  int_ref prove_new_hyp "plugins/funind/functional_principles_proofs.ml" 302 8413 8421 "plugins/funind/functional_principles_proofs.ml" 302 8413 8434
)
"plugins/funind/functional_principles_proofs.ml" 313 8713 8719 "plugins/funind/functional_principles_proofs.ml" 313 8713 8808
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 329 9547 9551 "plugins/funind/functional_principles_proofs.ml" 329 9547 9559
type(
  Term.rel_context
)
ident(
  int_ref new_ctxt "plugins/funind/functional_principles_proofs.ml" 299 8316 8324 "plugins/funind/functional_principles_proofs.ml" 299 8316 8332
)
"plugins/funind/functional_principles_proofs.ml" 329 9547 9560 "plugins/funind/functional_principles_proofs.ml" 329 9547 9575
type(
  Term.types
)
ident(
  int_ref new_end_of_type "plugins/funind/functional_principles_proofs.ml" 299 8316 8333 "plugins/funind/functional_principles_proofs.ml" 299 8316 8348
)
"plugins/funind/functional_principles_proofs.ml" 329 9547 9576 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Proof_type.tactic
)
ident(
  int_ref simpl_eq_tac "plugins/funind/functional_principles_proofs.ml" 312 8690 8698 "plugins/funind/functional_principles_proofs.ml" 312 8690 8710
)
"plugins/funind/functional_principles_proofs.ml" 329 9547 9551 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 312 8690 8694 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 302 8413 8417 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 299 8316 8320 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 297 8230 8234 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 283 7743 7747 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 278 7537 7541 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 277 7481 7485 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 267 7019 7023 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 266 6935 6939 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 265 6875 6879 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 264 6806 6810 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 238 5961 5965 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 237 5874 5878 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 221 5450 5454 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 220 5417 5421 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 219 5363 5367 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 217 5240 5242 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 216 5188 5190 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 210 4965 4967 "plugins/funind/functional_principles_proofs.ml" 329 9547 9588
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 332 9591 9595 "plugins/funind/functional_principles_proofs.ml" 332 9591 9606
type(
  pte_info Names.Idmap.t -> Term.constr -> Term.constr -> bool
)
ident(
  def is_property "plugins/funind/functional_principles_proofs.ml" 345 9903 9903 --
)
"plugins/funind/functional_principles_proofs.ml" 332 9591 9607 "plugins/funind/functional_principles_proofs.ml" 332 9591 9616
type(
  pte_info Names.Idmap.t
)
ident(
  def ptes_info "plugins/funind/functional_principles_proofs.ml" 332 9591 9617 "plugins/funind/functional_principles_proofs.ml" 343 9889 9901
)
"plugins/funind/functional_principles_proofs.ml" 332 9591 9617 "plugins/funind/functional_principles_proofs.ml" 332 9591 9620
type(
  Term.constr
)
ident(
  def t_x "plugins/funind/functional_principles_proofs.ml" 332 9591 9621 "plugins/funind/functional_principles_proofs.ml" 343 9889 9901
)
"plugins/funind/functional_principles_proofs.ml" 332 9591 9621 "plugins/funind/functional_principles_proofs.ml" 332 9591 9637
type(
  Term.constr
)
ident(
  def full_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 333 9640 9642 "plugins/funind/functional_principles_proofs.ml" 343 9889 9901
)
"plugins/funind/functional_principles_proofs.ml" 333 9640 9645 "plugins/funind/functional_principles_proofs.ml" 333 9640 9650
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isApp
)
"plugins/funind/functional_principles_proofs.ml" 333 9640 9651 "plugins/funind/functional_principles_proofs.ml" 333 9640 9654
type(
  Term.constr
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 332 9591 9617 "plugins/funind/functional_principles_proofs.ml" 332 9591 9620
)
"plugins/funind/functional_principles_proofs.ml" 333 9640 9645 "plugins/funind/functional_principles_proofs.ml" 333 9640 9654
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 335 9662 9670 "plugins/funind/functional_principles_proofs.ml" 335 9662 9673
type(
  Term.constr
)
ident(
  def pte "plugins/funind/functional_principles_proofs.ml" 336 9696 9700 "plugins/funind/functional_principles_proofs.ml" 342 9874 9888
)
"plugins/funind/functional_principles_proofs.ml" 335 9662 9674 "plugins/funind/functional_principles_proofs.ml" 335 9662 9678
type(
  Term.constr array
)
ident(
  def args "plugins/funind/functional_principles_proofs.ml" 336 9696 9700 "plugins/funind/functional_principles_proofs.ml" 342 9874 9888
)
"plugins/funind/functional_principles_proofs.ml" 335 9662 9670 "plugins/funind/functional_principles_proofs.ml" 335 9662 9678
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 335 9662 9681 "plugins/funind/functional_principles_proofs.ml" 335 9662 9688
type(
  Term.constr -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 335 9662 9689 "plugins/funind/functional_principles_proofs.ml" 335 9662 9692
type(
  Term.constr
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 332 9591 9617 "plugins/funind/functional_principles_proofs.ml" 332 9591 9620
)
"plugins/funind/functional_principles_proofs.ml" 335 9662 9681 "plugins/funind/functional_principles_proofs.ml" 335 9662 9692
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9703 "plugins/funind/functional_principles_proofs.ml" 336 9696 9708
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isVar
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9709 "plugins/funind/functional_principles_proofs.ml" 336 9696 9712
type(
  Term.constr
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 335 9662 9670 "plugins/funind/functional_principles_proofs.ml" 335 9662 9673
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9703 "plugins/funind/functional_principles_proofs.ml" 336 9696 9712
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9713 "plugins/funind/functional_principles_proofs.ml" 336 9696 9715
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9716 "plugins/funind/functional_principles_proofs.ml" 336 9696 9729
type(
  (Term.constr -> bool) -> Term.constr array -> bool
)
ident(
  ext_ref Util.array_for_all
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9730 "plugins/funind/functional_principles_proofs.ml" 336 9696 9737
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.closed0
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9738 "plugins/funind/functional_principles_proofs.ml" 336 9696 9742
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 335 9662 9674 "plugins/funind/functional_principles_proofs.ml" 335 9662 9678
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9716 "plugins/funind/functional_principles_proofs.ml" 336 9696 9742
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9703 "plugins/funind/functional_principles_proofs.ml" 336 9696 9742
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 339 9762 9767 "plugins/funind/functional_principles_proofs.ml" 339 9762 9771
type(
  pte_info
)
ident(
  def info "plugins/funind/functional_principles_proofs.ml" 340 9812 9813 "plugins/funind/functional_principles_proofs.ml" 340 9812 9843
)
"plugins/funind/functional_principles_proofs.ml" 339 9762 9774 "plugins/funind/functional_principles_proofs.ml" 339 9762 9784
type(
  Names.Idmap.key -> pte_info Names.Idmap.t -> pte_info
)
ident(
  ext_ref Names.Idmap.find
)
"plugins/funind/functional_principles_proofs.ml" 339 9762 9786 "plugins/funind/functional_principles_proofs.ml" 339 9762 9793
type(
  Term.constr -> Names.Idmap.key
)
ident(
  ext_ref Term.destVar
)
"plugins/funind/functional_principles_proofs.ml" 339 9762 9794 "plugins/funind/functional_principles_proofs.ml" 339 9762 9797
type(
  Term.constr
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 335 9662 9670 "plugins/funind/functional_principles_proofs.ml" 335 9662 9673
)
"plugins/funind/functional_principles_proofs.ml" 339 9762 9785 "plugins/funind/functional_principles_proofs.ml" 339 9762 9798
call(
  stack
)
type(
  Names.Idmap.key
)
"plugins/funind/functional_principles_proofs.ml" 339 9762 9799 "plugins/funind/functional_principles_proofs.ml" 339 9762 9808
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref ptes_info "plugins/funind/functional_principles_proofs.ml" 332 9591 9607 "plugins/funind/functional_principles_proofs.ml" 332 9591 9616
)
"plugins/funind/functional_principles_proofs.ml" 339 9762 9774 "plugins/funind/functional_principles_proofs.ml" 339 9762 9808
call(
  stack
)
type(
  pte_info
)
"plugins/funind/functional_principles_proofs.ml" 340 9812 9813 "plugins/funind/functional_principles_proofs.ml" 340 9812 9817
type(
  pte_info
)
ident(
  int_ref info "plugins/funind/functional_principles_proofs.ml" 339 9762 9767 "plugins/funind/functional_principles_proofs.ml" 339 9762 9771
)
"plugins/funind/functional_principles_proofs.ml" 340 9812 9813 "plugins/funind/functional_principles_proofs.ml" 340 9812 9826
type(
  Term.constr -> bool
)
"plugins/funind/functional_principles_proofs.ml" 340 9812 9827 "plugins/funind/functional_principles_proofs.ml" 340 9812 9843
type(
  Term.constr
)
ident(
  int_ref full_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 332 9591 9621 "plugins/funind/functional_principles_proofs.ml" 332 9591 9637
)
"plugins/funind/functional_principles_proofs.ml" 340 9812 9813 "plugins/funind/functional_principles_proofs.ml" 340 9812 9843
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 339 9762 9763 "plugins/funind/functional_principles_proofs.ml" 340 9812 9843
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 341 9844 9855 "plugins/funind/functional_principles_proofs.ml" 341 9844 9864
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 341 9844 9868 "plugins/funind/functional_principles_proofs.ml" 341 9844 9873
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 338 9752 9758 "plugins/funind/functional_principles_proofs.ml" 341 9844 9873
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 342 9874 9883 "plugins/funind/functional_principles_proofs.ml" 342 9874 9888
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 336 9696 9700 "plugins/funind/functional_principles_proofs.ml" 342 9874 9888
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 335 9662 9666 "plugins/funind/functional_principles_proofs.ml" 342 9874 9888
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 343 9889 9896 "plugins/funind/functional_principles_proofs.ml" 343 9889 9901
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 333 9640 9642 "plugins/funind/functional_principles_proofs.ml" 343 9889 9901
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 345 9903 9907 "plugins/funind/functional_principles_proofs.ml" 345 9903 9914
type(
  Term.constr -> bool
)
ident(
  def isLetIn "plugins/funind/functional_principles_proofs.ml" 351 9988 9988 --
)
"plugins/funind/functional_principles_proofs.ml" 345 9903 9915 "plugins/funind/functional_principles_proofs.ml" 345 9903 9916
type(
  Term.constr
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 346 9919 9921 "plugins/funind/functional_principles_proofs.ml" 348 9969 9985
)
"plugins/funind/functional_principles_proofs.ml" 346 9919 9927 "plugins/funind/functional_principles_proofs.ml" 346 9919 9939
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 346 9919 9940 "plugins/funind/functional_principles_proofs.ml" 346 9919 9941
type(
  Term.constr
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 345 9903 9915 "plugins/funind/functional_principles_proofs.ml" 345 9903 9916
)
"plugins/funind/functional_principles_proofs.ml" 346 9919 9927 "plugins/funind/functional_principles_proofs.ml" 346 9919 9941
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 347 9947 9959 "plugins/funind/functional_principles_proofs.ml" 347 9947 9960
type(
  Term.constr
)
type(
  Term.types
)
type(
  Term.constr
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 347 9947 9953 "plugins/funind/functional_principles_proofs.ml" 347 9947 9960
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 347 9947 9964 "plugins/funind/functional_principles_proofs.ml" 347 9947 9968
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 348 9969 9975 "plugins/funind/functional_principles_proofs.ml" 348 9969 9976
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 348 9969 9980 "plugins/funind/functional_principles_proofs.ml" 348 9969 9985
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 346 9919 9921 "plugins/funind/functional_principles_proofs.ml" 348 9969 9985
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 351 9988 9992 "plugins/funind/functional_principles_proofs.ml" 351 9988 10010
type(
  Tacticals.clause -> Tacmach.tactic
)
ident(
  def h_reduce_with_zeta "plugins/funind/functional_principles_proofs.ml" 360 10110 10110 --
)
"plugins/funind/functional_principles_proofs.ml" 352 10013 10015 "plugins/funind/functional_principles_proofs.ml" 352 10013 10023
type(
  Redexpr.red_expr -> Tacticals.clause -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_reduce
)
"plugins/funind/functional_principles_proofs.ml" 354 10041 10049 "plugins/funind/functional_principles_proofs.ml" 354 10041 10066
type(
  Names.evaluable_global_reference Rawterm.raw_red_flag
)
ident(
  ext_ref Rawterm.all_flags
)
"plugins/funind/functional_principles_proofs.ml" 355 10067 10090 "plugins/funind/functional_principles_proofs.ml" 355 10067 10095
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 354 10041 10048 "plugins/funind/functional_principles_proofs.ml" 356 10097 10105
type(
  Names.evaluable_global_reference Rawterm.raw_red_flag
)
"plugins/funind/functional_principles_proofs.ml" 353 10024 10028 "plugins/funind/functional_principles_proofs.ml" 356 10097 10106
type(
  Redexpr.red_expr
)
"plugins/funind/functional_principles_proofs.ml" 352 10013 10015 "plugins/funind/functional_principles_proofs.ml" 356 10097 10106
call(
  stack
)
type(
  Tacticals.clause -> Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 360 10110 10114 "plugins/funind/functional_principles_proofs.ml" 360 10110 10131
type(
  int -> Names.identifier list -> Proof_type.tactic
)
ident(
  def rewrite_until_var "plugins/funind/functional_principles_proofs.ml" 384 10822 10822 --
)
"plugins/funind/functional_principles_proofs.ml" 360 10110 10132 "plugins/funind/functional_principles_proofs.ml" 360 10110 10139
type(
  int
)
ident(
  def arg_num "plugins/funind/functional_principles_proofs.ml" 360 10110 10140 "plugins/funind/functional_principles_proofs.ml" 381 10800 10819
)
"plugins/funind/functional_principles_proofs.ml" 360 10110 10140 "plugins/funind/functional_principles_proofs.ml" 360 10110 10146
type(
  Names.identifier list
)
ident(
  def eq_ids "plugins/funind/functional_principles_proofs.ml" 360 10110 10147 "plugins/funind/functional_principles_proofs.ml" 381 10800 10819
)
"plugins/funind/functional_principles_proofs.ml" 365 10368 10374 "plugins/funind/functional_principles_proofs.ml" 365 10368 10382
type(
  Proof_type.goal Tacmach.sigma -> bool
)
"plugins/funind/functional_principles_proofs.ml" 365 10368 10383 "plugins/funind/functional_principles_proofs.ml" 365 10368 10384
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 366 10387 10391 "plugins/funind/functional_principles_proofs.ml" 367 10428 10499
)
"plugins/funind/functional_principles_proofs.ml" 366 10387 10395 "plugins/funind/functional_principles_proofs.ml" 366 10387 10396
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 366 10387 10397 "plugins/funind/functional_principles_proofs.ml" 366 10387 10401
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 366 10387 10395 "plugins/funind/functional_principles_proofs.ml" 366 10387 10401
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 366 10387 10404 "plugins/funind/functional_principles_proofs.ml" 366 10387 10411
type(
  Term.types -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 366 10387 10413 "plugins/funind/functional_principles_proofs.ml" 366 10387 10421
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 366 10387 10422 "plugins/funind/functional_principles_proofs.ml" 366 10387 10423
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 365 10368 10383 "plugins/funind/functional_principles_proofs.ml" 365 10368 10384
)
"plugins/funind/functional_principles_proofs.ml" 366 10387 10412 "plugins/funind/functional_principles_proofs.ml" 366 10387 10424
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 366 10387 10404 "plugins/funind/functional_principles_proofs.ml" 366 10387 10424
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10432 "plugins/funind/functional_principles_proofs.ml" 367 10428 10435
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10438 "plugins/funind/functional_principles_proofs.ml" 367 10428 10449
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isConstruct
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10450 "plugins/funind/functional_principles_proofs.ml" 367 10428 10454
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 366 10387 10397 "plugins/funind/functional_principles_proofs.ml" 366 10387 10401
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10456 "plugins/funind/functional_principles_proofs.ml" 367 10428 10463
type(
  int
)
ident(
  int_ref arg_num "plugins/funind/functional_principles_proofs.ml" 360 10110 10132 "plugins/funind/functional_principles_proofs.ml" 360 10110 10139
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10450 "plugins/funind/functional_principles_proofs.ml" 367 10428 10464
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10437 "plugins/funind/functional_principles_proofs.ml" 367 10428 10465
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10466 "plugins/funind/functional_principles_proofs.ml" 367 10428 10468
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10469 "plugins/funind/functional_principles_proofs.ml" 367 10428 10483
type(
  ?env:Environ.env -> Term.constr -> bool
)
ident(
  int_ref isAppConstruct "plugins/funind/functional_principles_proofs.ml" 195 4335 4339 "plugins/funind/functional_principles_proofs.ml" 195 4335 4353
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10484 "plugins/funind/functional_principles_proofs.ml" 367 10428 10488
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 366 10387 10397 "plugins/funind/functional_principles_proofs.ml" 366 10387 10401
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10490 "plugins/funind/functional_principles_proofs.ml" 367 10428 10497
type(
  int
)
ident(
  int_ref arg_num "plugins/funind/functional_principles_proofs.ml" 360 10110 10132 "plugins/funind/functional_principles_proofs.ml" 360 10110 10139
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10484 "plugins/funind/functional_principles_proofs.ml" 367 10428 10498
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10469 "plugins/funind/functional_principles_proofs.ml" 367 10428 10498
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10436 "plugins/funind/functional_principles_proofs.ml" 367 10428 10499
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 367 10428 10432 "plugins/funind/functional_principles_proofs.ml" 367 10428 10499
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 366 10387 10391 "plugins/funind/functional_principles_proofs.ml" 367 10428 10499
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 369 10505 10515 "plugins/funind/functional_principles_proofs.ml" 369 10505 10525
type(
  Names.identifier list -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 369 10505 10526 "plugins/funind/functional_principles_proofs.ml" 369 10505 10532
type(
  Names.identifier list
)
ident(
  def eq_ids "plugins/funind/functional_principles_proofs.ml" 369 10505 10533 "plugins/funind/functional_principles_proofs.ml" 379 10786 10794
)
"plugins/funind/functional_principles_proofs.ml" 369 10505 10533 "plugins/funind/functional_principles_proofs.ml" 369 10505 10534
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 370 10538 10542 "plugins/funind/functional_principles_proofs.ml" 379 10786 10794
)
"plugins/funind/functional_principles_proofs.ml" 370 10538 10545 "plugins/funind/functional_principles_proofs.ml" 370 10538 10553
type(
  Proof_type.goal Tacmach.sigma -> bool
)
ident(
  int_ref test_var "plugins/funind/functional_principles_proofs.ml" 365 10368 10374 "plugins/funind/functional_principles_proofs.ml" 365 10368 10382
)
"plugins/funind/functional_principles_proofs.ml" 370 10538 10554 "plugins/funind/functional_principles_proofs.ml" 370 10538 10555
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 369 10505 10533 "plugins/funind/functional_principles_proofs.ml" 369 10505 10534
)
"plugins/funind/functional_principles_proofs.ml" 370 10538 10545 "plugins/funind/functional_principles_proofs.ml" 370 10538 10555
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 371 10556 10565 "plugins/funind/functional_principles_proofs.ml" 371 10556 10573
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/functional_principles_proofs.ml" 371 10556 10574 "plugins/funind/functional_principles_proofs.ml" 371 10556 10575
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 369 10505 10533 "plugins/funind/functional_principles_proofs.ml" 369 10505 10534
)
"plugins/funind/functional_principles_proofs.ml" 371 10556 10565 "plugins/funind/functional_principles_proofs.ml" 371 10556 10575
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 373 10585 10597 "plugins/funind/functional_principles_proofs.ml" 373 10585 10603
type(
  Names.identifier list
)
ident(
  int_ref eq_ids "plugins/funind/functional_principles_proofs.ml" 369 10505 10526 "plugins/funind/functional_principles_proofs.ml" 369 10505 10532
)
"plugins/funind/functional_principles_proofs.ml" 374 10609 10612 "plugins/funind/functional_principles_proofs.ml" 374 10609 10614
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 374 10609 10618 "plugins/funind/functional_principles_proofs.ml" 374 10609 10625
type(
  string -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_proofs.ml" 374 10609 10626 "plugins/funind/functional_principles_proofs.ml" 374 10609 10673
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 374 10609 10618 "plugins/funind/functional_principles_proofs.ml" 374 10609 10674
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 375 10675 10678 "plugins/funind/functional_principles_proofs.ml" 375 10675 10683
type(
  Names.identifier
)
ident(
  def eq_id "plugins/funind/functional_principles_proofs.ml" 376 10695 10700 "plugins/funind/functional_principles_proofs.ml" 379 10786 10794
)
"plugins/funind/functional_principles_proofs.ml" 375 10675 10685 "plugins/funind/functional_principles_proofs.ml" 375 10675 10691
type(
  Names.identifier list
)
ident(
  def eq_ids "plugins/funind/functional_principles_proofs.ml" 376 10695 10700 "plugins/funind/functional_principles_proofs.ml" 379 10786 10794
)
"plugins/funind/functional_principles_proofs.ml" 375 10675 10678 "plugins/funind/functional_principles_proofs.ml" 375 10675 10691
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 376 10695 10700 "plugins/funind/functional_principles_proofs.ml" 376 10695 10707
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 377 10708 10716 "plugins/funind/functional_principles_proofs.ml" 377 10708 10722
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTRY
)
"plugins/funind/functional_principles_proofs.ml" 377 10708 10724 "plugins/funind/functional_principles_proofs.ml" 377 10708 10742
type(
  ?tac:Tacmach.tactic * Equality.conditions -> Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Equality.rewriteRL
)
"plugins/funind/functional_principles_proofs.ml" 377 10708 10744 "plugins/funind/functional_principles_proofs.ml" 377 10708 10749
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 377 10708 10750 "plugins/funind/functional_principles_proofs.ml" 377 10708 10755
type(
  Names.identifier
)
ident(
  int_ref eq_id "plugins/funind/functional_principles_proofs.ml" 375 10675 10678 "plugins/funind/functional_principles_proofs.ml" 375 10675 10683
)
"plugins/funind/functional_principles_proofs.ml" 377 10708 10743 "plugins/funind/functional_principles_proofs.ml" 377 10708 10756
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 377 10708 10723 "plugins/funind/functional_principles_proofs.ml" 377 10708 10757
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 377 10708 10715 "plugins/funind/functional_principles_proofs.ml" 377 10708 10758
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 378 10759 10767 "plugins/funind/functional_principles_proofs.ml" 378 10759 10777
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref do_rewrite "plugins/funind/functional_principles_proofs.ml" 369 10505 10515 "plugins/funind/functional_principles_proofs.ml" 369 10505 10525
)
"plugins/funind/functional_principles_proofs.ml" 378 10759 10778 "plugins/funind/functional_principles_proofs.ml" 378 10759 10784
type(
  Names.identifier list
)
ident(
  int_ref eq_ids "plugins/funind/functional_principles_proofs.ml" 375 10675 10685 "plugins/funind/functional_principles_proofs.ml" 375 10675 10691
)
"plugins/funind/functional_principles_proofs.ml" 378 10759 10766 "plugins/funind/functional_principles_proofs.ml" 378 10759 10785
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 379 10786 10793 "plugins/funind/functional_principles_proofs.ml" 379 10786 10794
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 369 10505 10533 "plugins/funind/functional_principles_proofs.ml" 369 10505 10534
)
"plugins/funind/functional_principles_proofs.ml" 376 10695 10700 "plugins/funind/functional_principles_proofs.ml" 379 10786 10794
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 373 10585 10591 "plugins/funind/functional_principles_proofs.ml" 379 10786 10794
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 370 10538 10542 "plugins/funind/functional_principles_proofs.ml" 379 10786 10794
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 381 10800 10802 "plugins/funind/functional_principles_proofs.ml" 381 10800 10812
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref do_rewrite "plugins/funind/functional_principles_proofs.ml" 369 10505 10515 "plugins/funind/functional_principles_proofs.ml" 369 10505 10525
)
"plugins/funind/functional_principles_proofs.ml" 381 10800 10813 "plugins/funind/functional_principles_proofs.ml" 381 10800 10819
type(
  Names.identifier list
)
ident(
  int_ref eq_ids "plugins/funind/functional_principles_proofs.ml" 360 10110 10140 "plugins/funind/functional_principles_proofs.ml" 360 10110 10146
)
"plugins/funind/functional_principles_proofs.ml" 381 10800 10802 "plugins/funind/functional_principles_proofs.ml" 381 10800 10819
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 369 10505 10507 "plugins/funind/functional_principles_proofs.ml" 381 10800 10819
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 365 10368 10370 "plugins/funind/functional_principles_proofs.ml" 381 10800 10819
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 384 10822 10826 "plugins/funind/functional_principles_proofs.ml" 384 10822 10836
type(
  Names.identifier
)
ident(
  def rec_pte_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10859 --
)
"plugins/funind/functional_principles_proofs.ml" 384 10822 10839 "plugins/funind/functional_principles_proofs.ml" 384 10822 10851
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/functional_principles_proofs.ml" 384 10822 10852 "plugins/funind/functional_principles_proofs.ml" 384 10822 10858
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 384 10822 10839 "plugins/funind/functional_principles_proofs.ml" 384 10822 10858
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 385 10859 10863 "plugins/funind/functional_principles_proofs.ml" 385 10859 10881
type(
  pte_info Names.Idmap.t ->
  Names.identifier list ->
  Names.identifier ->
  Environ.env -> Evd.evar_map -> Proof_type.tactic * Names.identifier list
)
ident(
  def clean_hyp_with_heq "plugins/funind/functional_principles_proofs.ml" 533 15300 15300 --
)
"plugins/funind/functional_principles_proofs.ml" 385 10859 10882 "plugins/funind/functional_principles_proofs.ml" 385 10859 10892
type(
  pte_info Names.Idmap.t
)
ident(
  def ptes_infos "plugins/funind/functional_principles_proofs.ml" 385 10859 10893 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
)
"plugins/funind/functional_principles_proofs.ml" 385 10859 10893 "plugins/funind/functional_principles_proofs.ml" 385 10859 10900
type(
  Names.identifier list
)
ident(
  def eq_hyps "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
)
"plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
type(
  Names.identifier
)
ident(
  def hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10908 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
)
"plugins/funind/functional_principles_proofs.ml" 385 10859 10908 "plugins/funind/functional_principles_proofs.ml" 385 10859 10911
type(
  Environ.env
)
ident(
  def env "plugins/funind/functional_principles_proofs.ml" 385 10859 10912 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
)
"plugins/funind/functional_principles_proofs.ml" 385 10859 10912 "plugins/funind/functional_principles_proofs.ml" 385 10859 10917
type(
  Evd.evar_map
)
ident(
  def sigma "plugins/funind/functional_principles_proofs.ml" 386 10920 10922 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
)
"plugins/funind/functional_principles_proofs.ml" 386 10920 10926 "plugins/funind/functional_principles_proofs.ml" 386 10920 10935
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 386 10920 10938 "plugins/funind/functional_principles_proofs.ml" 386 10920 10960
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_False
)
"plugins/funind/functional_principles_proofs.ml" 386 10920 10961 "plugins/funind/functional_principles_proofs.ml" 386 10920 10963
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 386 10920 10938 "plugins/funind/functional_principles_proofs.ml" 386 10920 10963
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 387 10967 10973 "plugins/funind/functional_principles_proofs.ml" 387 10967 10981
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 387 10967 10984 "plugins/funind/functional_principles_proofs.ml" 387 10967 11005
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_True
)
"plugins/funind/functional_principles_proofs.ml" 387 10967 11006 "plugins/funind/functional_principles_proofs.ml" 387 10967 11008
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 387 10967 10984 "plugins/funind/functional_principles_proofs.ml" 387 10967 11008
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 388 11012 11018 "plugins/funind/functional_principles_proofs.ml" 388 11012 11023
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 388 11012 11026 "plugins/funind/functional_principles_proofs.ml" 388 11012 11044
type(
  Term.constr Util.delayed
)
ident(
  ext_ref Coqlib.build_coq_I
)
"plugins/funind/functional_principles_proofs.ml" 388 11012 11045 "plugins/funind/functional_principles_proofs.ml" 388 11012 11047
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 388 11012 11026 "plugins/funind/functional_principles_proofs.ml" 388 11012 11047
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 389 11051 11061 "plugins/funind/functional_principles_proofs.ml" 389 11051 11070
type(
  Term.rel_context -> Term.types -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
type(
  Term.rel_context
)
ident(
  def context "plugins/funind/functional_principles_proofs.ml" 389 11051 11080 "plugins/funind/functional_principles_proofs.ml" 525 15163 15177
)
"plugins/funind/functional_principles_proofs.ml" 389 11051 11080 "plugins/funind/functional_principles_proofs.ml" 389 11051 11091
type(
  Term.types
)
ident(
  def type_of_hyp "plugins/funind/functional_principles_proofs.ml" 389 11051 11092 "plugins/funind/functional_principles_proofs.ml" 525 15163 15177
)
"plugins/funind/functional_principles_proofs.ml" 390 11103 11110 "plugins/funind/functional_principles_proofs.ml" 390 11103 11117
type(
  Term.types -> bool
)
ident(
  int_ref isLetIn "plugins/funind/functional_principles_proofs.ml" 345 9903 9907 "plugins/funind/functional_principles_proofs.ml" 345 9903 9914
)
"plugins/funind/functional_principles_proofs.ml" 390 11103 11118 "plugins/funind/functional_principles_proofs.ml" 390 11103 11129
type(
  Term.types
)
ident(
  int_ref type_of_hyp "plugins/funind/functional_principles_proofs.ml" 389 11051 11080 "plugins/funind/functional_principles_proofs.ml" 389 11051 11091
)
"plugins/funind/functional_principles_proofs.ml" 390 11103 11110 "plugins/funind/functional_principles_proofs.ml" 390 11103 11129
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 391 11135 11145 "plugins/funind/functional_principles_proofs.ml" 391 11135 11161
type(
  Term.types
)
ident(
  def real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 392 11212 11218 "plugins/funind/functional_principles_proofs.ml" 404 11562 11564
)
"plugins/funind/functional_principles_proofs.ml" 391 11135 11164 "plugins/funind/functional_principles_proofs.ml" 391 11135 11182
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_proofs.ml" 391 11135 11189 "plugins/funind/functional_principles_proofs.ml" 391 11135 11200
type(
  Term.types
)
ident(
  int_ref type_of_hyp "plugins/funind/functional_principles_proofs.ml" 389 11051 11080 "plugins/funind/functional_principles_proofs.ml" 389 11051 11091
)
"plugins/funind/functional_principles_proofs.ml" 391 11135 11201 "plugins/funind/functional_principles_proofs.ml" 391 11135 11208
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 391 11135 11164 "plugins/funind/functional_principles_proofs.ml" 391 11135 11208
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 392 11212 11222 "plugins/funind/functional_principles_proofs.ml" 392 11212 11241
type(
  Term.constr
)
ident(
  def reduced_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 394 11326 11332 "plugins/funind/functional_principles_proofs.ml" 404 11562 11564
)
"plugins/funind/functional_principles_proofs.ml" 392 11212 11244 "plugins/funind/functional_principles_proofs.ml" 392 11212 11259
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_betaiotazeta "plugins/funind/functional_principles_proofs.ml" 202 4587 4591 "plugins/funind/functional_principles_proofs.ml" 202 4587 4606
)
"plugins/funind/functional_principles_proofs.ml" 392 11212 11260 "plugins/funind/functional_principles_proofs.ml" 392 11212 11276
type(
  Term.types
)
ident(
  int_ref real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 391 11135 11145 "plugins/funind/functional_principles_proofs.ml" 391 11135 11161
)
"plugins/funind/functional_principles_proofs.ml" 392 11212 11244 "plugins/funind/functional_principles_proofs.ml" 392 11212 11276
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 394 11326 11336 "plugins/funind/functional_principles_proofs.ml" 394 11326 11347
type(
  Term.rel_context
)
ident(
  def new_context "plugins/funind/functional_principles_proofs.ml" 397 11441 11449 "plugins/funind/functional_principles_proofs.ml" 404 11562 11564
)
"plugins/funind/functional_principles_proofs.ml" 394 11326 11348 "plugins/funind/functional_principles_proofs.ml" 394 11326 11362
type(
  Term.types
)
ident(
  def new_typ_of_hyp "plugins/funind/functional_principles_proofs.ml" 397 11441 11449 "plugins/funind/functional_principles_proofs.ml" 404 11562 11564
)
"plugins/funind/functional_principles_proofs.ml" 394 11326 11336 "plugins/funind/functional_principles_proofs.ml" 394 11326 11362
type(
  Term.rel_context * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 395 11365 11367 "plugins/funind/functional_principles_proofs.ml" 395 11365 11389
type(
  int -> Term.types -> Term.rel_context * Term.types
)
ident(
  ext_ref Term.decompose_prod_n_assum
)
"plugins/funind/functional_principles_proofs.ml" 395 11365 11391 "plugins/funind/functional_principles_proofs.ml" 395 11365 11402
type(
  Term.rel_context -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 395 11365 11403 "plugins/funind/functional_principles_proofs.ml" 395 11365 11410
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 395 11365 11390 "plugins/funind/functional_principles_proofs.ml" 395 11365 11411
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 395 11365 11412 "plugins/funind/functional_principles_proofs.ml" 395 11365 11431
type(
  Term.types
)
ident(
  int_ref reduced_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 392 11212 11222 "plugins/funind/functional_principles_proofs.ml" 392 11212 11241
)
"plugins/funind/functional_principles_proofs.ml" 395 11365 11367 "plugins/funind/functional_principles_proofs.ml" 395 11365 11431
call(
  stack
)
type(
  Term.rel_context * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 397 11441 11449 "plugins/funind/functional_principles_proofs.ml" 397 11441 11460
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 399 11464 11467 "plugins/funind/functional_principles_proofs.ml" 399 11464 11485
type(
  Tacticals.clause -> Tacmach.tactic
)
ident(
  int_ref h_reduce_with_zeta "plugins/funind/functional_principles_proofs.ml" 351 9988 9992 "plugins/funind/functional_principles_proofs.ml" 351 9988 10010
)
"plugins/funind/functional_principles_proofs.ml" 400 11486 11492 "plugins/funind/functional_principles_proofs.ml" 400 11486 11507
type(
  Names.identifier -> Tacticals.clause
)
ident(
  ext_ref Tacticals.onHyp
)
"plugins/funind/functional_principles_proofs.ml" 400 11486 11508 "plugins/funind/functional_principles_proofs.ml" 400 11486 11514
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 400 11486 11491 "plugins/funind/functional_principles_proofs.ml" 400 11486 11515
call(
  stack
)
type(
  Tacticals.clause
)
"plugins/funind/functional_principles_proofs.ml" 399 11464 11467 "plugins/funind/functional_principles_proofs.ml" 400 11486 11515
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 402 11521 11524 "plugins/funind/functional_principles_proofs.ml" 402 11521 11533
type(
  Term.rel_context -> Term.types -> Proof_type.tactic
)
ident(
  int_ref scan_type "plugins/funind/functional_principles_proofs.ml" 389 11051 11061 "plugins/funind/functional_principles_proofs.ml" 389 11051 11070
)
"plugins/funind/functional_principles_proofs.ml" 402 11521 11534 "plugins/funind/functional_principles_proofs.ml" 402 11521 11545
type(
  Term.rel_context
)
ident(
  int_ref new_context "plugins/funind/functional_principles_proofs.ml" 394 11326 11336 "plugins/funind/functional_principles_proofs.ml" 394 11326 11347
)
"plugins/funind/functional_principles_proofs.ml" 402 11521 11546 "plugins/funind/functional_principles_proofs.ml" 402 11521 11560
type(
  Term.types
)
ident(
  int_ref new_typ_of_hyp "plugins/funind/functional_principles_proofs.ml" 394 11326 11348 "plugins/funind/functional_principles_proofs.ml" 394 11326 11362
)
"plugins/funind/functional_principles_proofs.ml" 402 11521 11524 "plugins/funind/functional_principles_proofs.ml" 402 11521 11560
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 398 11461 11462 "plugins/funind/functional_principles_proofs.ml" 404 11562 11564
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 397 11441 11449 "plugins/funind/functional_principles_proofs.ml" 404 11562 11564
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 394 11326 11332 "plugins/funind/functional_principles_proofs.ml" 404 11562 11564
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 392 11212 11218 "plugins/funind/functional_principles_proofs.ml" 404 11562 11564
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 391 11135 11141 "plugins/funind/functional_principles_proofs.ml" 404 11562 11564
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 405 11565 11577 "plugins/funind/functional_principles_proofs.ml" 405 11565 11583
type(
  Term.types -> bool
)
ident(
  ext_ref Term.isProd
)
"plugins/funind/functional_principles_proofs.ml" 405 11565 11584 "plugins/funind/functional_principles_proofs.ml" 405 11565 11595
type(
  Term.types
)
ident(
  int_ref type_of_hyp "plugins/funind/functional_principles_proofs.ml" 389 11051 11080 "plugins/funind/functional_principles_proofs.ml" 389 11051 11091
)
"plugins/funind/functional_principles_proofs.ml" 405 11565 11577 "plugins/funind/functional_principles_proofs.ml" 405 11565 11595
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 408 11617 11623 "plugins/funind/functional_principles_proofs.ml" 408 11617 11624
type(
  Names.name
)
ident(
  def x "plugins/funind/functional_principles_proofs.ml" 409 11659 11660 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
)
"plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
type(
  Term.types
)
ident(
  def t_x "plugins/funind/functional_principles_proofs.ml" 409 11659 11660 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
)
"plugins/funind/functional_principles_proofs.ml" 408 11617 11629 "plugins/funind/functional_principles_proofs.ml" 408 11617 11631
type(
  Term.types
)
ident(
  def t' "plugins/funind/functional_principles_proofs.ml" 409 11659 11660 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
)
"plugins/funind/functional_principles_proofs.ml" 408 11617 11622 "plugins/funind/functional_principles_proofs.ml" 408 11617 11632
type(
  Names.name * Term.types * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 408 11617 11635 "plugins/funind/functional_principles_proofs.ml" 408 11617 11643
type(
  Term.types -> Names.name * Term.types * Term.types
)
ident(
  ext_ref Term.destProd
)
"plugins/funind/functional_principles_proofs.ml" 408 11617 11644 "plugins/funind/functional_principles_proofs.ml" 408 11617 11655
type(
  Term.types
)
ident(
  int_ref type_of_hyp "plugins/funind/functional_principles_proofs.ml" 389 11051 11080 "plugins/funind/functional_principles_proofs.ml" 389 11051 11091
)
"plugins/funind/functional_principles_proofs.ml" 408 11617 11635 "plugins/funind/functional_principles_proofs.ml" 408 11617 11655
call(
  stack
)
type(
  Names.name * Term.types * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 409 11659 11664 "plugins/funind/functional_principles_proofs.ml" 409 11659 11687
type(
  Term.types
)
ident(
  def actual_real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 410 11729 11730 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
)
"plugins/funind/functional_principles_proofs.ml" 409 11659 11690 "plugins/funind/functional_principles_proofs.ml" 409 11659 11708
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_proofs.ml" 409 11659 11715 "plugins/funind/functional_principles_proofs.ml" 409 11659 11717
type(
  Term.types
)
ident(
  int_ref t' "plugins/funind/functional_principles_proofs.ml" 408 11617 11629 "plugins/funind/functional_principles_proofs.ml" 408 11617 11631
)
"plugins/funind/functional_principles_proofs.ml" 409 11659 11718 "plugins/funind/functional_principles_proofs.ml" 409 11659 11725
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 409 11659 11690 "plugins/funind/functional_principles_proofs.ml" 409 11659 11725
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 410 11729 11733 "plugins/funind/functional_principles_proofs.ml" 410 11729 11744
type(
  pte_info Names.Idmap.t -> Term.types -> Term.types -> bool
)
ident(
  int_ref is_property "plugins/funind/functional_principles_proofs.ml" 332 9591 9595 "plugins/funind/functional_principles_proofs.ml" 332 9591 9606
)
"plugins/funind/functional_principles_proofs.ml" 410 11729 11745 "plugins/funind/functional_principles_proofs.ml" 410 11729 11755
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref ptes_infos "plugins/funind/functional_principles_proofs.ml" 385 10859 10882 "plugins/funind/functional_principles_proofs.ml" 385 10859 10892
)
"plugins/funind/functional_principles_proofs.ml" 410 11729 11756 "plugins/funind/functional_principles_proofs.ml" 410 11729 11759
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 410 11729 11760 "plugins/funind/functional_principles_proofs.ml" 410 11729 11783
type(
  Term.types
)
ident(
  int_ref actual_real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 409 11659 11664 "plugins/funind/functional_principles_proofs.ml" 409 11659 11687
)
"plugins/funind/functional_principles_proofs.ml" 410 11729 11733 "plugins/funind/functional_principles_proofs.ml" 410 11729 11783
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 412 11798 11807 "plugins/funind/functional_principles_proofs.ml" 412 11798 11810
type(
  Term.constr
)
ident(
  def pte "plugins/funind/functional_principles_proofs.ml" 413 11840 11845 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
)
"plugins/funind/functional_principles_proofs.ml" 412 11798 11811 "plugins/funind/functional_principles_proofs.ml" 412 11798 11819
type(
  Term.constr array
)
ident(
  def pte_args "plugins/funind/functional_principles_proofs.ml" 413 11840 11845 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
)
"plugins/funind/functional_principles_proofs.ml" 412 11798 11807 "plugins/funind/functional_principles_proofs.ml" 412 11798 11819
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 412 11798 11824 "plugins/funind/functional_principles_proofs.ml" 412 11798 11831
type(
  Term.types -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 412 11798 11832 "plugins/funind/functional_principles_proofs.ml" 412 11798 11835
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 412 11798 11823 "plugins/funind/functional_principles_proofs.ml" 412 11798 11836
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 413 11840 11864 "plugins/funind/functional_principles_proofs.ml" 413 11840 11877
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  def prove_rec_hyp "plugins/funind/functional_principles_proofs.ml" 414 11933 11938 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
)
"plugins/funind/functional_principles_proofs.ml" 413 11840 11881 "plugins/funind/functional_principles_proofs.ml" 413 11840 11891
type(
  Names.Idmap.key -> pte_info Names.Idmap.t -> pte_info
)
ident(
  ext_ref Names.Idmap.find
)
"plugins/funind/functional_principles_proofs.ml" 413 11840 11893 "plugins/funind/functional_principles_proofs.ml" 413 11840 11900
type(
  Term.constr -> Names.Idmap.key
)
ident(
  ext_ref Term.destVar
)
"plugins/funind/functional_principles_proofs.ml" 413 11840 11901 "plugins/funind/functional_principles_proofs.ml" 413 11840 11904
type(
  Term.constr
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 412 11798 11807 "plugins/funind/functional_principles_proofs.ml" 412 11798 11810
)
"plugins/funind/functional_principles_proofs.ml" 413 11840 11892 "plugins/funind/functional_principles_proofs.ml" 413 11840 11905
call(
  stack
)
type(
  Names.Idmap.key
)
"plugins/funind/functional_principles_proofs.ml" 413 11840 11906 "plugins/funind/functional_principles_proofs.ml" 413 11840 11916
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref ptes_infos "plugins/funind/functional_principles_proofs.ml" 385 10859 10882 "plugins/funind/functional_principles_proofs.ml" 385 10859 10892
)
"plugins/funind/functional_principles_proofs.ml" 413 11840 11880 "plugins/funind/functional_principles_proofs.ml" 413 11840 11917
call(
  stack
)
type(
  pte_info
)
"plugins/funind/functional_principles_proofs.ml" 413 11840 11880 "plugins/funind/functional_principles_proofs.ml" 413 11840 11929
type(
  Names.identifier list -> Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 414 11933 11942 "plugins/funind/functional_principles_proofs.ml" 414 11933 11951
type(
  Term.constr
)
ident(
  def popped_t' "plugins/funind/functional_principles_proofs.ml" 415 11964 11969 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
)
"plugins/funind/functional_principles_proofs.ml" 414 11933 11954 "plugins/funind/functional_principles_proofs.ml" 414 11933 11957
type(
  Term.types -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_proofs.ml" 414 11933 11958 "plugins/funind/functional_principles_proofs.ml" 414 11933 11960
type(
  Term.types
)
ident(
  int_ref t' "plugins/funind/functional_principles_proofs.ml" 408 11617 11629 "plugins/funind/functional_principles_proofs.ml" 408 11617 11631
)
"plugins/funind/functional_principles_proofs.ml" 414 11933 11954 "plugins/funind/functional_principles_proofs.ml" 414 11933 11960
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 415 11964 11973 "plugins/funind/functional_principles_proofs.ml" 415 11964 11989
type(
  Term.types
)
ident(
  def real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 416 12038 12043 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
)
"plugins/funind/functional_principles_proofs.ml" 415 11964 11992 "plugins/funind/functional_principles_proofs.ml" 415 11964 12010
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_proofs.ml" 415 11964 12017 "plugins/funind/functional_principles_proofs.ml" 415 11964 12026
type(
  Term.types
)
ident(
  int_ref popped_t' "plugins/funind/functional_principles_proofs.ml" 414 11933 11942 "plugins/funind/functional_principles_proofs.ml" 414 11933 11951
)
"plugins/funind/functional_principles_proofs.ml" 415 11964 12027 "plugins/funind/functional_principles_proofs.ml" 415 11964 12034
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 415 11964 11992 "plugins/funind/functional_principles_proofs.ml" 415 11964 12034
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 416 12038 12047 "plugins/funind/functional_principles_proofs.ml" 416 12038 12068
type(
  Proof_type.tactic
)
ident(
  def prove_new_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 444 12793 12798 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
)
"plugins/funind/functional_principles_proofs.ml" 417 12071 12082 "plugins/funind/functional_principles_proofs.ml" 417 12071 12096
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 417 12071 12099 "plugins/funind/functional_principles_proofs.ml" 417 12071 12110
type(
  Term.rel_context -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 417 12071 12111 "plugins/funind/functional_principles_proofs.ml" 417 12071 12118
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 417 12071 12099 "plugins/funind/functional_principles_proofs.ml" 417 12071 12118
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 418 12122 12129 "plugins/funind/functional_principles_proofs.ml" 418 12122 12140
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 420 12145 12149 "plugins/funind/functional_principles_proofs.ml" 420 12145 12154
type(
  int -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclDO
)
"plugins/funind/functional_principles_proofs.ml" 420 12145 12155 "plugins/funind/functional_principles_proofs.ml" 420 12145 12169
type(
  int
)
ident(
  int_ref context_length "plugins/funind/functional_principles_proofs.ml" 417 12071 12082 "plugins/funind/functional_principles_proofs.ml" 417 12071 12096
)
"plugins/funind/functional_principles_proofs.ml" 420 12145 12170 "plugins/funind/functional_principles_proofs.ml" 420 12145 12175
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intro
)
"plugins/funind/functional_principles_proofs.ml" 420 12145 12149 "plugins/funind/functional_principles_proofs.ml" 420 12145 12175
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 421 12177 12186 "plugins/funind/functional_principles_proofs.ml" 421 12177 12187
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 422 12191 12198 "plugins/funind/functional_principles_proofs.ml" 440 12764 12774
)
"plugins/funind/functional_principles_proofs.ml" 422 12191 12202 "plugins/funind/functional_principles_proofs.ml" 422 12191 12218
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 423 12221 12230 "plugins/funind/functional_principles_proofs.ml" 423 12221 12233
type(
  Names.identifier list * Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 423 12221 12235 "plugins/funind/functional_principles_proofs.ml" 423 12221 12244
type(
  ?msg:string ->
  int ->
  Names.identifier list -> Names.identifier list * Names.identifier list
)
ident(
  int_ref list_chop "plugins/funind/functional_principles_proofs.ml" 56 1091 1095 "plugins/funind/functional_principles_proofs.ml" 56 1091 1104
)
"plugins/funind/functional_principles_proofs.ml" 423 12221 12250 "plugins/funind/functional_principles_proofs.ml" 423 12221 12274
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 424 12275 12284 "plugins/funind/functional_principles_proofs.ml" 424 12275 12298
type(
  int
)
ident(
  int_ref context_length "plugins/funind/functional_principles_proofs.ml" 417 12071 12082 "plugins/funind/functional_principles_proofs.ml" 417 12071 12096
)
"plugins/funind/functional_principles_proofs.ml" 424 12275 12300 "plugins/funind/functional_principles_proofs.ml" 424 12275 12314
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/functional_principles_proofs.ml" 424 12275 12315 "plugins/funind/functional_principles_proofs.ml" 424 12275 12316
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 421 12177 12186 "plugins/funind/functional_principles_proofs.ml" 421 12177 12187
)
"plugins/funind/functional_principles_proofs.ml" 424 12275 12299 "plugins/funind/functional_principles_proofs.ml" 424 12275 12317
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 423 12221 12234 "plugins/funind/functional_principles_proofs.ml" 424 12275 12318
call(
  stack
)
type(
  Names.identifier list * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 423 12221 12230 "plugins/funind/functional_principles_proofs.ml" 424 12275 12318
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 426 12329 12340 "plugins/funind/functional_principles_proofs.ml" 426 12329 12350
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 426 12329 12353 "plugins/funind/functional_principles_proofs.ml" 426 12329 12366
type(
  Names.identifier -> Proof_type.goal Tacmach.sigma -> Names.identifier
)
ident(
  ext_ref Tacmach.pf_get_new_id
)
"plugins/funind/functional_principles_proofs.ml" 426 12329 12367 "plugins/funind/functional_principles_proofs.ml" 426 12329 12377
type(
  Names.identifier
)
ident(
  int_ref rec_pte_id "plugins/funind/functional_principles_proofs.ml" 384 10822 10826 "plugins/funind/functional_principles_proofs.ml" 384 10822 10836
)
"plugins/funind/functional_principles_proofs.ml" 426 12329 12378 "plugins/funind/functional_principles_proofs.ml" 426 12329 12379
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 421 12177 12186 "plugins/funind/functional_principles_proofs.ml" 421 12177 12187
)
"plugins/funind/functional_principles_proofs.ml" 426 12329 12353 "plugins/funind/functional_principles_proofs.ml" 426 12329 12379
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 427 12383 12394 "plugins/funind/functional_principles_proofs.ml" 427 12383 12403
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 428 12406 12415 "plugins/funind/functional_principles_proofs.ml" 428 12406 12422
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 428 12406 12423 "plugins/funind/functional_principles_proofs.ml" 428 12406 12428
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 428 12406 12429 "plugins/funind/functional_principles_proofs.ml" 428 12406 12435
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 428 12406 12423 "plugins/funind/functional_principles_proofs.ml" 428 12406 12435
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 429 12437 12447 "plugins/funind/functional_principles_proofs.ml" 429 12437 12459
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 429 12437 12460 "plugins/funind/functional_principles_proofs.ml" 429 12437 12465
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 429 12437 12467 "plugins/funind/functional_principles_proofs.ml" 429 12437 12477
type(
  Names.identifier
)
ident(
  int_ref rec_pte_id "plugins/funind/functional_principles_proofs.ml" 426 12329 12340 "plugins/funind/functional_principles_proofs.ml" 426 12329 12350
)
"plugins/funind/functional_principles_proofs.ml" 429 12437 12479 "plugins/funind/functional_principles_proofs.ml" 429 12437 12495
type(
  Names.identifier list
)
ident(
  int_ref context_hyps_ids "plugins/funind/functional_principles_proofs.ml" 422 12191 12202 "plugins/funind/functional_principles_proofs.ml" 422 12191 12218
)
"plugins/funind/functional_principles_proofs.ml" 429 12437 12466 "plugins/funind/functional_principles_proofs.ml" 429 12437 12496
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 429 12437 12447 "plugins/funind/functional_principles_proofs.ml" 429 12437 12496
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 428 12406 12422 "plugins/funind/functional_principles_proofs.ml" 430 12497 12507
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 428 12406 12415 "plugins/funind/functional_principles_proofs.ml" 430 12497 12507
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 433 12554 12564 "plugins/funind/functional_principles_proofs.ml" 433 12554 12572
type(
  Proof_type.tactic -> Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENS
)
"plugins/funind/functional_principles_proofs.ml" 434 12573 12583 "plugins/funind/functional_principles_proofs.ml" 434 12573 12593
type(
  Names.name -> Term.types -> Proof_type.tactic
)
ident(
  ext_ref Tactics.assert_tac
)
"plugins/funind/functional_principles_proofs.ml" 434 12573 12600 "plugins/funind/functional_principles_proofs.ml" 434 12573 12610
type(
  Names.identifier
)
ident(
  int_ref rec_pte_id "plugins/funind/functional_principles_proofs.ml" 426 12329 12340 "plugins/funind/functional_principles_proofs.ml" 426 12329 12350
)
"plugins/funind/functional_principles_proofs.ml" 434 12573 12594 "plugins/funind/functional_principles_proofs.ml" 434 12573 12611
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 434 12573 12612 "plugins/funind/functional_principles_proofs.ml" 434 12573 12615
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 434 12573 12582 "plugins/funind/functional_principles_proofs.ml" 434 12573 12616
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 436 12628 12667 "plugins/funind/functional_principles_proofs.ml" 436 12628 12680
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref prove_rec_hyp "plugins/funind/functional_principles_proofs.ml" 413 11840 11864 "plugins/funind/functional_principles_proofs.ml" 413 11840 11877
)
"plugins/funind/functional_principles_proofs.ml" 436 12628 12681 "plugins/funind/functional_principles_proofs.ml" 436 12628 12688
type(
  Names.identifier list
)
ident(
  int_ref eq_hyps "plugins/funind/functional_principles_proofs.ml" 385 10859 10893 "plugins/funind/functional_principles_proofs.ml" 385 10859 10900
)
"plugins/funind/functional_principles_proofs.ml" 436 12628 12666 "plugins/funind/functional_principles_proofs.ml" 436 12628 12689
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 438 12728 12734 "plugins/funind/functional_principles_proofs.ml" 438 12728 12740
type(
  Term.constr -> Tacmach.tactic
)
ident(
  int_ref refine "plugins/funind/functional_principles_proofs.ml" 93 1760 1764 "plugins/funind/functional_principles_proofs.ml" 93 1760 1770
)
"plugins/funind/functional_principles_proofs.ml" 438 12728 12741 "plugins/funind/functional_principles_proofs.ml" 438 12728 12750
type(
  Term.constr
)
ident(
  int_ref to_refine "plugins/funind/functional_principles_proofs.ml" 427 12383 12394 "plugins/funind/functional_principles_proofs.ml" 427 12383 12403
)
"plugins/funind/functional_principles_proofs.ml" 438 12728 12733 "plugins/funind/functional_principles_proofs.ml" 438 12728 12751
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 435 12617 12626 "plugins/funind/functional_principles_proofs.ml" 439 12752 12762
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 433 12554 12563 "plugins/funind/functional_principles_proofs.ml" 439 12752 12763
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 440 12764 12773 "plugins/funind/functional_principles_proofs.ml" 440 12764 12774
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 421 12177 12186 "plugins/funind/functional_principles_proofs.ml" 421 12177 12187
)
"plugins/funind/functional_principles_proofs.ml" 433 12554 12563 "plugins/funind/functional_principles_proofs.ml" 440 12764 12774
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 427 12383 12390 "plugins/funind/functional_principles_proofs.ml" 440 12764 12774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 426 12329 12336 "plugins/funind/functional_principles_proofs.ml" 440 12764 12774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 422 12191 12198 "plugins/funind/functional_principles_proofs.ml" 440 12764 12774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 421 12177 12181 "plugins/funind/functional_principles_proofs.ml" 441 12775 12780
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 419 12141 12143 "plugins/funind/functional_principles_proofs.ml" 442 12781 12784
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 418 12122 12129 "plugins/funind/functional_principles_proofs.ml" 442 12781 12784
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 417 12071 12078 "plugins/funind/functional_principles_proofs.ml" 442 12781 12784
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 444 12793 12798 "plugins/funind/functional_principles_proofs.ml" 444 12793 12809
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 447 12850 12855 "plugins/funind/functional_principles_proofs.ml" 447 12850 12876
type(
  string ->
  Names.identifier -> Term.types -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref change_hyp_with_using "plugins/funind/functional_principles_proofs.ml" 153 3221 3225 "plugins/funind/functional_principles_proofs.ml" 153 3221 3246
)
"plugins/funind/functional_principles_proofs.ml" 447 12850 12877 "plugins/funind/functional_principles_proofs.ml" 447 12850 12890
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 447 12850 12891 "plugins/funind/functional_principles_proofs.ml" 447 12850 12897
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 447 12850 12898 "plugins/funind/functional_principles_proofs.ml" 447 12850 12914
type(
  Term.types
)
ident(
  int_ref real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 415 11964 11973 "plugins/funind/functional_principles_proofs.ml" 415 11964 11989
)
"plugins/funind/functional_principles_proofs.ml" 447 12850 12915 "plugins/funind/functional_principles_proofs.ml" 447 12850 12936
type(
  Proof_type.tactic
)
ident(
  int_ref prove_new_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 416 12038 12047 "plugins/funind/functional_principles_proofs.ml" 416 12038 12068
)
"plugins/funind/functional_principles_proofs.ml" 447 12850 12854 "plugins/funind/functional_principles_proofs.ml" 447 12850 12937
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 448 12939 12941 "plugins/funind/functional_principles_proofs.ml" 448 12939 12950
type(
  Term.rel_context -> Term.types -> Proof_type.tactic
)
ident(
  int_ref scan_type "plugins/funind/functional_principles_proofs.ml" 389 11051 11061 "plugins/funind/functional_principles_proofs.ml" 389 11051 11070
)
"plugins/funind/functional_principles_proofs.ml" 448 12939 12951 "plugins/funind/functional_principles_proofs.ml" 448 12939 12958
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 448 12939 12959 "plugins/funind/functional_principles_proofs.ml" 448 12939 12968
type(
  Term.types
)
ident(
  int_ref popped_t' "plugins/funind/functional_principles_proofs.ml" 414 11933 11942 "plugins/funind/functional_principles_proofs.ml" 414 11933 11951
)
"plugins/funind/functional_principles_proofs.ml" 448 12939 12941 "plugins/funind/functional_principles_proofs.ml" 448 12939 12968
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 445 12810 12817 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 444 12793 12798 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 416 12038 12043 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 415 11964 11969 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 414 11933 11938 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 413 11840 11845 "plugins/funind/functional_principles_proofs.ml" 449 12969 12977
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 411 11789 11792 "plugins/funind/functional_principles_proofs.ml" 450 12978 12984
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 451 12985 12994 "plugins/funind/functional_principles_proofs.ml" 451 12985 13003
type(
  Term.types -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 451 12985 13004 "plugins/funind/functional_principles_proofs.ml" 451 12985 13007
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 451 12985 13008 "plugins/funind/functional_principles_proofs.ml" 451 12985 13017
type(
  Term.constr
)
ident(
  int_ref coq_False "plugins/funind/functional_principles_proofs.ml" 386 10920 10926 "plugins/funind/functional_principles_proofs.ml" 386 10920 10935
)
"plugins/funind/functional_principles_proofs.ml" 451 12985 12994 "plugins/funind/functional_principles_proofs.ml" 451 12985 13017
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 456 13170 13175 "plugins/funind/functional_principles_proofs.ml" 456 13170 13180
type(
  exn -> Proof_type.tactic
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_proofs.ml" 456 13170 13181 "plugins/funind/functional_principles_proofs.ml" 456 13170 13189
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 452 13023 13026 "plugins/funind/functional_principles_proofs.ml" 457 13218 13224
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 458 13225 13234 "plugins/funind/functional_principles_proofs.ml" 458 13225 13252
type(
  Term.types -> bool
)
ident(
  int_ref is_incompatible_eq "plugins/funind/functional_principles_proofs.ml" 138 2792 2796 "plugins/funind/functional_principles_proofs.ml" 138 2792 2814
)
"plugins/funind/functional_principles_proofs.ml" 458 13225 13253 "plugins/funind/functional_principles_proofs.ml" 458 13225 13256
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 458 13225 13234 "plugins/funind/functional_principles_proofs.ml" 458 13225 13256
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 458 13225 13262 "plugins/funind/functional_principles_proofs.ml" 458 13225 13267
type(
  exn -> Proof_type.tactic
)
ident(
  ext_ref Pervasives.raise
)
"plugins/funind/functional_principles_proofs.ml" 458 13225 13268 "plugins/funind/functional_principles_proofs.ml" 458 13225 13276
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 458 13225 13262 "plugins/funind/functional_principles_proofs.ml" 458 13225 13276
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 459 13307 13316 "plugins/funind/functional_principles_proofs.ml" 459 13307 13325
type(
  Term.types -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 459 13307 13326 "plugins/funind/functional_principles_proofs.ml" 459 13307 13329
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 459 13307 13330 "plugins/funind/functional_principles_proofs.ml" 459 13307 13338
type(
  Term.constr
)
ident(
  int_ref coq_True "plugins/funind/functional_principles_proofs.ml" 387 10967 10973 "plugins/funind/functional_principles_proofs.ml" 387 10967 10981
)
"plugins/funind/functional_principles_proofs.ml" 459 13307 13316 "plugins/funind/functional_principles_proofs.ml" 459 13307 13338
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 464 13510 13517 "plugins/funind/functional_principles_proofs.ml" 464 13510 13526
type(
  Term.constr
)
ident(
  def popped_t' "plugins/funind/functional_principles_proofs.ml" 465 13539 13542 "plugins/funind/functional_principles_proofs.ml" 489 14195 14199
)
"plugins/funind/functional_principles_proofs.ml" 464 13510 13529 "plugins/funind/functional_principles_proofs.ml" 464 13510 13532
type(
  Term.types -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_proofs.ml" 464 13510 13533 "plugins/funind/functional_principles_proofs.ml" 464 13510 13535
type(
  Term.types
)
ident(
  int_ref t' "plugins/funind/functional_principles_proofs.ml" 408 11617 11629 "plugins/funind/functional_principles_proofs.ml" 408 11617 11631
)
"plugins/funind/functional_principles_proofs.ml" 464 13510 13529 "plugins/funind/functional_principles_proofs.ml" 464 13510 13535
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 465 13539 13546 "plugins/funind/functional_principles_proofs.ml" 465 13539 13562
type(
  Term.types
)
ident(
  def real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 468 13619 13622 "plugins/funind/functional_principles_proofs.ml" 489 14195 14199
)
"plugins/funind/functional_principles_proofs.ml" 466 13565 13570 "plugins/funind/functional_principles_proofs.ml" 466 13565 13588
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_proofs.ml" 466 13565 13595 "plugins/funind/functional_principles_proofs.ml" 466 13565 13604
type(
  Term.types
)
ident(
  int_ref popped_t' "plugins/funind/functional_principles_proofs.ml" 464 13510 13517 "plugins/funind/functional_principles_proofs.ml" 464 13510 13526
)
"plugins/funind/functional_principles_proofs.ml" 466 13565 13605 "plugins/funind/functional_principles_proofs.ml" 466 13565 13612
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 466 13565 13570 "plugins/funind/functional_principles_proofs.ml" 466 13565 13612
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 468 13619 13626 "plugins/funind/functional_principles_proofs.ml" 468 13619 13639
type(
  Proof_type.tactic
)
ident(
  def prove_trivial "plugins/funind/functional_principles_proofs.ml" 485 14021 14024 "plugins/funind/functional_principles_proofs.ml" 489 14195 14199
)
"plugins/funind/functional_principles_proofs.ml" 469 13642 13651 "plugins/funind/functional_principles_proofs.ml" 469 13642 13659
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 469 13642 13662 "plugins/funind/functional_principles_proofs.ml" 469 13642 13673
type(
  Term.rel_context -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 469 13642 13674 "plugins/funind/functional_principles_proofs.ml" 469 13642 13681
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 469 13642 13662 "plugins/funind/functional_principles_proofs.ml" 469 13642 13681
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 470 13685 13690 "plugins/funind/functional_principles_proofs.ml" 470 13685 13701
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 471 13704 13711 "plugins/funind/functional_principles_proofs.ml" 471 13704 13716
type(
  int -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclDO
)
"plugins/funind/functional_principles_proofs.ml" 471 13704 13717 "plugins/funind/functional_principles_proofs.ml" 471 13704 13725
type(
  int
)
ident(
  int_ref nb_intro "plugins/funind/functional_principles_proofs.ml" 469 13642 13651 "plugins/funind/functional_principles_proofs.ml" 469 13642 13659
)
"plugins/funind/functional_principles_proofs.ml" 471 13704 13726 "plugins/funind/functional_principles_proofs.ml" 471 13704 13731
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intro
)
"plugins/funind/functional_principles_proofs.ml" 471 13704 13711 "plugins/funind/functional_principles_proofs.ml" 471 13704 13731
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 472 13733 13745 "plugins/funind/functional_principles_proofs.ml" 472 13733 13746
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 473 13750 13753 "plugins/funind/functional_principles_proofs.ml" 481 13977 13998
)
"plugins/funind/functional_principles_proofs.ml" 473 13750 13757 "plugins/funind/functional_principles_proofs.ml" 473 13750 13769
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 474 13772 13777 "plugins/funind/functional_principles_proofs.ml" 474 13772 13780
type(
  Names.identifier list * Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 474 13772 13782 "plugins/funind/functional_principles_proofs.ml" 474 13772 13791
type(
  ?msg:string ->
  int ->
  Names.identifier list -> Names.identifier list * Names.identifier list
)
ident(
  int_ref list_chop "plugins/funind/functional_principles_proofs.ml" 56 1091 1095 "plugins/funind/functional_principles_proofs.ml" 56 1091 1104
)
"plugins/funind/functional_principles_proofs.ml" 474 13772 13797 "plugins/funind/functional_principles_proofs.ml" 474 13772 13828
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 474 13772 13828 "plugins/funind/functional_principles_proofs.ml" 474 13772 13836
type(
  int
)
ident(
  int_ref nb_intro "plugins/funind/functional_principles_proofs.ml" 469 13642 13651 "plugins/funind/functional_principles_proofs.ml" 469 13642 13659
)
"plugins/funind/functional_principles_proofs.ml" 474 13772 13838 "plugins/funind/functional_principles_proofs.ml" 474 13772 13852
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/functional_principles_proofs.ml" 474 13772 13853 "plugins/funind/functional_principles_proofs.ml" 474 13772 13854
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 472 13733 13745 "plugins/funind/functional_principles_proofs.ml" 472 13733 13746
)
"plugins/funind/functional_principles_proofs.ml" 474 13772 13837 "plugins/funind/functional_principles_proofs.ml" 474 13772 13855
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 474 13772 13781 "plugins/funind/functional_principles_proofs.ml" 474 13772 13856
call(
  stack
)
type(
  Names.identifier list * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 474 13772 13777 "plugins/funind/functional_principles_proofs.ml" 474 13772 13856
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 476 13863 13870 "plugins/funind/functional_principles_proofs.ml" 476 13863 13879
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 477 13882 13887 "plugins/funind/functional_principles_proofs.ml" 477 13882 13894
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 477 13882 13896 "plugins/funind/functional_principles_proofs.ml" 477 13882 13901
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 477 13882 13902 "plugins/funind/functional_principles_proofs.ml" 477 13882 13908
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 477 13882 13896 "plugins/funind/functional_principles_proofs.ml" 477 13882 13908
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 478 13910 13917 "plugins/funind/functional_principles_proofs.ml" 478 13910 13925
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 478 13910 13927 "plugins/funind/functional_principles_proofs.ml" 478 13910 13932
type(
  Term.constr
)
ident(
  int_ref coq_I "plugins/funind/functional_principles_proofs.ml" 388 11012 11018 "plugins/funind/functional_principles_proofs.ml" 388 11012 11023
)
"plugins/funind/functional_principles_proofs.ml" 478 13910 13934 "plugins/funind/functional_principles_proofs.ml" 478 13910 13942
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 478 13910 13943 "plugins/funind/functional_principles_proofs.ml" 478 13910 13948
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 478 13910 13949 "plugins/funind/functional_principles_proofs.ml" 478 13910 13961
type(
  Names.identifier list
)
ident(
  int_ref context_hyps "plugins/funind/functional_principles_proofs.ml" 473 13750 13757 "plugins/funind/functional_principles_proofs.ml" 473 13750 13769
)
"plugins/funind/functional_principles_proofs.ml" 478 13910 13934 "plugins/funind/functional_principles_proofs.ml" 478 13910 13961
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 478 13910 13926 "plugins/funind/functional_principles_proofs.ml" 478 13910 13962
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 478 13910 13917 "plugins/funind/functional_principles_proofs.ml" 478 13910 13962
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 477 13882 13895 "plugins/funind/functional_principles_proofs.ml" 479 13963 13970
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 477 13882 13887 "plugins/funind/functional_principles_proofs.ml" 479 13963 13970
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 481 13977 13980 "plugins/funind/functional_principles_proofs.ml" 481 13977 13986
type(
  Term.constr -> Tacmach.tactic
)
ident(
  int_ref refine "plugins/funind/functional_principles_proofs.ml" 93 1760 1764 "plugins/funind/functional_principles_proofs.ml" 93 1760 1770
)
"plugins/funind/functional_principles_proofs.ml" 481 13977 13987 "plugins/funind/functional_principles_proofs.ml" 481 13977 13996
type(
  Term.constr
)
ident(
  int_ref to_refine "plugins/funind/functional_principles_proofs.ml" 476 13863 13870 "plugins/funind/functional_principles_proofs.ml" 476 13863 13879
)
"plugins/funind/functional_principles_proofs.ml" 481 13977 13997 "plugins/funind/functional_principles_proofs.ml" 481 13977 13998
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 472 13733 13745 "plugins/funind/functional_principles_proofs.ml" 472 13733 13746
)
"plugins/funind/functional_principles_proofs.ml" 481 13977 13980 "plugins/funind/functional_principles_proofs.ml" 481 13977 13998
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 476 13863 13866 "plugins/funind/functional_principles_proofs.ml" 481 13977 13998
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 473 13750 13753 "plugins/funind/functional_principles_proofs.ml" 481 13977 13998
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 472 13733 13740 "plugins/funind/functional_principles_proofs.ml" 482 13999 14007
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 470 13685 13702 "plugins/funind/functional_principles_proofs.ml" 483 14008 14014
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 470 13685 13690 "plugins/funind/functional_principles_proofs.ml" 483 14008 14014
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 469 13642 13647 "plugins/funind/functional_principles_proofs.ml" 483 14008 14014
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 485 14021 14024 "plugins/funind/functional_principles_proofs.ml" 485 14021 14035
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 486 14037 14042 "plugins/funind/functional_principles_proofs.ml" 486 14037 14063
type(
  string ->
  Names.identifier -> Term.types -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref change_hyp_with_using "plugins/funind/functional_principles_proofs.ml" 153 3221 3225 "plugins/funind/functional_principles_proofs.ml" 153 3221 3246
)
"plugins/funind/functional_principles_proofs.ml" 486 14037 14064 "plugins/funind/functional_principles_proofs.ml" 486 14037 14079
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 486 14037 14080 "plugins/funind/functional_principles_proofs.ml" 486 14037 14086
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 486 14037 14087 "plugins/funind/functional_principles_proofs.ml" 486 14037 14103
type(
  Term.types
)
ident(
  int_ref real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 465 13539 13546 "plugins/funind/functional_principles_proofs.ml" 465 13539 13562
)
"plugins/funind/functional_principles_proofs.ml" 487 14104 14111 "plugins/funind/functional_principles_proofs.ml" 487 14104 14160
type(
  Proof_type.tactic
)
ident(
  int_ref prove_trivial "plugins/funind/functional_principles_proofs.ml" 468 13619 13626 "plugins/funind/functional_principles_proofs.ml" 468 13619 13639
)
"plugins/funind/functional_principles_proofs.ml" 486 14037 14042 "plugins/funind/functional_principles_proofs.ml" 487 14104 14160
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 488 14162 14167 "plugins/funind/functional_principles_proofs.ml" 488 14162 14176
type(
  Term.rel_context -> Term.types -> Proof_type.tactic
)
ident(
  int_ref scan_type "plugins/funind/functional_principles_proofs.ml" 389 11051 11061 "plugins/funind/functional_principles_proofs.ml" 389 11051 11070
)
"plugins/funind/functional_principles_proofs.ml" 488 14162 14177 "plugins/funind/functional_principles_proofs.ml" 488 14162 14184
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 488 14162 14185 "plugins/funind/functional_principles_proofs.ml" 488 14162 14194
type(
  Term.types
)
ident(
  int_ref popped_t' "plugins/funind/functional_principles_proofs.ml" 464 13510 13517 "plugins/funind/functional_principles_proofs.ml" 464 13510 13526
)
"plugins/funind/functional_principles_proofs.ml" 488 14162 14167 "plugins/funind/functional_principles_proofs.ml" 488 14162 14194
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 485 14021 14035 "plugins/funind/functional_principles_proofs.ml" 489 14195 14199
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 485 14021 14024 "plugins/funind/functional_principles_proofs.ml" 489 14195 14199
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 468 13619 13622 "plugins/funind/functional_principles_proofs.ml" 489 14195 14199
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 465 13539 13542 "plugins/funind/functional_principles_proofs.ml" 489 14195 14199
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 464 13510 13513 "plugins/funind/functional_principles_proofs.ml" 489 14195 14199
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 490 14200 14209 "plugins/funind/functional_principles_proofs.ml" 490 14200 14222
type(
  Term.types -> bool
)
ident(
  int_ref is_trivial_eq "plugins/funind/functional_principles_proofs.ml" 112 2085 2089 "plugins/funind/functional_principles_proofs.ml" 112 2085 2102
)
"plugins/funind/functional_principles_proofs.ml" 490 14200 14223 "plugins/funind/functional_principles_proofs.ml" 490 14200 14226
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 490 14200 14209 "plugins/funind/functional_principles_proofs.ml" 490 14200 14226
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 492 14282 14289 "plugins/funind/functional_principles_proofs.ml" 492 14282 14298
type(
  Term.constr
)
ident(
  def popped_t' "plugins/funind/functional_principles_proofs.ml" 493 14311 14314 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
)
"plugins/funind/functional_principles_proofs.ml" 492 14282 14301 "plugins/funind/functional_principles_proofs.ml" 492 14282 14304
type(
  Term.types -> Term.constr
)
ident(
  ext_ref Termops.pop
)
"plugins/funind/functional_principles_proofs.ml" 492 14282 14305 "plugins/funind/functional_principles_proofs.ml" 492 14282 14307
type(
  Term.types
)
ident(
  int_ref t' "plugins/funind/functional_principles_proofs.ml" 408 11617 11629 "plugins/funind/functional_principles_proofs.ml" 408 11617 11631
)
"plugins/funind/functional_principles_proofs.ml" 492 14282 14301 "plugins/funind/functional_principles_proofs.ml" 492 14282 14307
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 493 14311 14318 "plugins/funind/functional_principles_proofs.ml" 493 14311 14334
type(
  Term.types
)
ident(
  def real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 496 14391 14394 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
)
"plugins/funind/functional_principles_proofs.ml" 494 14337 14342 "plugins/funind/functional_principles_proofs.ml" 494 14337 14360
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_proofs.ml" 494 14337 14367 "plugins/funind/functional_principles_proofs.ml" 494 14337 14376
type(
  Term.types
)
ident(
  int_ref popped_t' "plugins/funind/functional_principles_proofs.ml" 492 14282 14289 "plugins/funind/functional_principles_proofs.ml" 492 14282 14298
)
"plugins/funind/functional_principles_proofs.ml" 494 14337 14377 "plugins/funind/functional_principles_proofs.ml" 494 14337 14384
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 494 14337 14342 "plugins/funind/functional_principles_proofs.ml" 494 14337 14384
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 496 14391 14398 "plugins/funind/functional_principles_proofs.ml" 496 14391 14400
type(
  Term.constr
)
ident(
  def hd "plugins/funind/functional_principles_proofs.ml" 497 14423 14426 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
)
"plugins/funind/functional_principles_proofs.ml" 496 14391 14401 "plugins/funind/functional_principles_proofs.ml" 496 14391 14405
type(
  Term.constr array
)
ident(
  def args "plugins/funind/functional_principles_proofs.ml" 497 14423 14426 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
)
"plugins/funind/functional_principles_proofs.ml" 496 14391 14398 "plugins/funind/functional_principles_proofs.ml" 496 14391 14405
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 496 14391 14408 "plugins/funind/functional_principles_proofs.ml" 496 14391 14415
type(
  Term.types -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 496 14391 14416 "plugins/funind/functional_principles_proofs.ml" 496 14391 14419
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 496 14391 14408 "plugins/funind/functional_principles_proofs.ml" 496 14391 14419
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 497 14423 14430 "plugins/funind/functional_principles_proofs.ml" 497 14423 14438
type(
  Term.constr -> 'a array -> Term.constr * 'a * 'a
)
ident(
  def get_args "plugins/funind/functional_principles_proofs.ml" 502 14587 14590 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
)
"plugins/funind/functional_principles_proofs.ml" 497 14423 14439 "plugins/funind/functional_principles_proofs.ml" 497 14423 14441
type(
  Term.constr
)
ident(
  def hd "plugins/funind/functional_principles_proofs.ml" 497 14423 14442 "plugins/funind/functional_principles_proofs.ml" 500 14538 14580
)
"plugins/funind/functional_principles_proofs.ml" 497 14423 14442 "plugins/funind/functional_principles_proofs.ml" 497 14423 14446
type(
  'a array
)
ident(
  def args "plugins/funind/functional_principles_proofs.ml" 498 14449 14454 "plugins/funind/functional_principles_proofs.ml" 500 14538 14580
)
"plugins/funind/functional_principles_proofs.ml" 498 14449 14457 "plugins/funind/functional_principles_proofs.ml" 498 14449 14466
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 498 14449 14467 "plugins/funind/functional_principles_proofs.ml" 498 14449 14469
type(
  Term.constr
)
ident(
  int_ref hd "plugins/funind/functional_principles_proofs.ml" 497 14423 14439 "plugins/funind/functional_principles_proofs.ml" 497 14423 14441
)
"plugins/funind/functional_principles_proofs.ml" 498 14449 14471 "plugins/funind/functional_principles_proofs.ml" 498 14449 14481
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 498 14449 14482 "plugins/funind/functional_principles_proofs.ml" 498 14449 14484
type(
  Term.constr Lazy.t
)
ident(
  ext_ref Indfun_common.eq
)
"plugins/funind/functional_principles_proofs.ml" 498 14449 14470 "plugins/funind/functional_principles_proofs.ml" 498 14449 14485
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 498 14449 14457 "plugins/funind/functional_principles_proofs.ml" 498 14449 14485
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14497 "plugins/funind/functional_principles_proofs.ml" 499 14486 14507
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14508 "plugins/funind/functional_principles_proofs.ml" 499 14486 14518
type(
  Term.constr Lazy.t
)
ident(
  ext_ref Indfun_common.refl_equal
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14497 "plugins/funind/functional_principles_proofs.ml" 499 14486 14518
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14519 "plugins/funind/functional_principles_proofs.ml" 499 14486 14523
type(
  'a array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 497 14423 14442 "plugins/funind/functional_principles_proofs.ml" 497 14423 14446
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14525 "plugins/funind/functional_principles_proofs.ml" 499 14486 14526
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14519 "plugins/funind/functional_principles_proofs.ml" 499 14486 14527
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14528 "plugins/funind/functional_principles_proofs.ml" 499 14486 14532
type(
  'a array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 497 14423 14442 "plugins/funind/functional_principles_proofs.ml" 497 14423 14446
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14534 "plugins/funind/functional_principles_proofs.ml" 499 14486 14535
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14528 "plugins/funind/functional_principles_proofs.ml" 499 14486 14536
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 499 14486 14496 "plugins/funind/functional_principles_proofs.ml" 499 14486 14537
type(
  Term.constr * 'a * 'a
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14549 "plugins/funind/functional_principles_proofs.ml" 500 14538 14558
type(
  unit -> Term.constr
)
ident(
  ext_ref Indfun_common.jmeq_refl
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14559 "plugins/funind/functional_principles_proofs.ml" 500 14538 14561
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14549 "plugins/funind/functional_principles_proofs.ml" 500 14538 14561
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14562 "plugins/funind/functional_principles_proofs.ml" 500 14538 14566
type(
  'a array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 497 14423 14442 "plugins/funind/functional_principles_proofs.ml" 497 14423 14446
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14568 "plugins/funind/functional_principles_proofs.ml" 500 14538 14569
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14562 "plugins/funind/functional_principles_proofs.ml" 500 14538 14570
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14571 "plugins/funind/functional_principles_proofs.ml" 500 14538 14575
type(
  'a array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 497 14423 14442 "plugins/funind/functional_principles_proofs.ml" 497 14423 14446
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14577 "plugins/funind/functional_principles_proofs.ml" 500 14538 14578
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14571 "plugins/funind/functional_principles_proofs.ml" 500 14538 14579
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 500 14538 14548 "plugins/funind/functional_principles_proofs.ml" 500 14538 14580
type(
  Term.constr * 'a * 'a
)
"plugins/funind/functional_principles_proofs.ml" 498 14449 14454 "plugins/funind/functional_principles_proofs.ml" 500 14538 14580
type(
  Term.constr * 'a * 'a
)
"plugins/funind/functional_principles_proofs.ml" 502 14587 14590 "plugins/funind/functional_principles_proofs.ml" 502 14587 14601
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 504 14609 14616 "plugins/funind/functional_principles_proofs.ml" 504 14609 14637
type(
  string ->
  Names.identifier -> Term.types -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref change_hyp_with_using "plugins/funind/functional_principles_proofs.ml" 153 3221 3225 "plugins/funind/functional_principles_proofs.ml" 153 3221 3246
)
"plugins/funind/functional_principles_proofs.ml" 505 14638 14640 "plugins/funind/functional_principles_proofs.ml" 505 14638 14658
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 506 14659 14661 "plugins/funind/functional_principles_proofs.ml" 506 14659 14667
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 507 14668 14670 "plugins/funind/functional_principles_proofs.ml" 507 14668 14686
type(
  Term.types
)
ident(
  int_ref real_type_of_hyp "plugins/funind/functional_principles_proofs.ml" 493 14311 14318 "plugins/funind/functional_principles_proofs.ml" 493 14311 14334
)
"plugins/funind/functional_principles_proofs.ml" 509 14727 14732 "plugins/funind/functional_principles_proofs.ml" 509 14727 14748
type(
  Names.identifier ->
  Term.rel_context ->
  Term.constr * Term.constr * Term.constr -> Proof_type.tactic
)
ident(
  int_ref prove_trivial_eq "plugins/funind/functional_principles_proofs.ml" 167 3624 3628 "plugins/funind/functional_principles_proofs.ml" 167 3624 3644
)
"plugins/funind/functional_principles_proofs.ml" 509 14727 14749 "plugins/funind/functional_principles_proofs.ml" 509 14727 14755
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 509 14727 14756 "plugins/funind/functional_principles_proofs.ml" 509 14727 14763
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 509 14727 14765 "plugins/funind/functional_principles_proofs.ml" 509 14727 14773
type(
  Term.constr -> Term.constr array -> Term.constr * Term.constr * Term.constr
)
ident(
  int_ref get_args "plugins/funind/functional_principles_proofs.ml" 497 14423 14430 "plugins/funind/functional_principles_proofs.ml" 497 14423 14438
)
"plugins/funind/functional_principles_proofs.ml" 509 14727 14774 "plugins/funind/functional_principles_proofs.ml" 509 14727 14776
type(
  Term.constr
)
ident(
  int_ref hd "plugins/funind/functional_principles_proofs.ml" 496 14391 14398 "plugins/funind/functional_principles_proofs.ml" 496 14391 14400
)
"plugins/funind/functional_principles_proofs.ml" 509 14727 14777 "plugins/funind/functional_principles_proofs.ml" 509 14727 14781
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 496 14391 14401 "plugins/funind/functional_principles_proofs.ml" 496 14391 14405
)
"plugins/funind/functional_principles_proofs.ml" 509 14727 14764 "plugins/funind/functional_principles_proofs.ml" 509 14727 14782
call(
  stack
)
type(
  Term.constr * Term.constr * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 508 14687 14689 "plugins/funind/functional_principles_proofs.ml" 509 14727 14784
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 504 14609 14616 "plugins/funind/functional_principles_proofs.ml" 509 14727 14784
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 510 14786 14793 "plugins/funind/functional_principles_proofs.ml" 510 14786 14802
type(
  Term.rel_context -> Term.types -> Proof_type.tactic
)
ident(
  int_ref scan_type "plugins/funind/functional_principles_proofs.ml" 389 11051 11061 "plugins/funind/functional_principles_proofs.ml" 389 11051 11070
)
"plugins/funind/functional_principles_proofs.ml" 510 14786 14803 "plugins/funind/functional_principles_proofs.ml" 510 14786 14810
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 510 14786 14811 "plugins/funind/functional_principles_proofs.ml" 510 14786 14820
type(
  Term.types
)
ident(
  int_ref popped_t' "plugins/funind/functional_principles_proofs.ml" 492 14282 14289 "plugins/funind/functional_principles_proofs.ml" 492 14282 14298
)
"plugins/funind/functional_principles_proofs.ml" 510 14786 14793 "plugins/funind/functional_principles_proofs.ml" 510 14786 14820
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 503 14602 14607 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 502 14587 14590 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 497 14423 14426 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 496 14391 14394 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 493 14311 14314 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 492 14282 14285 "plugins/funind/functional_principles_proofs.ml" 511 14821 14827
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14863 "plugins/funind/functional_principles_proofs.ml" 515 14852 14874
type(
  Term.rel_context
)
ident(
  def new_context "plugins/funind/functional_principles_proofs.ml" 516 14935 14942 "plugins/funind/functional_principles_proofs.ml" 518 14956 14988
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14875 "plugins/funind/functional_principles_proofs.ml" 515 14852 14881
type(
  Term.types
)
ident(
  def new_t' "plugins/funind/functional_principles_proofs.ml" 516 14935 14942 "plugins/funind/functional_principles_proofs.ml" 518 14956 14988
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14882 "plugins/funind/functional_principles_proofs.ml" 515 14852 14885
type(
  Proof_type.tactic
)
ident(
  def tac "plugins/funind/functional_principles_proofs.ml" 516 14935 14942 "plugins/funind/functional_principles_proofs.ml" 518 14956 14988
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14863 "plugins/funind/functional_principles_proofs.ml" 515 14852 14885
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14888 "plugins/funind/functional_principles_proofs.ml" 515 14852 14897
type(
  Environ.env ->
  Evd.evar_map ->
  Names.identifier ->
  Term.rel_context ->
  Names.name ->
  Term.types ->
  Term.types -> Term.rel_context * Term.types * Proof_type.tactic
)
ident(
  int_ref change_eq "plugins/funind/functional_principles_proofs.ml" 209 4893 4897 "plugins/funind/functional_principles_proofs.ml" 209 4893 4906
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14898 "plugins/funind/functional_principles_proofs.ml" 515 14852 14901
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 385 10859 10908 "plugins/funind/functional_principles_proofs.ml" 385 10859 10911
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14902 "plugins/funind/functional_principles_proofs.ml" 515 14852 14907
type(
  Evd.evar_map
)
ident(
  int_ref sigma "plugins/funind/functional_principles_proofs.ml" 385 10859 10912 "plugins/funind/functional_principles_proofs.ml" 385 10859 10917
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14908 "plugins/funind/functional_principles_proofs.ml" 515 14852 14914
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14915 "plugins/funind/functional_principles_proofs.ml" 515 14852 14922
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14923 "plugins/funind/functional_principles_proofs.ml" 515 14852 14924
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_proofs.ml" 408 11617 11623 "plugins/funind/functional_principles_proofs.ml" 408 11617 11624
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14925 "plugins/funind/functional_principles_proofs.ml" 515 14852 14928
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14929 "plugins/funind/functional_principles_proofs.ml" 515 14852 14931
type(
  Term.types
)
ident(
  int_ref t' "plugins/funind/functional_principles_proofs.ml" 408 11617 11629 "plugins/funind/functional_principles_proofs.ml" 408 11617 11631
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14888 "plugins/funind/functional_principles_proofs.ml" 515 14852 14931
call(
  stack
)
type(
  Term.rel_context * Term.types * Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 516 14935 14942 "plugins/funind/functional_principles_proofs.ml" 516 14935 14949
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 517 14950 14952 "plugins/funind/functional_principles_proofs.ml" 517 14950 14955
type(
  Proof_type.tactic
)
ident(
  int_ref tac "plugins/funind/functional_principles_proofs.ml" 515 14852 14882 "plugins/funind/functional_principles_proofs.ml" 515 14852 14885
)
"plugins/funind/functional_principles_proofs.ml" 518 14956 14959 "plugins/funind/functional_principles_proofs.ml" 518 14956 14968
type(
  Term.rel_context -> Term.types -> Proof_type.tactic
)
ident(
  int_ref scan_type "plugins/funind/functional_principles_proofs.ml" 389 11051 11061 "plugins/funind/functional_principles_proofs.ml" 389 11051 11070
)
"plugins/funind/functional_principles_proofs.ml" 518 14956 14969 "plugins/funind/functional_principles_proofs.ml" 518 14956 14980
type(
  Term.rel_context
)
ident(
  int_ref new_context "plugins/funind/functional_principles_proofs.ml" 515 14852 14863 "plugins/funind/functional_principles_proofs.ml" 515 14852 14874
)
"plugins/funind/functional_principles_proofs.ml" 518 14956 14981 "plugins/funind/functional_principles_proofs.ml" 518 14956 14987
type(
  Term.types
)
ident(
  int_ref new_t' "plugins/funind/functional_principles_proofs.ml" 515 14852 14875 "plugins/funind/functional_principles_proofs.ml" 515 14852 14881
)
"plugins/funind/functional_principles_proofs.ml" 518 14956 14958 "plugins/funind/functional_principles_proofs.ml" 518 14956 14988
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 516 14935 14942 "plugins/funind/functional_principles_proofs.ml" 518 14956 14988
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 515 14852 14859 "plugins/funind/functional_principles_proofs.ml" 518 14956 14988
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 519 14989 15007 "plugins/funind/functional_principles_proofs.ml" 519 14989 15017
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 519 14989 14999 "plugins/funind/functional_principles_proofs.ml" 519 14989 15017
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 521 15093 15100 "plugins/funind/functional_principles_proofs.ml" 521 15093 15109
type(
  Term.rel_context -> Term.types -> Proof_type.tactic
)
ident(
  int_ref scan_type "plugins/funind/functional_principles_proofs.ml" 389 11051 11061 "plugins/funind/functional_principles_proofs.ml" 389 11051 11070
)
"plugins/funind/functional_principles_proofs.ml" 521 15093 15112 "plugins/funind/functional_principles_proofs.ml" 521 15093 15113
type(
  Names.name
)
ident(
  int_ref x "plugins/funind/functional_principles_proofs.ml" 408 11617 11623 "plugins/funind/functional_principles_proofs.ml" 408 11617 11624
)
"plugins/funind/functional_principles_proofs.ml" 521 15093 15114 "plugins/funind/functional_principles_proofs.ml" 521 15093 15118
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 521 15093 15119 "plugins/funind/functional_principles_proofs.ml" 521 15093 15122
type(
  Term.types
)
ident(
  int_ref t_x "plugins/funind/functional_principles_proofs.ml" 408 11617 11625 "plugins/funind/functional_principles_proofs.ml" 408 11617 11628
)
"plugins/funind/functional_principles_proofs.ml" 521 15093 15111 "plugins/funind/functional_principles_proofs.ml" 521 15093 15123
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 521 15093 15125 "plugins/funind/functional_principles_proofs.ml" 521 15093 15132
type(
  Term.rel_context
)
ident(
  int_ref context "plugins/funind/functional_principles_proofs.ml" 389 11051 11072 "plugins/funind/functional_principles_proofs.ml" 389 11051 11079
)
"plugins/funind/functional_principles_proofs.ml" 521 15093 15110 "plugins/funind/functional_principles_proofs.ml" 521 15093 15133
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 521 15093 15134 "plugins/funind/functional_principles_proofs.ml" 521 15093 15136
type(
  Term.types
)
ident(
  int_ref t' "plugins/funind/functional_principles_proofs.ml" 408 11617 11629 "plugins/funind/functional_principles_proofs.ml" 408 11617 11631
)
"plugins/funind/functional_principles_proofs.ml" 521 15093 15100 "plugins/funind/functional_principles_proofs.ml" 521 15093 15136
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 513 14834 14837 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 490 14200 14206 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 459 13307 13313 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 458 13225 13231 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 451 12985 12991 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 410 11729 11730 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 409 11659 11660 "plugins/funind/functional_principles_proofs.ml" 522 15137 15143
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 407 11605 11611 "plugins/funind/functional_principles_proofs.ml" 523 15144 15153
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 525 15163 15169 "plugins/funind/functional_principles_proofs.ml" 525 15163 15177
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/functional_principles_proofs.ml" 405 11565 11574 "plugins/funind/functional_principles_proofs.ml" 525 15163 15177
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 390 11103 11107 "plugins/funind/functional_principles_proofs.ml" 525 15163 15177
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15193 "plugins/funind/functional_principles_proofs.ml" 528 15189 15202
type(
  Term.rel_context -> Term.types -> Proof_type.tactic
)
ident(
  int_ref scan_type "plugins/funind/functional_principles_proofs.ml" 389 11051 11061 "plugins/funind/functional_principles_proofs.ml" 389 11051 11070
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15203 "plugins/funind/functional_principles_proofs.ml" 528 15189 15205
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15207 "plugins/funind/functional_principles_proofs.ml" 528 15189 15221
type(
  Environ.env -> Evd.evar_map -> Term.constr -> Term.types
)
ident(
  ext_ref Typing.type_of
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15222 "plugins/funind/functional_principles_proofs.ml" 528 15189 15225
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 385 10859 10908 "plugins/funind/functional_principles_proofs.ml" 385 10859 10911
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15226 "plugins/funind/functional_principles_proofs.ml" 528 15189 15231
type(
  Evd.evar_map
)
ident(
  int_ref sigma "plugins/funind/functional_principles_proofs.ml" 385 10859 10912 "plugins/funind/functional_principles_proofs.ml" 385 10859 10917
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15233 "plugins/funind/functional_principles_proofs.ml" 528 15189 15238
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15239 "plugins/funind/functional_principles_proofs.ml" 528 15189 15245
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15232 "plugins/funind/functional_principles_proofs.ml" 528 15189 15246
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15206 "plugins/funind/functional_principles_proofs.ml" 528 15189 15247
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15193 "plugins/funind/functional_principles_proofs.ml" 528 15189 15247
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15250 "plugins/funind/functional_principles_proofs.ml" 528 15189 15256
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15249 "plugins/funind/functional_principles_proofs.ml" 528 15189 15257
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 528 15189 15193 "plugins/funind/functional_principles_proofs.ml" 528 15189 15257
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 529 15258 15265 "plugins/funind/functional_principles_proofs.ml" 529 15258 15273
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 530 15277 15281 "plugins/funind/functional_principles_proofs.ml" 530 15277 15285
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref thin "plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
)
"plugins/funind/functional_principles_proofs.ml" 530 15277 15287 "plugins/funind/functional_principles_proofs.ml" 530 15277 15293
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 385 10859 10901 "plugins/funind/functional_principles_proofs.ml" 385 10859 10907
)
"plugins/funind/functional_principles_proofs.ml" 530 15277 15286 "plugins/funind/functional_principles_proofs.ml" 530 15277 15294
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 530 15277 15281 "plugins/funind/functional_principles_proofs.ml" 530 15277 15294
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 530 15277 15295 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 530 15277 15281 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 527 15183 15185 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 389 11051 11053 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 388 11012 11014 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 387 10967 10969 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 386 10920 10922 "plugins/funind/functional_principles_proofs.ml" 530 15277 15297
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 533 15300 15304 "plugins/funind/functional_principles_proofs.ml" 533 15300 15323
type(
  pte_info Names.Idmap.t ->
  ('a dynamic_info -> Proof_type.tactic) ->
  'a dynamic_info ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def clean_goal_with_heq "plugins/funind/functional_principles_proofs.ml" 562 15950 15950 --
)
"plugins/funind/functional_principles_proofs.ml" 533 15300 15324 "plugins/funind/functional_principles_proofs.ml" 533 15300 15334
type(
  pte_info Names.Idmap.t
)
ident(
  def ptes_infos "plugins/funind/functional_principles_proofs.ml" 533 15300 15335 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
)
"plugins/funind/functional_principles_proofs.ml" 533 15300 15335 "plugins/funind/functional_principles_proofs.ml" 533 15300 15347
type(
  'a dynamic_info -> Proof_type.tactic
)
ident(
  def continue_tac "plugins/funind/functional_principles_proofs.ml" 533 15300 15348 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
)
"plugins/funind/functional_principles_proofs.ml" 533 15300 15348 "plugins/funind/functional_principles_proofs.ml" 533 15300 15357
type(
  'a dynamic_info
)
ident(
  def dyn_infos "plugins/funind/functional_principles_proofs.ml" 534 15361 15363 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
)
"plugins/funind/functional_principles_proofs.ml" 534 15361 15367 "plugins/funind/functional_principles_proofs.ml" 534 15361 15368
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 535 15372 15376 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
)
"plugins/funind/functional_principles_proofs.ml" 535 15372 15380 "plugins/funind/functional_principles_proofs.ml" 535 15372 15383
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 535 15372 15386 "plugins/funind/functional_principles_proofs.ml" 535 15372 15392
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/functional_principles_proofs.ml" 535 15372 15393 "plugins/funind/functional_principles_proofs.ml" 535 15372 15394
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 534 15361 15367 "plugins/funind/functional_principles_proofs.ml" 534 15361 15368
)
"plugins/funind/functional_principles_proofs.ml" 535 15372 15386 "plugins/funind/functional_principles_proofs.ml" 535 15372 15394
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 536 15395 15403 "plugins/funind/functional_principles_proofs.ml" 536 15395 15408
type(
  Evd.evar_map
)
"plugins/funind/functional_principles_proofs.ml" 536 15395 15411 "plugins/funind/functional_principles_proofs.ml" 536 15395 15418
type(
  Proof_type.goal Tacmach.sigma -> Evd.evar_map
)
ident(
  ext_ref Tacmach.project
)
"plugins/funind/functional_principles_proofs.ml" 536 15395 15419 "plugins/funind/functional_principles_proofs.ml" 536 15395 15420
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 534 15361 15367 "plugins/funind/functional_principles_proofs.ml" 534 15361 15368
)
"plugins/funind/functional_principles_proofs.ml" 536 15395 15411 "plugins/funind/functional_principles_proofs.ml" 536 15395 15420
call(
  stack
)
type(
  Evd.evar_map
)
"plugins/funind/functional_principles_proofs.ml" 538 15428 15436 "plugins/funind/functional_principles_proofs.ml" 538 15428 15439
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 538 15428 15440 "plugins/funind/functional_principles_proofs.ml" 538 15428 15448
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 538 15428 15436 "plugins/funind/functional_principles_proofs.ml" 538 15428 15448
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 539 15451 15457 "plugins/funind/functional_principles_proofs.ml" 539 15451 15471
type(
  (Proof_type.tactic * Names.identifier list ->
   Names.identifier -> Proof_type.tactic * Names.identifier list) ->
  Proof_type.tactic * Names.identifier list ->
  Names.identifier list -> Proof_type.tactic * Names.identifier list
)
ident(
  ext_ref List.fold_left
)
"plugins/funind/functional_principles_proofs.ml" 540 15474 15480 "plugins/funind/functional_principles_proofs.ml" 540 15474 15488
type(
  Proof_type.tactic
)
ident(
  def hyps_tac "plugins/funind/functional_principles_proofs.ml" 540 15474 15499 "plugins/funind/functional_principles_proofs.ml" 544 15610 15656
)
"plugins/funind/functional_principles_proofs.ml" 540 15474 15489 "plugins/funind/functional_principles_proofs.ml" 540 15474 15497
type(
  Names.identifier list
)
ident(
  def new_hyps "plugins/funind/functional_principles_proofs.ml" 540 15474 15499 "plugins/funind/functional_principles_proofs.ml" 544 15610 15656
)
"plugins/funind/functional_principles_proofs.ml" 540 15474 15479 "plugins/funind/functional_principles_proofs.ml" 540 15474 15498
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 540 15474 15499 "plugins/funind/functional_principles_proofs.ml" 540 15474 15505
type(
  Names.identifier
)
ident(
  def hyp_id "plugins/funind/functional_principles_proofs.ml" 541 15509 15512 "plugins/funind/functional_principles_proofs.ml" 544 15610 15656
)
"plugins/funind/functional_principles_proofs.ml" 541 15509 15516 "plugins/funind/functional_principles_proofs.ml" 541 15509 15523
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 541 15509 15524 "plugins/funind/functional_principles_proofs.ml" 541 15509 15531
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 541 15509 15516 "plugins/funind/functional_principles_proofs.ml" 541 15509 15531
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 542 15534 15539 "plugins/funind/functional_principles_proofs.ml" 542 15534 15557
type(
  pte_info Names.Idmap.t ->
  Names.identifier list ->
  Names.identifier ->
  Environ.env -> Evd.evar_map -> Proof_type.tactic * Names.identifier list
)
ident(
  int_ref clean_hyp_with_heq "plugins/funind/functional_principles_proofs.ml" 385 10859 10863 "plugins/funind/functional_principles_proofs.ml" 385 10859 10881
)
"plugins/funind/functional_principles_proofs.ml" 542 15534 15558 "plugins/funind/functional_principles_proofs.ml" 542 15534 15568
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref ptes_infos "plugins/funind/functional_principles_proofs.ml" 533 15300 15324 "plugins/funind/functional_principles_proofs.ml" 533 15300 15334
)
"plugins/funind/functional_principles_proofs.ml" 542 15534 15569 "plugins/funind/functional_principles_proofs.ml" 542 15534 15578
type(
  'a dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 533 15300 15348 "plugins/funind/functional_principles_proofs.ml" 533 15300 15357
)
"plugins/funind/functional_principles_proofs.ml" 542 15534 15569 "plugins/funind/functional_principles_proofs.ml" 542 15534 15586
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 542 15534 15587 "plugins/funind/functional_principles_proofs.ml" 542 15534 15593
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 540 15474 15499 "plugins/funind/functional_principles_proofs.ml" 540 15474 15505
)
"plugins/funind/functional_principles_proofs.ml" 542 15534 15594 "plugins/funind/functional_principles_proofs.ml" 542 15534 15597
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 535 15372 15380 "plugins/funind/functional_principles_proofs.ml" 535 15372 15383
)
"plugins/funind/functional_principles_proofs.ml" 542 15534 15598 "plugins/funind/functional_principles_proofs.ml" 542 15534 15603
type(
  Evd.evar_map
)
ident(
  int_ref sigma "plugins/funind/functional_principles_proofs.ml" 536 15395 15403 "plugins/funind/functional_principles_proofs.ml" 536 15395 15408
)
"plugins/funind/functional_principles_proofs.ml" 542 15534 15539 "plugins/funind/functional_principles_proofs.ml" 542 15534 15603
call(
  stack
)
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 544 15610 15614 "plugins/funind/functional_principles_proofs.ml" 544 15610 15621
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 544 15610 15622 "plugins/funind/functional_principles_proofs.ml" 544 15610 15629
type(
  Proof_type.tactic
)
ident(
  int_ref hyp_tac "plugins/funind/functional_principles_proofs.ml" 541 15509 15516 "plugins/funind/functional_principles_proofs.ml" 541 15509 15523
)
"plugins/funind/functional_principles_proofs.ml" 544 15610 15630 "plugins/funind/functional_principles_proofs.ml" 544 15610 15638
type(
  Proof_type.tactic
)
ident(
  int_ref hyps_tac "plugins/funind/functional_principles_proofs.ml" 540 15474 15480 "plugins/funind/functional_principles_proofs.ml" 540 15474 15488
)
"plugins/funind/functional_principles_proofs.ml" 544 15610 15613 "plugins/funind/functional_principles_proofs.ml" 544 15610 15639
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 544 15610 15640 "plugins/funind/functional_principles_proofs.ml" 544 15610 15647
type(
  Names.identifier list
)
ident(
  int_ref new_hyp "plugins/funind/functional_principles_proofs.ml" 541 15509 15524 "plugins/funind/functional_principles_proofs.ml" 541 15509 15531
)
"plugins/funind/functional_principles_proofs.ml" 544 15610 15647 "plugins/funind/functional_principles_proofs.ml" 544 15610 15648
type(
  Names.identifier list -> Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 544 15610 15648 "plugins/funind/functional_principles_proofs.ml" 544 15610 15656
type(
  Names.identifier list
)
ident(
  int_ref new_hyps "plugins/funind/functional_principles_proofs.ml" 540 15474 15489 "plugins/funind/functional_principles_proofs.ml" 540 15474 15497
)
"plugins/funind/functional_principles_proofs.ml" 544 15610 15640 "plugins/funind/functional_principles_proofs.ml" 544 15610 15656
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 544 15610 15613 "plugins/funind/functional_principles_proofs.ml" 544 15610 15656
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 541 15509 15512 "plugins/funind/functional_principles_proofs.ml" 544 15610 15656
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 539 15451 15472 "plugins/funind/functional_principles_proofs.ml" 545 15657 15664
type(
  Proof_type.tactic * Names.identifier list ->
  Names.identifier -> Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 546 15665 15667 "plugins/funind/functional_principles_proofs.ml" 546 15665 15675
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/functional_principles_proofs.ml" 546 15665 15676 "plugins/funind/functional_principles_proofs.ml" 546 15665 15678
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 546 15665 15666 "plugins/funind/functional_principles_proofs.ml" 546 15665 15679
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 547 15680 15681 "plugins/funind/functional_principles_proofs.ml" 547 15680 15690
type(
  'a dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 533 15300 15348 "plugins/funind/functional_principles_proofs.ml" 533 15300 15357
)
"plugins/funind/functional_principles_proofs.ml" 547 15680 15681 "plugins/funind/functional_principles_proofs.ml" 547 15680 15699
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 539 15451 15457 "plugins/funind/functional_principles_proofs.ml" 547 15680 15699
call(
  stack
)
type(
  Proof_type.tactic * Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 549 15707 15715 "plugins/funind/functional_principles_proofs.ml" 549 15707 15724
type(
  'a dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 550 15727 15735 "plugins/funind/functional_principles_proofs.ml" 550 15727 15744
type(
  'a dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 533 15300 15348 "plugins/funind/functional_principles_proofs.ml" 533 15300 15357
)
"plugins/funind/functional_principles_proofs.ml" 551 15750 15764 "plugins/funind/functional_principles_proofs.ml" 551 15750 15772
type(
  Names.identifier list
)
ident(
  int_ref new_hyps "plugins/funind/functional_principles_proofs.ml" 538 15428 15440 "plugins/funind/functional_principles_proofs.ml" 538 15428 15448
)
"plugins/funind/functional_principles_proofs.ml" 552 15774 15792 "plugins/funind/functional_principles_proofs.ml" 552 15774 15803
type(
  Names.identifier list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 552 15774 15804 "plugins/funind/functional_principles_proofs.ml" 552 15774 15812
type(
  Names.identifier list
)
ident(
  int_ref new_hyps "plugins/funind/functional_principles_proofs.ml" 538 15428 15440 "plugins/funind/functional_principles_proofs.ml" 538 15428 15448
)
"plugins/funind/functional_principles_proofs.ml" 552 15774 15792 "plugins/funind/functional_principles_proofs.ml" 552 15774 15812
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 550 15727 15733 "plugins/funind/functional_principles_proofs.ml" 553 15813 15820
type(
  'a dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 555 15828 15832 "plugins/funind/functional_principles_proofs.ml" 555 15828 15843
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 557 15852 15853 "plugins/funind/functional_principles_proofs.ml" 557 15852 15856
type(
  Proof_type.tactic
)
ident(
  int_ref tac "plugins/funind/functional_principles_proofs.ml" 538 15428 15436 "plugins/funind/functional_principles_proofs.ml" 538 15428 15439
)
"plugins/funind/functional_principles_proofs.ml" 558 15859 15909 "plugins/funind/functional_principles_proofs.ml" 558 15859 15921
type(
  'a dynamic_info -> Proof_type.tactic
)
ident(
  int_ref continue_tac "plugins/funind/functional_principles_proofs.ml" 533 15300 15335 "plugins/funind/functional_principles_proofs.ml" 533 15300 15347
)
"plugins/funind/functional_principles_proofs.ml" 558 15859 15922 "plugins/funind/functional_principles_proofs.ml" 558 15859 15931
type(
  'a dynamic_info
)
ident(
  int_ref new_infos "plugins/funind/functional_principles_proofs.ml" 549 15707 15715 "plugins/funind/functional_principles_proofs.ml" 549 15707 15724
)
"plugins/funind/functional_principles_proofs.ml" 558 15859 15908 "plugins/funind/functional_principles_proofs.ml" 558 15859 15932
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 556 15844 15850 "plugins/funind/functional_principles_proofs.ml" 559 15933 15940
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 560 15941 15947 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 534 15361 15367 "plugins/funind/functional_principles_proofs.ml" 534 15361 15368
)
"plugins/funind/functional_principles_proofs.ml" 555 15828 15832 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 549 15707 15711 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 538 15428 15432 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 535 15372 15376 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 534 15361 15363 "plugins/funind/functional_principles_proofs.ml" 560 15941 15948
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 562 15950 15954 "plugins/funind/functional_principles_proofs.ml" 562 15950 15960
type(
  Names.identifier
)
ident(
  def heq_id "plugins/funind/functional_principles_proofs.ml" 564 15983 15983 --
)
"plugins/funind/functional_principles_proofs.ml" 562 15950 15963 "plugins/funind/functional_principles_proofs.ml" 562 15950 15975
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/functional_principles_proofs.ml" 562 15950 15976 "plugins/funind/functional_principles_proofs.ml" 562 15950 15981
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 562 15950 15963 "plugins/funind/functional_principles_proofs.ml" 562 15950 15981
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 564 15983 15987 "plugins/funind/functional_principles_proofs.ml" 564 15983 16001
type(
  pte_info Names.Idmap.t ->
  int ->
  (Term.constr dynamic_info -> Proof_type.tactic) ->
  Term.constr ->
  Term.constr dynamic_info ->
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def treat_new_case "plugins/funind/functional_principles_proofs.ml" 608 17382 17382 --
)
"plugins/funind/functional_principles_proofs.ml" 564 15983 16002 "plugins/funind/functional_principles_proofs.ml" 564 15983 16012
type(
  pte_info Names.Idmap.t
)
ident(
  def ptes_infos "plugins/funind/functional_principles_proofs.ml" 564 15983 16013 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
)
"plugins/funind/functional_principles_proofs.ml" 564 15983 16013 "plugins/funind/functional_principles_proofs.ml" 564 15983 16020
type(
  int
)
ident(
  def nb_prod "plugins/funind/functional_principles_proofs.ml" 564 15983 16021 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
)
"plugins/funind/functional_principles_proofs.ml" 564 15983 16021 "plugins/funind/functional_principles_proofs.ml" 564 15983 16033
type(
  Term.constr dynamic_info -> Proof_type.tactic
)
ident(
  def continue_tac "plugins/funind/functional_principles_proofs.ml" 564 15983 16034 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
)
"plugins/funind/functional_principles_proofs.ml" 564 15983 16034 "plugins/funind/functional_principles_proofs.ml" 564 15983 16038
type(
  Term.constr
)
ident(
  def term "plugins/funind/functional_principles_proofs.ml" 564 15983 16039 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
)
"plugins/funind/functional_principles_proofs.ml" 564 15983 16039 "plugins/funind/functional_principles_proofs.ml" 564 15983 16048
type(
  Term.constr dynamic_info
)
ident(
  def dyn_infos "plugins/funind/functional_principles_proofs.ml" 565 16051 16053 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
)
"plugins/funind/functional_principles_proofs.ml" 565 16051 16057 "plugins/funind/functional_principles_proofs.ml" 565 16051 16058
type(
  Proof_type.goal Evd.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 566 16062 16066 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16070 "plugins/funind/functional_principles_proofs.ml" 566 16062 16084
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16087 "plugins/funind/functional_principles_proofs.ml" 566 16062 16094
type(
  int
)
ident(
  int_ref nb_prod "plugins/funind/functional_principles_proofs.ml" 564 15983 16013 "plugins/funind/functional_principles_proofs.ml" 564 15983 16020
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16095 "plugins/funind/functional_principles_proofs.ml" 566 16062 16096
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16097 "plugins/funind/functional_principles_proofs.ml" 566 16062 16098
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16087 "plugins/funind/functional_principles_proofs.ml" 566 16062 16098
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16099 "plugins/funind/functional_principles_proofs.ml" 566 16062 16100
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16101 "plugins/funind/functional_principles_proofs.ml" 566 16062 16110
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 564 15983 16039 "plugins/funind/functional_principles_proofs.ml" 564 15983 16048
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16101 "plugins/funind/functional_principles_proofs.ml" 566 16062 16122
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16087 "plugins/funind/functional_principles_proofs.ml" 566 16062 16122
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 567 16126 16130 "plugins/funind/functional_principles_proofs.ml" 567 16126 16141
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 570 16190 16191 "plugins/funind/functional_principles_proofs.ml" 570 16190 16196
type(
  int -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclDO
)
"plugins/funind/functional_principles_proofs.ml" 570 16190 16197 "plugins/funind/functional_principles_proofs.ml" 570 16190 16211
type(
  int
)
ident(
  int_ref nb_first_intro "plugins/funind/functional_principles_proofs.ml" 566 16062 16070 "plugins/funind/functional_principles_proofs.ml" 566 16062 16084
)
"plugins/funind/functional_principles_proofs.ml" 570 16190 16213 "plugins/funind/functional_principles_proofs.ml" 570 16190 16227
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tactics.intro_avoiding
)
"plugins/funind/functional_principles_proofs.ml" 570 16190 16228 "plugins/funind/functional_principles_proofs.ml" 570 16190 16237
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 564 15983 16039 "plugins/funind/functional_principles_proofs.ml" 564 15983 16048
)
"plugins/funind/functional_principles_proofs.ml" 570 16190 16228 "plugins/funind/functional_principles_proofs.ml" 570 16190 16246
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 570 16190 16212 "plugins/funind/functional_principles_proofs.ml" 570 16190 16247
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 570 16190 16191 "plugins/funind/functional_principles_proofs.ml" 570 16190 16247
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 572 16281 16282 "plugins/funind/functional_principles_proofs.ml" 572 16281 16293
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  ext_ref Tactics.intro_using
)
"plugins/funind/functional_principles_proofs.ml" 572 16281 16294 "plugins/funind/functional_principles_proofs.ml" 572 16281 16300
type(
  Names.identifier
)
ident(
  int_ref heq_id "plugins/funind/functional_principles_proofs.ml" 562 15950 15954 "plugins/funind/functional_principles_proofs.ml" 562 15950 15960
)
"plugins/funind/functional_principles_proofs.ml" 572 16281 16282 "plugins/funind/functional_principles_proofs.ml" 572 16281 16300
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 573 16302 16303 "plugins/funind/functional_principles_proofs.ml" 573 16302 16314
type(
  (Names.identifier -> Proof_type.tactic) -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.onLastHypId
)
"plugins/funind/functional_principles_proofs.ml" 573 16302 16320 "plugins/funind/functional_principles_proofs.ml" 573 16302 16326
type(
  Names.identifier
)
ident(
  def heq_id "plugins/funind/functional_principles_proofs.ml" 573 16302 16330 "plugins/funind/functional_principles_proofs.ml" 603 17356 17364
)
"plugins/funind/functional_principles_proofs.ml" 573 16302 16330 "plugins/funind/functional_principles_proofs.ml" 573 16302 16341
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 575 16375 16376 "plugins/funind/functional_principles_proofs.ml" 575 16375 16382
type(
  (Names.identifier -> Proof_type.tactic) ->
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/functional_principles_proofs.ml" 575 16375 16383 "plugins/funind/functional_principles_proofs.ml" 575 16375 16404
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  ext_ref Tacmach.introduction_no_check
)
"plugins/funind/functional_principles_proofs.ml" 575 16375 16405 "plugins/funind/functional_principles_proofs.ml" 575 16375 16414
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 564 15983 16039 "plugins/funind/functional_principles_proofs.ml" 564 15983 16048
)
"plugins/funind/functional_principles_proofs.ml" 575 16375 16405 "plugins/funind/functional_principles_proofs.ml" 575 16375 16423
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 575 16375 16376 "plugins/funind/functional_principles_proofs.ml" 575 16375 16423
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 576 16425 16470 "plugins/funind/functional_principles_proofs.ml" 576 16425 16472
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g' "plugins/funind/functional_principles_proofs.ml" 578 16526 16530 "plugins/funind/functional_principles_proofs.ml" 602 17296 17355
)
"plugins/funind/functional_principles_proofs.ml" 578 16526 16534 "plugins/funind/functional_principles_proofs.ml" 578 16526 16551
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 578 16526 16554 "plugins/funind/functional_principles_proofs.ml" 578 16526 16564
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/functional_principles_proofs.ml" 578 16526 16565 "plugins/funind/functional_principles_proofs.ml" 578 16526 16567
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 576 16425 16470 "plugins/funind/functional_principles_proofs.ml" 576 16425 16472
)
"plugins/funind/functional_principles_proofs.ml" 578 16526 16569 "plugins/funind/functional_principles_proofs.ml" 578 16526 16574
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 578 16526 16575 "plugins/funind/functional_principles_proofs.ml" 578 16526 16581
type(
  Names.identifier
)
ident(
  int_ref heq_id "plugins/funind/functional_principles_proofs.ml" 573 16302 16320 "plugins/funind/functional_principles_proofs.ml" 573 16302 16326
)
"plugins/funind/functional_principles_proofs.ml" 578 16526 16568 "plugins/funind/functional_principles_proofs.ml" 578 16526 16582
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 578 16526 16554 "plugins/funind/functional_principles_proofs.ml" 578 16526 16582
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 580 16630 16638 "plugins/funind/functional_principles_proofs.ml" 580 16630 16652
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 581 16655 16667 "plugins/funind/functional_principles_proofs.ml" 581 16655 16679
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 581 16655 16680 "plugins/funind/functional_principles_proofs.ml" 581 16655 16697
type(
  Term.types
)
ident(
  int_ref new_term_value_eq "plugins/funind/functional_principles_proofs.ml" 578 16526 16534 "plugins/funind/functional_principles_proofs.ml" 578 16526 16551
)
"plugins/funind/functional_principles_proofs.ml" 581 16655 16667 "plugins/funind/functional_principles_proofs.ml" 581 16655 16697
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 582 16703 16717 "plugins/funind/functional_principles_proofs.ml" 582 16703 16718
type(
  Term.constr
)
ident(
  def f "plugins/funind/functional_principles_proofs.ml" 582 16703 16739 "plugins/funind/functional_principles_proofs.ml" 582 16703 16744
)
"plugins/funind/functional_principles_proofs.ml" 582 16703 16722 "plugins/funind/functional_principles_proofs.ml" 582 16703 16723
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 582 16703 16724 "plugins/funind/functional_principles_proofs.ml" 582 16703 16725
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 582 16703 16726 "plugins/funind/functional_principles_proofs.ml" 582 16703 16731
type(
  Term.constr
)
ident(
  def args2 "plugins/funind/functional_principles_proofs.ml" 582 16703 16739 "plugins/funind/functional_principles_proofs.ml" 582 16703 16744
)
"plugins/funind/functional_principles_proofs.ml" 582 16703 16719 "plugins/funind/functional_principles_proofs.ml" 582 16703 16734
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 582 16703 16713 "plugins/funind/functional_principles_proofs.ml" 582 16703 16735
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 582 16703 16739 "plugins/funind/functional_principles_proofs.ml" 582 16703 16744
type(
  Term.constr
)
ident(
  int_ref args2 "plugins/funind/functional_principles_proofs.ml" 582 16703 16726 "plugins/funind/functional_principles_proofs.ml" 582 16703 16731
)
"plugins/funind/functional_principles_proofs.ml" 583 16745 16755 "plugins/funind/functional_principles_proofs.ml" 583 16745 16756
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16765 "plugins/funind/functional_principles_proofs.ml" 584 16760 16772
type(
  Pp.std_ppcmds -> unit
)
ident(
  int_ref observe "plugins/funind/functional_principles_proofs.ml" 22 247 251 "plugins/funind/functional_principles_proofs.ml" 22 247 258
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16774 "plugins/funind/functional_principles_proofs.ml" 584 16760 16777
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16778 "plugins/funind/functional_principles_proofs.ml" 584 16760 16812
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16774 "plugins/funind/functional_principles_proofs.ml" 584 16760 16812
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16813 "plugins/funind/functional_principles_proofs.ml" 584 16760 16815
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16816 "plugins/funind/functional_principles_proofs.ml" 584 16760 16822
type(
  Proof_type.goal Tacmach.sigma -> Pp.std_ppcmds
)
ident(
  ext_ref Tacmach.pr_gls
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16823 "plugins/funind/functional_principles_proofs.ml" 584 16760 16825
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 576 16425 16470 "plugins/funind/functional_principles_proofs.ml" 576 16425 16472
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16816 "plugins/funind/functional_principles_proofs.ml" 584 16760 16825
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16774 "plugins/funind/functional_principles_proofs.ml" 584 16760 16825
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16826 "plugins/funind/functional_principles_proofs.ml" 584 16760 16828
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16829 "plugins/funind/functional_principles_proofs.ml" 584 16760 16832
type(
  unit -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.fnl
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16833 "plugins/funind/functional_principles_proofs.ml" 584 16760 16835
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16829 "plugins/funind/functional_principles_proofs.ml" 584 16760 16835
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16774 "plugins/funind/functional_principles_proofs.ml" 584 16760 16835
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16836 "plugins/funind/functional_principles_proofs.ml" 584 16760 16838
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16839 "plugins/funind/functional_principles_proofs.ml" 584 16760 16842
type(
  string -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.str
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16843 "plugins/funind/functional_principles_proofs.ml" 584 16760 16856
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16839 "plugins/funind/functional_principles_proofs.ml" 584 16760 16856
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16774 "plugins/funind/functional_principles_proofs.ml" 584 16760 16856
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16857 "plugins/funind/functional_principles_proofs.ml" 584 16760 16859
type(
  Pp.std_ppcmds -> Pp.std_ppcmds -> Pp.std_ppcmds
)
ident(
  ext_ref Pp.( ++ )
)
"plugins/funind/functional_principles_proofs.ml" 585 16860 16869 "plugins/funind/functional_principles_proofs.ml" 585 16860 16883
type(
  Environ.env -> Term.types -> Pp.std_ppcmds
)
ident(
  ext_ref Printer.pr_lconstr_env
)
"plugins/funind/functional_principles_proofs.ml" 585 16860 16885 "plugins/funind/functional_principles_proofs.ml" 585 16860 16891
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/functional_principles_proofs.ml" 585 16860 16892 "plugins/funind/functional_principles_proofs.ml" 585 16860 16894
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 576 16425 16470 "plugins/funind/functional_principles_proofs.ml" 576 16425 16472
)
"plugins/funind/functional_principles_proofs.ml" 585 16860 16884 "plugins/funind/functional_principles_proofs.ml" 585 16860 16895
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 585 16860 16896 "plugins/funind/functional_principles_proofs.ml" 585 16860 16913
type(
  Term.types
)
ident(
  int_ref new_term_value_eq "plugins/funind/functional_principles_proofs.ml" 578 16526 16534 "plugins/funind/functional_principles_proofs.ml" 578 16526 16551
)
"plugins/funind/functional_principles_proofs.ml" 585 16860 16869 "plugins/funind/functional_principles_proofs.ml" 585 16860 16913
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16773 "plugins/funind/functional_principles_proofs.ml" 586 16914 16921
call(
  stack
)
type(
  Pp.std_ppcmds
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16765 "plugins/funind/functional_principles_proofs.ml" 586 16914 16921
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 587 16923 16928 "plugins/funind/functional_principles_proofs.ml" 587 16923 16935
type(
  string -> Term.constr
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_proofs.ml" 587 16923 16936 "plugins/funind/functional_principles_proofs.ml" 587 16923 16967
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 587 16923 16928 "plugins/funind/functional_principles_proofs.ml" 587 16923 16967
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 584 16760 16765 "plugins/funind/functional_principles_proofs.ml" 587 16923 16967
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 581 16655 16661 "plugins/funind/functional_principles_proofs.ml" 587 16923 16967
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 589 16975 16981 "plugins/funind/functional_principles_proofs.ml" 589 16975 16989
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 590 16992 16996 "plugins/funind/functional_principles_proofs.ml" 590 16992 17004
type(
  Names.name * Term.types * Term.constr -> Term.constr
)
ident(
  ext_ref Term.mkLambda
)
"plugins/funind/functional_principles_proofs.ml" 590 16992 17005 "plugins/funind/functional_principles_proofs.ml" 590 16992 17014
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 591 17016 17022 "plugins/funind/functional_principles_proofs.ml" 591 17016 17032
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/functional_principles_proofs.ml" 591 17016 17033 "plugins/funind/functional_principles_proofs.ml" 591 17016 17035
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 576 16425 16470 "plugins/funind/functional_principles_proofs.ml" 576 16425 16472
)
"plugins/funind/functional_principles_proofs.ml" 591 17016 17036 "plugins/funind/functional_principles_proofs.ml" 591 17016 17040
type(
  Term.constr
)
ident(
  int_ref term "plugins/funind/functional_principles_proofs.ml" 564 15983 16034 "plugins/funind/functional_principles_proofs.ml" 564 15983 16038
)
"plugins/funind/functional_principles_proofs.ml" 591 17016 17022 "plugins/funind/functional_principles_proofs.ml" 591 17016 17040
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 592 17042 17048 "plugins/funind/functional_principles_proofs.ml" 592 17042 17060
type(
  Term.constr -> Term.constr -> Term.constr -> Term.constr
)
ident(
  ext_ref Termops.replace_term
)
"plugins/funind/functional_principles_proofs.ml" 592 17042 17061 "plugins/funind/functional_principles_proofs.ml" 592 17042 17065
type(
  Term.constr
)
ident(
  int_ref term "plugins/funind/functional_principles_proofs.ml" 564 15983 16034 "plugins/funind/functional_principles_proofs.ml" 564 15983 16038
)
"plugins/funind/functional_principles_proofs.ml" 592 17042 17067 "plugins/funind/functional_principles_proofs.ml" 592 17042 17072
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_proofs.ml" 592 17042 17073 "plugins/funind/functional_principles_proofs.ml" 592 17042 17074
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 592 17042 17066 "plugins/funind/functional_principles_proofs.ml" 592 17042 17075
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 592 17042 17076 "plugins/funind/functional_principles_proofs.ml" 592 17042 17085
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 564 15983 16039 "plugins/funind/functional_principles_proofs.ml" 564 15983 16048
)
"plugins/funind/functional_principles_proofs.ml" 592 17042 17076 "plugins/funind/functional_principles_proofs.ml" 592 17042 17090
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 592 17042 17048 "plugins/funind/functional_principles_proofs.ml" 592 17042 17090
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 590 16992 17004 "plugins/funind/functional_principles_proofs.ml" 593 17091 17097
type(
  Names.name * Term.types * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 590 16992 16996 "plugins/funind/functional_principles_proofs.ml" 593 17091 17097
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17109 "plugins/funind/functional_principles_proofs.ml" 595 17103 17117
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17120 "plugins/funind/functional_principles_proofs.ml" 595 17103 17134
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.constr
)
ident(
  ext_ref Tacmach.pf_nf_betaiota
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17135 "plugins/funind/functional_principles_proofs.ml" 595 17103 17137
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 576 16425 16470 "plugins/funind/functional_principles_proofs.ml" 576 16425 16472
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17139 "plugins/funind/functional_principles_proofs.ml" 595 17103 17144
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17145 "plugins/funind/functional_principles_proofs.ml" 595 17103 17153
type(
  Term.constr
)
ident(
  int_ref fun_body "plugins/funind/functional_principles_proofs.ml" 589 16975 16981 "plugins/funind/functional_principles_proofs.ml" 589 16975 16989
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17157 "plugins/funind/functional_principles_proofs.ml" 595 17103 17171
type(
  Term.constr
)
ident(
  int_ref new_term_value "plugins/funind/functional_principles_proofs.ml" 580 16630 16638 "plugins/funind/functional_principles_proofs.ml" 580 16630 16652
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17154 "plugins/funind/functional_principles_proofs.ml" 595 17103 17174
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17144 "plugins/funind/functional_principles_proofs.ml" 595 17103 17175
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17138 "plugins/funind/functional_principles_proofs.ml" 595 17103 17176
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17120 "plugins/funind/functional_principles_proofs.ml" 595 17103 17176
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 596 17180 17186 "plugins/funind/functional_principles_proofs.ml" 596 17180 17195
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 597 17198 17203 "plugins/funind/functional_principles_proofs.ml" 597 17198 17212
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 564 15983 16039 "plugins/funind/functional_principles_proofs.ml" 564 15983 16048
)
"plugins/funind/functional_principles_proofs.ml" 598 17218 17232 "plugins/funind/functional_principles_proofs.ml" 598 17218 17240
type(
  Term.constr
)
ident(
  int_ref new_body "plugins/funind/functional_principles_proofs.ml" 595 17103 17109 "plugins/funind/functional_principles_proofs.ml" 595 17103 17117
)
"plugins/funind/functional_principles_proofs.ml" 599 17242 17259 "plugins/funind/functional_principles_proofs.ml" 599 17242 17265
type(
  Names.identifier
)
ident(
  int_ref heq_id "plugins/funind/functional_principles_proofs.ml" 573 16302 16320 "plugins/funind/functional_principles_proofs.ml" 573 16302 16326
)
"plugins/funind/functional_principles_proofs.ml" 599 17242 17267 "plugins/funind/functional_principles_proofs.ml" 599 17242 17276
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 564 15983 16039 "plugins/funind/functional_principles_proofs.ml" 564 15983 16048
)
"plugins/funind/functional_principles_proofs.ml" 599 17242 17267 "plugins/funind/functional_principles_proofs.ml" 599 17242 17284
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 599 17242 17259 "plugins/funind/functional_principles_proofs.ml" 599 17242 17284
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 597 17198 17202 "plugins/funind/functional_principles_proofs.ml" 600 17285 17290
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 602 17296 17298 "plugins/funind/functional_principles_proofs.ml" 602 17296 17317
type(
  pte_info Names.Idmap.t ->
  (Term.constr dynamic_info -> Proof_type.tactic) ->
  Term.constr dynamic_info ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref clean_goal_with_heq "plugins/funind/functional_principles_proofs.ml" 533 15300 15304 "plugins/funind/functional_principles_proofs.ml" 533 15300 15323
)
"plugins/funind/functional_principles_proofs.ml" 602 17296 17318 "plugins/funind/functional_principles_proofs.ml" 602 17296 17328
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref ptes_infos "plugins/funind/functional_principles_proofs.ml" 564 15983 16002 "plugins/funind/functional_principles_proofs.ml" 564 15983 16012
)
"plugins/funind/functional_principles_proofs.ml" 602 17296 17329 "plugins/funind/functional_principles_proofs.ml" 602 17296 17341
type(
  Term.constr dynamic_info -> Proof_type.tactic
)
ident(
  int_ref continue_tac "plugins/funind/functional_principles_proofs.ml" 564 15983 16021 "plugins/funind/functional_principles_proofs.ml" 564 15983 16033
)
"plugins/funind/functional_principles_proofs.ml" 602 17296 17342 "plugins/funind/functional_principles_proofs.ml" 602 17296 17351
type(
  Term.constr dynamic_info
)
ident(
  int_ref new_infos "plugins/funind/functional_principles_proofs.ml" 596 17180 17186 "plugins/funind/functional_principles_proofs.ml" 596 17180 17195
)
"plugins/funind/functional_principles_proofs.ml" 602 17296 17353 "plugins/funind/functional_principles_proofs.ml" 602 17296 17355
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 576 16425 16470 "plugins/funind/functional_principles_proofs.ml" 576 16425 16472
)
"plugins/funind/functional_principles_proofs.ml" 602 17296 17298 "plugins/funind/functional_principles_proofs.ml" 602 17296 17355
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 596 17180 17182 "plugins/funind/functional_principles_proofs.ml" 602 17296 17355
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 595 17103 17105 "plugins/funind/functional_principles_proofs.ml" 602 17296 17355
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 589 16975 16977 "plugins/funind/functional_principles_proofs.ml" 602 17296 17355
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 580 16630 16634 "plugins/funind/functional_principles_proofs.ml" 602 17296 17355
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 578 16526 16530 "plugins/funind/functional_principles_proofs.ml" 602 17296 17355
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 576 16425 16465 "plugins/funind/functional_principles_proofs.ml" 603 17356 17363
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 573 16302 16342 "plugins/funind/functional_principles_proofs.ml" 603 17356 17364
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 573 16302 16330 "plugins/funind/functional_principles_proofs.ml" 603 17356 17364
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 573 16302 16315 "plugins/funind/functional_principles_proofs.ml" 603 17356 17365
type(
  Names.identifier -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 573 16302 16303 "plugins/funind/functional_principles_proofs.ml" 603 17356 17365
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 568 16142 16148 "plugins/funind/functional_principles_proofs.ml" 604 17366 17371
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 605 17372 17378 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 565 16051 16057 "plugins/funind/functional_principles_proofs.ml" 565 16051 16058
)
"plugins/funind/functional_principles_proofs.ml" 567 16126 16130 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 566 16062 16066 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 565 16051 16053 "plugins/funind/functional_principles_proofs.ml" 605 17372 17379
type(
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 608 17382 17386 "plugins/funind/functional_principles_proofs.ml" 608 17382 17395
type(
  ('a -> 'b) -> ('a -> 'b) -> 'a -> 'b
)
ident(
  def my_orelse "plugins/funind/functional_principles_proofs.ml" 615 17526 17526 --
)
"plugins/funind/functional_principles_proofs.ml" 608 17382 17396 "plugins/funind/functional_principles_proofs.ml" 608 17382 17400
type(
  'a -> 'b
)
ident(
  def tac1 "plugins/funind/functional_principles_proofs.ml" 608 17382 17401 "plugins/funind/functional_principles_proofs.ml" 613 17514 17524
)
"plugins/funind/functional_principles_proofs.ml" 608 17382 17401 "plugins/funind/functional_principles_proofs.ml" 608 17382 17405
type(
  'a -> 'b
)
ident(
  def tac2 "plugins/funind/functional_principles_proofs.ml" 608 17382 17406 "plugins/funind/functional_principles_proofs.ml" 613 17514 17524
)
"plugins/funind/functional_principles_proofs.ml" 608 17382 17406 "plugins/funind/functional_principles_proofs.ml" 608 17382 17407
type(
  'a
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 609 17410 17412 "plugins/funind/functional_principles_proofs.ml" 613 17514 17524
)
"plugins/funind/functional_principles_proofs.ml" 610 17416 17420 "plugins/funind/functional_principles_proofs.ml" 610 17416 17424
type(
  'a -> 'b
)
ident(
  int_ref tac1 "plugins/funind/functional_principles_proofs.ml" 608 17382 17396 "plugins/funind/functional_principles_proofs.ml" 608 17382 17400
)
"plugins/funind/functional_principles_proofs.ml" 610 17416 17425 "plugins/funind/functional_principles_proofs.ml" 610 17416 17426
type(
  'a
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 608 17382 17406 "plugins/funind/functional_principles_proofs.ml" 608 17382 17407
)
"plugins/funind/functional_principles_proofs.ml" 610 17416 17420 "plugins/funind/functional_principles_proofs.ml" 610 17416 17426
call(
  stack
)
type(
  'b
)
"plugins/funind/functional_principles_proofs.ml" 611 17427 17434 "plugins/funind/functional_principles_proofs.ml" 611 17427 17435
type(
  exn
)
ident(
  def e "plugins/funind/functional_principles_proofs.ml" 613 17514 17518 "plugins/funind/functional_principles_proofs.ml" 613 17514 17524
)
"plugins/funind/functional_principles_proofs.ml" 613 17514 17518 "plugins/funind/functional_principles_proofs.ml" 613 17514 17522
type(
  'a -> 'b
)
ident(
  int_ref tac2 "plugins/funind/functional_principles_proofs.ml" 608 17382 17401 "plugins/funind/functional_principles_proofs.ml" 608 17382 17405
)
"plugins/funind/functional_principles_proofs.ml" 613 17514 17523 "plugins/funind/functional_principles_proofs.ml" 613 17514 17524
type(
  'a
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 608 17382 17406 "plugins/funind/functional_principles_proofs.ml" 608 17382 17407
)
"plugins/funind/functional_principles_proofs.ml" 613 17514 17518 "plugins/funind/functional_principles_proofs.ml" 613 17514 17524
call(
  tail
)
type(
  'b
)
"plugins/funind/functional_principles_proofs.ml" 609 17410 17412 "plugins/funind/functional_principles_proofs.ml" 613 17514 17524
type(
  'b
)
"plugins/funind/functional_principles_proofs.ml" 615 17526 17530 "plugins/funind/functional_principles_proofs.ml" 615 17526 17556
type(
  (Names.Idset.elt list -> Proof_type.tactic) ->
  Names.Idset.elt list -> Names.identifier list -> Proof_type.tactic
)
ident(
  def instanciate_hyps_with_args "plugins/funind/functional_principles_proofs.ml" 664 18810 18810 --
)
"plugins/funind/functional_principles_proofs.ml" 615 17526 17558 "plugins/funind/functional_principles_proofs.ml" 615 17526 17566
type(
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  def do_prove "plugins/funind/functional_principles_proofs.ml" 615 17526 17594 "plugins/funind/functional_principles_proofs.ml" 662 18801 18808
)
"plugins/funind/functional_principles_proofs.ml" 615 17526 17594 "plugins/funind/functional_principles_proofs.ml" 615 17526 17598
type(
  Names.Idset.elt list
)
ident(
  def hyps "plugins/funind/functional_principles_proofs.ml" 615 17526 17599 "plugins/funind/functional_principles_proofs.ml" 662 18801 18808
)
"plugins/funind/functional_principles_proofs.ml" 615 17526 17599 "plugins/funind/functional_principles_proofs.ml" 615 17526 17606
type(
  Names.identifier list
)
ident(
  def args_id "plugins/funind/functional_principles_proofs.ml" 616 17609 17611 "plugins/funind/functional_principles_proofs.ml" 662 18801 18808
)
"plugins/funind/functional_principles_proofs.ml" 616 17609 17615 "plugins/funind/functional_principles_proofs.ml" 616 17609 17619
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 616 17609 17622 "plugins/funind/functional_principles_proofs.ml" 616 17609 17635
type(
  Term.constr list -> Term.constr array
)
ident(
  ext_ref Array.of_list
)
"plugins/funind/functional_principles_proofs.ml" 616 17609 17637 "plugins/funind/functional_principles_proofs.ml" 616 17609 17645
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 616 17609 17646 "plugins/funind/functional_principles_proofs.ml" 616 17609 17651
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 616 17609 17653 "plugins/funind/functional_principles_proofs.ml" 616 17609 17660
type(
  Names.identifier list
)
ident(
  int_ref args_id "plugins/funind/functional_principles_proofs.ml" 615 17526 17599 "plugins/funind/functional_principles_proofs.ml" 615 17526 17606
)
"plugins/funind/functional_principles_proofs.ml" 616 17609 17636 "plugins/funind/functional_principles_proofs.ml" 616 17609 17661
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 616 17609 17622 "plugins/funind/functional_principles_proofs.ml" 616 17609 17661
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 617 17665 17671 "plugins/funind/functional_principles_proofs.ml" 617 17665 17690
type(
  Names.identifier ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 617 17665 17691 "plugins/funind/functional_principles_proofs.ml" 617 17665 17694
type(
  Names.identifier
)
ident(
  def hid "plugins/funind/functional_principles_proofs.ml" 618 17697 17701 "plugins/funind/functional_principles_proofs.ml" 640 18267 18274
)
"plugins/funind/functional_principles_proofs.ml" 618 17697 17701 "plugins/funind/functional_principles_proofs.ml" 618 17697 17710
type(
  (Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  (Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref my_orelse "plugins/funind/functional_principles_proofs.ml" 608 17382 17386 "plugins/funind/functional_principles_proofs.ml" 608 17382 17395
)
"plugins/funind/functional_principles_proofs.ml" 620 17761 17766 "plugins/funind/functional_principles_proofs.ml" 620 17761 17767
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 621 17771 17774 "plugins/funind/functional_principles_proofs.ml" 626 17931 17937
)
"plugins/funind/functional_principles_proofs.ml" 621 17771 17778 "plugins/funind/functional_principles_proofs.ml" 621 17771 17786
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 621 17771 17789 "plugins/funind/functional_principles_proofs.ml" 621 17771 17802
type(
  Names.identifier -> Proof_type.goal Tacmach.sigma -> Names.identifier
)
ident(
  ext_ref Tacmach.pf_get_new_id
)
"plugins/funind/functional_principles_proofs.ml" 621 17771 17803 "plugins/funind/functional_principles_proofs.ml" 621 17771 17806
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 617 17665 17691 "plugins/funind/functional_principles_proofs.ml" 617 17665 17694
)
"plugins/funind/functional_principles_proofs.ml" 621 17771 17807 "plugins/funind/functional_principles_proofs.ml" 621 17771 17808
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 620 17761 17766 "plugins/funind/functional_principles_proofs.ml" 620 17761 17767
)
"plugins/funind/functional_principles_proofs.ml" 621 17771 17789 "plugins/funind/functional_principles_proofs.ml" 621 17771 17808
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 622 17812 17815 "plugins/funind/functional_principles_proofs.ml" 622 17812 17826
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17833 "plugins/funind/functional_principles_proofs.ml" 623 17828 17843
type(
  Names.name -> Term.constr -> Proof_type.tactic
)
ident(
  ext_ref Tactics.pose_proof
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17850 "plugins/funind/functional_principles_proofs.ml" 623 17828 17858
type(
  Names.identifier
)
ident(
  int_ref prov_hid "plugins/funind/functional_principles_proofs.ml" 621 17771 17778 "plugins/funind/functional_principles_proofs.ml" 621 17771 17786
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17844 "plugins/funind/functional_principles_proofs.ml" 623 17828 17859
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17861 "plugins/funind/functional_principles_proofs.ml" 623 17828 17866
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17867 "plugins/funind/functional_principles_proofs.ml" 623 17828 17872
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17873 "plugins/funind/functional_principles_proofs.ml" 623 17828 17876
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 617 17665 17691 "plugins/funind/functional_principles_proofs.ml" 617 17665 17694
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17867 "plugins/funind/functional_principles_proofs.ml" 623 17828 17876
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17877 "plugins/funind/functional_principles_proofs.ml" 623 17828 17881
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 616 17609 17615 "plugins/funind/functional_principles_proofs.ml" 616 17609 17619
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17866 "plugins/funind/functional_principles_proofs.ml" 623 17828 17882
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17860 "plugins/funind/functional_principles_proofs.ml" 623 17828 17883
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 623 17828 17833 "plugins/funind/functional_principles_proofs.ml" 623 17828 17883
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 624 17885 17890 "plugins/funind/functional_principles_proofs.ml" 624 17885 17894
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref thin "plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
)
"plugins/funind/functional_principles_proofs.ml" 624 17885 17896 "plugins/funind/functional_principles_proofs.ml" 624 17885 17899
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 617 17665 17691 "plugins/funind/functional_principles_proofs.ml" 617 17665 17694
)
"plugins/funind/functional_principles_proofs.ml" 624 17885 17895 "plugins/funind/functional_principles_proofs.ml" 624 17885 17900
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 624 17885 17890 "plugins/funind/functional_principles_proofs.ml" 624 17885 17900
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 625 17902 17907 "plugins/funind/functional_principles_proofs.ml" 625 17902 17915
type(
  (Names.identifier * Names.identifier) list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_rename
)
"plugins/funind/functional_principles_proofs.ml" 625 17902 17917 "plugins/funind/functional_principles_proofs.ml" 625 17902 17925
type(
  Names.identifier
)
ident(
  int_ref prov_hid "plugins/funind/functional_principles_proofs.ml" 621 17771 17778 "plugins/funind/functional_principles_proofs.ml" 621 17771 17786
)
"plugins/funind/functional_principles_proofs.ml" 625 17902 17926 "plugins/funind/functional_principles_proofs.ml" 625 17902 17929
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 617 17665 17691 "plugins/funind/functional_principles_proofs.ml" 617 17665 17694
)
"plugins/funind/functional_principles_proofs.ml" 625 17902 17917 "plugins/funind/functional_principles_proofs.ml" 625 17902 17929
type(
  Names.identifier * Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 625 17902 17916 "plugins/funind/functional_principles_proofs.ml" 625 17902 17930
type(
  (Names.identifier * Names.identifier) list
)
"plugins/funind/functional_principles_proofs.ml" 625 17902 17907 "plugins/funind/functional_principles_proofs.ml" 625 17902 17930
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 622 17812 17826 "plugins/funind/functional_principles_proofs.ml" 626 17931 17935
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 626 17931 17936 "plugins/funind/functional_principles_proofs.ml" 626 17931 17937
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 620 17761 17766 "plugins/funind/functional_principles_proofs.ml" 620 17761 17767
)
"plugins/funind/functional_principles_proofs.ml" 622 17812 17815 "plugins/funind/functional_principles_proofs.ml" 626 17931 17937
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 621 17771 17774 "plugins/funind/functional_principles_proofs.ml" 626 17931 17937
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 619 17711 17717 "plugins/funind/functional_principles_proofs.ml" 627 17938 17945
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 636 18158 18164 "plugins/funind/functional_principles_proofs.ml" 636 18158 18165
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 638 18247 18251 "plugins/funind/functional_principles_proofs.ml" 638 18247 18263
)
"plugins/funind/functional_principles_proofs.ml" 638 18247 18251 "plugins/funind/functional_principles_proofs.ml" 638 18247 18255
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref thin "plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
)
"plugins/funind/functional_principles_proofs.ml" 638 18247 18257 "plugins/funind/functional_principles_proofs.ml" 638 18247 18260
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 617 17665 17691 "plugins/funind/functional_principles_proofs.ml" 617 17665 17694
)
"plugins/funind/functional_principles_proofs.ml" 638 18247 18256 "plugins/funind/functional_principles_proofs.ml" 638 18247 18261
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 638 18247 18262 "plugins/funind/functional_principles_proofs.ml" 638 18247 18263
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 636 18158 18164 "plugins/funind/functional_principles_proofs.ml" 636 18158 18165
)
"plugins/funind/functional_principles_proofs.ml" 638 18247 18251 "plugins/funind/functional_principles_proofs.ml" 638 18247 18263
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 628 17946 17952 "plugins/funind/functional_principles_proofs.ml" 640 18267 18274
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 618 17697 17701 "plugins/funind/functional_principles_proofs.ml" 640 18267 18274
call(
  tail
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 642 18280 18285 "plugins/funind/functional_principles_proofs.ml" 642 18280 18292
type(
  Names.identifier list
)
ident(
  int_ref args_id "plugins/funind/functional_principles_proofs.ml" 615 17526 17599 "plugins/funind/functional_principles_proofs.ml" 615 17526 17606
)
"plugins/funind/functional_principles_proofs.ml" 642 18280 18293 "plugins/funind/functional_principles_proofs.ml" 642 18280 18294
type(
  Names.identifier list -> Names.identifier list -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_proofs.ml" 642 18280 18295 "plugins/funind/functional_principles_proofs.ml" 642 18280 18297
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 642 18280 18285 "plugins/funind/functional_principles_proofs.ml" 642 18280 18297
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 644 18305 18309 "plugins/funind/functional_principles_proofs.ml" 644 18305 18320
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18329 "plugins/funind/functional_principles_proofs.ml" 645 18323 18335
type(
  (Names.Idset.elt -> Proof_type.tactic) ->
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18341 "plugins/funind/functional_principles_proofs.ml" 645 18323 18347
type(
  Names.Idset.elt
)
ident(
  def hyp_id "plugins/funind/functional_principles_proofs.ml" 645 18323 18351 "plugins/funind/functional_principles_proofs.ml" 645 18323 18394
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18351 "plugins/funind/functional_principles_proofs.ml" 645 18323 18369
type(
  Tacticals.clause -> Tacmach.tactic
)
ident(
  int_ref h_reduce_with_zeta "plugins/funind/functional_principles_proofs.ml" 351 9988 9992 "plugins/funind/functional_principles_proofs.ml" 351 9988 10010
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18371 "plugins/funind/functional_principles_proofs.ml" 645 18323 18386
type(
  Names.Idset.elt -> Tacticals.clause
)
ident(
  ext_ref Tacticals.onHyp
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18387 "plugins/funind/functional_principles_proofs.ml" 645 18323 18393
type(
  Names.Idset.elt
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 645 18323 18341 "plugins/funind/functional_principles_proofs.ml" 645 18323 18347
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18370 "plugins/funind/functional_principles_proofs.ml" 645 18323 18394
call(
  stack
)
type(
  Tacticals.clause
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18351 "plugins/funind/functional_principles_proofs.ml" 645 18323 18394
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18336 "plugins/funind/functional_principles_proofs.ml" 645 18323 18395
type(
  Names.Idset.elt -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18396 "plugins/funind/functional_principles_proofs.ml" 645 18323 18400
type(
  Names.Idset.elt list
)
ident(
  int_ref hyps "plugins/funind/functional_principles_proofs.ml" 615 17526 17594 "plugins/funind/functional_principles_proofs.ml" 615 17526 17598
)
"plugins/funind/functional_principles_proofs.ml" 645 18323 18329 "plugins/funind/functional_principles_proofs.ml" 645 18323 18400
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 646 18402 18408 "plugins/funind/functional_principles_proofs.ml" 646 18402 18416
type(
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  int_ref do_prove "plugins/funind/functional_principles_proofs.ml" 615 17526 17558 "plugins/funind/functional_principles_proofs.ml" 615 17526 17566
)
"plugins/funind/functional_principles_proofs.ml" 646 18402 18417 "plugins/funind/functional_principles_proofs.ml" 646 18402 18421
type(
  Names.Idset.elt list
)
ident(
  int_ref hyps "plugins/funind/functional_principles_proofs.ml" 615 17526 17594 "plugins/funind/functional_principles_proofs.ml" 615 17526 17598
)
"plugins/funind/functional_principles_proofs.ml" 646 18402 18408 "plugins/funind/functional_principles_proofs.ml" 646 18402 18421
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 644 18305 18321 "plugins/funind/functional_principles_proofs.ml" 647 18422 18427
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 644 18305 18309 "plugins/funind/functional_principles_proofs.ml" 647 18422 18427
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 649 18435 18439 "plugins/funind/functional_principles_proofs.ml" 649 18435 18450
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18460 "plugins/funind/functional_principles_proofs.ml" 651 18459 18466
type(
  (Names.Idset.elt -> Proof_type.tactic) ->
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18472 "plugins/funind/functional_principles_proofs.ml" 651 18459 18478
type(
  Names.Idset.elt
)
ident(
  def hyp_id "plugins/funind/functional_principles_proofs.ml" 651 18459 18482 "plugins/funind/functional_principles_proofs.ml" 651 18459 18525
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18482 "plugins/funind/functional_principles_proofs.ml" 651 18459 18500
type(
  Tacticals.clause -> Tacmach.tactic
)
ident(
  int_ref h_reduce_with_zeta "plugins/funind/functional_principles_proofs.ml" 351 9988 9992 "plugins/funind/functional_principles_proofs.ml" 351 9988 10010
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18502 "plugins/funind/functional_principles_proofs.ml" 651 18459 18517
type(
  Names.Idset.elt -> Tacticals.clause
)
ident(
  ext_ref Tacticals.onHyp
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18518 "plugins/funind/functional_principles_proofs.ml" 651 18459 18524
type(
  Names.Idset.elt
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 651 18459 18472 "plugins/funind/functional_principles_proofs.ml" 651 18459 18478
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18501 "plugins/funind/functional_principles_proofs.ml" 651 18459 18525
call(
  stack
)
type(
  Tacticals.clause
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18482 "plugins/funind/functional_principles_proofs.ml" 651 18459 18525
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18467 "plugins/funind/functional_principles_proofs.ml" 651 18459 18526
type(
  Names.Idset.elt -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18527 "plugins/funind/functional_principles_proofs.ml" 651 18459 18531
type(
  Names.Idset.elt list
)
ident(
  int_ref hyps "plugins/funind/functional_principles_proofs.ml" 615 17526 17594 "plugins/funind/functional_principles_proofs.ml" 615 17526 17598
)
"plugins/funind/functional_principles_proofs.ml" 651 18459 18460 "plugins/funind/functional_principles_proofs.ml" 651 18459 18531
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 652 18533 18534 "plugins/funind/functional_principles_proofs.ml" 652 18533 18540
type(
  (Names.Idset.elt -> Proof_type.tactic) ->
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/functional_principles_proofs.ml" 652 18533 18541 "plugins/funind/functional_principles_proofs.ml" 652 18533 18560
type(
  Names.Idset.elt -> Proof_type.tactic
)
ident(
  int_ref instanciate_one_hyp "plugins/funind/functional_principles_proofs.ml" 617 17665 17671 "plugins/funind/functional_principles_proofs.ml" 617 17665 17690
)
"plugins/funind/functional_principles_proofs.ml" 652 18533 18561 "plugins/funind/functional_principles_proofs.ml" 652 18533 18565
type(
  Names.Idset.elt list
)
ident(
  int_ref hyps "plugins/funind/functional_principles_proofs.ml" 615 17526 17594 "plugins/funind/functional_principles_proofs.ml" 615 17526 17598
)
"plugins/funind/functional_principles_proofs.ml" 652 18533 18534 "plugins/funind/functional_principles_proofs.ml" 652 18533 18565
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 653 18567 18573 "plugins/funind/functional_principles_proofs.ml" 653 18567 18574
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 654 18578 18582 "plugins/funind/functional_principles_proofs.ml" 660 18766 18795
)
"plugins/funind/functional_principles_proofs.ml" 654 18578 18586 "plugins/funind/functional_principles_proofs.ml" 654 18578 18599
type(
  Names.Idset.t
)
"plugins/funind/functional_principles_proofs.ml" 655 18602 18608 "plugins/funind/functional_principles_proofs.ml" 655 18602 18623
type(
  (Names.Idset.elt -> Names.Idset.t -> Names.Idset.t) ->
  Names.Idset.elt list -> Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref List.fold_right
)
"plugins/funind/functional_principles_proofs.ml" 655 18602 18624 "plugins/funind/functional_principles_proofs.ml" 655 18602 18633
type(
  Names.Idset.elt -> Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref Names.Idset.add
)
"plugins/funind/functional_principles_proofs.ml" 655 18602 18635 "plugins/funind/functional_principles_proofs.ml" 655 18602 18649
type(
  Proof_type.goal Tacmach.sigma -> Names.Idset.elt list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/functional_principles_proofs.ml" 655 18602 18650 "plugins/funind/functional_principles_proofs.ml" 655 18602 18651
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 653 18567 18573 "plugins/funind/functional_principles_proofs.ml" 653 18567 18574
)
"plugins/funind/functional_principles_proofs.ml" 655 18602 18634 "plugins/funind/functional_principles_proofs.ml" 655 18602 18652
call(
  stack
)
type(
  Names.Idset.elt list
)
"plugins/funind/functional_principles_proofs.ml" 655 18602 18653 "plugins/funind/functional_principles_proofs.ml" 655 18602 18664
type(
  Names.Idset.t
)
ident(
  ext_ref Names.Idset.empty
)
"plugins/funind/functional_principles_proofs.ml" 655 18602 18608 "plugins/funind/functional_principles_proofs.ml" 655 18602 18664
call(
  stack
)
type(
  Names.Idset.t
)
"plugins/funind/functional_principles_proofs.ml" 657 18672 18680 "plugins/funind/functional_principles_proofs.ml" 657 18672 18694
type(
  Names.Idset.elt list
)
"plugins/funind/functional_principles_proofs.ml" 658 18697 18703 "plugins/funind/functional_principles_proofs.ml" 658 18697 18714
type(
  (Names.Idset.elt -> bool) -> Names.Idset.elt list -> Names.Idset.elt list
)
ident(
  ext_ref List.filter
)
"plugins/funind/functional_principles_proofs.ml" 658 18697 18720 "plugins/funind/functional_principles_proofs.ml" 658 18697 18722
type(
  Names.Idset.elt
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 658 18697 18726 "plugins/funind/functional_principles_proofs.ml" 658 18697 18752
)
"plugins/funind/functional_principles_proofs.ml" 658 18697 18726 "plugins/funind/functional_principles_proofs.ml" 658 18697 18735
type(
  Names.Idset.elt -> Names.Idset.t -> bool
)
ident(
  ext_ref Names.Idset.mem
)
"plugins/funind/functional_principles_proofs.ml" 658 18697 18736 "plugins/funind/functional_principles_proofs.ml" 658 18697 18738
type(
  Names.Idset.elt
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 658 18697 18720 "plugins/funind/functional_principles_proofs.ml" 658 18697 18722
)
"plugins/funind/functional_principles_proofs.ml" 658 18697 18739 "plugins/funind/functional_principles_proofs.ml" 658 18697 18752
type(
  Names.Idset.t
)
ident(
  int_ref all_g_hyps_id "plugins/funind/functional_principles_proofs.ml" 654 18578 18586 "plugins/funind/functional_principles_proofs.ml" 654 18578 18599
)
"plugins/funind/functional_principles_proofs.ml" 658 18697 18726 "plugins/funind/functional_principles_proofs.ml" 658 18697 18752
call(
  tail
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 658 18697 18715 "plugins/funind/functional_principles_proofs.ml" 658 18697 18753
type(
  Names.Idset.elt -> bool
)
"plugins/funind/functional_principles_proofs.ml" 658 18697 18754 "plugins/funind/functional_principles_proofs.ml" 658 18697 18758
type(
  Names.Idset.elt list
)
ident(
  int_ref hyps "plugins/funind/functional_principles_proofs.ml" 615 17526 17594 "plugins/funind/functional_principles_proofs.ml" 615 17526 17598
)
"plugins/funind/functional_principles_proofs.ml" 658 18697 18703 "plugins/funind/functional_principles_proofs.ml" 658 18697 18758
call(
  stack
)
type(
  Names.Idset.elt list
)
"plugins/funind/functional_principles_proofs.ml" 660 18766 18770 "plugins/funind/functional_principles_proofs.ml" 660 18766 18778
type(
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  int_ref do_prove "plugins/funind/functional_principles_proofs.ml" 615 17526 17558 "plugins/funind/functional_principles_proofs.ml" 615 17526 17566
)
"plugins/funind/functional_principles_proofs.ml" 660 18766 18779 "plugins/funind/functional_principles_proofs.ml" 660 18766 18793
type(
  Names.Idset.elt list
)
ident(
  int_ref remaining_hyps "plugins/funind/functional_principles_proofs.ml" 657 18672 18680 "plugins/funind/functional_principles_proofs.ml" 657 18672 18694
)
"plugins/funind/functional_principles_proofs.ml" 660 18766 18794 "plugins/funind/functional_principles_proofs.ml" 660 18766 18795
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 653 18567 18573 "plugins/funind/functional_principles_proofs.ml" 653 18567 18574
)
"plugins/funind/functional_principles_proofs.ml" 660 18766 18770 "plugins/funind/functional_principles_proofs.ml" 660 18766 18795
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 657 18672 18676 "plugins/funind/functional_principles_proofs.ml" 660 18766 18795
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 654 18578 18582 "plugins/funind/functional_principles_proofs.ml" 660 18766 18795
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 653 18567 18568 "plugins/funind/functional_principles_proofs.ml" 661 18796 18800
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 650 18451 18457 "plugins/funind/functional_principles_proofs.ml" 662 18801 18808
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 649 18435 18439 "plugins/funind/functional_principles_proofs.ml" 662 18801 18808
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 642 18280 18282 "plugins/funind/functional_principles_proofs.ml" 662 18801 18808
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 617 17665 17667 "plugins/funind/functional_principles_proofs.ml" 662 18801 18808
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 616 17609 17611 "plugins/funind/functional_principles_proofs.ml" 662 18801 18808
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 664 18810 18814 "plugins/funind/functional_principles_proofs.ml" 664 18810 18825
type(
  bool ->
  Names.constant list ->
  pte_info Names.Idmap.t -> Term.types dynamic_info -> Proof_type.tactic
)
ident(
  def build_proof "plugins/funind/functional_principles_proofs.ml" 863 24440 24440 --
)
"plugins/funind/functional_principles_proofs.ml" 665 18826 18831 "plugins/funind/functional_principles_proofs.ml" 665 18826 18848
type(
  bool
)
ident(
  def interactive_proof "plugins/funind/functional_principles_proofs.ml" 666 18855 18859 "plugins/funind/functional_principles_proofs.ml" 849 24299 24375
)
"plugins/funind/functional_principles_proofs.ml" 666 18855 18860 "plugins/funind/functional_principles_proofs.ml" 666 18855 18866
type(
  Names.constant list
)
ident(
  def fnames "plugins/funind/functional_principles_proofs.ml" 667 18882 18886 "plugins/funind/functional_principles_proofs.ml" 849 24299 24375
)
"plugins/funind/functional_principles_proofs.ml" 667 18882 18886 "plugins/funind/functional_principles_proofs.ml" 667 18882 18896
type(
  pte_info Names.Idmap.t
)
ident(
  def ptes_infos "plugins/funind/functional_principles_proofs.ml" 668 18897 18901 "plugins/funind/functional_principles_proofs.ml" 849 24299 24375
)
"plugins/funind/functional_principles_proofs.ml" 668 18897 18901 "plugins/funind/functional_principles_proofs.ml" 668 18897 18910
type(
  Term.types dynamic_info
)
ident(
  def dyn_infos "plugins/funind/functional_principles_proofs.ml" 669 18911 18915 "plugins/funind/functional_principles_proofs.ml" 849 24299 24375
)
"plugins/funind/functional_principles_proofs.ml" 670 18926 18936 "plugins/funind/functional_principles_proofs.ml" 670 18926 18951
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  def do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 812 23104 23157
)
"plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
type(
  Term.types dynamic_info
)
ident(
  def dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18974 "plugins/funind/functional_principles_proofs.ml" 812 23104 23157
)
"plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 673 19079 19080 "plugins/funind/functional_principles_proofs.ml" 812 23104 23157
)
"plugins/funind/functional_principles_proofs.ml" 673 19079 19086 "plugins/funind/functional_principles_proofs.ml" 673 19079 19098
type(
  Term.types -> (Term.types, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 673 19079 19099 "plugins/funind/functional_principles_proofs.ml" 673 19079 19108
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 673 19079 19099 "plugins/funind/functional_principles_proofs.ml" 673 19079 19113
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 673 19079 19086 "plugins/funind/functional_principles_proofs.ml" 673 19079 19113
call(
  stack
)
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 674 19119 19129 "plugins/funind/functional_principles_proofs.ml" 674 19119 19131
type(
  Term.case_info
)
ident(
  def ci "plugins/funind/functional_principles_proofs.ml" 675 19144 19151 "plugins/funind/functional_principles_proofs.ml" 710 20087 20147
)
"plugins/funind/functional_principles_proofs.ml" 674 19119 19132 "plugins/funind/functional_principles_proofs.ml" 674 19119 19134
type(
  Term.types
)
ident(
  def ct "plugins/funind/functional_principles_proofs.ml" 675 19144 19151 "plugins/funind/functional_principles_proofs.ml" 710 20087 20147
)
"plugins/funind/functional_principles_proofs.ml" 674 19119 19135 "plugins/funind/functional_principles_proofs.ml" 674 19119 19136
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 675 19144 19151 "plugins/funind/functional_principles_proofs.ml" 710 20087 20147
)
"plugins/funind/functional_principles_proofs.ml" 674 19119 19137 "plugins/funind/functional_principles_proofs.ml" 674 19119 19139
type(
  Term.types array
)
ident(
  def cb "plugins/funind/functional_principles_proofs.ml" 675 19144 19151 "plugins/funind/functional_principles_proofs.ml" 710 20087 20147
)
"plugins/funind/functional_principles_proofs.ml" 674 19119 19124 "plugins/funind/functional_principles_proofs.ml" 674 19119 19140
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 675 19144 19155 "plugins/funind/functional_principles_proofs.ml" 675 19144 19168
type(
  Term.types dynamic_info ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 675 19144 19169 "plugins/funind/functional_principles_proofs.ml" 675 19144 19178
type(
  Term.types dynamic_info
)
ident(
  def dyn_info' "plugins/funind/functional_principles_proofs.ml" 676 19181 19183 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
)
"plugins/funind/functional_principles_proofs.ml" 676 19181 19187 "plugins/funind/functional_principles_proofs.ml" 676 19181 19188
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 677 19192 19196 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
)
"plugins/funind/functional_principles_proofs.ml" 677 19192 19200 "plugins/funind/functional_principles_proofs.ml" 677 19192 19201
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 677 19192 19204 "plugins/funind/functional_principles_proofs.ml" 677 19192 19213
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_info' "plugins/funind/functional_principles_proofs.ml" 675 19144 19169 "plugins/funind/functional_principles_proofs.ml" 675 19144 19178
)
"plugins/funind/functional_principles_proofs.ml" 677 19192 19204 "plugins/funind/functional_principles_proofs.ml" 677 19192 19218
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 678 19222 19230 "plugins/funind/functional_principles_proofs.ml" 678 19222 19239
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 678 19222 19243 "plugins/funind/functional_principles_proofs.ml" 678 19222 19252
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_info' "plugins/funind/functional_principles_proofs.ml" 675 19144 19169 "plugins/funind/functional_principles_proofs.ml" 675 19144 19178
)
"plugins/funind/functional_principles_proofs.ml" 679 19265 19273 "plugins/funind/functional_principles_proofs.ml" 679 19265 19279
type(
  Term.case_info * Term.types * Term.types * Term.types array -> Term.constr
)
ident(
  ext_ref Term.mkCase
)
"plugins/funind/functional_principles_proofs.ml" 679 19265 19280 "plugins/funind/functional_principles_proofs.ml" 679 19265 19282
type(
  Term.case_info
)
ident(
  int_ref ci "plugins/funind/functional_principles_proofs.ml" 674 19119 19129 "plugins/funind/functional_principles_proofs.ml" 674 19119 19131
)
"plugins/funind/functional_principles_proofs.ml" 679 19265 19283 "plugins/funind/functional_principles_proofs.ml" 679 19265 19285
type(
  Term.types
)
ident(
  int_ref ct "plugins/funind/functional_principles_proofs.ml" 674 19119 19132 "plugins/funind/functional_principles_proofs.ml" 674 19119 19134
)
"plugins/funind/functional_principles_proofs.ml" 679 19265 19286 "plugins/funind/functional_principles_proofs.ml" 679 19265 19287
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 677 19192 19200 "plugins/funind/functional_principles_proofs.ml" 677 19192 19201
)
"plugins/funind/functional_principles_proofs.ml" 679 19265 19288 "plugins/funind/functional_principles_proofs.ml" 679 19265 19290
type(
  Term.types array
)
ident(
  int_ref cb "plugins/funind/functional_principles_proofs.ml" 674 19119 19137 "plugins/funind/functional_principles_proofs.ml" 674 19119 19139
)
"plugins/funind/functional_principles_proofs.ml" 679 19265 19279 "plugins/funind/functional_principles_proofs.ml" 679 19265 19291
type(
  Term.case_info * Term.types * Term.types * Term.types array
)
"plugins/funind/functional_principles_proofs.ml" 679 19265 19273 "plugins/funind/functional_principles_proofs.ml" 679 19265 19291
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 678 19222 19242 "plugins/funind/functional_principles_proofs.ml" 679 19265 19292
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 680 19296 19304 "plugins/funind/functional_principles_proofs.ml" 680 19296 19313
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 680 19296 19316 "plugins/funind/functional_principles_proofs.ml" 680 19296 19323
type(
  Term.types -> int
)
ident(
  ext_ref Term.nb_prod
)
"plugins/funind/functional_principles_proofs.ml" 680 19296 19325 "plugins/funind/functional_principles_proofs.ml" 680 19296 19333
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 680 19296 19334 "plugins/funind/functional_principles_proofs.ml" 680 19296 19335
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 676 19181 19187 "plugins/funind/functional_principles_proofs.ml" 676 19181 19188
)
"plugins/funind/functional_principles_proofs.ml" 680 19296 19324 "plugins/funind/functional_principles_proofs.ml" 680 19296 19336
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 680 19296 19316 "plugins/funind/functional_principles_proofs.ml" 680 19296 19336
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 681 19340 19348 "plugins/funind/functional_principles_proofs.ml" 681 19340 19360
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 681 19340 19363 "plugins/funind/functional_principles_proofs.ml" 681 19340 19373
type(
  Proof_type.goal Tacmach.sigma -> Term.types -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/functional_principles_proofs.ml" 681 19340 19374 "plugins/funind/functional_principles_proofs.ml" 681 19340 19375
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 676 19181 19187 "plugins/funind/functional_principles_proofs.ml" 676 19181 19188
)
"plugins/funind/functional_principles_proofs.ml" 681 19340 19376 "plugins/funind/functional_principles_proofs.ml" 681 19340 19377
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 677 19192 19200 "plugins/funind/functional_principles_proofs.ml" 677 19192 19201
)
"plugins/funind/functional_principles_proofs.ml" 681 19340 19363 "plugins/funind/functional_principles_proofs.ml" 681 19340 19377
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 682 19381 19389 "plugins/funind/functional_principles_proofs.ml" 682 19381 19396
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 683 19399 19405 "plugins/funind/functional_principles_proofs.ml" 683 19399 19417
type(
  Term.constr -> Term.types -> Term.types -> Term.constr
)
ident(
  int_ref make_refl_eq "plugins/funind/functional_principles_proofs.ml" 63 1198 1202 "plugins/funind/functional_principles_proofs.ml" 63 1198 1214
)
"plugins/funind/functional_principles_proofs.ml" 683 19399 19419 "plugins/funind/functional_principles_proofs.ml" 683 19399 19429
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 683 19399 19430 "plugins/funind/functional_principles_proofs.ml" 683 19399 19440
type(
  Term.constr Lazy.t
)
ident(
  ext_ref Indfun_common.refl_equal
)
"plugins/funind/functional_principles_proofs.ml" 683 19399 19418 "plugins/funind/functional_principles_proofs.ml" 683 19399 19441
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 683 19399 19442 "plugins/funind/functional_principles_proofs.ml" 683 19399 19454
type(
  Term.types
)
ident(
  int_ref type_of_term "plugins/funind/functional_principles_proofs.ml" 681 19340 19348 "plugins/funind/functional_principles_proofs.ml" 681 19340 19360
)
"plugins/funind/functional_principles_proofs.ml" 683 19399 19455 "plugins/funind/functional_principles_proofs.ml" 683 19399 19456
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 677 19192 19200 "plugins/funind/functional_principles_proofs.ml" 677 19192 19201
)
"plugins/funind/functional_principles_proofs.ml" 683 19399 19405 "plugins/funind/functional_principles_proofs.ml" 683 19399 19456
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 685 19464 19468 "plugins/funind/functional_principles_proofs.ml" 685 19464 19478
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 687 19487 19495 "plugins/funind/functional_principles_proofs.ml" 687 19487 19507
type(
  Term.constr list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_generalize
)
"plugins/funind/functional_principles_proofs.ml" 687 19487 19509 "plugins/funind/functional_principles_proofs.ml" 687 19487 19516
type(
  Term.constr
)
ident(
  int_ref term_eq "plugins/funind/functional_principles_proofs.ml" 682 19381 19389 "plugins/funind/functional_principles_proofs.ml" 682 19381 19396
)
"plugins/funind/functional_principles_proofs.ml" 687 19487 19519 "plugins/funind/functional_principles_proofs.ml" 687 19487 19527
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 687 19487 19528 "plugins/funind/functional_principles_proofs.ml" 687 19487 19533
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 687 19487 19534 "plugins/funind/functional_principles_proofs.ml" 687 19487 19543
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 678 19222 19230 "plugins/funind/functional_principles_proofs.ml" 678 19222 19239
)
"plugins/funind/functional_principles_proofs.ml" 687 19487 19534 "plugins/funind/functional_principles_proofs.ml" 687 19487 19552
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 687 19487 19518 "plugins/funind/functional_principles_proofs.ml" 687 19487 19553
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 687 19487 19508 "plugins/funind/functional_principles_proofs.ml" 687 19487 19554
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 687 19487 19495 "plugins/funind/functional_principles_proofs.ml" 687 19487 19554
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 688 19556 19564 "plugins/funind/functional_principles_proofs.ml" 688 19556 19568
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref thin "plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
)
"plugins/funind/functional_principles_proofs.ml" 688 19556 19569 "plugins/funind/functional_principles_proofs.ml" 688 19556 19578
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 678 19222 19230 "plugins/funind/functional_principles_proofs.ml" 678 19222 19239
)
"plugins/funind/functional_principles_proofs.ml" 688 19556 19569 "plugins/funind/functional_principles_proofs.ml" 688 19556 19587
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 688 19556 19564 "plugins/funind/functional_principles_proofs.ml" 688 19556 19587
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19597 "plugins/funind/functional_principles_proofs.ml" 689 19589 19611
type(
  (Termops.occurrences * Term.types) list ->
  Tacticals.goal_location -> Proof_type.tactic
)
ident(
  ext_ref Tactics.pattern_option
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19614 "plugins/funind/functional_principles_proofs.ml" 689 19589 19619
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19621 "plugins/funind/functional_principles_proofs.ml" 689 19589 19622
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19620 "plugins/funind/functional_principles_proofs.ml" 689 19589 19623
type(
  int list
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19613 "plugins/funind/functional_principles_proofs.ml" 689 19589 19624
type(
  Termops.occurrences
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19625 "plugins/funind/functional_principles_proofs.ml" 689 19589 19626
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 677 19192 19200 "plugins/funind/functional_principles_proofs.ml" 677 19192 19201
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19613 "plugins/funind/functional_principles_proofs.ml" 689 19589 19626
type(
  Termops.occurrences * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19612 "plugins/funind/functional_principles_proofs.ml" 689 19589 19627
type(
  (Termops.occurrences * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19628 "plugins/funind/functional_principles_proofs.ml" 689 19589 19632
type(
  Tacticals.goal_location
)
"plugins/funind/functional_principles_proofs.ml" 689 19589 19597 "plugins/funind/functional_principles_proofs.ml" 689 19589 19632
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 690 19634 19647 "plugins/funind/functional_principles_proofs.ml" 690 19634 19648
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 690 19634 19652 "plugins/funind/functional_principles_proofs.ml" 705 20038 20050
)
"plugins/funind/functional_principles_proofs.ml" 690 19634 19652 "plugins/funind/functional_principles_proofs.ml" 690 19634 19663
type(
  string ->
  Proof_type.tactic ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 690 19634 19664 "plugins/funind/functional_principles_proofs.ml" 690 19634 19670
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 691 19673 19677 "plugins/funind/functional_principles_proofs.ml" 691 19673 19687
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 691 19673 19689 "plugins/funind/functional_principles_proofs.ml" 691 19673 19704
type(
  Term.types -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_simplest_case
)
"plugins/funind/functional_principles_proofs.ml" 691 19673 19705 "plugins/funind/functional_principles_proofs.ml" 691 19673 19706
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 677 19192 19200 "plugins/funind/functional_principles_proofs.ml" 677 19192 19201
)
"plugins/funind/functional_principles_proofs.ml" 691 19673 19689 "plugins/funind/functional_principles_proofs.ml" 691 19673 19706
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 692 19708 19722 "plugins/funind/functional_principles_proofs.ml" 692 19708 19724
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g' "plugins/funind/functional_principles_proofs.ml" 693 19728 19733 "plugins/funind/functional_principles_proofs.ml" 702 20016 20025
)
"plugins/funind/functional_principles_proofs.ml" 693 19728 19737 "plugins/funind/functional_principles_proofs.ml" 693 19728 19747
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 693 19728 19750 "plugins/funind/functional_principles_proofs.ml" 693 19728 19757
type(
  Term.types -> int
)
ident(
  ext_ref Term.nb_prod
)
"plugins/funind/functional_principles_proofs.ml" 693 19728 19759 "plugins/funind/functional_principles_proofs.ml" 693 19728 19767
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 693 19728 19768 "plugins/funind/functional_principles_proofs.ml" 693 19728 19770
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 692 19708 19722 "plugins/funind/functional_principles_proofs.ml" 692 19708 19724
)
"plugins/funind/functional_principles_proofs.ml" 693 19728 19758 "plugins/funind/functional_principles_proofs.ml" 693 19728 19771
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 693 19728 19750 "plugins/funind/functional_principles_proofs.ml" 693 19728 19771
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 694 19775 19784 "plugins/funind/functional_principles_proofs.ml" 694 19775 19806
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 694 19775 19809 "plugins/funind/functional_principles_proofs.ml" 694 19775 19819
type(
  int
)
ident(
  int_ref g'_nb_prod "plugins/funind/functional_principles_proofs.ml" 693 19728 19737 "plugins/funind/functional_principles_proofs.ml" 693 19728 19747
)
"plugins/funind/functional_principles_proofs.ml" 694 19775 19820 "plugins/funind/functional_principles_proofs.ml" 694 19775 19821
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 694 19775 19822 "plugins/funind/functional_principles_proofs.ml" 694 19775 19831
type(
  int
)
ident(
  int_ref g_nb_prod "plugins/funind/functional_principles_proofs.ml" 680 19296 19304 "plugins/funind/functional_principles_proofs.ml" 680 19296 19313
)
"plugins/funind/functional_principles_proofs.ml" 694 19775 19809 "plugins/funind/functional_principles_proofs.ml" 694 19775 19831
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 695 19835 19841 "plugins/funind/functional_principles_proofs.ml" 695 19835 19852
type(
  string ->
  (Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 695 19835 19853 "plugins/funind/functional_principles_proofs.ml" 695 19835 19869
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 696 19870 19878 "plugins/funind/functional_principles_proofs.ml" 696 19870 19892
type(
  pte_info Names.Idmap.t ->
  int ->
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types ->
  Term.constr dynamic_info ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref treat_new_case "plugins/funind/functional_principles_proofs.ml" 564 15983 15987 "plugins/funind/functional_principles_proofs.ml" 564 15983 16001
)
"plugins/funind/functional_principles_proofs.ml" 697 19893 19903 "plugins/funind/functional_principles_proofs.ml" 697 19893 19913
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref ptes_infos "plugins/funind/functional_principles_proofs.ml" 667 18882 18886 "plugins/funind/functional_principles_proofs.ml" 667 18882 18896
)
"plugins/funind/functional_principles_proofs.ml" 698 19914 19924 "plugins/funind/functional_principles_proofs.ml" 698 19914 19946
type(
  int
)
ident(
  int_ref nb_instanciate_partial "plugins/funind/functional_principles_proofs.ml" 694 19775 19784 "plugins/funind/functional_principles_proofs.ml" 694 19775 19806
)
"plugins/funind/functional_principles_proofs.ml" 699 19947 19958 "plugins/funind/functional_principles_proofs.ml" 699 19947 19969
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 699 19947 19970 "plugins/funind/functional_principles_proofs.ml" 699 19947 19981
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 699 19947 19957 "plugins/funind/functional_principles_proofs.ml" 699 19947 19982
call(
  stack
)
type(
  Term.types dynamic_info -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 700 19983 19993 "plugins/funind/functional_principles_proofs.ml" 700 19983 19994
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 677 19192 19200 "plugins/funind/functional_principles_proofs.ml" 677 19192 19201
)
"plugins/funind/functional_principles_proofs.ml" 701 19995 20005 "plugins/funind/functional_principles_proofs.ml" 701 19995 20014
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 678 19222 19230 "plugins/funind/functional_principles_proofs.ml" 678 19222 19239
)
"plugins/funind/functional_principles_proofs.ml" 696 19870 19877 "plugins/funind/functional_principles_proofs.ml" 701 19995 20015
call(
  stack
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 702 20016 20023 "plugins/funind/functional_principles_proofs.ml" 702 20016 20025
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 692 19708 19722 "plugins/funind/functional_principles_proofs.ml" 692 19708 19724
)
"plugins/funind/functional_principles_proofs.ml" 695 19835 19841 "plugins/funind/functional_principles_proofs.ml" 702 20016 20025
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 694 19775 19780 "plugins/funind/functional_principles_proofs.ml" 702 20016 20025
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 693 19728 19733 "plugins/funind/functional_principles_proofs.ml" 702 20016 20025
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 692 19708 19717 "plugins/funind/functional_principles_proofs.ml" 703 20026 20036
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 691 19673 19688 "plugins/funind/functional_principles_proofs.ml" 705 20038 20047
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 690 19634 19671 "plugins/funind/functional_principles_proofs.ml" 705 20038 20048
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 705 20038 20049 "plugins/funind/functional_principles_proofs.ml" 705 20038 20050
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 690 19634 19647 "plugins/funind/functional_principles_proofs.ml" 690 19634 19648
)
"plugins/funind/functional_principles_proofs.ml" 690 19634 19652 "plugins/funind/functional_principles_proofs.ml" 705 20038 20050
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 690 19634 19642 "plugins/funind/functional_principles_proofs.ml" 706 20051 20060
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 686 19479 19485 "plugins/funind/functional_principles_proofs.ml" 707 20061 20068
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 708 20069 20075 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 676 19181 19187 "plugins/funind/functional_principles_proofs.ml" 676 19181 19188
)
"plugins/funind/functional_principles_proofs.ml" 685 19464 19468 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 682 19381 19385 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 681 19340 19344 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 680 19296 19300 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 678 19222 19226 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 677 19192 19196 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 676 19181 19183 "plugins/funind/functional_principles_proofs.ml" 708 20069 20076
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 710 20087 20094 "plugins/funind/functional_principles_proofs.ml" 710 20087 20105
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 710 20087 20106 "plugins/funind/functional_principles_proofs.ml" 710 20087 20119
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize_t "plugins/funind/functional_principles_proofs.ml" 675 19144 19155 "plugins/funind/functional_principles_proofs.ml" 675 19144 19168
)
"plugins/funind/functional_principles_proofs.ml" 710 20087 20121 "plugins/funind/functional_principles_proofs.ml" 710 20087 20130
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 710 20087 20143 "plugins/funind/functional_principles_proofs.ml" 710 20087 20144
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 674 19119 19135 "plugins/funind/functional_principles_proofs.ml" 674 19119 19136
)
"plugins/funind/functional_principles_proofs.ml" 710 20087 20120 "plugins/funind/functional_principles_proofs.ml" 710 20087 20145
type(
  Term.types dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 710 20087 20146 "plugins/funind/functional_principles_proofs.ml" 710 20087 20147
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 710 20087 20094 "plugins/funind/functional_principles_proofs.ml" 710 20087 20147
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 675 19144 19151 "plugins/funind/functional_principles_proofs.ml" 710 20087 20147
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 711 20148 20160 "plugins/funind/functional_principles_proofs.ml" 711 20148 20161
type(
  Names.name
)
ident(
  def n "plugins/funind/functional_principles_proofs.ml" 712 20170 20177 "plugins/funind/functional_principles_proofs.ml" 736 20867 20877
)
"plugins/funind/functional_principles_proofs.ml" 711 20148 20162 "plugins/funind/functional_principles_proofs.ml" 711 20148 20163
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 712 20170 20177 "plugins/funind/functional_principles_proofs.ml" 736 20867 20877
)
"plugins/funind/functional_principles_proofs.ml" 711 20148 20164 "plugins/funind/functional_principles_proofs.ml" 711 20148 20165
type(
  Term.types
)
ident(
  def b "plugins/funind/functional_principles_proofs.ml" 712 20170 20177 "plugins/funind/functional_principles_proofs.ml" 736 20867 20877
)
"plugins/funind/functional_principles_proofs.ml" 711 20148 20153 "plugins/funind/functional_principles_proofs.ml" 711 20148 20166
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 713 20183 20191 "plugins/funind/functional_principles_proofs.ml" 713 20183 20203
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 713 20183 20205 "plugins/funind/functional_principles_proofs.ml" 713 20183 20213
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 713 20183 20214 "plugins/funind/functional_principles_proofs.ml" 713 20183 20215
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 713 20183 20203 "plugins/funind/functional_principles_proofs.ml" 713 20183 20216
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 713 20183 20191 "plugins/funind/functional_principles_proofs.ml" 713 20183 20216
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 714 20222 20233 "plugins/funind/functional_principles_proofs.ml" 714 20222 20234
type(
  Term.types
)
type(
  Term.types
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 714 20222 20228 "plugins/funind/functional_principles_proofs.ml" 714 20222 20234
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 715 20238 20246 "plugins/funind/functional_principles_proofs.ml" 715 20238 20253
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 716 20254 20257 "plugins/funind/functional_principles_proofs.ml" 716 20254 20262
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intro
)
"plugins/funind/functional_principles_proofs.ml" 717 20263 20271 "plugins/funind/functional_principles_proofs.ml" 717 20263 20273
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g' "plugins/funind/functional_principles_proofs.ml" 718 20277 20283 "plugins/funind/functional_principles_proofs.ml" 731 20662 20759
)
"plugins/funind/functional_principles_proofs.ml" 718 20277 20288 "plugins/funind/functional_principles_proofs.ml" 718 20277 20290
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 718 20277 20291 "plugins/funind/functional_principles_proofs.ml" 718 20277 20292
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 718 20277 20293 "plugins/funind/functional_principles_proofs.ml" 718 20277 20294
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 718 20277 20287 "plugins/funind/functional_principles_proofs.ml" 718 20277 20295
type(
  Term.named_declaration
)
"plugins/funind/functional_principles_proofs.ml" 718 20277 20298 "plugins/funind/functional_principles_proofs.ml" 718 20277 20309
type(
  Proof_type.goal Tacmach.sigma -> Term.named_declaration
)
ident(
  ext_ref Tacmach.pf_last_hyp
)
"plugins/funind/functional_principles_proofs.ml" 718 20277 20310 "plugins/funind/functional_principles_proofs.ml" 718 20277 20312
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 717 20263 20271 "plugins/funind/functional_principles_proofs.ml" 717 20263 20273
)
"plugins/funind/functional_principles_proofs.ml" 718 20277 20298 "plugins/funind/functional_principles_proofs.ml" 718 20277 20312
call(
  stack
)
type(
  Term.named_declaration
)
"plugins/funind/functional_principles_proofs.ml" 719 20316 20326 "plugins/funind/functional_principles_proofs.ml" 719 20316 20334
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 720 20337 20345 "plugins/funind/functional_principles_proofs.ml" 720 20337 20359
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.constr
)
ident(
  ext_ref Tacmach.pf_nf_betaiota
)
"plugins/funind/functional_principles_proofs.ml" 720 20337 20360 "plugins/funind/functional_principles_proofs.ml" 720 20337 20362
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 717 20263 20271 "plugins/funind/functional_principles_proofs.ml" 717 20263 20273
)
"plugins/funind/functional_principles_proofs.ml" 721 20363 20374 "plugins/funind/functional_principles_proofs.ml" 721 20363 20379
type(
  Term.types * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 721 20363 20380 "plugins/funind/functional_principles_proofs.ml" 721 20363 20389
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 721 20363 20380 "plugins/funind/functional_principles_proofs.ml" 721 20363 20394
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 721 20363 20397 "plugins/funind/functional_principles_proofs.ml" 721 20363 20402
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 721 20363 20403 "plugins/funind/functional_principles_proofs.ml" 721 20363 20405
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 718 20277 20288 "plugins/funind/functional_principles_proofs.ml" 718 20277 20290
)
"plugins/funind/functional_principles_proofs.ml" 721 20363 20397 "plugins/funind/functional_principles_proofs.ml" 721 20363 20405
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 721 20363 20395 "plugins/funind/functional_principles_proofs.ml" 721 20363 20407
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 721 20363 20379 "plugins/funind/functional_principles_proofs.ml" 721 20363 20408
type(
  Term.types * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 721 20363 20373 "plugins/funind/functional_principles_proofs.ml" 721 20363 20409
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 720 20337 20345 "plugins/funind/functional_principles_proofs.ml" 721 20363 20409
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 723 20419 20429 "plugins/funind/functional_principles_proofs.ml" 723 20419 20438
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 723 20419 20442 "plugins/funind/functional_principles_proofs.ml" 723 20419 20451
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 723 20419 20464 "plugins/funind/functional_principles_proofs.ml" 723 20419 20472
type(
  Term.constr
)
ident(
  int_ref new_term "plugins/funind/functional_principles_proofs.ml" 719 20316 20326 "plugins/funind/functional_principles_proofs.ml" 719 20316 20334
)
"plugins/funind/functional_principles_proofs.ml" 723 20419 20441 "plugins/funind/functional_principles_proofs.ml" 723 20419 20473
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 724 20477 20487 "plugins/funind/functional_principles_proofs.ml" 724 20477 20495
type(
  Names.identifier list -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 724 20477 20496 "plugins/funind/functional_principles_proofs.ml" 724 20477 20504
type(
  Names.identifier list
)
ident(
  def new_hyps "plugins/funind/functional_principles_proofs.ml" 725 20507 20515 "plugins/funind/functional_principles_proofs.ml" 729 20641 20652
)
"plugins/funind/functional_principles_proofs.ml" 725 20507 20515 "plugins/funind/functional_principles_proofs.ml" 725 20507 20526
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 725 20507 20527 "plugins/funind/functional_principles_proofs.ml" 725 20507 20538
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 726 20539 20550 "plugins/funind/functional_principles_proofs.ml" 726 20539 20559
type(
  Term.types dynamic_info
)
ident(
  int_ref new_infos "plugins/funind/functional_principles_proofs.ml" 723 20419 20429 "plugins/funind/functional_principles_proofs.ml" 723 20419 20438
)
"plugins/funind/functional_principles_proofs.ml" 727 20565 20589 "plugins/funind/functional_principles_proofs.ml" 727 20565 20597
type(
  Names.identifier list
)
ident(
  int_ref new_hyps "plugins/funind/functional_principles_proofs.ml" 724 20477 20496 "plugins/funind/functional_principles_proofs.ml" 724 20477 20504
)
"plugins/funind/functional_principles_proofs.ml" 728 20599 20620 "plugins/funind/functional_principles_proofs.ml" 728 20599 20631
type(
  Names.identifier list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 728 20599 20632 "plugins/funind/functional_principles_proofs.ml" 728 20599 20640
type(
  Names.identifier list
)
ident(
  int_ref new_hyps "plugins/funind/functional_principles_proofs.ml" 724 20477 20496 "plugins/funind/functional_principles_proofs.ml" 724 20477 20504
)
"plugins/funind/functional_principles_proofs.ml" 728 20599 20620 "plugins/funind/functional_principles_proofs.ml" 728 20599 20640
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 726 20539 20549 "plugins/funind/functional_principles_proofs.ml" 729 20641 20652
type(
  Term.types dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 725 20507 20515 "plugins/funind/functional_principles_proofs.ml" 729 20641 20652
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 731 20662 20696 "plugins/funind/functional_principles_proofs.ml" 731 20662 20722
type(
  (Names.Idset.elt list -> Proof_type.tactic) ->
  Names.Idset.elt list -> Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref instanciate_hyps_with_args "plugins/funind/functional_principles_proofs.ml" 615 17526 17530 "plugins/funind/functional_principles_proofs.ml" 615 17526 17556
)
"plugins/funind/functional_principles_proofs.ml" 731 20662 20723 "plugins/funind/functional_principles_proofs.ml" 731 20662 20731
type(
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  int_ref do_prove "plugins/funind/functional_principles_proofs.ml" 724 20477 20487 "plugins/funind/functional_principles_proofs.ml" 724 20477 20495
)
"plugins/funind/functional_principles_proofs.ml" 731 20662 20732 "plugins/funind/functional_principles_proofs.ml" 731 20662 20741
type(
  Term.constr dynamic_info
)
ident(
  int_ref new_infos "plugins/funind/functional_principles_proofs.ml" 723 20419 20429 "plugins/funind/functional_principles_proofs.ml" 723 20419 20438
)
"plugins/funind/functional_principles_proofs.ml" 731 20662 20732 "plugins/funind/functional_principles_proofs.ml" 731 20662 20750
type(
  Names.Idset.elt list
)
"plugins/funind/functional_principles_proofs.ml" 731 20662 20752 "plugins/funind/functional_principles_proofs.ml" 731 20662 20754
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 718 20277 20288 "plugins/funind/functional_principles_proofs.ml" 718 20277 20290
)
"plugins/funind/functional_principles_proofs.ml" 731 20662 20751 "plugins/funind/functional_principles_proofs.ml" 731 20662 20755
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 731 20662 20695 "plugins/funind/functional_principles_proofs.ml" 731 20662 20756
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 731 20662 20757 "plugins/funind/functional_principles_proofs.ml" 731 20662 20759
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 717 20263 20271 "plugins/funind/functional_principles_proofs.ml" 717 20263 20273
)
"plugins/funind/functional_principles_proofs.ml" 731 20662 20695 "plugins/funind/functional_principles_proofs.ml" 731 20662 20759
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 724 20477 20483 "plugins/funind/functional_principles_proofs.ml" 731 20662 20759
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 723 20419 20425 "plugins/funind/functional_principles_proofs.ml" 731 20662 20759
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 719 20316 20322 "plugins/funind/functional_principles_proofs.ml" 731 20662 20759
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 718 20277 20283 "plugins/funind/functional_principles_proofs.ml" 731 20662 20759
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 717 20263 20266 "plugins/funind/functional_principles_proofs.ml" 733 20817 20821
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 733 20817 20822 "plugins/funind/functional_principles_proofs.ml" 733 20817 20823
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 715 20238 20246 "plugins/funind/functional_principles_proofs.ml" 733 20817 20823
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 734 20824 20830 "plugins/funind/functional_principles_proofs.ml" 734 20824 20831
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 735 20835 20843 "plugins/funind/functional_principles_proofs.ml" 735 20835 20854
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 735 20835 20855 "plugins/funind/functional_principles_proofs.ml" 735 20835 20864
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 735 20835 20865 "plugins/funind/functional_principles_proofs.ml" 735 20835 20866
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 735 20835 20843 "plugins/funind/functional_principles_proofs.ml" 735 20835 20866
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 712 20170 20177 "plugins/funind/functional_principles_proofs.ml" 736 20867 20877
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 737 20878 20888 "plugins/funind/functional_principles_proofs.ml" 737 20878 20889
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 738 20898 20905 "plugins/funind/functional_principles_proofs.ml" 738 20898 20956
)
"plugins/funind/functional_principles_proofs.ml" 737 20878 20890 "plugins/funind/functional_principles_proofs.ml" 737 20878 20891
type(
  Term.cast_kind
)
"plugins/funind/functional_principles_proofs.ml" 737 20878 20892 "plugins/funind/functional_principles_proofs.ml" 737 20878 20893
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 737 20878 20883 "plugins/funind/functional_principles_proofs.ml" 737 20878 20894
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 738 20898 20905 "plugins/funind/functional_principles_proofs.ml" 738 20898 20916
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 738 20898 20917 "plugins/funind/functional_principles_proofs.ml" 738 20898 20928
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 738 20898 20930 "plugins/funind/functional_principles_proofs.ml" 738 20898 20939
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 738 20898 20952 "plugins/funind/functional_principles_proofs.ml" 738 20898 20953
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 737 20878 20888 "plugins/funind/functional_principles_proofs.ml" 737 20878 20889
)
"plugins/funind/functional_principles_proofs.ml" 738 20898 20929 "plugins/funind/functional_principles_proofs.ml" 738 20898 20954
type(
  Term.types dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 738 20898 20955 "plugins/funind/functional_principles_proofs.ml" 738 20898 20956
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 738 20898 20905 "plugins/funind/functional_principles_proofs.ml" 738 20898 20956
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20968 "plugins/funind/functional_principles_proofs.ml" 739 20957 20969
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20962 "plugins/funind/functional_principles_proofs.ml" 739 20957 20969
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20976 "plugins/funind/functional_principles_proofs.ml" 739 20957 20977
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20972 "plugins/funind/functional_principles_proofs.ml" 739 20957 20977
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20962 "plugins/funind/functional_principles_proofs.ml" 739 20957 20977
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20985 "plugins/funind/functional_principles_proofs.ml" 739 20957 20986
type(
  Term.metavariable
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20980 "plugins/funind/functional_principles_proofs.ml" 739 20957 20986
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20962 "plugins/funind/functional_principles_proofs.ml" 739 20957 20986
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20994 "plugins/funind/functional_principles_proofs.ml" 739 20957 20995
type(
  Term.types Term.pexistential
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20989 "plugins/funind/functional_principles_proofs.ml" 739 20957 20995
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20962 "plugins/funind/functional_principles_proofs.ml" 739 20957 20995
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 21003 "plugins/funind/functional_principles_proofs.ml" 739 20957 21004
type(
  Term.sorts
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20998 "plugins/funind/functional_principles_proofs.ml" 739 20957 21004
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20962 "plugins/funind/functional_principles_proofs.ml" 739 20957 21004
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 21017 "plugins/funind/functional_principles_proofs.ml" 739 20957 21018
type(
  Names.constructor
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 21007 "plugins/funind/functional_principles_proofs.ml" 739 20957 21018
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20962 "plugins/funind/functional_principles_proofs.ml" 739 20957 21018
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 21025 "plugins/funind/functional_principles_proofs.ml" 739 20957 21026
type(
  Names.inductive
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 21021 "plugins/funind/functional_principles_proofs.ml" 739 20957 21026
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 739 20957 20962 "plugins/funind/functional_principles_proofs.ml" 739 20957 21026
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 740 21030 21037 "plugins/funind/functional_principles_proofs.ml" 740 21030 21048
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 740 21030 21049 "plugins/funind/functional_principles_proofs.ml" 740 21030 21058
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 740 21030 21059 "plugins/funind/functional_principles_proofs.ml" 740 21030 21060
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 740 21030 21037 "plugins/funind/functional_principles_proofs.ml" 740 21030 21060
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 741 21061 21070 "plugins/funind/functional_principles_proofs.ml" 741 21061 21071
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 741 21061 21072 "plugins/funind/functional_principles_proofs.ml" 741 21061 21073
type(
  Term.types array
)
"plugins/funind/functional_principles_proofs.ml" 741 21061 21066 "plugins/funind/functional_principles_proofs.ml" 741 21061 21074
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 742 21078 21089 "plugins/funind/functional_principles_proofs.ml" 742 21078 21090
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 742 21078 21091 "plugins/funind/functional_principles_proofs.ml" 742 21078 21095
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 742 21078 21089 "plugins/funind/functional_principles_proofs.ml" 742 21078 21095
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 742 21078 21098 "plugins/funind/functional_principles_proofs.ml" 742 21078 21111
type(
  Term.types -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_proofs.ml" 742 21078 21112 "plugins/funind/functional_principles_proofs.ml" 742 21078 21121
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 742 21078 21112 "plugins/funind/functional_principles_proofs.ml" 742 21078 21126
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 742 21078 21098 "plugins/funind/functional_principles_proofs.ml" 742 21078 21126
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 744 21143 21151 "plugins/funind/functional_principles_proofs.ml" 744 21143 21163
type(
  Term.constr -> (Term.types, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 744 21143 21164 "plugins/funind/functional_principles_proofs.ml" 744 21143 21165
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 742 21078 21089 "plugins/funind/functional_principles_proofs.ml" 742 21078 21090
)
"plugins/funind/functional_principles_proofs.ml" 744 21143 21151 "plugins/funind/functional_principles_proofs.ml" 744 21143 21165
call(
  stack
)
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 745 21171 21181 "plugins/funind/functional_principles_proofs.ml" 745 21171 21182
type(
  Term.types array
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 745 21171 21177 "plugins/funind/functional_principles_proofs.ml" 745 21171 21182
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 745 21171 21186 "plugins/funind/functional_principles_proofs.ml" 745 21171 21198
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21262 "plugins/funind/functional_principles_proofs.ml" 746 21252 21263
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21258 "plugins/funind/functional_principles_proofs.ml" 746 21252 21263
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21276 "plugins/funind/functional_principles_proofs.ml" 746 21252 21277
type(
  Names.constructor
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21266 "plugins/funind/functional_principles_proofs.ml" 746 21252 21277
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21258 "plugins/funind/functional_principles_proofs.ml" 746 21252 21277
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21284 "plugins/funind/functional_principles_proofs.ml" 746 21252 21285
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21280 "plugins/funind/functional_principles_proofs.ml" 746 21252 21285
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21258 "plugins/funind/functional_principles_proofs.ml" 746 21252 21285
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21293 "plugins/funind/functional_principles_proofs.ml" 746 21252 21294
type(
  Term.types Term.pexistential
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21288 "plugins/funind/functional_principles_proofs.ml" 746 21252 21294
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21258 "plugins/funind/functional_principles_proofs.ml" 746 21252 21294
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21302 "plugins/funind/functional_principles_proofs.ml" 746 21252 21303
type(
  Term.metavariable
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21297 "plugins/funind/functional_principles_proofs.ml" 746 21252 21303
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21258 "plugins/funind/functional_principles_proofs.ml" 746 21252 21303
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21311 "plugins/funind/functional_principles_proofs.ml" 746 21252 21312
type(
  Names.inductive
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21307 "plugins/funind/functional_principles_proofs.ml" 746 21252 21312
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21258 "plugins/funind/functional_principles_proofs.ml" 746 21252 21312
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21320 "plugins/funind/functional_principles_proofs.ml" 746 21252 21321
type(
  Term.sorts
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21315 "plugins/funind/functional_principles_proofs.ml" 746 21252 21321
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21258 "plugins/funind/functional_principles_proofs.ml" 746 21252 21321
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21329 "plugins/funind/functional_principles_proofs.ml" 746 21252 21330
type(
  Term.types
)
type(
  Term.types
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21324 "plugins/funind/functional_principles_proofs.ml" 746 21252 21330
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 746 21252 21258 "plugins/funind/functional_principles_proofs.ml" 746 21252 21330
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 747 21334 21346 "plugins/funind/functional_principles_proofs.ml" 747 21334 21355
type(
  (Term.constr * Term.constr list) dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 748 21358 21363 "plugins/funind/functional_principles_proofs.ml" 748 21358 21372
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 749 21378 21393 "plugins/funind/functional_principles_proofs.ml" 749 21378 21394
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 742 21078 21089 "plugins/funind/functional_principles_proofs.ml" 742 21078 21090
)
"plugins/funind/functional_principles_proofs.ml" 749 21378 21395 "plugins/funind/functional_principles_proofs.ml" 749 21378 21399
type(
  Term.constr list
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 742 21078 21091 "plugins/funind/functional_principles_proofs.ml" 742 21078 21095
)
"plugins/funind/functional_principles_proofs.ml" 749 21378 21392 "plugins/funind/functional_principles_proofs.ml" 749 21378 21400
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 748 21358 21361 "plugins/funind/functional_principles_proofs.ml" 750 21401 21405
type(
  (Term.constr * Term.constr list) dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 752 21417 21425 "plugins/funind/functional_principles_proofs.ml" 752 21417 21441
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  (Term.types * Term.types list) dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof_args "plugins/funind/functional_principles_proofs.ml" 816 23380 23386 "plugins/funind/functional_principles_proofs.ml" 816 23380 23402
)
"plugins/funind/functional_principles_proofs.ml" 752 21417 21442 "plugins/funind/functional_principles_proofs.ml" 752 21417 21453
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 752 21417 21454 "plugins/funind/functional_principles_proofs.ml" 752 21417 21463
type(
  (Term.types * Term.types list) dynamic_info
)
ident(
  int_ref new_infos "plugins/funind/functional_principles_proofs.ml" 747 21334 21346 "plugins/funind/functional_principles_proofs.ml" 747 21334 21355
)
"plugins/funind/functional_principles_proofs.ml" 752 21417 21465 "plugins/funind/functional_principles_proofs.ml" 752 21417 21466
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 752 21417 21425 "plugins/funind/functional_principles_proofs.ml" 752 21417 21466
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 747 21334 21342 "plugins/funind/functional_principles_proofs.ml" 752 21417 21466
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 753 21467 21479 "plugins/funind/functional_principles_proofs.ml" 753 21467 21480
type(
  Names.constant
)
ident(
  def c "plugins/funind/functional_principles_proofs.ml" 753 21467 21481 "plugins/funind/functional_principles_proofs.ml" 760 21684 21732
)
"plugins/funind/functional_principles_proofs.ml" 753 21467 21473 "plugins/funind/functional_principles_proofs.ml" 753 21467 21480
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 753 21467 21486 "plugins/funind/functional_principles_proofs.ml" 753 21467 21489
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"plugins/funind/functional_principles_proofs.ml" 753 21467 21491 "plugins/funind/functional_principles_proofs.ml" 753 21467 21499
type(
  Names.constant -> Names.constant list -> bool
)
ident(
  ext_ref List.mem
)
"plugins/funind/functional_principles_proofs.ml" 753 21467 21500 "plugins/funind/functional_principles_proofs.ml" 753 21467 21501
type(
  Names.constant
)
ident(
  int_ref c "plugins/funind/functional_principles_proofs.ml" 753 21467 21479 "plugins/funind/functional_principles_proofs.ml" 753 21467 21480
)
"plugins/funind/functional_principles_proofs.ml" 753 21467 21502 "plugins/funind/functional_principles_proofs.ml" 753 21467 21508
type(
  Names.constant list
)
ident(
  int_ref fnames "plugins/funind/functional_principles_proofs.ml" 666 18855 18860 "plugins/funind/functional_principles_proofs.ml" 666 18855 18866
)
"plugins/funind/functional_principles_proofs.ml" 753 21467 21490 "plugins/funind/functional_principles_proofs.ml" 753 21467 21509
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 753 21467 21486 "plugins/funind/functional_principles_proofs.ml" 753 21467 21509
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 754 21513 21525 "plugins/funind/functional_principles_proofs.ml" 754 21513 21534
type(
  (Term.constr * Term.constr list) dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 755 21537 21542 "plugins/funind/functional_principles_proofs.ml" 755 21537 21551
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 756 21557 21572 "plugins/funind/functional_principles_proofs.ml" 756 21557 21573
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 742 21078 21089 "plugins/funind/functional_principles_proofs.ml" 742 21078 21090
)
"plugins/funind/functional_principles_proofs.ml" 756 21557 21574 "plugins/funind/functional_principles_proofs.ml" 756 21557 21578
type(
  Term.constr list
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 742 21078 21091 "plugins/funind/functional_principles_proofs.ml" 742 21078 21095
)
"plugins/funind/functional_principles_proofs.ml" 756 21557 21571 "plugins/funind/functional_principles_proofs.ml" 756 21557 21579
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 755 21537 21540 "plugins/funind/functional_principles_proofs.ml" 757 21580 21584
type(
  (Term.constr * Term.constr list) dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 760 21684 21692 "plugins/funind/functional_principles_proofs.ml" 760 21684 21708
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  (Term.types * Term.types list) dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof_args "plugins/funind/functional_principles_proofs.ml" 816 23380 23386 "plugins/funind/functional_principles_proofs.ml" 816 23380 23402
)
"plugins/funind/functional_principles_proofs.ml" 760 21684 21709 "plugins/funind/functional_principles_proofs.ml" 760 21684 21720
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 760 21684 21721 "plugins/funind/functional_principles_proofs.ml" 760 21684 21730
type(
  (Term.types * Term.types list) dynamic_info
)
ident(
  int_ref new_infos "plugins/funind/functional_principles_proofs.ml" 754 21513 21525 "plugins/funind/functional_principles_proofs.ml" 754 21513 21534
)
"plugins/funind/functional_principles_proofs.ml" 760 21684 21731 "plugins/funind/functional_principles_proofs.ml" 760 21684 21732
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 760 21684 21692 "plugins/funind/functional_principles_proofs.ml" 760 21684 21732
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 754 21513 21521 "plugins/funind/functional_principles_proofs.ml" 760 21684 21732
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 753 21467 21481 "plugins/funind/functional_principles_proofs.ml" 760 21684 21732
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 761 21733 21745 "plugins/funind/functional_principles_proofs.ml" 761 21733 21746
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 761 21733 21739 "plugins/funind/functional_principles_proofs.ml" 761 21733 21746
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 762 21750 21758 "plugins/funind/functional_principles_proofs.ml" 762 21750 21769
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 762 21750 21770 "plugins/funind/functional_principles_proofs.ml" 762 21750 21779
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 762 21750 21781 "plugins/funind/functional_principles_proofs.ml" 762 21750 21782
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 762 21750 21758 "plugins/funind/functional_principles_proofs.ml" 762 21750 21782
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 763 21783 21796 "plugins/funind/functional_principles_proofs.ml" 763 21783 21797
type(
  Term.types
)
type(
  Term.types
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 763 21783 21789 "plugins/funind/functional_principles_proofs.ml" 763 21783 21797
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 764 21801 21813 "plugins/funind/functional_principles_proofs.ml" 764 21801 21821
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 765 21824 21848 "plugins/funind/functional_principles_proofs.ml" 765 21824 21868
type(
  Reductionops.local_reduction_function
)
ident(
  ext_ref Reductionops.nf_beta
)
"plugins/funind/functional_principles_proofs.ml" 765 21824 21869 "plugins/funind/functional_principles_proofs.ml" 765 21824 21878
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_proofs.ml" 765 21824 21879 "plugins/funind/functional_principles_proofs.ml" 765 21824 21888
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 765 21824 21879 "plugins/funind/functional_principles_proofs.ml" 765 21824 21893
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 765 21824 21848 "plugins/funind/functional_principles_proofs.ml" 765 21824 21893
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 766 21897 21905 "plugins/funind/functional_principles_proofs.ml" 766 21897 21916
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 766 21897 21917 "plugins/funind/functional_principles_proofs.ml" 766 21897 21928
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 766 21897 21930 "plugins/funind/functional_principles_proofs.ml" 766 21897 21939
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 766 21897 21952 "plugins/funind/functional_principles_proofs.ml" 766 21897 21960
type(
  Term.types
)
ident(
  int_ref new_term "plugins/funind/functional_principles_proofs.ml" 764 21801 21813 "plugins/funind/functional_principles_proofs.ml" 764 21801 21821
)
"plugins/funind/functional_principles_proofs.ml" 766 21897 21929 "plugins/funind/functional_principles_proofs.ml" 766 21897 21961
type(
  Term.types dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 767 21962 21965 "plugins/funind/functional_principles_proofs.ml" 767 21962 21966
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 766 21897 21905 "plugins/funind/functional_principles_proofs.ml" 767 21962 21966
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 764 21801 21809 "plugins/funind/functional_principles_proofs.ml" 767 21962 21966
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 768 21967 21979 "plugins/funind/functional_principles_proofs.ml" 768 21967 21980
type(
  Term.types
)
type(
  Term.types
)
type(
  Term.types
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 768 21967 21973 "plugins/funind/functional_principles_proofs.ml" 768 21967 21980
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 769 21984 21996 "plugins/funind/functional_principles_proofs.ml" 769 21984 22005
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 770 22008 22013 "plugins/funind/functional_principles_proofs.ml" 770 22008 22022
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 770 22008 22035 "plugins/funind/functional_principles_proofs.ml" 770 22008 22050
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_betaiotazeta "plugins/funind/functional_principles_proofs.ml" 202 4587 4591 "plugins/funind/functional_principles_proofs.ml" 202 4587 4606
)
"plugins/funind/functional_principles_proofs.ml" 770 22008 22051 "plugins/funind/functional_principles_proofs.ml" 770 22008 22060
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 770 22008 22051 "plugins/funind/functional_principles_proofs.ml" 770 22008 22065
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 770 22008 22035 "plugins/funind/functional_principles_proofs.ml" 770 22008 22065
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 770 22008 22011 "plugins/funind/functional_principles_proofs.ml" 770 22008 22067
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 773 22080 22088 "plugins/funind/functional_principles_proofs.ml" 773 22080 22099
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 774 22100 22104 "plugins/funind/functional_principles_proofs.ml" 774 22100 22110
type(
  (Names.identifier -> Proof_type.tactic) ->
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/functional_principles_proofs.ml" 775 22111 22122 "plugins/funind/functional_principles_proofs.ml" 775 22111 22128
type(
  Names.identifier
)
ident(
  def hyp_id "plugins/funind/functional_principles_proofs.ml" 775 22111 22132 "plugins/funind/functional_principles_proofs.ml" 775 22111 22175
)
"plugins/funind/functional_principles_proofs.ml" 775 22111 22132 "plugins/funind/functional_principles_proofs.ml" 775 22111 22150
type(
  Tacticals.clause -> Tacmach.tactic
)
ident(
  int_ref h_reduce_with_zeta "plugins/funind/functional_principles_proofs.ml" 351 9988 9992 "plugins/funind/functional_principles_proofs.ml" 351 9988 10010
)
"plugins/funind/functional_principles_proofs.ml" 775 22111 22152 "plugins/funind/functional_principles_proofs.ml" 775 22111 22167
type(
  Names.identifier -> Tacticals.clause
)
ident(
  ext_ref Tacticals.onHyp
)
"plugins/funind/functional_principles_proofs.ml" 775 22111 22168 "plugins/funind/functional_principles_proofs.ml" 775 22111 22174
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 775 22111 22122 "plugins/funind/functional_principles_proofs.ml" 775 22111 22128
)
"plugins/funind/functional_principles_proofs.ml" 775 22111 22151 "plugins/funind/functional_principles_proofs.ml" 775 22111 22175
call(
  stack
)
type(
  Tacticals.clause
)
"plugins/funind/functional_principles_proofs.ml" 775 22111 22132 "plugins/funind/functional_principles_proofs.ml" 775 22111 22175
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 775 22111 22117 "plugins/funind/functional_principles_proofs.ml" 775 22111 22176
type(
  Names.identifier -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 776 22177 22183 "plugins/funind/functional_principles_proofs.ml" 776 22177 22192
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 776 22177 22183 "plugins/funind/functional_principles_proofs.ml" 776 22177 22201
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 774 22100 22104 "plugins/funind/functional_principles_proofs.ml" 776 22177 22201
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 777 22203 22207 "plugins/funind/functional_principles_proofs.ml" 777 22203 22225
type(
  Tacticals.clause -> Tacmach.tactic
)
ident(
  int_ref h_reduce_with_zeta "plugins/funind/functional_principles_proofs.ml" 351 9988 9992 "plugins/funind/functional_principles_proofs.ml" 351 9988 10010
)
"plugins/funind/functional_principles_proofs.ml" 777 22203 22226 "plugins/funind/functional_principles_proofs.ml" 777 22203 22243
type(
  Tacticals.clause
)
ident(
  ext_ref Tacticals.onConcl
)
"plugins/funind/functional_principles_proofs.ml" 777 22203 22207 "plugins/funind/functional_principles_proofs.ml" 777 22203 22243
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 778 22245 22249 "plugins/funind/functional_principles_proofs.ml" 778 22245 22260
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 778 22245 22261 "plugins/funind/functional_principles_proofs.ml" 778 22245 22272
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 778 22245 22273 "plugins/funind/functional_principles_proofs.ml" 778 22245 22282
type(
  Term.types dynamic_info
)
ident(
  int_ref new_infos "plugins/funind/functional_principles_proofs.ml" 769 21984 21996 "plugins/funind/functional_principles_proofs.ml" 769 21984 22005
)
"plugins/funind/functional_principles_proofs.ml" 778 22245 22249 "plugins/funind/functional_principles_proofs.ml" 778 22245 22282
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 774 22100 22103 "plugins/funind/functional_principles_proofs.ml" 779 22283 22287
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 780 22288 22291 "plugins/funind/functional_principles_proofs.ml" 780 22288 22292
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 773 22080 22088 "plugins/funind/functional_principles_proofs.ml" 780 22288 22292
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 769 21984 21992 "plugins/funind/functional_principles_proofs.ml" 780 22288 22292
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 781 22293 22304 "plugins/funind/functional_principles_proofs.ml" 781 22293 22305
type(
  Term.types
)
ident(
  def b "plugins/funind/functional_principles_proofs.ml" 782 22314 22322 "plugins/funind/functional_principles_proofs.ml" 782 22314 22374
)
"plugins/funind/functional_principles_proofs.ml" 781 22293 22306 "plugins/funind/functional_principles_proofs.ml" 781 22293 22307
type(
  Term.cast_kind
)
"plugins/funind/functional_principles_proofs.ml" 781 22293 22308 "plugins/funind/functional_principles_proofs.ml" 781 22293 22309
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 781 22293 22299 "plugins/funind/functional_principles_proofs.ml" 781 22293 22310
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 782 22314 22322 "plugins/funind/functional_principles_proofs.ml" 782 22314 22333
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 782 22314 22334 "plugins/funind/functional_principles_proofs.ml" 782 22314 22345
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 782 22314 22347 "plugins/funind/functional_principles_proofs.ml" 782 22314 22356
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 782 22314 22369 "plugins/funind/functional_principles_proofs.ml" 782 22314 22370
type(
  Term.types
)
ident(
  int_ref b "plugins/funind/functional_principles_proofs.ml" 781 22293 22304 "plugins/funind/functional_principles_proofs.ml" 781 22293 22305
)
"plugins/funind/functional_principles_proofs.ml" 782 22314 22346 "plugins/funind/functional_principles_proofs.ml" 782 22314 22372
type(
  Term.types dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 782 22314 22373 "plugins/funind/functional_principles_proofs.ml" 782 22314 22374
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 782 22314 22322 "plugins/funind/functional_principles_proofs.ml" 782 22314 22374
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 783 22375 22386 "plugins/funind/functional_principles_proofs.ml" 783 22375 22387
type(
  Term.types array
)
type(
  Term.types
)
type(
  Term.types
)
type(
  Term.case_info
)
"plugins/funind/functional_principles_proofs.ml" 783 22375 22381 "plugins/funind/functional_principles_proofs.ml" 783 22375 22387
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 783 22375 22394 "plugins/funind/functional_principles_proofs.ml" 783 22375 22395
type(
  (Term.types, Term.types) Term.pfixpoint
)
"plugins/funind/functional_principles_proofs.ml" 783 22375 22390 "plugins/funind/functional_principles_proofs.ml" 783 22375 22395
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 783 22375 22381 "plugins/funind/functional_principles_proofs.ml" 783 22375 22395
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 783 22375 22404 "plugins/funind/functional_principles_proofs.ml" 783 22375 22405
type(
  (Term.types, Term.types) Term.pcofixpoint
)
"plugins/funind/functional_principles_proofs.ml" 783 22375 22398 "plugins/funind/functional_principles_proofs.ml" 783 22375 22405
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 783 22375 22381 "plugins/funind/functional_principles_proofs.ml" 783 22375 22405
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 784 22409 22421 "plugins/funind/functional_principles_proofs.ml" 784 22409 22433
type(
  Term.types dynamic_info -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 784 22409 22434 "plugins/funind/functional_principles_proofs.ml" 784 22409 22443
type(
  Term.types dynamic_info
)
ident(
  def dyn_infos "plugins/funind/functional_principles_proofs.ml" 785 22446 22449 "plugins/funind/functional_principles_proofs.ml" 790 22536 22577
)
"plugins/funind/functional_principles_proofs.ml" 785 22446 22453 "plugins/funind/functional_principles_proofs.ml" 785 22446 22462
type(
  (Term.types * Term.constr list) dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 786 22465 22472 "plugins/funind/functional_principles_proofs.ml" 786 22465 22481
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 784 22409 22434 "plugins/funind/functional_principles_proofs.ml" 784 22409 22443
)
"plugins/funind/functional_principles_proofs.ml" 787 22487 22503 "plugins/funind/functional_principles_proofs.ml" 787 22487 22512
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 784 22409 22434 "plugins/funind/functional_principles_proofs.ml" 784 22409 22443
)
"plugins/funind/functional_principles_proofs.ml" 787 22487 22503 "plugins/funind/functional_principles_proofs.ml" 787 22487 22517
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 787 22487 22518 "plugins/funind/functional_principles_proofs.ml" 787 22487 22522
type(
  Term.constr list
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 742 21078 21091 "plugins/funind/functional_principles_proofs.ml" 742 21078 21095
)
"plugins/funind/functional_principles_proofs.ml" 787 22487 22503 "plugins/funind/functional_principles_proofs.ml" 787 22487 22522
type(
  Term.types * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 786 22465 22470 "plugins/funind/functional_principles_proofs.ml" 788 22523 22529
type(
  (Term.types * Term.constr list) dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 790 22536 22539 "plugins/funind/functional_principles_proofs.ml" 790 22536 22555
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  (Term.types * Term.types list) dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof_args "plugins/funind/functional_principles_proofs.ml" 816 23380 23386 "plugins/funind/functional_principles_proofs.ml" 816 23380 23402
)
"plugins/funind/functional_principles_proofs.ml" 790 22536 22556 "plugins/funind/functional_principles_proofs.ml" 790 22536 22567
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 790 22536 22568 "plugins/funind/functional_principles_proofs.ml" 790 22536 22577
type(
  (Term.types * Term.types list) dynamic_info
)
ident(
  int_ref new_infos "plugins/funind/functional_principles_proofs.ml" 785 22446 22453 "plugins/funind/functional_principles_proofs.ml" 785 22446 22462
)
"plugins/funind/functional_principles_proofs.ml" 790 22536 22539 "plugins/funind/functional_principles_proofs.ml" 790 22536 22577
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 785 22446 22449 "plugins/funind/functional_principles_proofs.ml" 790 22536 22577
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 792 22589 22597 "plugins/funind/functional_principles_proofs.ml" 792 22589 22608
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 792 22589 22609 "plugins/funind/functional_principles_proofs.ml" 792 22589 22621
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref new_finalize "plugins/funind/functional_principles_proofs.ml" 784 22409 22421 "plugins/funind/functional_principles_proofs.ml" 784 22409 22433
)
"plugins/funind/functional_principles_proofs.ml" 792 22589 22623 "plugins/funind/functional_principles_proofs.ml" 792 22589 22632
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 792 22589 22646 "plugins/funind/functional_principles_proofs.ml" 792 22589 22647
type(
  Term.types
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 742 21078 21089 "plugins/funind/functional_principles_proofs.ml" 742 21078 21090
)
"plugins/funind/functional_principles_proofs.ml" 792 22589 22622 "plugins/funind/functional_principles_proofs.ml" 792 22589 22649
type(
  Term.types dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 792 22589 22650 "plugins/funind/functional_principles_proofs.ml" 792 22589 22651
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 792 22589 22597 "plugins/funind/functional_principles_proofs.ml" 792 22589 22651
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 784 22409 22417 "plugins/funind/functional_principles_proofs.ml" 792 22589 22651
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 743 21130 21137 "plugins/funind/functional_principles_proofs.ml" 793 22652 22662
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 742 21078 21085 "plugins/funind/functional_principles_proofs.ml" 793 22652 22662
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 794 22663 22672 "plugins/funind/functional_principles_proofs.ml" 794 22663 22673
type(
  (Term.types, Term.types) Term.pfixpoint
)
"plugins/funind/functional_principles_proofs.ml" 794 22663 22668 "plugins/funind/functional_principles_proofs.ml" 794 22663 22673
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 794 22663 22682 "plugins/funind/functional_principles_proofs.ml" 794 22663 22683
type(
  (Term.types, Term.types) Term.pcofixpoint
)
"plugins/funind/functional_principles_proofs.ml" 794 22663 22676 "plugins/funind/functional_principles_proofs.ml" 794 22663 22683
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 794 22663 22668 "plugins/funind/functional_principles_proofs.ml" 794 22663 22683
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 795 22687 22694 "plugins/funind/functional_principles_proofs.ml" 795 22687 22699
type(
  string -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_proofs.ml" 795 22687 22700 "plugins/funind/functional_principles_proofs.ml" 795 22687 22754
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 795 22687 22694 "plugins/funind/functional_principles_proofs.ml" 795 22687 22754
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 797 22756 22766 "plugins/funind/functional_principles_proofs.ml" 797 22756 22767
type(
  Term.types
)
type(
  Term.types
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 797 22756 22761 "plugins/funind/functional_principles_proofs.ml" 797 22756 22767
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 797 22756 22771 "plugins/funind/functional_principles_proofs.ml" 797 22756 22776
type(
  string -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_proofs.ml" 797 22756 22777 "plugins/funind/functional_principles_proofs.ml" 797 22756 22783
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 797 22756 22771 "plugins/funind/functional_principles_proofs.ml" 797 22756 22783
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 798 22784 22795 "plugins/funind/functional_principles_proofs.ml" 798 22784 22796
type(
  Term.types
)
type(
  Term.types
)
type(
  Term.types
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 798 22784 22789 "plugins/funind/functional_principles_proofs.ml" 798 22784 22796
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 799 22800 22811 "plugins/funind/functional_principles_proofs.ml" 799 22800 22820
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 800 22823 22827 "plugins/funind/functional_principles_proofs.ml" 800 22823 22836
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 801 22842 22855 "plugins/funind/functional_principles_proofs.ml" 801 22842 22870
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_betaiotazeta "plugins/funind/functional_principles_proofs.ml" 202 4587 4591 "plugins/funind/functional_principles_proofs.ml" 202 4587 4606
)
"plugins/funind/functional_principles_proofs.ml" 801 22842 22871 "plugins/funind/functional_principles_proofs.ml" 801 22842 22880
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 801 22842 22871 "plugins/funind/functional_principles_proofs.ml" 801 22842 22885
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 801 22842 22855 "plugins/funind/functional_principles_proofs.ml" 801 22842 22885
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 800 22823 22825 "plugins/funind/functional_principles_proofs.ml" 802 22886 22889
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 805 22901 22908 "plugins/funind/functional_principles_proofs.ml" 805 22901 22919
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 806 22920 22923 "plugins/funind/functional_principles_proofs.ml" 806 22920 22929
type(
  (Names.identifier -> Proof_type.tactic) ->
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/functional_principles_proofs.ml" 807 22930 22940 "plugins/funind/functional_principles_proofs.ml" 807 22930 22946
type(
  Names.identifier
)
ident(
  def hyp_id "plugins/funind/functional_principles_proofs.ml" 807 22930 22950 "plugins/funind/functional_principles_proofs.ml" 807 22930 22993
)
"plugins/funind/functional_principles_proofs.ml" 807 22930 22950 "plugins/funind/functional_principles_proofs.ml" 807 22930 22968
type(
  Tacticals.clause -> Tacmach.tactic
)
ident(
  int_ref h_reduce_with_zeta "plugins/funind/functional_principles_proofs.ml" 351 9988 9992 "plugins/funind/functional_principles_proofs.ml" 351 9988 10010
)
"plugins/funind/functional_principles_proofs.ml" 807 22930 22970 "plugins/funind/functional_principles_proofs.ml" 807 22930 22985
type(
  Names.identifier -> Tacticals.clause
)
ident(
  ext_ref Tacticals.onHyp
)
"plugins/funind/functional_principles_proofs.ml" 807 22930 22986 "plugins/funind/functional_principles_proofs.ml" 807 22930 22992
type(
  Names.identifier
)
ident(
  int_ref hyp_id "plugins/funind/functional_principles_proofs.ml" 807 22930 22940 "plugins/funind/functional_principles_proofs.ml" 807 22930 22946
)
"plugins/funind/functional_principles_proofs.ml" 807 22930 22969 "plugins/funind/functional_principles_proofs.ml" 807 22930 22993
call(
  stack
)
type(
  Tacticals.clause
)
"plugins/funind/functional_principles_proofs.ml" 807 22930 22950 "plugins/funind/functional_principles_proofs.ml" 807 22930 22993
call(
  tail
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 807 22930 22935 "plugins/funind/functional_principles_proofs.ml" 807 22930 22994
type(
  Names.identifier -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 808 22995 23000 "plugins/funind/functional_principles_proofs.ml" 808 22995 23009
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 670 18926 18964 "plugins/funind/functional_principles_proofs.ml" 670 18926 18973
)
"plugins/funind/functional_principles_proofs.ml" 808 22995 23000 "plugins/funind/functional_principles_proofs.ml" 808 22995 23018
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 806 22920 22923 "plugins/funind/functional_principles_proofs.ml" 808 22995 23018
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 809 23020 23023 "plugins/funind/functional_principles_proofs.ml" 809 23020 23041
type(
  Tacticals.clause -> Tacmach.tactic
)
ident(
  int_ref h_reduce_with_zeta "plugins/funind/functional_principles_proofs.ml" 351 9988 9992 "plugins/funind/functional_principles_proofs.ml" 351 9988 10010
)
"plugins/funind/functional_principles_proofs.ml" 809 23020 23042 "plugins/funind/functional_principles_proofs.ml" 809 23020 23059
type(
  Tacticals.clause
)
ident(
  ext_ref Tacticals.onConcl
)
"plugins/funind/functional_principles_proofs.ml" 809 23020 23023 "plugins/funind/functional_principles_proofs.ml" 809 23020 23059
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 810 23061 23064 "plugins/funind/functional_principles_proofs.ml" 810 23061 23075
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 810 23061 23076 "plugins/funind/functional_principles_proofs.ml" 810 23061 23087
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 670 18926 18952 "plugins/funind/functional_principles_proofs.ml" 670 18926 18963
)
"plugins/funind/functional_principles_proofs.ml" 810 23061 23088 "plugins/funind/functional_principles_proofs.ml" 810 23061 23097
type(
  Term.types dynamic_info
)
ident(
  int_ref new_infos "plugins/funind/functional_principles_proofs.ml" 799 22800 22811 "plugins/funind/functional_principles_proofs.ml" 799 22800 22820
)
"plugins/funind/functional_principles_proofs.ml" 810 23061 23064 "plugins/funind/functional_principles_proofs.ml" 810 23061 23097
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 806 22920 22922 "plugins/funind/functional_principles_proofs.ml" 811 23098 23101
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 811 23098 23102 "plugins/funind/functional_principles_proofs.ml" 811 23098 23103
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 671 18985 18993 "plugins/funind/functional_principles_proofs.ml" 671 18985 18994
)
"plugins/funind/functional_principles_proofs.ml" 805 22901 22908 "plugins/funind/functional_principles_proofs.ml" 811 23098 23103
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 799 22800 22807 "plugins/funind/functional_principles_proofs.ml" 811 23098 23103
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 812 23104 23113 "plugins/funind/functional_principles_proofs.ml" 812 23104 23114
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 812 23104 23109 "plugins/funind/functional_principles_proofs.ml" 812 23104 23114
type(
  (Term.types, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 812 23104 23118 "plugins/funind/functional_principles_proofs.ml" 812 23104 23125
type(
  string -> Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_proofs.ml" 812 23104 23126 "plugins/funind/functional_principles_proofs.ml" 812 23104 23157
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 812 23104 23118 "plugins/funind/functional_principles_proofs.ml" 812 23104 23157
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 673 19079 19080 "plugins/funind/functional_principles_proofs.ml" 812 23104 23157
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 671 18985 18989 "plugins/funind/functional_principles_proofs.ml" 812 23104 23157
type(
  Proof_type.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 813 23158 23176 "plugins/funind/functional_principles_proofs.ml" 813 23158 23187
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  def do_finalize "plugins/funind/functional_principles_proofs.ml" 813 23158 23188 "plugins/funind/functional_principles_proofs.ml" 815 23308 23379
)
"plugins/funind/functional_principles_proofs.ml" 813 23158 23188 "plugins/funind/functional_principles_proofs.ml" 813 23158 23197
type(
  Term.types dynamic_info
)
ident(
  def dyn_infos "plugins/funind/functional_principles_proofs.ml" 813 23158 23198 "plugins/funind/functional_principles_proofs.ml" 815 23308 23379
)
"plugins/funind/functional_principles_proofs.ml" 813 23158 23198 "plugins/funind/functional_principles_proofs.ml" 813 23158 23199
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 815 23308 23312 "plugins/funind/functional_principles_proofs.ml" 815 23308 23379
)
"plugins/funind/functional_principles_proofs.ml" 815 23308 23312 "plugins/funind/functional_principles_proofs.ml" 815 23308 23323
type(
  string ->
  Proof_type.tactic ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 815 23308 23324 "plugins/funind/functional_principles_proofs.ml" 815 23308 23337
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 815 23308 23339 "plugins/funind/functional_principles_proofs.ml" 815 23308 23354
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof_aux "plugins/funind/functional_principles_proofs.ml" 670 18926 18936 "plugins/funind/functional_principles_proofs.ml" 670 18926 18951
)
"plugins/funind/functional_principles_proofs.ml" 815 23308 23355 "plugins/funind/functional_principles_proofs.ml" 815 23308 23366
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 813 23158 23176 "plugins/funind/functional_principles_proofs.ml" 813 23158 23187
)
"plugins/funind/functional_principles_proofs.ml" 815 23308 23367 "plugins/funind/functional_principles_proofs.ml" 815 23308 23376
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 813 23158 23188 "plugins/funind/functional_principles_proofs.ml" 813 23158 23197
)
"plugins/funind/functional_principles_proofs.ml" 815 23308 23338 "plugins/funind/functional_principles_proofs.ml" 815 23308 23377
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 815 23308 23378 "plugins/funind/functional_principles_proofs.ml" 815 23308 23379
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 813 23158 23198 "plugins/funind/functional_principles_proofs.ml" 813 23158 23199
)
"plugins/funind/functional_principles_proofs.ml" 815 23308 23312 "plugins/funind/functional_principles_proofs.ml" 815 23308 23379
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 816 23380 23386 "plugins/funind/functional_principles_proofs.ml" 816 23380 23402
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  (Term.types * Term.types list) dynamic_info -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 816 23380 23403 "plugins/funind/functional_principles_proofs.ml" 816 23380 23414
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  def do_finalize "plugins/funind/functional_principles_proofs.ml" 816 23380 23415 "plugins/funind/functional_principles_proofs.ml" 841 24080 24131
)
"plugins/funind/functional_principles_proofs.ml" 816 23380 23415 "plugins/funind/functional_principles_proofs.ml" 816 23380 23424
type(
  (Term.types * Term.types list) dynamic_info
)
ident(
  def dyn_infos "plugins/funind/functional_principles_proofs.ml" 816 23380 23445 "plugins/funind/functional_principles_proofs.ml" 841 24080 24131
)
"plugins/funind/functional_principles_proofs.ml" 817 23455 23463 "plugins/funind/functional_principles_proofs.ml" 817 23455 23464
type(
  Proof_type.goal Evd.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 818 23468 23474 "plugins/funind/functional_principles_proofs.ml" 841 24080 24131
)
"plugins/funind/functional_principles_proofs.ml" 818 23468 23479 "plugins/funind/functional_principles_proofs.ml" 818 23468 23486
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 818 23468 23487 "plugins/funind/functional_principles_proofs.ml" 818 23468 23491
type(
  Term.types list
)
"plugins/funind/functional_principles_proofs.ml" 818 23468 23478 "plugins/funind/functional_principles_proofs.ml" 818 23468 23492
type(
  Term.types * Term.types list
)
"plugins/funind/functional_principles_proofs.ml" 818 23468 23495 "plugins/funind/functional_principles_proofs.ml" 818 23468 23504
type(
  (Term.types * Term.types list) dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 816 23380 23415 "plugins/funind/functional_principles_proofs.ml" 816 23380 23424
)
"plugins/funind/functional_principles_proofs.ml" 818 23468 23495 "plugins/funind/functional_principles_proofs.ml" 818 23468 23509
type(
  Term.types * Term.types list
)
"plugins/funind/functional_principles_proofs.ml" 819 23513 23523 "plugins/funind/functional_principles_proofs.ml" 819 23513 23526
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 820 23538 23543 "plugins/funind/functional_principles_proofs.ml" 820 23538 23544
type(
  Proof_type.goal Evd.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 821 23548 23549 "plugins/funind/functional_principles_proofs.ml" 839 24067 24070
)
"plugins/funind/functional_principles_proofs.ml" 821 23548 23555 "plugins/funind/functional_principles_proofs.ml" 821 23548 23559
type(
  Term.types list
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 818 23468 23487 "plugins/funind/functional_principles_proofs.ml" 818 23468 23491
)
"plugins/funind/functional_principles_proofs.ml" 822 23565 23570 "plugins/funind/functional_principles_proofs.ml" 822 23565 23572
type(
  Term.types list
)
"plugins/funind/functional_principles_proofs.ml" 823 23577 23584 "plugins/funind/functional_principles_proofs.ml" 823 23577 23595
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 816 23380 23403 "plugins/funind/functional_principles_proofs.ml" 816 23380 23414
)
"plugins/funind/functional_principles_proofs.ml" 823 23577 23597 "plugins/funind/functional_principles_proofs.ml" 823 23577 23606
type(
  (Term.types * Term.types list) dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 816 23380 23415 "plugins/funind/functional_principles_proofs.ml" 816 23380 23424
)
"plugins/funind/functional_principles_proofs.ml" 823 23577 23619 "plugins/funind/functional_principles_proofs.ml" 823 23577 23626
type(
  Term.types
)
ident(
  int_ref f_args' "plugins/funind/functional_principles_proofs.ml" 818 23468 23479 "plugins/funind/functional_principles_proofs.ml" 818 23468 23486
)
"plugins/funind/functional_principles_proofs.ml" 823 23577 23596 "plugins/funind/functional_principles_proofs.ml" 823 23577 23627
type(
  Term.types dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 823 23577 23628 "plugins/funind/functional_principles_proofs.ml" 823 23577 23629
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 820 23538 23543 "plugins/funind/functional_principles_proofs.ml" 820 23538 23544
)
"plugins/funind/functional_principles_proofs.ml" 823 23577 23584 "plugins/funind/functional_principles_proofs.ml" 823 23577 23629
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 824 23630 23635 "plugins/funind/functional_principles_proofs.ml" 824 23630 23638
type(
  Term.types
)
ident(
  def arg "plugins/funind/functional_principles_proofs.ml" 829 23803 23810 "plugins/funind/functional_principles_proofs.ml" 839 24067 24070
)
"plugins/funind/functional_principles_proofs.ml" 824 23630 23640 "plugins/funind/functional_principles_proofs.ml" 824 23630 23644
type(
  Term.types list
)
ident(
  def args "plugins/funind/functional_principles_proofs.ml" 829 23803 23810 "plugins/funind/functional_principles_proofs.ml" 839 24067 24070
)
"plugins/funind/functional_principles_proofs.ml" 824 23630 23635 "plugins/funind/functional_principles_proofs.ml" 824 23630 23644
type(
  Term.types list
)
"plugins/funind/functional_principles_proofs.ml" 829 23803 23814 "plugins/funind/functional_principles_proofs.ml" 829 23803 23825
type(
  Term.constr dynamic_info -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 829 23803 23826 "plugins/funind/functional_principles_proofs.ml" 829 23803 23835
type(
  Term.constr dynamic_info
)
ident(
  def dyn_infos "plugins/funind/functional_principles_proofs.ml" 830 23838 23840 "plugins/funind/functional_principles_proofs.ml" 835 23991 23994
)
"plugins/funind/functional_principles_proofs.ml" 830 23838 23844 "plugins/funind/functional_principles_proofs.ml" 830 23838 23851
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 830 23838 23854 "plugins/funind/functional_principles_proofs.ml" 830 23838 23863
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 829 23803 23826 "plugins/funind/functional_principles_proofs.ml" 829 23803 23835
)
"plugins/funind/functional_principles_proofs.ml" 830 23838 23854 "plugins/funind/functional_principles_proofs.ml" 830 23838 23868
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 832 23890 23893 "plugins/funind/functional_principles_proofs.ml" 832 23890 23909
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  (Term.types * Term.types list) dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof_args "plugins/funind/functional_principles_proofs.ml" 816 23380 23386 "plugins/funind/functional_principles_proofs.ml" 816 23380 23402
)
"plugins/funind/functional_principles_proofs.ml" 833 23910 23915 "plugins/funind/functional_principles_proofs.ml" 833 23910 23926
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 816 23380 23403 "plugins/funind/functional_principles_proofs.ml" 816 23380 23414
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23933 "plugins/funind/functional_principles_proofs.ml" 834 23927 23942
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 829 23803 23826 "plugins/funind/functional_principles_proofs.ml" 829 23803 23835
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23956 "plugins/funind/functional_principles_proofs.ml" 834 23927 23961
type(
  Term.types * Term.constr array -> Term.types
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23962 "plugins/funind/functional_principles_proofs.ml" 834 23927 23969
type(
  Term.types
)
ident(
  int_ref f_args' "plugins/funind/functional_principles_proofs.ml" 818 23468 23479 "plugins/funind/functional_principles_proofs.ml" 818 23468 23486
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23972 "plugins/funind/functional_principles_proofs.ml" 834 23927 23979
type(
  Term.constr
)
ident(
  int_ref new_arg "plugins/funind/functional_principles_proofs.ml" 830 23838 23844 "plugins/funind/functional_principles_proofs.ml" 830 23838 23851
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23970 "plugins/funind/functional_principles_proofs.ml" 834 23927 23981
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23961 "plugins/funind/functional_principles_proofs.ml" 834 23927 23982
type(
  Term.types * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23955 "plugins/funind/functional_principles_proofs.ml" 834 23927 23983
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23985 "plugins/funind/functional_principles_proofs.ml" 834 23927 23989
type(
  Term.types list
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 824 23630 23640 "plugins/funind/functional_principles_proofs.ml" 824 23630 23644
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23955 "plugins/funind/functional_principles_proofs.ml" 834 23927 23989
type(
  Term.types * Term.types list
)
"plugins/funind/functional_principles_proofs.ml" 834 23927 23932 "plugins/funind/functional_principles_proofs.ml" 834 23927 23990
type(
  (Term.types * Term.types list) dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 832 23890 23892 "plugins/funind/functional_principles_proofs.ml" 835 23991 23994
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 830 23838 23840 "plugins/funind/functional_principles_proofs.ml" 835 23991 23994
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 837 24005 24012 "plugins/funind/functional_principles_proofs.ml" 837 24005 24023
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 837 24005 24024 "plugins/funind/functional_principles_proofs.ml" 837 24005 24035
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finalize "plugins/funind/functional_principles_proofs.ml" 829 23803 23814 "plugins/funind/functional_principles_proofs.ml" 829 23803 23825
)
"plugins/funind/functional_principles_proofs.ml" 838 24036 24039 "plugins/funind/functional_principles_proofs.ml" 838 24036 24048
type(
  (Term.types * Term.types list) dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 816 23380 23415 "plugins/funind/functional_principles_proofs.ml" 816 23380 23424
)
"plugins/funind/functional_principles_proofs.ml" 838 24036 24061 "plugins/funind/functional_principles_proofs.ml" 838 24036 24064
type(
  Term.types
)
ident(
  int_ref arg "plugins/funind/functional_principles_proofs.ml" 824 23630 23635 "plugins/funind/functional_principles_proofs.ml" 824 23630 23638
)
"plugins/funind/functional_principles_proofs.ml" 838 24036 24038 "plugins/funind/functional_principles_proofs.ml" 838 24036 24066
type(
  Term.types dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 839 24067 24069 "plugins/funind/functional_principles_proofs.ml" 839 24067 24070
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 820 23538 23543 "plugins/funind/functional_principles_proofs.ml" 820 23538 23544
)
"plugins/funind/functional_principles_proofs.ml" 837 24005 24012 "plugins/funind/functional_principles_proofs.ml" 839 24067 24070
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 829 23803 23810 "plugins/funind/functional_principles_proofs.ml" 839 24067 24070
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 821 23548 23549 "plugins/funind/functional_principles_proofs.ml" 839 24067 24070
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 820 23538 23539 "plugins/funind/functional_principles_proofs.ml" 839 24067 24070
type(
  Proof_type.tactic
)
type(
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 841 24080 24123 "plugins/funind/functional_principles_proofs.ml" 841 24080 24129
type(
  Proof_type.tactic
)
ident(
  int_ref tac "plugins/funind/functional_principles_proofs.ml" 819 23513 23523 "plugins/funind/functional_principles_proofs.ml" 819 23513 23526
)
"plugins/funind/functional_principles_proofs.ml" 841 24080 24130 "plugins/funind/functional_principles_proofs.ml" 841 24080 24131
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 817 23455 23463 "plugins/funind/functional_principles_proofs.ml" 817 23455 23464
)
"plugins/funind/functional_principles_proofs.ml" 841 24080 24123 "plugins/funind/functional_principles_proofs.ml" 841 24080 24131
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 819 23513 23519 "plugins/funind/functional_principles_proofs.ml" 841 24080 24131
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 818 23468 23474 "plugins/funind/functional_principles_proofs.ml" 841 24080 24131
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 817 23455 23459 "plugins/funind/functional_principles_proofs.ml" 841 24080 24131
type(
  Proof_type.tactic
)
type(
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 843 24138 24145 "plugins/funind/functional_principles_proofs.ml" 843 24138 24160
type(
  'a dynamic_info ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 843 24138 24161 "plugins/funind/functional_principles_proofs.ml" 843 24138 24170
type(
  'a dynamic_info
)
ident(
  def dyn_infos "plugins/funind/functional_principles_proofs.ml" 844 24173 24192 "plugins/funind/functional_principles_proofs.ml" 846 24230 24259
)
"plugins/funind/functional_principles_proofs.ml" 844 24173 24193 "plugins/funind/functional_principles_proofs.ml" 844 24173 24212
type(
  pte_info Names.Idmap.t ->
  ('a dynamic_info -> Proof_type.tactic) ->
  'a dynamic_info ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref clean_goal_with_heq "plugins/funind/functional_principles_proofs.ml" 533 15300 15304 "plugins/funind/functional_principles_proofs.ml" 533 15300 15323
)
"plugins/funind/functional_principles_proofs.ml" 845 24213 24219 "plugins/funind/functional_principles_proofs.ml" 845 24213 24229
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref ptes_infos "plugins/funind/functional_principles_proofs.ml" 667 18882 18886 "plugins/funind/functional_principles_proofs.ml" 667 18882 18896
)
"plugins/funind/functional_principles_proofs.ml" 846 24230 24236 "plugins/funind/functional_principles_proofs.ml" 846 24230 24248
type(
  'a dynamic_info -> Proof_type.tactic
)
ident(
  int_ref finish_proof "plugins/funind/functional_principles_proofs.ml" 87 1674 1678 "plugins/funind/functional_principles_proofs.ml" 87 1674 1690
)
"plugins/funind/functional_principles_proofs.ml" 846 24230 24249 "plugins/funind/functional_principles_proofs.ml" 846 24230 24258
type(
  'a dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 843 24138 24161 "plugins/funind/functional_principles_proofs.ml" 843 24138 24170
)
"plugins/funind/functional_principles_proofs.ml" 844 24173 24192 "plugins/funind/functional_principles_proofs.ml" 846 24230 24259
call(
  tail
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 849 24299 24304 "plugins/funind/functional_principles_proofs.ml" 849 24299 24315
type(
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 813 23158 23164 "plugins/funind/functional_principles_proofs.ml" 813 23158 23175
)
"plugins/funind/functional_principles_proofs.ml" 849 24299 24317 "plugins/funind/functional_principles_proofs.ml" 849 24299 24336
type(
  pte_info Names.Idmap.t ->
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref clean_goal_with_heq "plugins/funind/functional_principles_proofs.ml" 533 15300 15304 "plugins/funind/functional_principles_proofs.ml" 533 15300 15323
)
"plugins/funind/functional_principles_proofs.ml" 849 24299 24337 "plugins/funind/functional_principles_proofs.ml" 849 24299 24347
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref ptes_infos "plugins/funind/functional_principles_proofs.ml" 667 18882 18886 "plugins/funind/functional_principles_proofs.ml" 667 18882 18896
)
"plugins/funind/functional_principles_proofs.ml" 849 24299 24348 "plugins/funind/functional_principles_proofs.ml" 849 24299 24363
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_finish_proof "plugins/funind/functional_principles_proofs.ml" 843 24138 24145 "plugins/funind/functional_principles_proofs.ml" 843 24138 24160
)
"plugins/funind/functional_principles_proofs.ml" 849 24299 24316 "plugins/funind/functional_principles_proofs.ml" 849 24299 24364
call(
  stack
)
type(
  Term.types dynamic_info -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 849 24299 24365 "plugins/funind/functional_principles_proofs.ml" 849 24299 24374
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 668 18897 18901 "plugins/funind/functional_principles_proofs.ml" 668 18897 18910
)
"plugins/funind/functional_principles_proofs.ml" 849 24299 24303 "plugins/funind/functional_principles_proofs.ml" 849 24299 24375
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 843 24138 24141 "plugins/funind/functional_principles_proofs.ml" 849 24299 24375
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 670 18926 18928 "plugins/funind/functional_principles_proofs.ml" 849 24299 24375
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 863 24440 24444 "plugins/funind/functional_principles_proofs.ml" 863 24440 24455
type(
  Term.types -> bool
)
ident(
  def is_pte_type "plugins/funind/functional_principles_proofs.ml" 866 24487 24487 --
)
"plugins/funind/functional_principles_proofs.ml" 863 24440 24456 "plugins/funind/functional_principles_proofs.ml" 863 24440 24457
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 864 24460 24462 "plugins/funind/functional_principles_proofs.ml" 864 24460 24485
)
"plugins/funind/functional_principles_proofs.ml" 864 24460 24462 "plugins/funind/functional_principles_proofs.ml" 864 24460 24468
type(
  Term.types -> bool
)
ident(
  ext_ref Term.isSort
)
"plugins/funind/functional_principles_proofs.ml" 864 24460 24471 "plugins/funind/functional_principles_proofs.ml" 864 24460 24481
type(
  Term.types -> Term.types
)
ident(
  ext_ref Term.strip_prod
)
"plugins/funind/functional_principles_proofs.ml" 864 24460 24482 "plugins/funind/functional_principles_proofs.ml" 864 24460 24483
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 863 24440 24456 "plugins/funind/functional_principles_proofs.ml" 863 24440 24457
)
"plugins/funind/functional_principles_proofs.ml" 864 24460 24469 "plugins/funind/functional_principles_proofs.ml" 864 24460 24485
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 864 24460 24462 "plugins/funind/functional_principles_proofs.ml" 864 24460 24485
call(
  tail
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 866 24487 24491 "plugins/funind/functional_principles_proofs.ml" 866 24487 24497
type(
  'a * 'b * Term.types -> bool
)
ident(
  def is_pte "plugins/funind/functional_principles_proofs.ml" 871 24526 24526 --
)
"plugins/funind/functional_principles_proofs.ml" 866 24487 24499 "plugins/funind/functional_principles_proofs.ml" 866 24487 24500
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 866 24487 24501 "plugins/funind/functional_principles_proofs.ml" 866 24487 24502
type(
  'b
)
"plugins/funind/functional_principles_proofs.ml" 866 24487 24503 "plugins/funind/functional_principles_proofs.ml" 866 24487 24504
type(
  Term.types
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 866 24487 24508 "plugins/funind/functional_principles_proofs.ml" 866 24487 24521
)
"plugins/funind/functional_principles_proofs.ml" 866 24487 24498 "plugins/funind/functional_principles_proofs.ml" 866 24487 24505
type(
  'a * 'b * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 866 24487 24508 "plugins/funind/functional_principles_proofs.ml" 866 24487 24519
type(
  Term.types -> bool
)
ident(
  int_ref is_pte_type "plugins/funind/functional_principles_proofs.ml" 863 24440 24444 "plugins/funind/functional_principles_proofs.ml" 863 24440 24455
)
"plugins/funind/functional_principles_proofs.ml" 866 24487 24520 "plugins/funind/functional_principles_proofs.ml" 866 24487 24521
type(
  Term.types
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 866 24487 24503 "plugins/funind/functional_principles_proofs.ml" 866 24487 24504
)
"plugins/funind/functional_principles_proofs.ml" 866 24487 24508 "plugins/funind/functional_principles_proofs.ml" 866 24487 24521
call(
  tail
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 884 24729 24733 "plugins/funind/functional_principles_proofs.ml" 884 24729 24757
type(
  static_fix_info -> Names.identifier list -> Proof_type.tactic
)
ident(
  def prove_rec_hyp_for_struct "plugins/funind/functional_principles_proofs.ml" 895 25021 25021 --
)
"plugins/funind/functional_principles_proofs.ml" 884 24729 24758 "plugins/funind/functional_principles_proofs.ml" 884 24729 24766
type(
  static_fix_info
)
ident(
  def fix_info "plugins/funind/functional_principles_proofs.ml" 885 24769 24775 "plugins/funind/functional_principles_proofs.ml" 893 25016 25019
)
"plugins/funind/functional_principles_proofs.ml" 885 24769 24781 "plugins/funind/functional_principles_proofs.ml" 885 24769 24788
type(
  Names.identifier list
)
ident(
  def eq_hyps "plugins/funind/functional_principles_proofs.ml" 885 24769 24792 "plugins/funind/functional_principles_proofs.ml" 893 25016 25018
)
"plugins/funind/functional_principles_proofs.ml" 885 24769 24792 "plugins/funind/functional_principles_proofs.ml" 885 24769 24799
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 886 24800 24802 "plugins/funind/functional_principles_proofs.ml" 886 24800 24819
type(
  int -> Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref rewrite_until_var "plugins/funind/functional_principles_proofs.ml" 360 10110 10114 "plugins/funind/functional_principles_proofs.ml" 360 10110 10131
)
"plugins/funind/functional_principles_proofs.ml" 886 24800 24821 "plugins/funind/functional_principles_proofs.ml" 886 24800 24829
type(
  static_fix_info
)
ident(
  int_ref fix_info "plugins/funind/functional_principles_proofs.ml" 884 24729 24758 "plugins/funind/functional_principles_proofs.ml" 884 24729 24766
)
"plugins/funind/functional_principles_proofs.ml" 886 24800 24820 "plugins/funind/functional_principles_proofs.ml" 886 24800 24834
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 886 24800 24835 "plugins/funind/functional_principles_proofs.ml" 886 24800 24842
type(
  Names.identifier list
)
ident(
  int_ref eq_hyps "plugins/funind/functional_principles_proofs.ml" 885 24769 24781 "plugins/funind/functional_principles_proofs.ml" 885 24769 24788
)
"plugins/funind/functional_principles_proofs.ml" 886 24800 24801 "plugins/funind/functional_principles_proofs.ml" 886 24800 24843
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 887 24844 24850 "plugins/funind/functional_principles_proofs.ml" 887 24844 24851
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 888 24855 24859 "plugins/funind/functional_principles_proofs.ml" 892 24989 25015
)
"plugins/funind/functional_principles_proofs.ml" 888 24855 24863 "plugins/funind/functional_principles_proofs.ml" 888 24855 24864
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 888 24855 24865 "plugins/funind/functional_principles_proofs.ml" 888 24855 24873
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 888 24855 24863 "plugins/funind/functional_principles_proofs.ml" 888 24855 24873
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 888 24855 24876 "plugins/funind/functional_principles_proofs.ml" 888 24855 24883
type(
  Term.types -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 888 24855 24885 "plugins/funind/functional_principles_proofs.ml" 888 24855 24893
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 888 24855 24894 "plugins/funind/functional_principles_proofs.ml" 888 24855 24895
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 887 24844 24850 "plugins/funind/functional_principles_proofs.ml" 887 24844 24851
)
"plugins/funind/functional_principles_proofs.ml" 888 24855 24884 "plugins/funind/functional_principles_proofs.ml" 888 24855 24896
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 888 24855 24876 "plugins/funind/functional_principles_proofs.ml" 888 24855 24896
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 889 24900 24908 "plugins/funind/functional_principles_proofs.ml" 889 24900 24921
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24930 "plugins/funind/functional_principles_proofs.ml" 890 24924 24935
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24936 "plugins/funind/functional_principles_proofs.ml" 890 24924 24941
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24942 "plugins/funind/functional_principles_proofs.ml" 890 24924 24950
type(
  static_fix_info
)
ident(
  int_ref fix_info "plugins/funind/functional_principles_proofs.ml" 884 24729 24758 "plugins/funind/functional_principles_proofs.ml" 884 24729 24766
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24942 "plugins/funind/functional_principles_proofs.ml" 890 24924 24955
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24936 "plugins/funind/functional_principles_proofs.ml" 890 24924 24955
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24956 "plugins/funind/functional_principles_proofs.ml" 890 24924 24971
type(
  Term.constr array -> Term.constr array
)
ident(
  ext_ref Indfun_common.array_get_start
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24972 "plugins/funind/functional_principles_proofs.ml" 890 24924 24980
type(
  Term.constr array
)
ident(
  int_ref pte_args "plugins/funind/functional_principles_proofs.ml" 888 24855 24865 "plugins/funind/functional_principles_proofs.ml" 888 24855 24873
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24956 "plugins/funind/functional_principles_proofs.ml" 890 24924 24980
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24935 "plugins/funind/functional_principles_proofs.ml" 890 24924 24981
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 890 24924 24930 "plugins/funind/functional_principles_proofs.ml" 890 24924 24981
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 892 24989 24993 "plugins/funind/functional_principles_proofs.ml" 892 24989 24999
type(
  Term.constr -> Tacmach.tactic
)
ident(
  int_ref refine "plugins/funind/functional_principles_proofs.ml" 93 1760 1764 "plugins/funind/functional_principles_proofs.ml" 93 1760 1770
)
"plugins/funind/functional_principles_proofs.ml" 892 24989 25000 "plugins/funind/functional_principles_proofs.ml" 892 24989 25013
type(
  Term.constr
)
ident(
  int_ref rec_hyp_proof "plugins/funind/functional_principles_proofs.ml" 889 24900 24908 "plugins/funind/functional_principles_proofs.ml" 889 24900 24921
)
"plugins/funind/functional_principles_proofs.ml" 892 24989 25014 "plugins/funind/functional_principles_proofs.ml" 892 24989 25015
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 887 24844 24850 "plugins/funind/functional_principles_proofs.ml" 887 24844 24851
)
"plugins/funind/functional_principles_proofs.ml" 892 24989 24993 "plugins/funind/functional_principles_proofs.ml" 892 24989 25015
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 889 24900 24904 "plugins/funind/functional_principles_proofs.ml" 892 24989 25015
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 888 24855 24859 "plugins/funind/functional_principles_proofs.ml" 892 24989 25015
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 887 24844 24845 "plugins/funind/functional_principles_proofs.ml" 893 25016 25018
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 885 24769 24792 "plugins/funind/functional_principles_proofs.ml" 893 25016 25018
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 885 24769 24775 "plugins/funind/functional_principles_proofs.ml" 893 25016 25019
type(
  Names.identifier list -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 895 25021 25025 "plugins/funind/functional_principles_proofs.ml" 895 25021 25038
type(
  static_fix_info -> pte_info
)
ident(
  def prove_rec_hyp "plugins/funind/functional_principles_proofs.ml" 902 25142 25142 --
)
"plugins/funind/functional_principles_proofs.ml" 895 25021 25039 "plugins/funind/functional_principles_proofs.ml" 895 25021 25047
type(
  static_fix_info
)
ident(
  def fix_info "plugins/funind/functional_principles_proofs.ml" 896 25051 25053 "plugins/funind/functional_principles_proofs.ml" 899 25136 25139
)
"plugins/funind/functional_principles_proofs.ml" 896 25051 25069 "plugins/funind/functional_principles_proofs.ml" 896 25051 25093
type(
  static_fix_info -> Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref prove_rec_hyp_for_struct "plugins/funind/functional_principles_proofs.ml" 884 24729 24733 "plugins/funind/functional_principles_proofs.ml" 884 24729 24757
)
"plugins/funind/functional_principles_proofs.ml" 896 25051 25094 "plugins/funind/functional_principles_proofs.ml" 896 25051 25102
type(
  static_fix_info
)
ident(
  int_ref fix_info "plugins/funind/functional_principles_proofs.ml" 895 25021 25039 "plugins/funind/functional_principles_proofs.ml" 895 25021 25047
)
"plugins/funind/functional_principles_proofs.ml" 896 25051 25069 "plugins/funind/functional_principles_proofs.ml" 896 25051 25102
call(
  stack
)
type(
  Names.identifier list -> Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 898 25107 25126 "plugins/funind/functional_principles_proofs.ml" 898 25107 25127
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 898 25107 25131 "plugins/funind/functional_principles_proofs.ml" 898 25107 25135
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 898 25107 25122 "plugins/funind/functional_principles_proofs.ml" 898 25107 25135
type(
  Term.constr -> bool
)
"plugins/funind/functional_principles_proofs.ml" 896 25051 25053 "plugins/funind/functional_principles_proofs.ml" 899 25136 25139
type(
  pte_info
)
"plugins/funind/functional_principles_proofs.ml" 904 25161 25165 "plugins/funind/functional_principles_proofs.ml" 904 25161 25183
type(
  Names.identifier ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def generalize_non_dep "plugins/funind/functional_principles_proofs.ml" 925 25942 25942 --
)
"plugins/funind/functional_principles_proofs.ml" 904 25161 25184 "plugins/funind/functional_principles_proofs.ml" 904 25161 25187
type(
  Names.identifier
)
ident(
  def hyp "plugins/funind/functional_principles_proofs.ml" 904 25161 25188 "plugins/funind/functional_principles_proofs.ml" 923 25935 25940
)
"plugins/funind/functional_principles_proofs.ml" 904 25161 25188 "plugins/funind/functional_principles_proofs.ml" 904 25161 25189
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 906 25250 25252 "plugins/funind/functional_principles_proofs.ml" 923 25935 25940
)
"plugins/funind/functional_principles_proofs.ml" 906 25250 25256 "plugins/funind/functional_principles_proofs.ml" 906 25250 25260
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 906 25250 25264 "plugins/funind/functional_principles_proofs.ml" 906 25250 25267
type(
  Names.identifier
)
ident(
  int_ref hyp "plugins/funind/functional_principles_proofs.ml" 904 25161 25184 "plugins/funind/functional_principles_proofs.ml" 904 25161 25187
)
"plugins/funind/functional_principles_proofs.ml" 906 25250 25263 "plugins/funind/functional_principles_proofs.ml" 906 25250 25268
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 907 25272 25278 "plugins/funind/functional_principles_proofs.ml" 907 25272 25281
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 907 25272 25284 "plugins/funind/functional_principles_proofs.ml" 907 25272 25294
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_proofs.ml" 907 25272 25295 "plugins/funind/functional_principles_proofs.ml" 907 25272 25297
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 907 25272 25284 "plugins/funind/functional_principles_proofs.ml" 907 25272 25297
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 908 25301 25307 "plugins/funind/functional_principles_proofs.ml" 908 25301 25314
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 908 25301 25317 "plugins/funind/functional_principles_proofs.ml" 908 25301 25327
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/functional_principles_proofs.ml" 908 25301 25328 "plugins/funind/functional_principles_proofs.ml" 908 25301 25329
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 904 25161 25188 "plugins/funind/functional_principles_proofs.ml" 904 25161 25189
)
"plugins/funind/functional_principles_proofs.ml" 908 25301 25331 "plugins/funind/functional_principles_proofs.ml" 908 25301 25336
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 908 25301 25337 "plugins/funind/functional_principles_proofs.ml" 908 25301 25340
type(
  Names.identifier
)
ident(
  int_ref hyp "plugins/funind/functional_principles_proofs.ml" 904 25161 25184 "plugins/funind/functional_principles_proofs.ml" 904 25161 25187
)
"plugins/funind/functional_principles_proofs.ml" 908 25301 25330 "plugins/funind/functional_principles_proofs.ml" 908 25301 25341
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 908 25301 25317 "plugins/funind/functional_principles_proofs.ml" 908 25301 25341
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 909 25345 25351 "plugins/funind/functional_principles_proofs.ml" 909 25345 25360
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 909 25345 25361 "plugins/funind/functional_principles_proofs.ml" 909 25345 25362
type(
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 909 25345 25351 "plugins/funind/functional_principles_proofs.ml" 909 25345 25362
type(
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25369 "plugins/funind/functional_principles_proofs.ml" 910 25365 25403
type(
  (Names.identifier list *
   (Names.identifier * Term.types option * Term.types) list ->
   Term.named_declaration ->
   Names.identifier list *
   (Names.identifier * Term.types option * Term.types) list) ->
  init:Names.identifier list *
       (Names.identifier * Term.types option * Term.types) list ->
  Environ.env ->
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list
)
ident(
  ext_ref Environ.fold_named_context_reverse
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25410 "plugins/funind/functional_principles_proofs.ml" 910 25365 25415
type(
  Names.identifier list
)
ident(
  def clear "plugins/funind/functional_principles_proofs.ml" 910 25365 25422 "plugins/funind/functional_principles_proofs.ml" 916 25641 25669
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25416 "plugins/funind/functional_principles_proofs.ml" 910 25365 25420
type(
  (Names.identifier * Term.types option * Term.types) list
)
ident(
  def keep "plugins/funind/functional_principles_proofs.ml" 910 25365 25422 "plugins/funind/functional_principles_proofs.ml" 916 25641 25669
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25409 "plugins/funind/functional_principles_proofs.ml" 910 25365 25421
type(
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25423 "plugins/funind/functional_principles_proofs.ml" 910 25365 25426
type(
  Names.identifier
)
ident(
  def hyp "plugins/funind/functional_principles_proofs.ml" 911 25443 25449 "plugins/funind/functional_principles_proofs.ml" 916 25641 25669
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25427 "plugins/funind/functional_principles_proofs.ml" 910 25365 25428
type(
  Term.types option
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25429 "plugins/funind/functional_principles_proofs.ml" 910 25365 25430
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25423 "plugins/funind/functional_principles_proofs.ml" 910 25365 25430
type(
  Term.named_declaration
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25422 "plugins/funind/functional_principles_proofs.ml" 910 25365 25439
type(
  Term.named_declaration
)
ident(
  def decl "plugins/funind/functional_principles_proofs.ml" 911 25443 25449 "plugins/funind/functional_principles_proofs.ml" 916 25641 25669
)
"plugins/funind/functional_principles_proofs.ml" 911 25443 25452 "plugins/funind/functional_principles_proofs.ml" 911 25443 25460
type(
  Names.identifier -> Names.identifier list -> bool
)
ident(
  ext_ref List.mem
)
"plugins/funind/functional_principles_proofs.ml" 911 25443 25461 "plugins/funind/functional_principles_proofs.ml" 911 25443 25464
type(
  Names.identifier
)
ident(
  int_ref hyp "plugins/funind/functional_principles_proofs.ml" 910 25365 25423 "plugins/funind/functional_principles_proofs.ml" 910 25365 25426
)
"plugins/funind/functional_principles_proofs.ml" 911 25443 25465 "plugins/funind/functional_principles_proofs.ml" 911 25443 25469
type(
  Names.identifier list
)
ident(
  int_ref hyps "plugins/funind/functional_principles_proofs.ml" 906 25250 25256 "plugins/funind/functional_principles_proofs.ml" 906 25250 25260
)
"plugins/funind/functional_principles_proofs.ml" 911 25443 25452 "plugins/funind/functional_principles_proofs.ml" 911 25443 25469
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 912 25470 25471 "plugins/funind/functional_principles_proofs.ml" 912 25470 25473
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( or )
)
"plugins/funind/functional_principles_proofs.ml" 912 25470 25474 "plugins/funind/functional_principles_proofs.ml" 912 25470 25485
type(
  (Names.identifier * Term.types option * Term.types -> bool) ->
  (Names.identifier * Term.types option * Term.types) list -> bool
)
ident(
  ext_ref List.exists
)
"plugins/funind/functional_principles_proofs.ml" 912 25470 25487 "plugins/funind/functional_principles_proofs.ml" 912 25470 25504
type(
  Environ.env ->
  Names.identifier ->
  Names.identifier * Term.types option * Term.types -> bool
)
ident(
  ext_ref Termops.occur_var_in_decl
)
"plugins/funind/functional_principles_proofs.ml" 912 25470 25505 "plugins/funind/functional_principles_proofs.ml" 912 25470 25508
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 907 25272 25278 "plugins/funind/functional_principles_proofs.ml" 907 25272 25281
)
"plugins/funind/functional_principles_proofs.ml" 912 25470 25509 "plugins/funind/functional_principles_proofs.ml" 912 25470 25512
type(
  Names.identifier
)
ident(
  int_ref hyp "plugins/funind/functional_principles_proofs.ml" 910 25365 25423 "plugins/funind/functional_principles_proofs.ml" 910 25365 25426
)
"plugins/funind/functional_principles_proofs.ml" 912 25470 25486 "plugins/funind/functional_principles_proofs.ml" 912 25470 25513
call(
  stack
)
type(
  Names.identifier * Term.types option * Term.types -> bool
)
"plugins/funind/functional_principles_proofs.ml" 912 25470 25514 "plugins/funind/functional_principles_proofs.ml" 912 25470 25518
type(
  (Names.identifier * Term.types option * Term.types) list
)
ident(
  int_ref keep "plugins/funind/functional_principles_proofs.ml" 910 25365 25416 "plugins/funind/functional_principles_proofs.ml" 910 25365 25420
)
"plugins/funind/functional_principles_proofs.ml" 912 25470 25474 "plugins/funind/functional_principles_proofs.ml" 912 25470 25518
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 913 25519 25520 "plugins/funind/functional_principles_proofs.ml" 913 25519 25522
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( or )
)
"plugins/funind/functional_principles_proofs.ml" 913 25519 25523 "plugins/funind/functional_principles_proofs.ml" 913 25519 25532
type(
  Environ.env -> Names.identifier -> Term.types -> bool
)
ident(
  ext_ref Termops.occur_var
)
"plugins/funind/functional_principles_proofs.ml" 913 25519 25533 "plugins/funind/functional_principles_proofs.ml" 913 25519 25536
type(
  Environ.env
)
ident(
  int_ref env "plugins/funind/functional_principles_proofs.ml" 907 25272 25278 "plugins/funind/functional_principles_proofs.ml" 907 25272 25281
)
"plugins/funind/functional_principles_proofs.ml" 913 25519 25537 "plugins/funind/functional_principles_proofs.ml" 913 25519 25540
type(
  Names.identifier
)
ident(
  int_ref hyp "plugins/funind/functional_principles_proofs.ml" 910 25365 25423 "plugins/funind/functional_principles_proofs.ml" 910 25365 25426
)
"plugins/funind/functional_principles_proofs.ml" 913 25519 25541 "plugins/funind/functional_principles_proofs.ml" 913 25519 25548
type(
  Term.types
)
ident(
  int_ref hyp_typ "plugins/funind/functional_principles_proofs.ml" 908 25301 25307 "plugins/funind/functional_principles_proofs.ml" 908 25301 25314
)
"plugins/funind/functional_principles_proofs.ml" 913 25519 25523 "plugins/funind/functional_principles_proofs.ml" 913 25519 25548
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 914 25549 25550 "plugins/funind/functional_principles_proofs.ml" 914 25549 25552
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( or )
)
"plugins/funind/functional_principles_proofs.ml" 914 25549 25553 "plugins/funind/functional_principles_proofs.ml" 914 25549 25580
type(
  Names.identifier -> bool
)
ident(
  ext_ref Termops.is_section_variable
)
"plugins/funind/functional_principles_proofs.ml" 914 25549 25581 "plugins/funind/functional_principles_proofs.ml" 914 25549 25584
type(
  Names.identifier
)
ident(
  int_ref hyp "plugins/funind/functional_principles_proofs.ml" 910 25365 25423 "plugins/funind/functional_principles_proofs.ml" 910 25365 25426
)
"plugins/funind/functional_principles_proofs.ml" 914 25549 25553 "plugins/funind/functional_principles_proofs.ml" 914 25549 25584
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 913 25519 25523 "plugins/funind/functional_principles_proofs.ml" 914 25549 25584
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 912 25470 25474 "plugins/funind/functional_principles_proofs.ml" 914 25549 25584
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 911 25443 25452 "plugins/funind/functional_principles_proofs.ml" 914 25549 25584
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 915 25611 25623 "plugins/funind/functional_principles_proofs.ml" 915 25611 25628
type(
  Names.identifier list
)
ident(
  int_ref clear "plugins/funind/functional_principles_proofs.ml" 910 25365 25410 "plugins/funind/functional_principles_proofs.ml" 910 25365 25415
)
"plugins/funind/functional_principles_proofs.ml" 915 25611 25629 "plugins/funind/functional_principles_proofs.ml" 915 25611 25633
type(
  Names.identifier * Term.types option * Term.types
)
ident(
  int_ref decl "plugins/funind/functional_principles_proofs.ml" 910 25365 25422 "plugins/funind/functional_principles_proofs.ml" 910 25365 25439
)
"plugins/funind/functional_principles_proofs.ml" 915 25611 25635 "plugins/funind/functional_principles_proofs.ml" 915 25611 25639
type(
  (Names.identifier * Term.types option * Term.types) list
)
ident(
  int_ref keep "plugins/funind/functional_principles_proofs.ml" 910 25365 25416 "plugins/funind/functional_principles_proofs.ml" 910 25365 25420
)
"plugins/funind/functional_principles_proofs.ml" 915 25611 25629 "plugins/funind/functional_principles_proofs.ml" 915 25611 25639
type(
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 915 25611 25622 "plugins/funind/functional_principles_proofs.ml" 915 25611 25640
type(
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 916 25641 25653 "plugins/funind/functional_principles_proofs.ml" 916 25641 25656
type(
  Names.identifier
)
ident(
  int_ref hyp "plugins/funind/functional_principles_proofs.ml" 910 25365 25423 "plugins/funind/functional_principles_proofs.ml" 910 25365 25426
)
"plugins/funind/functional_principles_proofs.ml" 916 25641 25658 "plugins/funind/functional_principles_proofs.ml" 916 25641 25663
type(
  Names.identifier list
)
ident(
  int_ref clear "plugins/funind/functional_principles_proofs.ml" 910 25365 25410 "plugins/funind/functional_principles_proofs.ml" 910 25365 25415
)
"plugins/funind/functional_principles_proofs.ml" 916 25641 25653 "plugins/funind/functional_principles_proofs.ml" 916 25641 25663
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 916 25641 25664 "plugins/funind/functional_principles_proofs.ml" 916 25641 25668
type(
  (Names.identifier * Term.types option * Term.types) list
)
ident(
  int_ref keep "plugins/funind/functional_principles_proofs.ml" 910 25365 25416 "plugins/funind/functional_principles_proofs.ml" 910 25365 25420
)
"plugins/funind/functional_principles_proofs.ml" 916 25641 25652 "plugins/funind/functional_principles_proofs.ml" 916 25641 25669
type(
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 911 25443 25449 "plugins/funind/functional_principles_proofs.ml" 916 25641 25669
type(
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25404 "plugins/funind/functional_principles_proofs.ml" 916 25641 25670
type(
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list ->
  Term.named_declaration ->
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 917 25671 25684 "plugins/funind/functional_principles_proofs.ml" 917 25671 25686
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 917 25671 25687 "plugins/funind/functional_principles_proofs.ml" 917 25671 25689
type(
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 917 25671 25683 "plugins/funind/functional_principles_proofs.ml" 917 25671 25690
type(
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 917 25671 25692 "plugins/funind/functional_principles_proofs.ml" 917 25671 25698
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/functional_principles_proofs.ml" 917 25671 25699 "plugins/funind/functional_principles_proofs.ml" 917 25671 25700
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 904 25161 25188 "plugins/funind/functional_principles_proofs.ml" 904 25161 25189
)
"plugins/funind/functional_principles_proofs.ml" 917 25671 25691 "plugins/funind/functional_principles_proofs.ml" 917 25671 25701
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 910 25365 25369 "plugins/funind/functional_principles_proofs.ml" 917 25671 25701
call(
  stack
)
type(
  Names.identifier list *
  (Names.identifier * Term.types option * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 920 25794 25796 "plugins/funind/functional_principles_proofs.ml" 920 25794 25803
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 921 25804 25843 "plugins/funind/functional_principles_proofs.ml" 921 25804 25855
type(
  Term.constr list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_generalize
)
"plugins/funind/functional_principles_proofs.ml" 921 25804 25858 "plugins/funind/functional_principles_proofs.ml" 921 25804 25866
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 921 25804 25867 "plugins/funind/functional_principles_proofs.ml" 921 25804 25872
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 921 25804 25873 "plugins/funind/functional_principles_proofs.ml" 921 25804 25882
type(
  Names.identifier list
)
ident(
  int_ref to_revert "plugins/funind/functional_principles_proofs.ml" 909 25345 25351 "plugins/funind/functional_principles_proofs.ml" 909 25345 25360
)
"plugins/funind/functional_principles_proofs.ml" 921 25804 25857 "plugins/funind/functional_principles_proofs.ml" 921 25804 25883
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 921 25804 25808 "plugins/funind/functional_principles_proofs.ml" 921 25804 25886
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 922 25887 25918 "plugins/funind/functional_principles_proofs.ml" 922 25887 25922
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref thin "plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
)
"plugins/funind/functional_principles_proofs.ml" 922 25887 25923 "plugins/funind/functional_principles_proofs.ml" 922 25887 25932
type(
  Names.identifier list
)
ident(
  int_ref to_revert "plugins/funind/functional_principles_proofs.ml" 909 25345 25351 "plugins/funind/functional_principles_proofs.ml" 909 25345 25360
)
"plugins/funind/functional_principles_proofs.ml" 922 25887 25891 "plugins/funind/functional_principles_proofs.ml" 922 25887 25934
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 923 25935 25939 "plugins/funind/functional_principles_proofs.ml" 923 25935 25940
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 904 25161 25188 "plugins/funind/functional_principles_proofs.ml" 904 25161 25189
)
"plugins/funind/functional_principles_proofs.ml" 920 25794 25796 "plugins/funind/functional_principles_proofs.ml" 923 25935 25940
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 909 25345 25347 "plugins/funind/functional_principles_proofs.ml" 923 25935 25940
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 908 25301 25303 "plugins/funind/functional_principles_proofs.ml" 923 25935 25940
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 907 25272 25274 "plugins/funind/functional_principles_proofs.ml" 923 25935 25940
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 906 25250 25252 "plugins/funind/functional_principles_proofs.ml" 923 25935 25940
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 925 25942 25946 "plugins/funind/functional_principles_proofs.ml" 925 25942 25956
type(
  Names.name * 'a * 'b -> Names.identifier
)
ident(
  def id_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25991 --
)
"plugins/funind/functional_principles_proofs.ml" 925 25942 25958 "plugins/funind/functional_principles_proofs.ml" 925 25942 25960
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 925 25942 25969 "plugins/funind/functional_principles_proofs.ml" 925 25942 25990
)
"plugins/funind/functional_principles_proofs.ml" 925 25942 25961 "plugins/funind/functional_principles_proofs.ml" 925 25942 25962
type(
  'a
)
"plugins/funind/functional_principles_proofs.ml" 925 25942 25963 "plugins/funind/functional_principles_proofs.ml" 925 25942 25964
type(
  'b
)
"plugins/funind/functional_principles_proofs.ml" 925 25942 25957 "plugins/funind/functional_principles_proofs.ml" 925 25942 25965
type(
  Names.name * 'a * 'b
)
"plugins/funind/functional_principles_proofs.ml" 925 25942 25970 "plugins/funind/functional_principles_proofs.ml" 925 25942 25986
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 925 25942 25987 "plugins/funind/functional_principles_proofs.ml" 925 25942 25989
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 925 25942 25958 "plugins/funind/functional_principles_proofs.ml" 925 25942 25960
)
"plugins/funind/functional_principles_proofs.ml" 925 25942 25969 "plugins/funind/functional_principles_proofs.ml" 925 25942 25990
call(
  tail
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
type(
  Names.name * 'a * 'b -> Term.constr
)
ident(
  def var_of_decl "plugins/funind/functional_principles_proofs.ml" 927 26038 26038 --
)
"plugins/funind/functional_principles_proofs.ml" 926 25991 26007 "plugins/funind/functional_principles_proofs.ml" 926 25991 26011
type(
  Names.name * 'a * 'b
)
ident(
  def decl "plugins/funind/functional_principles_proofs.ml" 926 25991 26014 "plugins/funind/functional_principles_proofs.ml" 926 25991 26037
)
"plugins/funind/functional_principles_proofs.ml" 926 25991 26014 "plugins/funind/functional_principles_proofs.ml" 926 25991 26019
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 926 25991 26021 "plugins/funind/functional_principles_proofs.ml" 926 25991 26031
type(
  Names.name * 'a * 'b -> Names.identifier
)
ident(
  int_ref id_of_decl "plugins/funind/functional_principles_proofs.ml" 925 25942 25946 "plugins/funind/functional_principles_proofs.ml" 925 25942 25956
)
"plugins/funind/functional_principles_proofs.ml" 926 25991 26032 "plugins/funind/functional_principles_proofs.ml" 926 25991 26036
type(
  Names.name * 'a * 'b
)
ident(
  int_ref decl "plugins/funind/functional_principles_proofs.ml" 926 25991 26007 "plugins/funind/functional_principles_proofs.ml" 926 25991 26011
)
"plugins/funind/functional_principles_proofs.ml" 926 25991 26020 "plugins/funind/functional_principles_proofs.ml" 926 25991 26037
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 926 25991 26014 "plugins/funind/functional_principles_proofs.ml" 926 25991 26037
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 927 26038 26042 "plugins/funind/functional_principles_proofs.ml" 927 26038 26048
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  def revert "plugins/funind/functional_principles_proofs.ml" 932 26119 26119 --
)
"plugins/funind/functional_principles_proofs.ml" 927 26038 26049 "plugins/funind/functional_principles_proofs.ml" 927 26038 26052
type(
  Names.identifier list
)
ident(
  def idl "plugins/funind/functional_principles_proofs.ml" 928 26055 26057 "plugins/funind/functional_principles_proofs.ml" 930 26103 26117
)
"plugins/funind/functional_principles_proofs.ml" 928 26055 26057 "plugins/funind/functional_principles_proofs.ml" 928 26055 26064
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 929 26065 26070 "plugins/funind/functional_principles_proofs.ml" 929 26065 26080
type(
  Term.constr list -> Proof_type.tactic
)
ident(
  ext_ref Tactics.generalize
)
"plugins/funind/functional_principles_proofs.ml" 929 26065 26082 "plugins/funind/functional_principles_proofs.ml" 929 26065 26090
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 929 26065 26091 "plugins/funind/functional_principles_proofs.ml" 929 26065 26096
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 929 26065 26097 "plugins/funind/functional_principles_proofs.ml" 929 26065 26100
type(
  Names.identifier list
)
ident(
  int_ref idl "plugins/funind/functional_principles_proofs.ml" 927 26038 26049 "plugins/funind/functional_principles_proofs.ml" 927 26038 26052
)
"plugins/funind/functional_principles_proofs.ml" 929 26065 26081 "plugins/funind/functional_principles_proofs.ml" 929 26065 26101
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 929 26065 26069 "plugins/funind/functional_principles_proofs.ml" 929 26065 26102
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 930 26103 26108 "plugins/funind/functional_principles_proofs.ml" 930 26103 26112
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref thin "plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
)
"plugins/funind/functional_principles_proofs.ml" 930 26103 26113 "plugins/funind/functional_principles_proofs.ml" 930 26103 26116
type(
  Names.identifier list
)
ident(
  int_ref idl "plugins/funind/functional_principles_proofs.ml" 927 26038 26049 "plugins/funind/functional_principles_proofs.ml" 927 26038 26052
)
"plugins/funind/functional_principles_proofs.ml" 930 26103 26107 "plugins/funind/functional_principles_proofs.ml" 930 26103 26117
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 928 26055 26057 "plugins/funind/functional_principles_proofs.ml" 930 26103 26117
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 932 26119 26123 "plugins/funind/functional_principles_proofs.ml" 932 26119 26146
type(
  Term.constr array -> Term.constr -> 'a -> int -> int -> int -> unit
)
ident(
  def generate_equation_lemma "plugins/funind/functional_principles_proofs.ml" 986 28608 28608 --
)
"plugins/funind/functional_principles_proofs.ml" 932 26119 26147 "plugins/funind/functional_principles_proofs.ml" 932 26119 26153
type(
  Term.constr array
)
ident(
  def fnames "plugins/funind/functional_principles_proofs.ml" 932 26119 26154 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
)
"plugins/funind/functional_principles_proofs.ml" 932 26119 26154 "plugins/funind/functional_principles_proofs.ml" 932 26119 26155
type(
  Term.constr
)
ident(
  def f "plugins/funind/functional_principles_proofs.ml" 932 26119 26156 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
)
"plugins/funind/functional_principles_proofs.ml" 932 26119 26156 "plugins/funind/functional_principles_proofs.ml" 932 26119 26163
type(
  'a
)
ident(
  def fun_num "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
)
"plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
type(
  int
)
ident(
  def nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26174 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
)
"plugins/funind/functional_principles_proofs.ml" 932 26119 26174 "plugins/funind/functional_principles_proofs.ml" 932 26119 26181
type(
  int
)
ident(
  def nb_args "plugins/funind/functional_principles_proofs.ml" 932 26119 26182 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
)
"plugins/funind/functional_principles_proofs.ml" 932 26119 26182 "plugins/funind/functional_principles_proofs.ml" 932 26119 26194
type(
  int
)
ident(
  def rec_args_num "plugins/funind/functional_principles_proofs.ml" 936 26422 26424 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
)
"plugins/funind/functional_principles_proofs.ml" 936 26422 26428 "plugins/funind/functional_principles_proofs.ml" 936 26422 26433
type(
  Declarations.constant_body
)
"plugins/funind/functional_principles_proofs.ml" 936 26422 26436 "plugins/funind/functional_principles_proofs.ml" 936 26422 26458
type(
  Names.constant -> Declarations.constant_body
)
ident(
  ext_ref Global.lookup_constant
)
"plugins/funind/functional_principles_proofs.ml" 936 26422 26460 "plugins/funind/functional_principles_proofs.ml" 936 26422 26469
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/functional_principles_proofs.ml" 936 26422 26470 "plugins/funind/functional_principles_proofs.ml" 936 26422 26471
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 932 26119 26154 "plugins/funind/functional_principles_proofs.ml" 932 26119 26155
)
"plugins/funind/functional_principles_proofs.ml" 936 26422 26459 "plugins/funind/functional_principles_proofs.ml" 936 26422 26472
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 936 26422 26436 "plugins/funind/functional_principles_proofs.ml" 936 26422 26472
call(
  stack
)
type(
  Declarations.constant_body
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26482 "plugins/funind/functional_principles_proofs.ml" 937 26476 26488
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26491 "plugins/funind/functional_principles_proofs.ml" 937 26476 26496
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26497 "plugins/funind/functional_principles_proofs.ml" 937 26476 26498
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 932 26119 26154 "plugins/funind/functional_principles_proofs.ml" 932 26119 26155
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26499 "plugins/funind/functional_principles_proofs.ml" 937 26476 26509
type(
  int -> (int -> Term.constr) -> Term.constr array
)
ident(
  ext_ref Array.init
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26511 "plugins/funind/functional_principles_proofs.ml" 937 26476 26520
type(
  int
)
ident(
  int_ref nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26521 "plugins/funind/functional_principles_proofs.ml" 937 26476 26522
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26523 "plugins/funind/functional_principles_proofs.ml" 937 26476 26530
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/functional_principles_proofs.ml" 932 26119 26174 "plugins/funind/functional_principles_proofs.ml" 932 26119 26181
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26510 "plugins/funind/functional_principles_proofs.ml" 937 26476 26531
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26537 "plugins/funind/functional_principles_proofs.ml" 937 26476 26538
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 937 26476 26542 "plugins/funind/functional_principles_proofs.ml" 937 26476 26572
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26542 "plugins/funind/functional_principles_proofs.ml" 937 26476 26547
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26548 "plugins/funind/functional_principles_proofs.ml" 937 26476 26557
type(
  int
)
ident(
  int_ref nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26558 "plugins/funind/functional_principles_proofs.ml" 937 26476 26559
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26560 "plugins/funind/functional_principles_proofs.ml" 937 26476 26567
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/functional_principles_proofs.ml" 932 26119 26174 "plugins/funind/functional_principles_proofs.ml" 932 26119 26181
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26548 "plugins/funind/functional_principles_proofs.ml" 937 26476 26567
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26568 "plugins/funind/functional_principles_proofs.ml" 937 26476 26569
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26570 "plugins/funind/functional_principles_proofs.ml" 937 26476 26571
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 937 26476 26537 "plugins/funind/functional_principles_proofs.ml" 937 26476 26538
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26547 "plugins/funind/functional_principles_proofs.ml" 937 26476 26572
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26542 "plugins/funind/functional_principles_proofs.ml" 937 26476 26572
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26532 "plugins/funind/functional_principles_proofs.ml" 937 26476 26573
type(
  int -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26499 "plugins/funind/functional_principles_proofs.ml" 937 26476 26573
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26496 "plugins/funind/functional_principles_proofs.ml" 937 26476 26574
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26491 "plugins/funind/functional_principles_proofs.ml" 937 26476 26574
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 938 26578 26584 "plugins/funind/functional_principles_proofs.ml" 938 26578 26590
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 939 26593 26597 "plugins/funind/functional_principles_proofs.ml" 939 26593 26602
type(
  Declarations.constr_substituted -> Term.constr
)
ident(
  ext_ref Declarations.force
)
"plugins/funind/functional_principles_proofs.ml" 939 26593 26604 "plugins/funind/functional_principles_proofs.ml" 939 26593 26614
type(
  Declarations.constr_substituted option -> Declarations.constr_substituted
)
ident(
  ext_ref Option.get
)
"plugins/funind/functional_principles_proofs.ml" 939 26593 26615 "plugins/funind/functional_principles_proofs.ml" 939 26593 26620
type(
  Declarations.constant_body
)
ident(
  int_ref f_def "plugins/funind/functional_principles_proofs.ml" 936 26422 26428 "plugins/funind/functional_principles_proofs.ml" 936 26422 26433
)
"plugins/funind/functional_principles_proofs.ml" 939 26593 26615 "plugins/funind/functional_principles_proofs.ml" 939 26593 26631
type(
  Declarations.constr_substituted option
)
"plugins/funind/functional_principles_proofs.ml" 939 26593 26603 "plugins/funind/functional_principles_proofs.ml" 939 26593 26632
call(
  stack
)
type(
  Declarations.constr_substituted
)
"plugins/funind/functional_principles_proofs.ml" 939 26593 26597 "plugins/funind/functional_principles_proofs.ml" 939 26593 26632
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 941 26638 26644 "plugins/funind/functional_principles_proofs.ml" 941 26638 26650
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 941 26638 26651 "plugins/funind/functional_principles_proofs.ml" 941 26638 26669
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 941 26638 26644 "plugins/funind/functional_principles_proofs.ml" 941 26638 26669
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 941 26638 26672 "plugins/funind/functional_principles_proofs.ml" 941 26638 26687
type(
  int -> Term.constr -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_lam_n
)
"plugins/funind/functional_principles_proofs.ml" 941 26638 26688 "plugins/funind/functional_principles_proofs.ml" 941 26638 26697
type(
  int
)
ident(
  int_ref nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
)
"plugins/funind/functional_principles_proofs.ml" 941 26638 26698 "plugins/funind/functional_principles_proofs.ml" 941 26638 26704
type(
  Term.constr
)
ident(
  int_ref f_body "plugins/funind/functional_principles_proofs.ml" 938 26578 26584 "plugins/funind/functional_principles_proofs.ml" 938 26578 26590
)
"plugins/funind/functional_principles_proofs.ml" 941 26638 26672 "plugins/funind/functional_principles_proofs.ml" 941 26638 26704
call(
  stack
)
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26715 "plugins/funind/functional_principles_proofs.ml" 942 26708 26716
type(
  int array
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26717 "plugins/funind/functional_principles_proofs.ml" 942 26708 26720
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26714 "plugins/funind/functional_principles_proofs.ml" 942 26708 26721
type(
  int array * int
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26723 "plugins/funind/functional_principles_proofs.ml" 942 26708 26724
type(
  Names.name array
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26725 "plugins/funind/functional_principles_proofs.ml" 942 26708 26726
type(
  Term.types array
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26727 "plugins/funind/functional_principles_proofs.ml" 942 26708 26733
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26722 "plugins/funind/functional_principles_proofs.ml" 942 26708 26734
type(
  Term.rec_declaration
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26714 "plugins/funind/functional_principles_proofs.ml" 942 26708 26734
type(
  Term.fixpoint
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26737 "plugins/funind/functional_principles_proofs.ml" 942 26708 26744
type(
  Term.constr -> Term.fixpoint
)
ident(
  ext_ref Term.destFix
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26745 "plugins/funind/functional_principles_proofs.ml" 942 26708 26763
type(
  Term.constr
)
ident(
  int_ref f_body_with_params "plugins/funind/functional_principles_proofs.ml" 941 26638 26651 "plugins/funind/functional_principles_proofs.ml" 941 26638 26669
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26737 "plugins/funind/functional_principles_proofs.ml" 942 26708 26763
call(
  stack
)
type(
  Term.fixpoint
)
"plugins/funind/functional_principles_proofs.ml" 943 26767 26773 "plugins/funind/functional_principles_proofs.ml" 943 26767 26791
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26802 "plugins/funind/functional_principles_proofs.ml" 944 26794 26808
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26811 "plugins/funind/functional_principles_proofs.ml" 944 26794 26821
type(
  int -> (int -> Term.constr) -> Term.constr array
)
ident(
  ext_ref Array.init
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26822 "plugins/funind/functional_principles_proofs.ml" 944 26794 26831
type(
  int
)
ident(
  int_ref nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26837 "plugins/funind/functional_principles_proofs.ml" 944 26794 26838
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 944 26794 26842 "plugins/funind/functional_principles_proofs.ml" 944 26794 26862
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26842 "plugins/funind/functional_principles_proofs.ml" 944 26794 26847
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26848 "plugins/funind/functional_principles_proofs.ml" 944 26794 26857
type(
  int
)
ident(
  int_ref nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26858 "plugins/funind/functional_principles_proofs.ml" 944 26794 26859
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26860 "plugins/funind/functional_principles_proofs.ml" 944 26794 26861
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 944 26794 26837 "plugins/funind/functional_principles_proofs.ml" 944 26794 26838
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26847 "plugins/funind/functional_principles_proofs.ml" 944 26794 26862
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26842 "plugins/funind/functional_principles_proofs.ml" 944 26794 26862
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26832 "plugins/funind/functional_principles_proofs.ml" 944 26794 26863
type(
  int -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26811 "plugins/funind/functional_principles_proofs.ml" 944 26794 26863
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26875 "plugins/funind/functional_principles_proofs.ml" 945 26867 26881
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26884 "plugins/funind/functional_principles_proofs.ml" 945 26867 26892
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26894 "plugins/funind/functional_principles_proofs.ml" 945 26867 26907
type(
  Term.constr array -> Term.constr list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26909 "plugins/funind/functional_principles_proofs.ml" 945 26867 26918
type(
  (Term.constr -> Term.constr) -> Term.constr array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26924 "plugins/funind/functional_principles_proofs.ml" 945 26867 26925
type(
  Term.constr
)
ident(
  def f "plugins/funind/functional_principles_proofs.ml" 945 26867 26929 "plugins/funind/functional_principles_proofs.ml" 945 26867 26944
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26929 "plugins/funind/functional_principles_proofs.ml" 945 26867 26934
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26935 "plugins/funind/functional_principles_proofs.ml" 945 26867 26936
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 945 26867 26924 "plugins/funind/functional_principles_proofs.ml" 945 26867 26925
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26937 "plugins/funind/functional_principles_proofs.ml" 945 26867 26943
type(
  Term.constr array
)
ident(
  int_ref params "plugins/funind/functional_principles_proofs.ml" 944 26794 26802 "plugins/funind/functional_principles_proofs.ml" 944 26794 26808
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26934 "plugins/funind/functional_principles_proofs.ml" 945 26867 26944
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26929 "plugins/funind/functional_principles_proofs.ml" 945 26867 26944
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26919 "plugins/funind/functional_principles_proofs.ml" 945 26867 26945
type(
  Term.constr -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26946 "plugins/funind/functional_principles_proofs.ml" 945 26867 26952
type(
  Term.constr array
)
ident(
  int_ref fnames "plugins/funind/functional_principles_proofs.ml" 932 26119 26147 "plugins/funind/functional_principles_proofs.ml" 932 26119 26153
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26908 "plugins/funind/functional_principles_proofs.ml" 945 26867 26953
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26893 "plugins/funind/functional_principles_proofs.ml" 945 26867 26954
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26884 "plugins/funind/functional_principles_proofs.ml" 945 26867 26954
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 946 26958 26962 "plugins/funind/functional_principles_proofs.ml" 946 26958 26968
type(
  Term.constr list
)
ident(
  int_ref fnames "plugins/funind/functional_principles_proofs.ml" 945 26867 26875 "plugins/funind/functional_principles_proofs.ml" 945 26867 26881
)
"plugins/funind/functional_principles_proofs.ml" 945 26867 26871 "plugins/funind/functional_principles_proofs.ml" 946 26958 26968
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 944 26794 26798 "plugins/funind/functional_principles_proofs.ml" 946 26958 26968
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 950 27130 27136 "plugins/funind/functional_principles_proofs.ml" 950 27130 27168
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 950 27130 27172 "plugins/funind/functional_principles_proofs.ml" 950 27130 27178
type(
  Term.constr list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.substl
)
"plugins/funind/functional_principles_proofs.ml" 950 27130 27179 "plugins/funind/functional_principles_proofs.ml" 950 27130 27197
type(
  Term.constr list
)
ident(
  int_ref fnames_with_params "plugins/funind/functional_principles_proofs.ml" 943 26767 26773 "plugins/funind/functional_principles_proofs.ml" 943 26767 26791
)
"plugins/funind/functional_principles_proofs.ml" 950 27130 27198 "plugins/funind/functional_principles_proofs.ml" 950 27130 27204
type(
  Term.constr array
)
ident(
  int_ref bodies "plugins/funind/functional_principles_proofs.ml" 942 26708 26727 "plugins/funind/functional_principles_proofs.ml" 942 26708 26733
)
"plugins/funind/functional_principles_proofs.ml" 950 27130 27206 "plugins/funind/functional_principles_proofs.ml" 950 27130 27209
type(
  int
)
ident(
  int_ref num "plugins/funind/functional_principles_proofs.ml" 942 26708 26717 "plugins/funind/functional_principles_proofs.ml" 942 26708 26720
)
"plugins/funind/functional_principles_proofs.ml" 950 27130 27198 "plugins/funind/functional_principles_proofs.ml" 950 27130 27210
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 950 27130 27172 "plugins/funind/functional_principles_proofs.ml" 950 27130 27210
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27327 "plugins/funind/functional_principles_proofs.ml" 952 27321 27333
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27336 "plugins/funind/functional_principles_proofs.ml" 952 27321 27351
type(
  Term.types -> Term.constr
)
ident(
  int_ref nf_betaiotazeta "plugins/funind/functional_principles_proofs.ml" 202 4587 4591 "plugins/funind/functional_principles_proofs.ml" 202 4587 4606
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27353 "plugins/funind/functional_principles_proofs.ml" 952 27321 27358
type(
  Term.constr * Term.constr array -> Term.types
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27359 "plugins/funind/functional_principles_proofs.ml" 952 27321 27370
type(
  (Names.name * Term.constr) list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.compose_lam
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27371 "plugins/funind/functional_principles_proofs.ml" 952 27321 27377
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref params "plugins/funind/functional_principles_proofs.ml" 941 26638 26644 "plugins/funind/functional_principles_proofs.ml" 941 26638 26650
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27378 "plugins/funind/functional_principles_proofs.ml" 952 27321 27410
type(
  Term.constr
)
ident(
  int_ref f_body_with_params_and_other_fun "plugins/funind/functional_principles_proofs.ml" 950 27130 27136 "plugins/funind/functional_principles_proofs.ml" 950 27130 27168
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27359 "plugins/funind/functional_principles_proofs.ml" 952 27321 27410
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27411 "plugins/funind/functional_principles_proofs.ml" 952 27321 27421
type(
  int -> (int -> Term.constr) -> Term.constr array
)
ident(
  ext_ref Array.init
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27423 "plugins/funind/functional_principles_proofs.ml" 952 27321 27432
type(
  int
)
ident(
  int_ref nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27433 "plugins/funind/functional_principles_proofs.ml" 952 27321 27434
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27435 "plugins/funind/functional_principles_proofs.ml" 952 27321 27442
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/functional_principles_proofs.ml" 932 26119 26174 "plugins/funind/functional_principles_proofs.ml" 932 26119 26181
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27422 "plugins/funind/functional_principles_proofs.ml" 952 27321 27443
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27449 "plugins/funind/functional_principles_proofs.ml" 952 27321 27450
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 952 27321 27454 "plugins/funind/functional_principles_proofs.ml" 952 27321 27484
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27454 "plugins/funind/functional_principles_proofs.ml" 952 27321 27459
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27460 "plugins/funind/functional_principles_proofs.ml" 952 27321 27469
type(
  int
)
ident(
  int_ref nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27470 "plugins/funind/functional_principles_proofs.ml" 952 27321 27471
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27472 "plugins/funind/functional_principles_proofs.ml" 952 27321 27479
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/functional_principles_proofs.ml" 932 26119 26174 "plugins/funind/functional_principles_proofs.ml" 932 26119 26181
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27460 "plugins/funind/functional_principles_proofs.ml" 952 27321 27479
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27480 "plugins/funind/functional_principles_proofs.ml" 952 27321 27481
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27482 "plugins/funind/functional_principles_proofs.ml" 952 27321 27483
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 952 27321 27449 "plugins/funind/functional_principles_proofs.ml" 952 27321 27450
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27459 "plugins/funind/functional_principles_proofs.ml" 952 27321 27484
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27454 "plugins/funind/functional_principles_proofs.ml" 952 27321 27484
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27444 "plugins/funind/functional_principles_proofs.ml" 952 27321 27485
type(
  int -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27411 "plugins/funind/functional_principles_proofs.ml" 952 27321 27485
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27358 "plugins/funind/functional_principles_proofs.ml" 952 27321 27486
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27352 "plugins/funind/functional_principles_proofs.ml" 952 27321 27487
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27336 "plugins/funind/functional_principles_proofs.ml" 952 27321 27487
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27552 "plugins/funind/functional_principles_proofs.ml" 954 27546 27561
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27562 "plugins/funind/functional_principles_proofs.ml" 954 27546 27571
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27552 "plugins/funind/functional_principles_proofs.ml" 954 27546 27571
type(
  Term.rel_context * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27574 "plugins/funind/functional_principles_proofs.ml" 954 27546 27596
type(
  int -> Term.types -> Term.rel_context * Term.types
)
ident(
  ext_ref Term.decompose_prod_n_assum
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27598 "plugins/funind/functional_principles_proofs.ml" 954 27546 27607
type(
  int
)
ident(
  int_ref nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27608 "plugins/funind/functional_principles_proofs.ml" 954 27546 27609
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27610 "plugins/funind/functional_principles_proofs.ml" 954 27546 27617
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/functional_principles_proofs.ml" 932 26119 26174 "plugins/funind/functional_principles_proofs.ml" 932 26119 26181
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27597 "plugins/funind/functional_principles_proofs.ml" 954 27546 27618
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 955 27619 27624 "plugins/funind/functional_principles_proofs.ml" 955 27619 27653
type(
  Environ.env -> Declarations.constant_type -> Term.types
)
ident(
  ext_ref Typeops.type_of_constant_type
)
"plugins/funind/functional_principles_proofs.ml" 955 27619 27655 "plugins/funind/functional_principles_proofs.ml" 955 27619 27665
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_proofs.ml" 955 27619 27665 "plugins/funind/functional_principles_proofs.ml" 955 27619 27667
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 955 27619 27654 "plugins/funind/functional_principles_proofs.ml" 955 27619 27668
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 955 27619 27669 "plugins/funind/functional_principles_proofs.ml" 955 27619 27674
type(
  Declarations.constant_body
)
ident(
  int_ref f_def "plugins/funind/functional_principles_proofs.ml" 936 26422 26428 "plugins/funind/functional_principles_proofs.ml" 936 26422 26433
)
"plugins/funind/functional_principles_proofs.ml" 955 27619 27669 "plugins/funind/functional_principles_proofs.ml" 955 27619 27685
type(
  Declarations.constant_type
)
"plugins/funind/functional_principles_proofs.ml" 955 27619 27623 "plugins/funind/functional_principles_proofs.ml" 955 27619 27686
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27574 "plugins/funind/functional_principles_proofs.ml" 955 27619 27686
call(
  stack
)
type(
  Term.rel_context * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27696 "plugins/funind/functional_principles_proofs.ml" 956 27690 27699
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27702 "plugins/funind/functional_principles_proofs.ml" 956 27690 27707
type(
  Term.constr * Term.types array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27708 "plugins/funind/functional_principles_proofs.ml" 956 27690 27718
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27719 "plugins/funind/functional_principles_proofs.ml" 956 27690 27721
type(
  Term.constr Lazy.t
)
ident(
  ext_ref Indfun_common.eq
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27708 "plugins/funind/functional_principles_proofs.ml" 956 27690 27721
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27724 "plugins/funind/functional_principles_proofs.ml" 956 27690 27733
type(
  Term.types
)
ident(
  int_ref type_of_f "plugins/funind/functional_principles_proofs.ml" 954 27546 27562 "plugins/funind/functional_principles_proofs.ml" 954 27546 27571
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27734 "plugins/funind/functional_principles_proofs.ml" 956 27690 27740
type(
  Term.types
)
ident(
  int_ref eq_lhs "plugins/funind/functional_principles_proofs.ml" 937 26476 26482 "plugins/funind/functional_principles_proofs.ml" 937 26476 26488
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27741 "plugins/funind/functional_principles_proofs.ml" 956 27690 27747
type(
  Term.types
)
ident(
  int_ref eq_rhs "plugins/funind/functional_principles_proofs.ml" 952 27321 27327 "plugins/funind/functional_principles_proofs.ml" 952 27321 27333
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27722 "plugins/funind/functional_principles_proofs.ml" 956 27690 27749
type(
  Term.types array
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27707 "plugins/funind/functional_principles_proofs.ml" 956 27690 27750
type(
  Term.constr * Term.types array
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27702 "plugins/funind/functional_principles_proofs.ml" 956 27690 27750
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 957 27754 27760 "plugins/funind/functional_principles_proofs.ml" 957 27754 27770
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 957 27754 27773 "plugins/funind/functional_principles_proofs.ml" 957 27754 27791
type(
  init:Term.types -> Term.rel_context -> Term.types
)
ident(
  ext_ref Termops.it_mkProd_or_LetIn
)
"plugins/funind/functional_principles_proofs.ml" 957 27754 27798 "plugins/funind/functional_principles_proofs.ml" 957 27754 27801
type(
  Term.types
)
ident(
  int_ref eqn "plugins/funind/functional_principles_proofs.ml" 956 27690 27696 "plugins/funind/functional_principles_proofs.ml" 956 27690 27699
)
"plugins/funind/functional_principles_proofs.ml" 957 27754 27802 "plugins/funind/functional_principles_proofs.ml" 957 27754 27811
type(
  Term.rel_context
)
ident(
  int_ref type_ctxt "plugins/funind/functional_principles_proofs.ml" 954 27546 27552 "plugins/funind/functional_principles_proofs.ml" 954 27546 27561
)
"plugins/funind/functional_principles_proofs.ml" 957 27754 27773 "plugins/funind/functional_principles_proofs.ml" 957 27754 27811
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 958 27815 27821 "plugins/funind/functional_principles_proofs.ml" 958 27815 27825
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 958 27815 27828 "plugins/funind/functional_principles_proofs.ml" 958 27815 27839
type(
  Names.label -> Names.identifier
)
ident(
  ext_ref Names.id_of_label
)
"plugins/funind/functional_principles_proofs.ml" 958 27815 27841 "plugins/funind/functional_principles_proofs.ml" 958 27815 27850
type(
  Names.constant -> Names.label
)
ident(
  ext_ref Names.con_label
)
"plugins/funind/functional_principles_proofs.ml" 958 27815 27852 "plugins/funind/functional_principles_proofs.ml" 958 27815 27861
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/functional_principles_proofs.ml" 958 27815 27862 "plugins/funind/functional_principles_proofs.ml" 958 27815 27863
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 932 26119 26154 "plugins/funind/functional_principles_proofs.ml" 932 26119 26155
)
"plugins/funind/functional_principles_proofs.ml" 958 27815 27851 "plugins/funind/functional_principles_proofs.ml" 958 27815 27864
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 958 27815 27840 "plugins/funind/functional_principles_proofs.ml" 958 27815 27865
call(
  stack
)
type(
  Names.label
)
"plugins/funind/functional_principles_proofs.ml" 958 27815 27828 "plugins/funind/functional_principles_proofs.ml" 958 27815 27865
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 959 27869 27875 "plugins/funind/functional_principles_proofs.ml" 959 27869 27892
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 960 27895 27899 "plugins/funind/functional_principles_proofs.ml" 960 27895 27909
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27919 "plugins/funind/functional_principles_proofs.ml" 962 27918 27924
type(
  int -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclDO
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27926 "plugins/funind/functional_principles_proofs.ml" 962 27918 27935
type(
  int
)
ident(
  int_ref nb_params "plugins/funind/functional_principles_proofs.ml" 932 26119 26164 "plugins/funind/functional_principles_proofs.ml" 932 26119 26173
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27936 "plugins/funind/functional_principles_proofs.ml" 962 27918 27937
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27938 "plugins/funind/functional_principles_proofs.ml" 962 27918 27950
type(
  int
)
ident(
  int_ref rec_args_num "plugins/funind/functional_principles_proofs.ml" 932 26119 26182 "plugins/funind/functional_principles_proofs.ml" 932 26119 26194
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27926 "plugins/funind/functional_principles_proofs.ml" 962 27918 27950
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27951 "plugins/funind/functional_principles_proofs.ml" 962 27918 27952
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27953 "plugins/funind/functional_principles_proofs.ml" 962 27918 27954
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27925 "plugins/funind/functional_principles_proofs.ml" 962 27918 27955
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27956 "plugins/funind/functional_principles_proofs.ml" 962 27918 27961
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intro
)
"plugins/funind/functional_principles_proofs.ml" 962 27918 27919 "plugins/funind/functional_principles_proofs.ml" 962 27918 27961
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 963 27963 27990 "plugins/funind/functional_principles_proofs.ml" 963 27963 27991
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 964 27995 27999 "plugins/funind/functional_principles_proofs.ml" 968 28234 28262
)
"plugins/funind/functional_principles_proofs.ml" 964 27995 28003 "plugins/funind/functional_principles_proofs.ml" 964 27995 28009
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 964 27995 28012 "plugins/funind/functional_principles_proofs.ml" 964 27995 28025
type(
  Proof_type.goal Tacmach.sigma -> int -> Names.identifier
)
ident(
  ext_ref Tacmach.pf_nth_hyp_id
)
"plugins/funind/functional_principles_proofs.ml" 964 27995 28026 "plugins/funind/functional_principles_proofs.ml" 964 27995 28027
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 963 27963 27990 "plugins/funind/functional_principles_proofs.ml" 963 27963 27991
)
"plugins/funind/functional_principles_proofs.ml" 964 27995 28028 "plugins/funind/functional_principles_proofs.ml" 964 27995 28029
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 964 27995 28012 "plugins/funind/functional_principles_proofs.ml" 964 27995 28029
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 965 28033 28037 "plugins/funind/functional_principles_proofs.ml" 965 28033 28047
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 966 28048 28122 "plugins/funind/functional_principles_proofs.ml" 966 28048 28140
type(
  Names.identifier -> Proof_type.tactic
)
ident(
  int_ref generalize_non_dep "plugins/funind/functional_principles_proofs.ml" 904 25161 25165 "plugins/funind/functional_principles_proofs.ml" 904 25161 25183
)
"plugins/funind/functional_principles_proofs.ml" 966 28048 28141 "plugins/funind/functional_principles_proofs.ml" 966 28048 28147
type(
  Names.identifier
)
ident(
  int_ref rec_id "plugins/funind/functional_principles_proofs.ml" 964 27995 28003 "plugins/funind/functional_principles_proofs.ml" 964 27995 28009
)
"plugins/funind/functional_principles_proofs.ml" 966 28048 28121 "plugins/funind/functional_principles_proofs.ml" 966 28048 28148
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 967 28150 28185 "plugins/funind/functional_principles_proofs.ml" 967 28150 28191
type(
  Tacexpr.evars_flag -> Term.constr Rawterm.with_bindings -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_case
)
"plugins/funind/functional_principles_proofs.ml" 967 28150 28192 "plugins/funind/functional_principles_proofs.ml" 967 28150 28197
type(
  Tacexpr.evars_flag
)
"plugins/funind/functional_principles_proofs.ml" 967 28150 28199 "plugins/funind/functional_principles_proofs.ml" 967 28150 28204
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 967 28150 28205 "plugins/funind/functional_principles_proofs.ml" 967 28150 28211
type(
  Names.identifier
)
ident(
  int_ref rec_id "plugins/funind/functional_principles_proofs.ml" 964 27995 28003 "plugins/funind/functional_principles_proofs.ml" 964 27995 28009
)
"plugins/funind/functional_principles_proofs.ml" 967 28150 28199 "plugins/funind/functional_principles_proofs.ml" 967 28150 28211
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 967 28150 28212 "plugins/funind/functional_principles_proofs.ml" 967 28150 28230
type(
  Term.constr Rawterm.bindings
)
"plugins/funind/functional_principles_proofs.ml" 967 28150 28198 "plugins/funind/functional_principles_proofs.ml" 967 28150 28231
type(
  Term.constr Rawterm.with_bindings
)
"plugins/funind/functional_principles_proofs.ml" 967 28150 28184 "plugins/funind/functional_principles_proofs.ml" 967 28150 28232
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 968 28234 28241 "plugins/funind/functional_principles_proofs.ml" 968 28234 28259
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intros_reflexivity
)
"plugins/funind/functional_principles_proofs.ml" 966 28048 28054 "plugins/funind/functional_principles_proofs.ml" 968 28234 28260
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 968 28234 28261 "plugins/funind/functional_principles_proofs.ml" 968 28234 28262
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 963 27963 27990 "plugins/funind/functional_principles_proofs.ml" 963 27963 27991
)
"plugins/funind/functional_principles_proofs.ml" 965 28033 28037 "plugins/funind/functional_principles_proofs.ml" 968 28234 28262
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 964 27995 27999 "plugins/funind/functional_principles_proofs.ml" 968 28234 28262
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 963 27963 27985 "plugins/funind/functional_principles_proofs.ml" 969 28263 28265
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 961 27910 27916 "plugins/funind/functional_principles_proofs.ml" 970 28266 28273
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 960 27895 27899 "plugins/funind/functional_principles_proofs.ml" 970 28266 28273
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 972 28279 28281 "plugins/funind/functional_principles_proofs.ml" 972 28279 28299
type(
  Names.identifier ->
  Decl_kinds.goal_kind ->
  Term.types ->
  ?init_tac:Proof_type.tactic ->
  ?compute_guard:Pfedit.lemma_possible_guards ->
  Tacexpr.declaration_hook -> unit
)
ident(
  ext_ref Lemmas.start_proof
)
"plugins/funind/functional_principles_proofs.ml" 976 28421 28426 "plugins/funind/functional_principles_proofs.ml" 976 28421 28440
type(
  Names.identifier -> Names.identifier
)
ident(
  ext_ref Indfun_common.mk_equation_id
)
"plugins/funind/functional_principles_proofs.ml" 976 28421 28441 "plugins/funind/functional_principles_proofs.ml" 976 28421 28445
type(
  Names.identifier
)
ident(
  int_ref f_id "plugins/funind/functional_principles_proofs.ml" 958 27815 27821 "plugins/funind/functional_principles_proofs.ml" 958 27815 27825
)
"plugins/funind/functional_principles_proofs.ml" 976 28421 28425 "plugins/funind/functional_principles_proofs.ml" 976 28421 28446
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 977 28447 28452 "plugins/funind/functional_principles_proofs.ml" 977 28447 28469
type(
  Decl_kinds.locality
)
"plugins/funind/functional_principles_proofs.ml" 977 28447 28488 "plugins/funind/functional_principles_proofs.ml" 977 28447 28506
type(
  Decl_kinds.theorem_kind
)
"plugins/funind/functional_principles_proofs.ml" 977 28447 28470 "plugins/funind/functional_principles_proofs.ml" 977 28447 28507
type(
  Decl_kinds.goal_object_kind
)
"plugins/funind/functional_principles_proofs.ml" 977 28447 28451 "plugins/funind/functional_principles_proofs.ml" 977 28447 28508
type(
  Decl_kinds.goal_kind
)
"plugins/funind/functional_principles_proofs.ml" 978 28509 28513 "plugins/funind/functional_principles_proofs.ml" 978 28509 28523
type(
  Term.types
)
ident(
  int_ref lemma_type "plugins/funind/functional_principles_proofs.ml" 957 27754 27760 "plugins/funind/functional_principles_proofs.ml" 957 27754 27770
)
"plugins/funind/functional_principles_proofs.ml" 979 28524 28533 "plugins/funind/functional_principles_proofs.ml" 979 28524 28534
type(
  Decl_kinds.locality
)
"plugins/funind/functional_principles_proofs.ml" 979 28524 28535 "plugins/funind/functional_principles_proofs.ml" 979 28524 28536
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_proofs.ml" 979 28524 28540 "plugins/funind/functional_principles_proofs.ml" 979 28524 28542
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 979 28524 28528 "plugins/funind/functional_principles_proofs.ml" 979 28524 28543
type(
  Decl_kinds.locality -> Libnames.global_reference -> unit
)
"plugins/funind/functional_principles_proofs.ml" 972 28279 28281 "plugins/funind/functional_principles_proofs.ml" 979 28524 28543
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 980 28545 28547 "plugins/funind/functional_principles_proofs.ml" 980 28545 28556
type(
  Tacmach.tactic -> unit
)
ident(
  ext_ref Pfedit.by
)
"plugins/funind/functional_principles_proofs.ml" 980 28545 28557 "plugins/funind/functional_principles_proofs.ml" 980 28545 28576
type(
  Proof_type.tactic
)
ident(
  int_ref prove_replacement "plugins/funind/functional_principles_proofs.ml" 959 27869 27875 "plugins/funind/functional_principles_proofs.ml" 959 27869 27892
)
"plugins/funind/functional_principles_proofs.ml" 980 28545 28547 "plugins/funind/functional_principles_proofs.ml" 980 28545 28576
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 981 28578 28580 "plugins/funind/functional_principles_proofs.ml" 981 28578 28597
type(
  bool -> unit
)
ident(
  ext_ref Lemmas.save_named
)
"plugins/funind/functional_principles_proofs.ml" 981 28578 28598 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 981 28578 28580 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
call(
  tail
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 980 28545 28547 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 972 28279 28281 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 959 27869 27871 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 958 27815 27817 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 957 27754 27756 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 956 27690 27692 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 954 27546 27548 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 952 27321 27323 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 950 27130 27132 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 943 26767 26769 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 942 26708 26710 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 941 26638 26640 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 938 26578 26580 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 937 26476 26478 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 936 26422 26424 "plugins/funind/functional_principles_proofs.ml" 981 28578 28603
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 986 28608 28612 "plugins/funind/functional_principles_proofs.ml" 986 28608 28622
type(
  'a list ->
  int ->
  'b list ->
  Term.constr ->
  'c ->
  Term.constr array ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def do_replace "plugins/funind/functional_principles_proofs.ml" 1025 29939 29939 --
)
"plugins/funind/functional_principles_proofs.ml" 986 28608 28623 "plugins/funind/functional_principles_proofs.ml" 986 28608 28629
type(
  'a list
)
ident(
  def params "plugins/funind/functional_principles_proofs.ml" 986 28608 28630 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
)
"plugins/funind/functional_principles_proofs.ml" 986 28608 28630 "plugins/funind/functional_principles_proofs.ml" 986 28608 28641
type(
  int
)
ident(
  def rec_arg_num "plugins/funind/functional_principles_proofs.ml" 986 28608 28642 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
)
"plugins/funind/functional_principles_proofs.ml" 986 28608 28642 "plugins/funind/functional_principles_proofs.ml" 986 28608 28653
type(
  'b list
)
ident(
  def rev_args_id "plugins/funind/functional_principles_proofs.ml" 986 28608 28654 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
)
"plugins/funind/functional_principles_proofs.ml" 986 28608 28654 "plugins/funind/functional_principles_proofs.ml" 986 28608 28655
type(
  Term.constr
)
ident(
  def f "plugins/funind/functional_principles_proofs.ml" 986 28608 28656 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
)
"plugins/funind/functional_principles_proofs.ml" 986 28608 28656 "plugins/funind/functional_principles_proofs.ml" 986 28608 28663
type(
  'c
)
ident(
  def fun_num "plugins/funind/functional_principles_proofs.ml" 986 28608 28664 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
)
"plugins/funind/functional_principles_proofs.ml" 986 28608 28664 "plugins/funind/functional_principles_proofs.ml" 986 28608 28672
type(
  Term.constr array
)
ident(
  def all_funs "plugins/funind/functional_principles_proofs.ml" 986 28608 28673 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
)
"plugins/funind/functional_principles_proofs.ml" 986 28608 28673 "plugins/funind/functional_principles_proofs.ml" 986 28608 28674
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 987 28677 28679 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
)
"plugins/funind/functional_principles_proofs.ml" 987 28677 28683 "plugins/funind/functional_principles_proofs.ml" 987 28677 28697
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 989 28708 28718 "plugins/funind/functional_principles_proofs.ml" 989 28708 28724
type(
  Indfun_common.function_info
)
ident(
  def finfos "plugins/funind/functional_principles_proofs.ml" 990 28764 28770 "plugins/funind/functional_principles_proofs.ml" 990 28764 28812
)
"plugins/funind/functional_principles_proofs.ml" 989 28708 28727 "plugins/funind/functional_principles_proofs.ml" 989 28708 28746
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/functional_principles_proofs.ml" 989 28708 28748 "plugins/funind/functional_principles_proofs.ml" 989 28708 28757
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/functional_principles_proofs.ml" 989 28708 28758 "plugins/funind/functional_principles_proofs.ml" 989 28708 28759
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 986 28608 28654 "plugins/funind/functional_principles_proofs.ml" 986 28608 28655
)
"plugins/funind/functional_principles_proofs.ml" 989 28708 28747 "plugins/funind/functional_principles_proofs.ml" 989 28708 28760
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 989 28708 28727 "plugins/funind/functional_principles_proofs.ml" 989 28708 28760
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/functional_principles_proofs.ml" 990 28764 28770 "plugins/funind/functional_principles_proofs.ml" 990 28764 28777
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/functional_principles_proofs.ml" 990 28764 28779 "plugins/funind/functional_principles_proofs.ml" 990 28764 28789
type(
  Names.constant option -> Names.constant
)
ident(
  ext_ref Option.get
)
"plugins/funind/functional_principles_proofs.ml" 990 28764 28790 "plugins/funind/functional_principles_proofs.ml" 990 28764 28796
type(
  Indfun_common.function_info
)
ident(
  int_ref finfos "plugins/funind/functional_principles_proofs.ml" 989 28708 28718 "plugins/funind/functional_principles_proofs.ml" 989 28708 28724
)
"plugins/funind/functional_principles_proofs.ml" 990 28764 28790 "plugins/funind/functional_principles_proofs.ml" 990 28764 28811
type(
  Names.constant option
)
"plugins/funind/functional_principles_proofs.ml" 990 28764 28778 "plugins/funind/functional_principles_proofs.ml" 990 28764 28812
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 990 28764 28770 "plugins/funind/functional_principles_proofs.ml" 990 28764 28812
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 989 28708 28714 "plugins/funind/functional_principles_proofs.ml" 990 28764 28812
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 991 28813 28823 "plugins/funind/functional_principles_proofs.ml" 991 28813 28832
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 991 28813 28835 "plugins/funind/functional_principles_proofs.ml" 991 28813 28848
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 991 28813 28823 "plugins/funind/functional_principles_proofs.ml" 991 28813 28848
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 991 28813 28822 "plugins/funind/functional_principles_proofs.ml" 991 28813 28854
type(
  exn
)
ident(
  def e "plugins/funind/functional_principles_proofs.ml" 992 28858 28864 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29591
)
"plugins/funind/functional_principles_proofs.ml" 992 28858 28868 "plugins/funind/functional_principles_proofs.ml" 992 28858 28872
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 992 28858 28875 "plugins/funind/functional_principles_proofs.ml" 992 28858 28886
type(
  Names.label -> Names.identifier
)
ident(
  ext_ref Names.id_of_label
)
"plugins/funind/functional_principles_proofs.ml" 992 28858 28888 "plugins/funind/functional_principles_proofs.ml" 992 28858 28897
type(
  Names.constant -> Names.label
)
ident(
  ext_ref Names.con_label
)
"plugins/funind/functional_principles_proofs.ml" 992 28858 28899 "plugins/funind/functional_principles_proofs.ml" 992 28858 28908
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/functional_principles_proofs.ml" 992 28858 28909 "plugins/funind/functional_principles_proofs.ml" 992 28858 28910
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 986 28608 28654 "plugins/funind/functional_principles_proofs.ml" 986 28608 28655
)
"plugins/funind/functional_principles_proofs.ml" 992 28858 28898 "plugins/funind/functional_principles_proofs.ml" 992 28858 28911
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 992 28858 28887 "plugins/funind/functional_principles_proofs.ml" 992 28858 28912
call(
  stack
)
type(
  Names.label
)
"plugins/funind/functional_principles_proofs.ml" 992 28858 28875 "plugins/funind/functional_principles_proofs.ml" 992 28858 28912
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 996 29027 29037 "plugins/funind/functional_principles_proofs.ml" 996 29027 29054
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 996 29027 29058 "plugins/funind/functional_principles_proofs.ml" 996 29027 29072
type(
  Names.identifier -> Names.identifier
)
ident(
  ext_ref Indfun_common.mk_equation_id
)
"plugins/funind/functional_principles_proofs.ml" 996 29027 29073 "plugins/funind/functional_principles_proofs.ml" 996 29027 29077
type(
  Names.identifier
)
ident(
  int_ref f_id "plugins/funind/functional_principles_proofs.ml" 992 28858 28868 "plugins/funind/functional_principles_proofs.ml" 992 28858 28872
)
"plugins/funind/functional_principles_proofs.ml" 996 29027 29057 "plugins/funind/functional_principles_proofs.ml" 996 29027 29078
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29088 "plugins/funind/functional_principles_proofs.ml" 997 29082 29111
type(
  Term.constr array -> Term.constr -> 'c -> int -> int -> int -> unit
)
ident(
  int_ref generate_equation_lemma "plugins/funind/functional_principles_proofs.ml" 932 26119 26123 "plugins/funind/functional_principles_proofs.ml" 932 26119 26146
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29112 "plugins/funind/functional_principles_proofs.ml" 997 29082 29120
type(
  Term.constr array
)
ident(
  int_ref all_funs "plugins/funind/functional_principles_proofs.ml" 986 28608 28664 "plugins/funind/functional_principles_proofs.ml" 986 28608 28672
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29121 "plugins/funind/functional_principles_proofs.ml" 997 29082 29122
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 986 28608 28654 "plugins/funind/functional_principles_proofs.ml" 986 28608 28655
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29123 "plugins/funind/functional_principles_proofs.ml" 997 29082 29130
type(
  'c
)
ident(
  int_ref fun_num "plugins/funind/functional_principles_proofs.ml" 986 28608 28656 "plugins/funind/functional_principles_proofs.ml" 986 28608 28663
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29132 "plugins/funind/functional_principles_proofs.ml" 997 29082 29143
type(
  'a list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29144 "plugins/funind/functional_principles_proofs.ml" 997 29082 29150
type(
  'a list
)
ident(
  int_ref params "plugins/funind/functional_principles_proofs.ml" 986 28608 28623 "plugins/funind/functional_principles_proofs.ml" 986 28608 28629
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29131 "plugins/funind/functional_principles_proofs.ml" 997 29082 29151
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29153 "plugins/funind/functional_principles_proofs.ml" 997 29082 29164
type(
  'b list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29165 "plugins/funind/functional_principles_proofs.ml" 997 29082 29176
type(
  'b list
)
ident(
  int_ref rev_args_id "plugins/funind/functional_principles_proofs.ml" 986 28608 28642 "plugins/funind/functional_principles_proofs.ml" 986 28608 28653
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29152 "plugins/funind/functional_principles_proofs.ml" 997 29082 29177
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29178 "plugins/funind/functional_principles_proofs.ml" 997 29082 29189
type(
  int
)
ident(
  int_ref rec_arg_num "plugins/funind/functional_principles_proofs.ml" 986 28608 28630 "plugins/funind/functional_principles_proofs.ml" 986 28608 28641
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29088 "plugins/funind/functional_principles_proofs.ml" 997 29082 29189
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 998 29191 29201 "plugins/funind/functional_principles_proofs.ml" 998 29191 29202
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 999 29205 29212 "plugins/funind/functional_principles_proofs.ml" 999 29205 29213
type(
  exn
)
ident(
  int_ref e "plugins/funind/functional_principles_proofs.ml" 991 28813 28822 "plugins/funind/functional_principles_proofs.ml" 991 28813 28854
)
"plugins/funind/functional_principles_proofs.ml" 1000 29219 29224 "plugins/funind/functional_principles_proofs.ml" 1000 29219 29237
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 1001 29241 29252 "plugins/funind/functional_principles_proofs.ml" 1001 29241 29258
type(
  Indfun_common.function_info
)
"plugins/funind/functional_principles_proofs.ml" 1001 29241 29261 "plugins/funind/functional_principles_proofs.ml" 1001 29241 29280
type(
  Names.constant -> Indfun_common.function_info
)
ident(
  ext_ref Indfun_common.find_Function_infos
)
"plugins/funind/functional_principles_proofs.ml" 1001 29241 29282 "plugins/funind/functional_principles_proofs.ml" 1001 29241 29291
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/functional_principles_proofs.ml" 1001 29241 29292 "plugins/funind/functional_principles_proofs.ml" 1001 29241 29293
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 986 28608 28654 "plugins/funind/functional_principles_proofs.ml" 986 28608 28655
)
"plugins/funind/functional_principles_proofs.ml" 1001 29241 29281 "plugins/funind/functional_principles_proofs.ml" 1001 29241 29294
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 1001 29241 29261 "plugins/funind/functional_principles_proofs.ml" 1001 29241 29294
call(
  stack
)
type(
  Indfun_common.function_info
)
"plugins/funind/functional_principles_proofs.ml" 1002 29298 29305 "plugins/funind/functional_principles_proofs.ml" 1002 29298 29320
type(
  Indfun_common.function_info -> unit
)
ident(
  ext_ref Indfun_common.update_Function
)
"plugins/funind/functional_principles_proofs.ml" 1003 29321 29324 "plugins/funind/functional_principles_proofs.ml" 1003 29321 29330
type(
  Indfun_common.function_info
)
ident(
  int_ref finfos "plugins/funind/functional_principles_proofs.ml" 1001 29241 29252 "plugins/funind/functional_principles_proofs.ml" 1001 29241 29258
)
"plugins/funind/functional_principles_proofs.ml" 1004 29336 29370 "plugins/funind/functional_principles_proofs.ml" 1004 29336 29384
type(
  Libnames.qualid -> Libnames.global_reference
)
ident(
  ext_ref Nametab.locate
)
"plugins/funind/functional_principles_proofs.ml" 1004 29336 29386 "plugins/funind/functional_principles_proofs.ml" 1004 29336 29401
type(
  Names.identifier -> Libnames.qualid
)
ident(
  ext_ref Libnames.qualid_of_ident
)
"plugins/funind/functional_principles_proofs.ml" 1004 29336 29402 "plugins/funind/functional_principles_proofs.ml" 1004 29336 29419
type(
  Names.identifier
)
ident(
  int_ref equation_lemma_id "plugins/funind/functional_principles_proofs.ml" 996 29027 29037 "plugins/funind/functional_principles_proofs.ml" 996 29027 29054
)
"plugins/funind/functional_principles_proofs.ml" 1004 29336 29385 "plugins/funind/functional_principles_proofs.ml" 1004 29336 29420
call(
  stack
)
type(
  Libnames.qualid
)
"plugins/funind/functional_principles_proofs.ml" 1004 29336 29370 "plugins/funind/functional_principles_proofs.ml" 1004 29336 29420
call(
  stack
)
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_proofs.ml" 1005 29426 29446 "plugins/funind/functional_principles_proofs.ml" 1005 29426 29447
type(
  Names.constant
)
ident(
  def c "plugins/funind/functional_principles_proofs.ml" 1005 29426 29451 "plugins/funind/functional_principles_proofs.ml" 1005 29426 29452
)
"plugins/funind/functional_principles_proofs.ml" 1005 29426 29437 "plugins/funind/functional_principles_proofs.ml" 1005 29426 29447
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_proofs.ml" 1005 29426 29451 "plugins/funind/functional_principles_proofs.ml" 1005 29426 29452
type(
  Names.constant
)
ident(
  int_ref c "plugins/funind/functional_principles_proofs.ml" 1005 29426 29446 "plugins/funind/functional_principles_proofs.ml" 1005 29426 29447
)
"plugins/funind/functional_principles_proofs.ml" 1006 29453 29464 "plugins/funind/functional_principles_proofs.ml" 1006 29453 29465
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_proofs.ml" 1006 29453 29469 "plugins/funind/functional_principles_proofs.ml" 1006 29453 29481
type(
  string -> Names.constant
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_proofs.ml" 1006 29453 29482 "plugins/funind/functional_principles_proofs.ml" 1006 29453 29498
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1006 29453 29469 "plugins/funind/functional_principles_proofs.ml" 1006 29453 29498
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 1004 29336 29363 "plugins/funind/functional_principles_proofs.ml" 1007 29499 29506
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 1004 29336 29358 "plugins/funind/functional_principles_proofs.ml" 1007 29499 29506
type(
  Names.constant option
)
"plugins/funind/functional_principles_proofs.ml" 1003 29321 29323 "plugins/funind/functional_principles_proofs.ml" 1008 29507 29510
type(
  Indfun_common.function_info
)
"plugins/funind/functional_principles_proofs.ml" 1002 29298 29305 "plugins/funind/functional_principles_proofs.ml" 1008 29507 29510
call(
  stack
)
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 1001 29241 29248 "plugins/funind/functional_principles_proofs.ml" 1008 29507 29510
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 1009 29511 29516 "plugins/funind/functional_principles_proofs.ml" 1009 29511 29517
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 1009 29511 29521 "plugins/funind/functional_principles_proofs.ml" 1009 29511 29523
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 999 29205 29206 "plugins/funind/functional_principles_proofs.ml" 1009 29511 29523
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 1012 29534 29540 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29562
type(
  Environ.env -> Names.identifier -> Term.constr
)
ident(
  ext_ref Tacinterp.constr_of_id
)
"plugins/funind/functional_principles_proofs.ml" 1012 29534 29564 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29570
type(
  Proof_type.goal Tacmach.sigma -> Environ.env
)
ident(
  ext_ref Tacmach.pf_env
)
"plugins/funind/functional_principles_proofs.ml" 1012 29534 29571 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29572
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 986 28608 28673 "plugins/funind/functional_principles_proofs.ml" 986 28608 28674
)
"plugins/funind/functional_principles_proofs.ml" 1012 29534 29563 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29573
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 1012 29534 29574 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29591
type(
  Names.identifier
)
ident(
  int_ref equation_lemma_id "plugins/funind/functional_principles_proofs.ml" 996 29027 29037 "plugins/funind/functional_principles_proofs.ml" 996 29027 29054
)
"plugins/funind/functional_principles_proofs.ml" 1012 29534 29540 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29591
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 998 29191 29197 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29591
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 997 29082 29088 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29591
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 996 29027 29033 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29591
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 992 28858 28864 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29591
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 988 28700 28704 "plugins/funind/functional_principles_proofs.ml" 1012 29534 29591
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1014 29597 29603 "plugins/funind/functional_principles_proofs.ml" 1014 29597 29617
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1014 29597 29620 "plugins/funind/functional_principles_proofs.ml" 1014 29597 29627
type(
  Term.types -> int
)
ident(
  ext_ref Term.nb_prod
)
"plugins/funind/functional_principles_proofs.ml" 1014 29597 29629 "plugins/funind/functional_principles_proofs.ml" 1014 29597 29637
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 1014 29597 29638 "plugins/funind/functional_principles_proofs.ml" 1014 29597 29639
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 986 28608 28673 "plugins/funind/functional_principles_proofs.ml" 986 28608 28674
)
"plugins/funind/functional_principles_proofs.ml" 1014 29597 29628 "plugins/funind/functional_principles_proofs.ml" 1014 29597 29640
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1014 29597 29620 "plugins/funind/functional_principles_proofs.ml" 1014 29597 29640
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1015 29644 29648 "plugins/funind/functional_principles_proofs.ml" 1015 29644 29655
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 1016 29656 29663 "plugins/funind/functional_principles_proofs.ml" 1016 29656 29668
type(
  int -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclDO
)
"plugins/funind/functional_principles_proofs.ml" 1016 29656 29669 "plugins/funind/functional_principles_proofs.ml" 1016 29656 29683
type(
  int
)
ident(
  int_ref nb_intro_to_do "plugins/funind/functional_principles_proofs.ml" 1014 29597 29603 "plugins/funind/functional_principles_proofs.ml" 1014 29597 29617
)
"plugins/funind/functional_principles_proofs.ml" 1016 29656 29684 "plugins/funind/functional_principles_proofs.ml" 1016 29656 29689
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intro
)
"plugins/funind/functional_principles_proofs.ml" 1016 29656 29662 "plugins/funind/functional_principles_proofs.ml" 1016 29656 29690
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1018 29699 29704 "plugins/funind/functional_principles_proofs.ml" 1018 29699 29706
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g' "plugins/funind/functional_principles_proofs.ml" 1019 29710 29713 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29921
)
"plugins/funind/functional_principles_proofs.ml" 1019 29710 29717 "plugins/funind/functional_principles_proofs.ml" 1019 29710 29732
type(
  Sign.named_context
)
"plugins/funind/functional_principles_proofs.ml" 1019 29710 29735 "plugins/funind/functional_principles_proofs.ml" 1019 29710 29745
type(
  int -> Proof_type.goal Tacmach.sigma -> Sign.named_context
)
ident(
  ext_ref Tacticals.nLastDecls
)
"plugins/funind/functional_principles_proofs.ml" 1019 29710 29746 "plugins/funind/functional_principles_proofs.ml" 1019 29710 29760
type(
  int
)
ident(
  int_ref nb_intro_to_do "plugins/funind/functional_principles_proofs.ml" 1014 29597 29603 "plugins/funind/functional_principles_proofs.ml" 1014 29597 29617
)
"plugins/funind/functional_principles_proofs.ml" 1019 29710 29761 "plugins/funind/functional_principles_proofs.ml" 1019 29710 29763
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 1018 29699 29704 "plugins/funind/functional_principles_proofs.ml" 1018 29699 29706
)
"plugins/funind/functional_principles_proofs.ml" 1019 29710 29735 "plugins/funind/functional_principles_proofs.ml" 1019 29710 29763
call(
  stack
)
type(
  Sign.named_context
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29774 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29792
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29795 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29803
type(
  (Term.named_declaration -> Names.identifier) ->
  Sign.named_context -> Names.identifier list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29810 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29812
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 1020 29767 29821 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29823
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29813 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29814
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29815 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29816
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29809 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29817
type(
  Term.named_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29821 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29823
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1020 29767 29810 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29812
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29804 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29824
type(
  Term.named_declaration -> Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29825 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29840
type(
  Sign.named_context
)
ident(
  int_ref just_introduced "plugins/funind/functional_principles_proofs.ml" 1019 29710 29717 "plugins/funind/functional_principles_proofs.ml" 1019 29710 29732
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29795 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29840
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1021 29844 29847 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29854
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 1021 29844 29856 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29874
type(
  ?tac:Tacmach.tactic * Equality.conditions -> Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Equality.rewriteLR
)
"plugins/funind/functional_principles_proofs.ml" 1021 29844 29875 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29889
type(
  Term.constr
)
ident(
  int_ref equation_lemma "plugins/funind/functional_principles_proofs.ml" 987 28677 28683 "plugins/funind/functional_principles_proofs.ml" 987 28677 28697
)
"plugins/funind/functional_principles_proofs.ml" 1021 29844 29855 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29890
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1021 29844 29892 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29898
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref revert "plugins/funind/functional_principles_proofs.ml" 927 26038 26042 "plugins/funind/functional_principles_proofs.ml" 927 26038 26048
)
"plugins/funind/functional_principles_proofs.ml" 1021 29844 29899 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29917
type(
  Names.identifier list
)
ident(
  int_ref just_introduced_id "plugins/funind/functional_principles_proofs.ml" 1020 29767 29774 "plugins/funind/functional_principles_proofs.ml" 1020 29767 29792
)
"plugins/funind/functional_principles_proofs.ml" 1021 29844 29891 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29918
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1021 29844 29919 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29921
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g' "plugins/funind/functional_principles_proofs.ml" 1018 29699 29704 "plugins/funind/functional_principles_proofs.ml" 1018 29699 29706
)
"plugins/funind/functional_principles_proofs.ml" 1021 29844 29847 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29921
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1020 29767 29770 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29921
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1019 29710 29713 "plugins/funind/functional_principles_proofs.ml" 1021 29844 29921
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1017 29691 29697 "plugins/funind/functional_principles_proofs.ml" 1022 29922 29929
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1023 29930 29936 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 986 28608 28673 "plugins/funind/functional_principles_proofs.ml" 986 28608 28674
)
"plugins/funind/functional_principles_proofs.ml" 1015 29644 29648 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1014 29597 29599 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 987 28677 28679 "plugins/funind/functional_principles_proofs.ml" 1023 29930 29937
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1025 29939 29943 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29965
type(
  bool ->
  int -> Names.constant array -> Term.constr array -> 'a -> Proof_type.tactic
)
ident(
  def prove_princ_for_struct "plugins/funind/functional_principles_proofs.ml" 1342 39918 39918 --
)
"plugins/funind/functional_principles_proofs.ml" 1025 29939 29966 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29983
type(
  bool
)
ident(
  def interactive_proof "plugins/funind/functional_principles_proofs.ml" 1025 29939 29984 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
)
"plugins/funind/functional_principles_proofs.ml" 1025 29939 29984 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29991
type(
  int
)
ident(
  def fun_num "plugins/funind/functional_principles_proofs.ml" 1025 29939 29992 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
)
"plugins/funind/functional_principles_proofs.ml" 1025 29939 29992 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29998
type(
  Names.constant array
)
ident(
  def fnames "plugins/funind/functional_principles_proofs.ml" 1025 29939 29999 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
)
"plugins/funind/functional_principles_proofs.ml" 1025 29939 29999 "plugins/funind/functional_principles_proofs.ml" 1025 29939 30007
type(
  Term.constr array
)
ident(
  def all_funs "plugins/funind/functional_principles_proofs.ml" 1025 29939 30008 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
)
"plugins/funind/functional_principles_proofs.ml" 1025 29939 30008 "plugins/funind/functional_principles_proofs.ml" 1025 29939 30016
type(
  'a
)
ident(
  def _nparams "plugins/funind/functional_principles_proofs.ml" 1025 29939 30017 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
)
"plugins/funind/functional_principles_proofs.ml" 1026 30028 30034 "plugins/funind/functional_principles_proofs.ml" 1026 30028 30035
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 1027 30039 30043 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
)
"plugins/funind/functional_principles_proofs.ml" 1027 30039 30047 "plugins/funind/functional_principles_proofs.ml" 1027 30039 30057
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1027 30039 30060 "plugins/funind/functional_principles_proofs.ml" 1027 30039 30068
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 1027 30039 30069 "plugins/funind/functional_principles_proofs.ml" 1027 30039 30070
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1026 30028 30034 "plugins/funind/functional_principles_proofs.ml" 1026 30028 30035
)
"plugins/funind/functional_principles_proofs.ml" 1027 30039 30060 "plugins/funind/functional_principles_proofs.ml" 1027 30039 30070
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1028 30074 30082 "plugins/funind/functional_principles_proofs.ml" 1028 30074 30092
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_proofs.ml" 1028 30074 30095 "plugins/funind/functional_principles_proofs.ml" 1028 30074 30111
type(
  ?elimc:Term.constr Rawterm.with_bindings ->
  Term.types -> Tactics.elim_scheme
)
ident(
  ext_ref Tactics.compute_elim_sig
)
"plugins/funind/functional_principles_proofs.ml" 1028 30074 30112 "plugins/funind/functional_principles_proofs.ml" 1028 30074 30122
type(
  Term.types
)
ident(
  int_ref princ_type "plugins/funind/functional_principles_proofs.ml" 1027 30039 30047 "plugins/funind/functional_principles_proofs.ml" 1027 30039 30057
)
"plugins/funind/functional_principles_proofs.ml" 1028 30074 30095 "plugins/funind/functional_principles_proofs.ml" 1028 30074 30122
call(
  stack
)
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_proofs.ml" 1029 30126 30134 "plugins/funind/functional_principles_proofs.ml" 1029 30126 30142
type(
  Names.name -> Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1030 30145 30155 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30160
type(
  Names.identifier list ref
)
"plugins/funind/functional_principles_proofs.ml" 1030 30145 30163 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30166
type(
  Names.identifier list -> Names.identifier list ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/functional_principles_proofs.ml" 1030 30145 30168 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30182
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/functional_principles_proofs.ml" 1030 30145 30183 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30184
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1026 30028 30034 "plugins/funind/functional_principles_proofs.ml" 1026 30028 30035
)
"plugins/funind/functional_principles_proofs.ml" 1030 30145 30167 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30185
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1030 30145 30163 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30185
type(
  Names.identifier list ref
)
"plugins/funind/functional_principles_proofs.ml" 1031 30189 30200 "plugins/funind/functional_principles_proofs.ml" 1031 30189 30202
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1032 30206 30208 "plugins/funind/functional_principles_proofs.ml" 1038 30367 30382
)
"plugins/funind/functional_principles_proofs.ml" 1032 30206 30212 "plugins/funind/functional_principles_proofs.ml" 1032 30206 30218
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1033 30221 30231 "plugins/funind/functional_principles_proofs.ml" 1033 30221 30233
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1031 30189 30200 "plugins/funind/functional_principles_proofs.ml" 1031 30189 30202
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30252 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30254
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 1034 30239 30258 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30291
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30247 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30254
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30258 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30266
type(
  Names.identifier list -> string -> Names.identifier
)
ident(
  ext_ref Indfun_common.fresh_id
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30267 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30268
type(
  Names.identifier list ref -> Names.identifier list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30268 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30273
type(
  Names.identifier list ref
)
ident(
  int_ref avoid "plugins/funind/functional_principles_proofs.ml" 1030 30145 30155 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30160
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30267 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30273
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30275 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30287
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30288 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30290
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1034 30239 30252 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30254
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30274 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30291
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1034 30239 30258 "plugins/funind/functional_principles_proofs.ml" 1034 30239 30291
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1035 30292 30300 "plugins/funind/functional_principles_proofs.ml" 1035 30292 30309
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1035 30292 30313 "plugins/funind/functional_principles_proofs.ml" 1035 30292 30321
type(
  Names.identifier list -> string -> Names.identifier
)
ident(
  ext_ref Indfun_common.fresh_id
)
"plugins/funind/functional_principles_proofs.ml" 1035 30292 30322 "plugins/funind/functional_principles_proofs.ml" 1035 30292 30323
type(
  Names.identifier list ref -> Names.identifier list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1035 30292 30323 "plugins/funind/functional_principles_proofs.ml" 1035 30292 30328
type(
  Names.identifier list ref
)
ident(
  int_ref avoid "plugins/funind/functional_principles_proofs.ml" 1030 30145 30155 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30160
)
"plugins/funind/functional_principles_proofs.ml" 1035 30292 30322 "plugins/funind/functional_principles_proofs.ml" 1035 30292 30328
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1035 30292 30329 "plugins/funind/functional_principles_proofs.ml" 1035 30292 30332
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1035 30292 30313 "plugins/funind/functional_principles_proofs.ml" 1035 30292 30332
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1033 30221 30225 "plugins/funind/functional_principles_proofs.ml" 1035 30292 30332
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1037 30338 30340 "plugins/funind/functional_principles_proofs.ml" 1037 30338 30345
type(
  Names.identifier list ref
)
ident(
  int_ref avoid "plugins/funind/functional_principles_proofs.ml" 1030 30145 30155 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30160
)
"plugins/funind/functional_principles_proofs.ml" 1037 30338 30346 "plugins/funind/functional_principles_proofs.ml" 1037 30338 30348
type(
  Names.identifier list ref -> Names.identifier list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/functional_principles_proofs.ml" 1037 30338 30349 "plugins/funind/functional_principles_proofs.ml" 1037 30338 30355
type(
  Names.identifier
)
ident(
  int_ref new_id "plugins/funind/functional_principles_proofs.ml" 1032 30206 30212 "plugins/funind/functional_principles_proofs.ml" 1032 30206 30218
)
"plugins/funind/functional_principles_proofs.ml" 1037 30338 30359 "plugins/funind/functional_principles_proofs.ml" 1037 30338 30360
type(
  Names.identifier list ref -> Names.identifier list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1037 30338 30360 "plugins/funind/functional_principles_proofs.ml" 1037 30338 30365
type(
  Names.identifier list ref
)
ident(
  int_ref avoid "plugins/funind/functional_principles_proofs.ml" 1030 30145 30155 "plugins/funind/functional_principles_proofs.ml" 1030 30145 30160
)
"plugins/funind/functional_principles_proofs.ml" 1037 30338 30359 "plugins/funind/functional_principles_proofs.ml" 1037 30338 30365
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1037 30338 30349 "plugins/funind/functional_principles_proofs.ml" 1037 30338 30365
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1037 30338 30340 "plugins/funind/functional_principles_proofs.ml" 1037 30338 30365
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 1038 30367 30375 "plugins/funind/functional_principles_proofs.ml" 1038 30367 30381
type(
  Names.identifier
)
ident(
  int_ref new_id "plugins/funind/functional_principles_proofs.ml" 1032 30206 30212 "plugins/funind/functional_principles_proofs.ml" 1032 30206 30218
)
"plugins/funind/functional_principles_proofs.ml" 1038 30367 30369 "plugins/funind/functional_principles_proofs.ml" 1038 30367 30382
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1037 30338 30340 "plugins/funind/functional_principles_proofs.ml" 1038 30367 30382
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1032 30206 30208 "plugins/funind/functional_principles_proofs.ml" 1038 30367 30382
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1031 30189 30195 "plugins/funind/functional_principles_proofs.ml" 1039 30383 30390
type(
  Names.name -> Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1030 30145 30151 "plugins/funind/functional_principles_proofs.ml" 1039 30383 30390
type(
  Names.name -> Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1041 30398 30406 "plugins/funind/functional_principles_proofs.ml" 1041 30398 30416
type(
  Names.name * 'b * 'c -> Names.name * 'b * 'c
)
"plugins/funind/functional_principles_proofs.ml" 1042 30419 30431 "plugins/funind/functional_principles_proofs.ml" 1042 30419 30433
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1043 30442 30444 "plugins/funind/functional_principles_proofs.ml" 1043 30442 30461
)
"plugins/funind/functional_principles_proofs.ml" 1042 30419 30434 "plugins/funind/functional_principles_proofs.ml" 1042 30419 30435
type(
  'b
)
ident(
  def b "plugins/funind/functional_principles_proofs.ml" 1043 30442 30444 "plugins/funind/functional_principles_proofs.ml" 1043 30442 30461
)
"plugins/funind/functional_principles_proofs.ml" 1042 30419 30436 "plugins/funind/functional_principles_proofs.ml" 1042 30419 30437
type(
  'c
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 1043 30442 30444 "plugins/funind/functional_principles_proofs.ml" 1043 30442 30461
)
"plugins/funind/functional_principles_proofs.ml" 1042 30419 30430 "plugins/funind/functional_principles_proofs.ml" 1042 30419 30438
type(
  Names.name * 'b * 'c
)
"plugins/funind/functional_principles_proofs.ml" 1043 30442 30445 "plugins/funind/functional_principles_proofs.ml" 1043 30442 30453
type(
  Names.name -> Names.name
)
ident(
  int_ref fresh_id "plugins/funind/functional_principles_proofs.ml" 1029 30126 30134 "plugins/funind/functional_principles_proofs.ml" 1029 30126 30142
)
"plugins/funind/functional_principles_proofs.ml" 1043 30442 30454 "plugins/funind/functional_principles_proofs.ml" 1043 30442 30456
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1042 30419 30431 "plugins/funind/functional_principles_proofs.ml" 1042 30419 30433
)
"plugins/funind/functional_principles_proofs.ml" 1043 30442 30445 "plugins/funind/functional_principles_proofs.ml" 1043 30442 30456
call(
  stack
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1043 30442 30457 "plugins/funind/functional_principles_proofs.ml" 1043 30442 30458
type(
  'b
)
ident(
  int_ref b "plugins/funind/functional_principles_proofs.ml" 1042 30419 30434 "plugins/funind/functional_principles_proofs.ml" 1042 30419 30435
)
"plugins/funind/functional_principles_proofs.ml" 1043 30442 30459 "plugins/funind/functional_principles_proofs.ml" 1043 30442 30460
type(
  'c
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 1042 30419 30436 "plugins/funind/functional_principles_proofs.ml" 1042 30419 30437
)
"plugins/funind/functional_principles_proofs.ml" 1043 30442 30444 "plugins/funind/functional_principles_proofs.ml" 1043 30442 30461
type(
  Names.name * 'b * 'c
)
"plugins/funind/functional_principles_proofs.ml" 1042 30419 30425 "plugins/funind/functional_principles_proofs.ml" 1044 30462 30469
type(
  Names.name * 'b * 'c -> Names.name * 'b * 'c
)
"plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_proofs.ml" 1047 30512 30520 "plugins/funind/functional_principles_proofs.ml" 1047 30512 30530
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1028 30074 30082 "plugins/funind/functional_principles_proofs.ml" 1028 30074 30092
)
"plugins/funind/functional_principles_proofs.ml" 1048 30536 30548 "plugins/funind/functional_principles_proofs.ml" 1048 30536 30556
type(
  (Term.rel_declaration -> Term.rel_declaration) ->
  Term.rel_context -> Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1048 30536 30557 "plugins/funind/functional_principles_proofs.ml" 1048 30536 30567
type(
  Term.rel_declaration -> Term.rel_declaration
)
ident(
  int_ref fresh_decl "plugins/funind/functional_principles_proofs.ml" 1041 30398 30406 "plugins/funind/functional_principles_proofs.ml" 1041 30398 30416
)
"plugins/funind/functional_principles_proofs.ml" 1048 30536 30568 "plugins/funind/functional_principles_proofs.ml" 1048 30536 30578
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1028 30074 30082 "plugins/funind/functional_principles_proofs.ml" 1028 30074 30092
)
"plugins/funind/functional_principles_proofs.ml" 1048 30536 30568 "plugins/funind/functional_principles_proofs.ml" 1048 30536 30585
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1048 30536 30548 "plugins/funind/functional_principles_proofs.ml" 1048 30536 30585
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1049 30587 30603 "plugins/funind/functional_principles_proofs.ml" 1049 30587 30611
type(
  (Term.rel_declaration -> Term.rel_declaration) ->
  Term.rel_context -> Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1049 30587 30612 "plugins/funind/functional_principles_proofs.ml" 1049 30587 30622
type(
  Term.rel_declaration -> Term.rel_declaration
)
ident(
  int_ref fresh_decl "plugins/funind/functional_principles_proofs.ml" 1041 30398 30406 "plugins/funind/functional_principles_proofs.ml" 1041 30398 30416
)
"plugins/funind/functional_principles_proofs.ml" 1049 30587 30623 "plugins/funind/functional_principles_proofs.ml" 1049 30587 30633
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1028 30074 30082 "plugins/funind/functional_principles_proofs.ml" 1028 30074 30092
)
"plugins/funind/functional_principles_proofs.ml" 1049 30587 30623 "plugins/funind/functional_principles_proofs.ml" 1049 30587 30644
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1049 30587 30603 "plugins/funind/functional_principles_proofs.ml" 1049 30587 30644
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1050 30646 30660 "plugins/funind/functional_principles_proofs.ml" 1050 30646 30668
type(
  (Term.rel_declaration -> Term.rel_declaration) ->
  Term.rel_context -> Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1050 30646 30669 "plugins/funind/functional_principles_proofs.ml" 1050 30646 30679
type(
  Term.rel_declaration -> Term.rel_declaration
)
ident(
  int_ref fresh_decl "plugins/funind/functional_principles_proofs.ml" 1041 30398 30406 "plugins/funind/functional_principles_proofs.ml" 1041 30398 30416
)
"plugins/funind/functional_principles_proofs.ml" 1050 30646 30680 "plugins/funind/functional_principles_proofs.ml" 1050 30646 30690
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1028 30074 30082 "plugins/funind/functional_principles_proofs.ml" 1028 30074 30092
)
"plugins/funind/functional_principles_proofs.ml" 1050 30646 30680 "plugins/funind/functional_principles_proofs.ml" 1050 30646 30699
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1050 30646 30660 "plugins/funind/functional_principles_proofs.ml" 1050 30646 30699
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1051 30701 30711 "plugins/funind/functional_principles_proofs.ml" 1051 30701 30719
type(
  (Term.rel_declaration -> Term.rel_declaration) ->
  Term.rel_context -> Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1051 30701 30720 "plugins/funind/functional_principles_proofs.ml" 1051 30701 30730
type(
  Term.rel_declaration -> Term.rel_declaration
)
ident(
  int_ref fresh_decl "plugins/funind/functional_principles_proofs.ml" 1041 30398 30406 "plugins/funind/functional_principles_proofs.ml" 1041 30398 30416
)
"plugins/funind/functional_principles_proofs.ml" 1051 30701 30731 "plugins/funind/functional_principles_proofs.ml" 1051 30701 30741
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1028 30074 30082 "plugins/funind/functional_principles_proofs.ml" 1028 30074 30092
)
"plugins/funind/functional_principles_proofs.ml" 1051 30701 30731 "plugins/funind/functional_principles_proofs.ml" 1051 30701 30746
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1051 30701 30711 "plugins/funind/functional_principles_proofs.ml" 1051 30701 30746
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1047 30512 30518 "plugins/funind/functional_principles_proofs.ml" 1052 30747 30754
type(
  Tactics.elim_scheme
)
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_proofs.ml" 1054 30762 30770 "plugins/funind/functional_principles_proofs.ml" 1054 30762 30778
type(
  Names.constant -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1054 30762 30779 "plugins/funind/functional_principles_proofs.ml" 1054 30762 30784
type(
  Names.constant
)
ident(
  def const "plugins/funind/functional_principles_proofs.ml" 1055 30787 30793 "plugins/funind/functional_principles_proofs.ml" 1063 31033 31095
)
"plugins/funind/functional_principles_proofs.ml" 1055 30787 30800 "plugins/funind/functional_principles_proofs.ml" 1055 30787 30822
type(
  Names.constant -> Declarations.constant_body
)
ident(
  ext_ref Global.lookup_constant
)
"plugins/funind/functional_principles_proofs.ml" 1055 30787 30823 "plugins/funind/functional_principles_proofs.ml" 1055 30787 30828
type(
  Names.constant
)
ident(
  int_ref const "plugins/funind/functional_principles_proofs.ml" 1054 30762 30779 "plugins/funind/functional_principles_proofs.ml" 1054 30762 30784
)
"plugins/funind/functional_principles_proofs.ml" 1055 30787 30799 "plugins/funind/functional_principles_proofs.ml" 1055 30787 30830
call(
  stack
)
type(
  Declarations.constant_body
)
"plugins/funind/functional_principles_proofs.ml" 1055 30787 30799 "plugins/funind/functional_principles_proofs.ml" 1055 30787 30841
type(
  Declarations.constr_substituted option
)
"plugins/funind/functional_principles_proofs.ml" 1056 30847 30855 "plugins/funind/functional_principles_proofs.ml" 1056 30847 30856
type(
  Declarations.constr_substituted
)
ident(
  def b "plugins/funind/functional_principles_proofs.ml" 1057 30860 30866 "plugins/funind/functional_principles_proofs.ml" 1062 31020 31032
)
"plugins/funind/functional_principles_proofs.ml" 1056 30847 30850 "plugins/funind/functional_principles_proofs.ml" 1056 30847 30856
type(
  Declarations.constr_substituted option
)
"plugins/funind/functional_principles_proofs.ml" 1057 30860 30870 "plugins/funind/functional_principles_proofs.ml" 1057 30860 30874
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1057 30860 30877 "plugins/funind/functional_principles_proofs.ml" 1057 30860 30882
type(
  Declarations.constr_substituted -> Term.constr
)
ident(
  ext_ref Declarations.force
)
"plugins/funind/functional_principles_proofs.ml" 1057 30860 30883 "plugins/funind/functional_principles_proofs.ml" 1057 30860 30884
type(
  Declarations.constr_substituted
)
ident(
  int_ref b "plugins/funind/functional_principles_proofs.ml" 1056 30847 30855 "plugins/funind/functional_principles_proofs.ml" 1056 30847 30856
)
"plugins/funind/functional_principles_proofs.ml" 1057 30860 30877 "plugins/funind/functional_principles_proofs.ml" 1057 30860 30884
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1058 30888 30894 "plugins/funind/functional_principles_proofs.ml" 1058 30888 30915
type(
  Closure.RedFlags.reds -> Reductionops.reduction_function
)
ident(
  ext_ref Tacred.cbv_norm_flags
)
"plugins/funind/functional_principles_proofs.ml" 1059 30916 30925 "plugins/funind/functional_principles_proofs.ml" 1059 30916 30949
type(
  Closure.RedFlags.red_kind list -> Closure.RedFlags.reds
)
ident(
  ext_ref Closure.RedFlags.mkflags
)
"plugins/funind/functional_principles_proofs.ml" 1059 30916 30951 "plugins/funind/functional_principles_proofs.ml" 1059 30916 30973
type(
  Closure.RedFlags.red_kind
)
ident(
  ext_ref Closure.RedFlags.fZETA
)
"plugins/funind/functional_principles_proofs.ml" 1059 30916 30950 "plugins/funind/functional_principles_proofs.ml" 1059 30916 30974
type(
  Closure.RedFlags.red_kind list
)
"plugins/funind/functional_principles_proofs.ml" 1059 30916 30924 "plugins/funind/functional_principles_proofs.ml" 1059 30916 30975
call(
  stack
)
type(
  Closure.RedFlags.reds
)
"plugins/funind/functional_principles_proofs.ml" 1060 30976 30985 "plugins/funind/functional_principles_proofs.ml" 1060 30976 30995
type(
  unit -> Environ.env
)
ident(
  ext_ref Global.env
)
"plugins/funind/functional_principles_proofs.ml" 1060 30976 30996 "plugins/funind/functional_principles_proofs.ml" 1060 30976 30998
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 1060 30976 30984 "plugins/funind/functional_principles_proofs.ml" 1060 30976 30999
call(
  stack
)
type(
  Environ.env
)
"plugins/funind/functional_principles_proofs.ml" 1061 31000 31008 "plugins/funind/functional_principles_proofs.ml" 1061 31000 31019
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_proofs.ml" 1062 31020 31028 "plugins/funind/functional_principles_proofs.ml" 1062 31020 31032
type(
  Term.constr
)
ident(
  int_ref body "plugins/funind/functional_principles_proofs.ml" 1057 30860 30870 "plugins/funind/functional_principles_proofs.ml" 1057 30860 30874
)
"plugins/funind/functional_principles_proofs.ml" 1058 30888 30894 "plugins/funind/functional_principles_proofs.ml" 1062 31020 31032
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1057 30860 30866 "plugins/funind/functional_principles_proofs.ml" 1062 31020 31032
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1063 31033 31036 "plugins/funind/functional_principles_proofs.ml" 1063 31033 31040
type(
  Declarations.constr_substituted option
)
"plugins/funind/functional_principles_proofs.ml" 1063 31033 31044 "plugins/funind/functional_principles_proofs.ml" 1063 31033 31049
type(
  string -> Term.constr
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_proofs.ml" 1063 31033 31050 "plugins/funind/functional_principles_proofs.ml" 1063 31033 31095
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1063 31033 31044 "plugins/funind/functional_principles_proofs.ml" 1063 31033 31095
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1055 30787 30793 "plugins/funind/functional_principles_proofs.ml" 1063 31033 31095
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1065 31103 31111 "plugins/funind/functional_principles_proofs.ml" 1065 31103 31116
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1065 31103 31119 "plugins/funind/functional_principles_proofs.ml" 1065 31103 31127
type(
  Names.constant -> Term.constr
)
ident(
  int_ref get_body "plugins/funind/functional_principles_proofs.ml" 1054 30762 30770 "plugins/funind/functional_principles_proofs.ml" 1054 30762 30778
)
"plugins/funind/functional_principles_proofs.ml" 1065 31103 31128 "plugins/funind/functional_principles_proofs.ml" 1065 31103 31134
type(
  Names.constant array
)
ident(
  int_ref fnames "plugins/funind/functional_principles_proofs.ml" 1025 29939 29992 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29998
)
"plugins/funind/functional_principles_proofs.ml" 1065 31103 31136 "plugins/funind/functional_principles_proofs.ml" 1065 31103 31143
type(
  int
)
ident(
  int_ref fun_num "plugins/funind/functional_principles_proofs.ml" 1025 29939 29984 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29991
)
"plugins/funind/functional_principles_proofs.ml" 1065 31103 31128 "plugins/funind/functional_principles_proofs.ml" 1065 31103 31144
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 1065 31103 31119 "plugins/funind/functional_principles_proofs.ml" 1065 31103 31144
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1066 31148 31156 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31162
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 1066 31148 31163 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31169
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1066 31148 31156 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31169
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1066 31148 31172 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31185
type(
  Term.constr -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_lam
)
"plugins/funind/functional_principles_proofs.ml" 1066 31148 31186 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31191
type(
  Term.constr
)
ident(
  int_ref fbody "plugins/funind/functional_principles_proofs.ml" 1065 31103 31111 "plugins/funind/functional_principles_proofs.ml" 1065 31103 31116
)
"plugins/funind/functional_principles_proofs.ml" 1066 31148 31172 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31191
call(
  stack
)
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1067 31195 31203 "plugins/funind/functional_principles_proofs.ml" 1067 31195 31216
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1067 31195 31219 "plugins/funind/functional_principles_proofs.ml" 1067 31195 31230
type(
  (Names.name * Term.constr) list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1067 31195 31231 "plugins/funind/functional_principles_proofs.ml" 1067 31195 31237
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref f_ctxt "plugins/funind/functional_principles_proofs.ml" 1066 31148 31156 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31162
)
"plugins/funind/functional_principles_proofs.ml" 1067 31195 31219 "plugins/funind/functional_principles_proofs.ml" 1067 31195 31237
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1068 31241 31249 "plugins/funind/functional_principles_proofs.ml" 1068 31241 31260
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1068 31241 31263 "plugins/funind/functional_principles_proofs.ml" 1068 31241 31273
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1068 31241 31263 "plugins/funind/functional_principles_proofs.ml" 1068 31241 31281
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1068 31241 31282 "plugins/funind/functional_principles_proofs.ml" 1068 31241 31283
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 1068 31241 31284 "plugins/funind/functional_principles_proofs.ml" 1068 31241 31297
type(
  int
)
ident(
  int_ref f_ctxt_length "plugins/funind/functional_principles_proofs.ml" 1067 31195 31203 "plugins/funind/functional_principles_proofs.ml" 1067 31195 31216
)
"plugins/funind/functional_principles_proofs.ml" 1068 31241 31263 "plugins/funind/functional_principles_proofs.ml" 1068 31241 31297
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1069 31301 31309 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31320
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1069 31301 31321 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31333
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1069 31301 31334 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31356
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1069 31301 31309 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31356
type(
  Term.rel_context * Term.rel_declaration list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1070 31359 31368 "plugins/funind/functional_principles_proofs.ml" 1070 31359 31379
type(
  int
)
ident(
  int_ref diff_params "plugins/funind/functional_principles_proofs.ml" 1068 31241 31249 "plugins/funind/functional_principles_proofs.ml" 1068 31241 31260
)
"plugins/funind/functional_principles_proofs.ml" 1070 31359 31380 "plugins/funind/functional_principles_proofs.ml" 1070 31359 31381
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"plugins/funind/functional_principles_proofs.ml" 1070 31359 31382 "plugins/funind/functional_principles_proofs.ml" 1070 31359 31383
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1070 31359 31368 "plugins/funind/functional_principles_proofs.ml" 1070 31359 31383
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1072 31395 31400 "plugins/funind/functional_principles_proofs.ml" 1072 31395 31412
type(
  Term.rel_declaration list
)
ident(
  def princ_params "plugins/funind/functional_principles_proofs.ml" 1075 31475 31476 "plugins/funind/functional_principles_proofs.ml" 1080 31699 31701
)
"plugins/funind/functional_principles_proofs.ml" 1072 31395 31413 "plugins/funind/functional_principles_proofs.ml" 1072 31395 31424
type(
  Term.rel_declaration list
)
ident(
  def full_params "plugins/funind/functional_principles_proofs.ml" 1075 31475 31476 "plugins/funind/functional_principles_proofs.ml" 1080 31699 31701
)
"plugins/funind/functional_principles_proofs.ml" 1072 31395 31400 "plugins/funind/functional_principles_proofs.ml" 1072 31395 31424
type(
  Term.rel_declaration list * Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1073 31427 31430 "plugins/funind/functional_principles_proofs.ml" 1073 31427 31439
type(
  ?msg:string ->
  int ->
  Term.rel_context -> Term.rel_declaration list * Term.rel_declaration list
)
ident(
  int_ref list_chop "plugins/funind/functional_principles_proofs.ml" 56 1091 1095 "plugins/funind/functional_principles_proofs.ml" 56 1091 1104
)
"plugins/funind/functional_principles_proofs.ml" 1073 31427 31441 "plugins/funind/functional_principles_proofs.ml" 1073 31427 31452
type(
  int
)
ident(
  int_ref diff_params "plugins/funind/functional_principles_proofs.ml" 1068 31241 31249 "plugins/funind/functional_principles_proofs.ml" 1068 31241 31260
)
"plugins/funind/functional_principles_proofs.ml" 1073 31427 31453 "plugins/funind/functional_principles_proofs.ml" 1073 31427 31463
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1073 31427 31453 "plugins/funind/functional_principles_proofs.ml" 1073 31427 31470
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1073 31427 31430 "plugins/funind/functional_principles_proofs.ml" 1073 31427 31470
call(
  stack
)
type(
  Term.rel_declaration list * Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1075 31475 31477 "plugins/funind/functional_principles_proofs.ml" 1075 31475 31488
type(
  Term.rel_context
)
ident(
  int_ref full_params "plugins/funind/functional_principles_proofs.ml" 1072 31395 31413 "plugins/funind/functional_principles_proofs.ml" 1072 31395 31424
)
"plugins/funind/functional_principles_proofs.ml" 1076 31508 31510 "plugins/funind/functional_principles_proofs.ml" 1076 31508 31522
type(
  Term.rel_declaration list
)
ident(
  int_ref princ_params "plugins/funind/functional_principles_proofs.ml" 1072 31395 31400 "plugins/funind/functional_principles_proofs.ml" 1072 31395 31412
)
"plugins/funind/functional_principles_proofs.ml" 1077 31595 31597 "plugins/funind/functional_principles_proofs.ml" 1077 31595 31603
type(
  Term.constr list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.substl
)
"plugins/funind/functional_principles_proofs.ml" 1078 31649 31654 "plugins/funind/functional_principles_proofs.ml" 1078 31649 31662
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_declaration list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1078 31649 31663 "plugins/funind/functional_principles_proofs.ml" 1078 31649 31674
type(
  Term.rel_declaration -> Term.constr
)
ident(
  int_ref var_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
)
"plugins/funind/functional_principles_proofs.ml" 1078 31649 31675 "plugins/funind/functional_principles_proofs.ml" 1078 31649 31686
type(
  Term.rel_declaration list
)
ident(
  int_ref full_params "plugins/funind/functional_principles_proofs.ml" 1072 31395 31413 "plugins/funind/functional_principles_proofs.ml" 1072 31395 31424
)
"plugins/funind/functional_principles_proofs.ml" 1078 31649 31653 "plugins/funind/functional_principles_proofs.ml" 1078 31649 31687
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1079 31688 31692 "plugins/funind/functional_principles_proofs.ml" 1079 31688 31698
type(
  Term.constr
)
ident(
  int_ref f_body "plugins/funind/functional_principles_proofs.ml" 1066 31148 31163 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31169
)
"plugins/funind/functional_principles_proofs.ml" 1077 31595 31597 "plugins/funind/functional_principles_proofs.ml" 1079 31688 31698
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1075 31475 31476 "plugins/funind/functional_principles_proofs.ml" 1080 31699 31701
type(
  Term.rel_context * Term.rel_declaration list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1072 31395 31396 "plugins/funind/functional_principles_proofs.ml" 1080 31699 31701
type(
  Term.rel_context * Term.rel_declaration list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1082 31713 31718 "plugins/funind/functional_principles_proofs.ml" 1082 31713 31730
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 1082 31713 31731 "plugins/funind/functional_principles_proofs.ml" 1082 31713 31744
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 1082 31713 31718 "plugins/funind/functional_principles_proofs.ml" 1082 31713 31744
type(
  (Names.name * Term.constr) list * (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 1083 31747 31750 "plugins/funind/functional_principles_proofs.ml" 1083 31747 31759
type(
  ?msg:string ->
  int ->
  (Names.name * Term.constr) list ->
  (Names.name * Term.constr) list * (Names.name * Term.constr) list
)
ident(
  int_ref list_chop "plugins/funind/functional_principles_proofs.ml" 56 1091 1095 "plugins/funind/functional_principles_proofs.ml" 56 1091 1104
)
"plugins/funind/functional_principles_proofs.ml" 1083 31747 31761 "plugins/funind/functional_principles_proofs.ml" 1083 31747 31762
type(
  int -> int
)
ident(
  ext_ref Pervasives.( ~- )
)
"plugins/funind/functional_principles_proofs.ml" 1083 31747 31763 "plugins/funind/functional_principles_proofs.ml" 1083 31747 31774
type(
  int
)
ident(
  int_ref diff_params "plugins/funind/functional_principles_proofs.ml" 1068 31241 31249 "plugins/funind/functional_principles_proofs.ml" 1068 31241 31260
)
"plugins/funind/functional_principles_proofs.ml" 1083 31747 31760 "plugins/funind/functional_principles_proofs.ml" 1083 31747 31775
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1083 31747 31776 "plugins/funind/functional_principles_proofs.ml" 1083 31747 31782
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref f_ctxt "plugins/funind/functional_principles_proofs.ml" 1066 31148 31156 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31162
)
"plugins/funind/functional_principles_proofs.ml" 1083 31747 31750 "plugins/funind/functional_principles_proofs.ml" 1083 31747 31782
call(
  stack
)
type(
  (Names.name * Term.constr) list * (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 1084 31786 31791 "plugins/funind/functional_principles_proofs.ml" 1084 31786 31797
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1084 31786 31800 "plugins/funind/functional_principles_proofs.ml" 1084 31786 31811
type(
  (Names.name * Term.constr) list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.compose_lam
)
"plugins/funind/functional_principles_proofs.ml" 1084 31786 31812 "plugins/funind/functional_principles_proofs.ml" 1084 31786 31824
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref f_ctxt_other "plugins/funind/functional_principles_proofs.ml" 1082 31713 31718 "plugins/funind/functional_principles_proofs.ml" 1082 31713 31730
)
"plugins/funind/functional_principles_proofs.ml" 1084 31786 31825 "plugins/funind/functional_principles_proofs.ml" 1084 31786 31831
type(
  Term.constr
)
ident(
  int_ref f_body "plugins/funind/functional_principles_proofs.ml" 1066 31148 31163 "plugins/funind/functional_principles_proofs.ml" 1066 31148 31169
)
"plugins/funind/functional_principles_proofs.ml" 1084 31786 31800 "plugins/funind/functional_principles_proofs.ml" 1084 31786 31831
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1085 31835 31837 "plugins/funind/functional_principles_proofs.ml" 1085 31835 31847
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1085 31835 31837 "plugins/funind/functional_principles_proofs.ml" 1085 31835 31854
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1086 31874 31876 "plugins/funind/functional_principles_proofs.ml" 1086 31874 31878
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1087 31912 31914 "plugins/funind/functional_principles_proofs.ml" 1087 31912 31920
type(
  Term.constr list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.substl
)
"plugins/funind/functional_principles_proofs.ml" 1088 31966 31971 "plugins/funind/functional_principles_proofs.ml" 1088 31966 31979
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_context -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1088 31966 31980 "plugins/funind/functional_principles_proofs.ml" 1088 31966 31991
type(
  Term.rel_declaration -> Term.constr
)
ident(
  int_ref var_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
)
"plugins/funind/functional_principles_proofs.ml" 1088 31966 31992 "plugins/funind/functional_principles_proofs.ml" 1088 31966 32002
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1088 31966 31992 "plugins/funind/functional_principles_proofs.ml" 1088 31966 32009
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1088 31966 31970 "plugins/funind/functional_principles_proofs.ml" 1088 31966 32010
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1089 32011 32015 "plugins/funind/functional_principles_proofs.ml" 1089 32011 32021
type(
  Term.constr
)
ident(
  int_ref f_body "plugins/funind/functional_principles_proofs.ml" 1084 31786 31791 "plugins/funind/functional_principles_proofs.ml" 1084 31786 31797
)
"plugins/funind/functional_principles_proofs.ml" 1087 31912 31914 "plugins/funind/functional_principles_proofs.ml" 1089 32011 32021
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1085 31835 31836 "plugins/funind/functional_principles_proofs.ml" 1090 32022 32024
type(
  Term.rel_context * Term.rel_declaration list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1084 31786 31787 "plugins/funind/functional_principles_proofs.ml" 1090 32022 32024
type(
  Term.rel_context * Term.rel_declaration list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1082 31713 31714 "plugins/funind/functional_principles_proofs.ml" 1090 32022 32024
type(
  Term.rel_context * Term.rel_declaration list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1070 31359 31365 "plugins/funind/functional_principles_proofs.ml" 1090 32022 32024
type(
  Term.rel_context * Term.rel_declaration list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1103 32503 32511 "plugins/funind/functional_principles_proofs.ml" 1103 32503 32536
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32545 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32554
type(
  (Term.constr -> Term.constr) -> Term.constr array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32560 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32561
type(
  Term.constr
)
ident(
  def f "plugins/funind/functional_principles_proofs.ml" 1104 32539 32565 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32613
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32565 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32572
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32573 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32574
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 1104 32539 32560 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32561
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32576 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32588
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_context -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32589 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32600
type(
  Term.rel_declaration -> Term.constr
)
ident(
  int_ref var_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32601 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32612
type(
  Term.rel_context
)
ident(
  int_ref full_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31309 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31320
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32576 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32612
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32572 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32613
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32565 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32613
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32555 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32614
type(
  Term.constr -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32615 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32623
type(
  Term.constr array
)
ident(
  int_ref all_funs "plugins/funind/functional_principles_proofs.ml" 1025 29939 29999 "plugins/funind/functional_principles_proofs.ml" 1025 29939 30007
)
"plugins/funind/functional_principles_proofs.ml" 1104 32539 32545 "plugins/funind/functional_principles_proofs.ml" 1104 32539 32623
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1106 32631 32639 "plugins/funind/functional_principles_proofs.ml" 1106 32631 32649
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1106 32631 32652 "plugins/funind/functional_principles_proofs.ml" 1106 32631 32663
type(
  Term.rel_declaration list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1106 32631 32664 "plugins/funind/functional_principles_proofs.ml" 1106 32631 32676
type(
  Term.rel_declaration list
)
ident(
  int_ref princ_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31321 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31333
)
"plugins/funind/functional_principles_proofs.ml" 1106 32631 32652 "plugins/funind/functional_principles_proofs.ml" 1106 32631 32676
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1107 32680 32688 "plugins/funind/functional_principles_proofs.ml" 1107 32680 32699
type(
  static_fix_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1107 32680 32700 "plugins/funind/functional_principles_proofs.ml" 1107 32680 32705
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1107 32680 32688 "plugins/funind/functional_principles_proofs.ml" 1107 32680 32705
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1108 32708 32720 "plugins/funind/functional_principles_proofs.ml" 1108 32708 32732
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1108 32708 32733 "plugins/funind/functional_principles_proofs.ml" 1108 32708 32755
type(
  Term.constr
)
ident(
  int_ref fbody_with_full_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31334 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31356
)
"plugins/funind/functional_principles_proofs.ml" 1108 32708 32720 "plugins/funind/functional_principles_proofs.ml" 1108 32708 32755
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1109 32761 32769 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32773
type(
  int array
)
ident(
  def idxs "plugins/funind/functional_principles_proofs.ml" 1110 32803 32808 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
)
"plugins/funind/functional_principles_proofs.ml" 1109 32761 32774 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32775
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 1110 32803 32808 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
)
"plugins/funind/functional_principles_proofs.ml" 1109 32761 32768 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32776
type(
  int array * int
)
"plugins/funind/functional_principles_proofs.ml" 1109 32761 32778 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32783
type(
  Names.name array
)
ident(
  def names "plugins/funind/functional_principles_proofs.ml" 1110 32803 32808 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
)
"plugins/funind/functional_principles_proofs.ml" 1109 32761 32784 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32790
type(
  Term.types array
)
ident(
  def typess "plugins/funind/functional_principles_proofs.ml" 1110 32803 32808 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
)
"plugins/funind/functional_principles_proofs.ml" 1109 32761 32791 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32797
type(
  Term.constr array
)
ident(
  def bodies "plugins/funind/functional_principles_proofs.ml" 1110 32803 32808 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
)
"plugins/funind/functional_principles_proofs.ml" 1109 32761 32777 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32798
type(
  (Term.constr, Term.types) Term.prec_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1109 32761 32767 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32799
type(
  (Term.constr, Term.types) Term.pfixpoint
)
"plugins/funind/functional_principles_proofs.ml" 1109 32761 32764 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32799
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1110 32803 32812 "plugins/funind/functional_principles_proofs.ml" 1110 32803 32834
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1111 32837 32844 "plugins/funind/functional_principles_proofs.ml" 1111 32837 32853
type(
  (Term.constr -> Term.constr) -> Term.constr array -> Term.constr array
)
ident(
  ext_ref Array.map
)
"plugins/funind/functional_principles_proofs.ml" 1112 32854 32861 "plugins/funind/functional_principles_proofs.ml" 1112 32854 32865
type(
  Term.constr
)
ident(
  def body "plugins/funind/functional_principles_proofs.ml" 1113 32869 32874 "plugins/funind/functional_principles_proofs.ml" 1115 32991 33039
)
"plugins/funind/functional_principles_proofs.ml" 1113 32869 32874 "plugins/funind/functional_principles_proofs.ml" 1113 32869 32898
type(
  Reductionops.local_reduction_function
)
ident(
  ext_ref Reductionops.nf_betaiota
)
"plugins/funind/functional_principles_proofs.ml" 1113 32869 32899 "plugins/funind/functional_principles_proofs.ml" 1113 32869 32908
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32917 "plugins/funind/functional_principles_proofs.ml" 1114 32909 32924
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32925 "plugins/funind/functional_principles_proofs.ml" 1114 32909 32931
type(
  Term.constr list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.substl
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32933 "plugins/funind/functional_principles_proofs.ml" 1114 32909 32941
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32943 "plugins/funind/functional_principles_proofs.ml" 1114 32909 32956
type(
  Term.constr array -> Term.constr list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32957 "plugins/funind/functional_principles_proofs.ml" 1114 32909 32982
type(
  Term.constr array
)
ident(
  int_ref all_funs_with_full_params "plugins/funind/functional_principles_proofs.ml" 1103 32503 32511 "plugins/funind/functional_principles_proofs.ml" 1103 32503 32536
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32942 "plugins/funind/functional_principles_proofs.ml" 1114 32909 32983
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32932 "plugins/funind/functional_principles_proofs.ml" 1114 32909 32984
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32985 "plugins/funind/functional_principles_proofs.ml" 1114 32909 32989
type(
  Term.constr
)
ident(
  int_ref body "plugins/funind/functional_principles_proofs.ml" 1112 32854 32861 "plugins/funind/functional_principles_proofs.ml" 1112 32854 32865
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32925 "plugins/funind/functional_principles_proofs.ml" 1114 32909 32989
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1115 32991 33000 "plugins/funind/functional_principles_proofs.ml" 1115 32991 33012
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_declaration list -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1115 32991 33013 "plugins/funind/functional_principles_proofs.ml" 1115 32991 33024
type(
  Term.rel_declaration -> Term.constr
)
ident(
  int_ref var_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
)
"plugins/funind/functional_principles_proofs.ml" 1115 32991 33025 "plugins/funind/functional_principles_proofs.ml" 1115 32991 33037
type(
  Term.rel_declaration list
)
ident(
  int_ref princ_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31321 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31333
)
"plugins/funind/functional_principles_proofs.ml" 1115 32991 33000 "plugins/funind/functional_principles_proofs.ml" 1115 32991 33037
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32924 "plugins/funind/functional_principles_proofs.ml" 1115 32991 33038
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1114 32909 32916 "plugins/funind/functional_principles_proofs.ml" 1115 32991 33039
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1113 32869 32874 "plugins/funind/functional_principles_proofs.ml" 1115 32991 33039
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1112 32854 32856 "plugins/funind/functional_principles_proofs.ml" 1116 33040 33043
type(
  Term.constr -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1117 33044 33046 "plugins/funind/functional_principles_proofs.ml" 1117 33044 33052
type(
  Term.constr array
)
ident(
  int_ref bodies "plugins/funind/functional_principles_proofs.ml" 1109 32761 32791 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32797
)
"plugins/funind/functional_principles_proofs.ml" 1111 32837 32844 "plugins/funind/functional_principles_proofs.ml" 1117 33044 33052
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1119 33061 33070 "plugins/funind/functional_principles_proofs.ml" 1119 33061 33080
type(
  static_fix_info array
)
"plugins/funind/functional_principles_proofs.ml" 1120 33083 33090 "plugins/funind/functional_principles_proofs.ml" 1120 33083 33100
type(
  (int -> Term.types -> static_fix_info) ->
  Term.types array -> static_fix_info array
)
ident(
  ext_ref Array.mapi
)
"plugins/funind/functional_principles_proofs.ml" 1121 33101 33108 "plugins/funind/functional_principles_proofs.ml" 1121 33101 33109
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 1121 33101 33110 "plugins/funind/functional_principles_proofs.ml" 1132 33508 33514
)
"plugins/funind/functional_principles_proofs.ml" 1121 33101 33110 "plugins/funind/functional_principles_proofs.ml" 1121 33101 33115
type(
  Term.types
)
ident(
  def types "plugins/funind/functional_principles_proofs.ml" 1122 33119 33124 "plugins/funind/functional_principles_proofs.ml" 1132 33508 33514
)
"plugins/funind/functional_principles_proofs.ml" 1122 33119 33128 "plugins/funind/functional_principles_proofs.ml" 1122 33119 33133
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1122 33119 33136 "plugins/funind/functional_principles_proofs.ml" 1122 33119 33148
type(
  Term.types -> Term.constr list -> Term.constr
)
ident(
  ext_ref Term.prod_applist
)
"plugins/funind/functional_principles_proofs.ml" 1122 33119 33149 "plugins/funind/functional_principles_proofs.ml" 1122 33119 33154
type(
  Term.types
)
ident(
  int_ref types "plugins/funind/functional_principles_proofs.ml" 1121 33101 33110 "plugins/funind/functional_principles_proofs.ml" 1121 33101 33115
)
"plugins/funind/functional_principles_proofs.ml" 1122 33119 33156 "plugins/funind/functional_principles_proofs.ml" 1122 33119 33168
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_declaration list -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1122 33119 33169 "plugins/funind/functional_principles_proofs.ml" 1122 33119 33180
type(
  Term.rel_declaration -> Term.constr
)
ident(
  int_ref var_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
)
"plugins/funind/functional_principles_proofs.ml" 1122 33119 33181 "plugins/funind/functional_principles_proofs.ml" 1122 33119 33193
type(
  Term.rel_declaration list
)
ident(
  int_ref princ_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31321 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31333
)
"plugins/funind/functional_principles_proofs.ml" 1122 33119 33155 "plugins/funind/functional_principles_proofs.ml" 1122 33119 33194
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1122 33119 33136 "plugins/funind/functional_principles_proofs.ml" 1122 33119 33194
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1123 33198 33211 "plugins/funind/functional_principles_proofs.ml" 1123 33198 33215
type(
  int array
)
ident(
  int_ref idxs "plugins/funind/functional_principles_proofs.ml" 1109 32761 32769 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32773
)
"plugins/funind/functional_principles_proofs.ml" 1123 33198 33217 "plugins/funind/functional_principles_proofs.ml" 1123 33198 33218
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 1121 33101 33108 "plugins/funind/functional_principles_proofs.ml" 1121 33101 33109
)
"plugins/funind/functional_principles_proofs.ml" 1123 33198 33211 "plugins/funind/functional_principles_proofs.ml" 1123 33198 33219
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1123 33198 33221 "plugins/funind/functional_principles_proofs.ml" 1123 33198 33222
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 1123 33198 33223 "plugins/funind/functional_principles_proofs.ml" 1123 33198 33233
type(
  int
)
ident(
  int_ref fix_offset "plugins/funind/functional_principles_proofs.ml" 1106 32631 32639 "plugins/funind/functional_principles_proofs.ml" 1106 32631 32649
)
"plugins/funind/functional_principles_proofs.ml" 1123 33198 33211 "plugins/funind/functional_principles_proofs.ml" 1123 33198 33233
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1124 33235 33249 "plugins/funind/functional_principles_proofs.ml" 1124 33235 33265
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1124 33235 33267 "plugins/funind/functional_principles_proofs.ml" 1124 33235 33275
type(
  Names.name -> Names.name
)
ident(
  int_ref fresh_id "plugins/funind/functional_principles_proofs.ml" 1029 30126 30134 "plugins/funind/functional_principles_proofs.ml" 1029 30126 30142
)
"plugins/funind/functional_principles_proofs.ml" 1124 33235 33276 "plugins/funind/functional_principles_proofs.ml" 1124 33235 33281
type(
  Names.name array
)
ident(
  int_ref names "plugins/funind/functional_principles_proofs.ml" 1109 32761 32778 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32783
)
"plugins/funind/functional_principles_proofs.ml" 1124 33235 33283 "plugins/funind/functional_principles_proofs.ml" 1124 33235 33284
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 1121 33101 33108 "plugins/funind/functional_principles_proofs.ml" 1121 33101 33109
)
"plugins/funind/functional_principles_proofs.ml" 1124 33235 33276 "plugins/funind/functional_principles_proofs.ml" 1124 33235 33285
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1124 33235 33266 "plugins/funind/functional_principles_proofs.ml" 1124 33235 33286
call(
  stack
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1124 33235 33249 "plugins/funind/functional_principles_proofs.ml" 1124 33235 33286
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1125 33288 33303 "plugins/funind/functional_principles_proofs.ml" 1125 33288 33308
type(
  Term.types
)
ident(
  int_ref types "plugins/funind/functional_principles_proofs.ml" 1122 33119 33128 "plugins/funind/functional_principles_proofs.ml" 1122 33119 33133
)
"plugins/funind/functional_principles_proofs.ml" 1126 33310 33326 "plugins/funind/functional_principles_proofs.ml" 1126 33310 33336
type(
  int
)
ident(
  int_ref fix_offset "plugins/funind/functional_principles_proofs.ml" 1106 32631 32639 "plugins/funind/functional_principles_proofs.ml" 1106 32631 32649
)
"plugins/funind/functional_principles_proofs.ml" 1128 33359 33368 "plugins/funind/functional_principles_proofs.ml" 1128 33359 33379
type(
  (Names.name * Term.constr) list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1129 33380 33385 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33388
type(
  (Names.name * Term.constr) list * Term.constr ->
  (Names.name * Term.constr) list
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 1129 33380 33390 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33403
type(
  Term.constr -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_lam
)
"plugins/funind/functional_principles_proofs.ml" 1129 33380 33404 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33410
type(
  Term.constr array
)
ident(
  int_ref bodies "plugins/funind/functional_principles_proofs.ml" 1109 32761 32791 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32797
)
"plugins/funind/functional_principles_proofs.ml" 1129 33380 33412 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33413
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 1121 33101 33108 "plugins/funind/functional_principles_proofs.ml" 1121 33101 33109
)
"plugins/funind/functional_principles_proofs.ml" 1129 33380 33404 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33414
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1129 33380 33389 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33415
call(
  stack
)
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1129 33380 33384 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33416
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 1128 33359 33368 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33416
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1129 33380 33417 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33418
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 1129 33380 33419 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33429
type(
  int
)
ident(
  int_ref fix_offset "plugins/funind/functional_principles_proofs.ml" 1106 32631 32639 "plugins/funind/functional_principles_proofs.ml" 1106 32631 32649
)
"plugins/funind/functional_principles_proofs.ml" 1128 33359 33368 "plugins/funind/functional_principles_proofs.ml" 1129 33380 33429
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1130 33431 33456 "plugins/funind/functional_principles_proofs.ml" 1130 33431 33478
type(
  Term.constr array
)
ident(
  int_ref bodies_with_all_params "plugins/funind/functional_principles_proofs.ml" 1110 32803 32812 "plugins/funind/functional_principles_proofs.ml" 1110 32803 32834
)
"plugins/funind/functional_principles_proofs.ml" 1130 33431 33480 "plugins/funind/functional_principles_proofs.ml" 1130 33431 33481
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 1121 33101 33108 "plugins/funind/functional_principles_proofs.ml" 1121 33101 33109
)
"plugins/funind/functional_principles_proofs.ml" 1130 33431 33456 "plugins/funind/functional_principles_proofs.ml" 1130 33431 33482
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1131 33484 33506 "plugins/funind/functional_principles_proofs.ml" 1131 33484 33507
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 1121 33101 33108 "plugins/funind/functional_principles_proofs.ml" 1121 33101 33109
)
"plugins/funind/functional_principles_proofs.ml" 1123 33198 33203 "plugins/funind/functional_principles_proofs.ml" 1132 33508 33514
type(
  static_fix_info
)
"plugins/funind/functional_principles_proofs.ml" 1122 33119 33124 "plugins/funind/functional_principles_proofs.ml" 1132 33508 33514
type(
  static_fix_info
)
"plugins/funind/functional_principles_proofs.ml" 1121 33101 33103 "plugins/funind/functional_principles_proofs.ml" 1133 33515 33518
type(
  int -> Term.types -> static_fix_info
)
"plugins/funind/functional_principles_proofs.ml" 1134 33519 33521 "plugins/funind/functional_principles_proofs.ml" 1134 33519 33527
type(
  Term.types array
)
ident(
  int_ref typess "plugins/funind/functional_principles_proofs.ml" 1109 32761 32784 "plugins/funind/functional_principles_proofs.ml" 1109 32761 32790
)
"plugins/funind/functional_principles_proofs.ml" 1120 33083 33090 "plugins/funind/functional_principles_proofs.ml" 1134 33519 33527
call(
  stack
)
type(
  static_fix_info array
)
"plugins/funind/functional_principles_proofs.ml" 1136 33536 33545 "plugins/funind/functional_principles_proofs.ml" 1136 33536 33555
type(
  static_fix_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1136 33536 33556 "plugins/funind/functional_principles_proofs.ml" 1136 33536 33564
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1136 33536 33545 "plugins/funind/functional_principles_proofs.ml" 1136 33536 33564
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1137 33567 33574 "plugins/funind/functional_principles_proofs.ml" 1137 33567 33590
type(
  (int ->
   static_fix_info Names.Idmap.t * static_fix_info list ->
   Term.rel_declaration ->
   static_fix_info Names.Idmap.t * static_fix_info list) ->
  int ->
  static_fix_info Names.Idmap.t * static_fix_info list ->
  Term.rel_declaration list ->
  static_fix_info Names.Idmap.t * static_fix_info list
)
ident(
  ext_ref Util.list_fold_left_i
)
"plugins/funind/functional_principles_proofs.ml" 1138 33591 33598 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33599
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 1138 33591 33600 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
)
"plugins/funind/functional_principles_proofs.ml" 1138 33591 33601 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33608
type(
  static_fix_info Names.Idmap.t
)
ident(
  def acc_map "plugins/funind/functional_principles_proofs.ml" 1138 33591 33619 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
)
"plugins/funind/functional_principles_proofs.ml" 1138 33591 33609 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33617
type(
  static_fix_info list
)
ident(
  def acc_info "plugins/funind/functional_principles_proofs.ml" 1138 33591 33619 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
)
"plugins/funind/functional_principles_proofs.ml" 1138 33591 33600 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33618
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1138 33591 33620 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33623
type(
  Names.name
)
ident(
  def pte "plugins/funind/functional_principles_proofs.ml" 1139 33632 33637 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
)
"plugins/funind/functional_principles_proofs.ml" 1138 33591 33624 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33625
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1138 33591 33626 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33627
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1138 33591 33619 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33628
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1139 33632 33641 "plugins/funind/functional_principles_proofs.ml" 1139 33632 33646
type(
  static_fix_info
)
"plugins/funind/functional_principles_proofs.ml" 1139 33632 33649 "plugins/funind/functional_principles_proofs.ml" 1139 33632 33659
type(
  static_fix_info array
)
ident(
  int_ref info_array "plugins/funind/functional_principles_proofs.ml" 1119 33061 33070 "plugins/funind/functional_principles_proofs.ml" 1119 33061 33080
)
"plugins/funind/functional_principles_proofs.ml" 1139 33632 33661 "plugins/funind/functional_principles_proofs.ml" 1139 33632 33662
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 1138 33591 33598 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33599
)
"plugins/funind/functional_principles_proofs.ml" 1139 33632 33649 "plugins/funind/functional_principles_proofs.ml" 1139 33632 33663
type(
  static_fix_info
)
"plugins/funind/functional_principles_proofs.ml" 1140 33667 33676 "plugins/funind/functional_principles_proofs.ml" 1140 33667 33685
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 1140 33667 33686 "plugins/funind/functional_principles_proofs.ml" 1140 33667 33687
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1140 33667 33676 "plugins/funind/functional_principles_proofs.ml" 1140 33667 33687
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1140 33667 33690 "plugins/funind/functional_principles_proofs.ml" 1140 33667 33704
type(
  Term.types -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_prod
)
"plugins/funind/functional_principles_proofs.ml" 1140 33667 33705 "plugins/funind/functional_principles_proofs.ml" 1140 33667 33710
type(
  static_fix_info
)
ident(
  int_ref infos "plugins/funind/functional_principles_proofs.ml" 1139 33632 33641 "plugins/funind/functional_principles_proofs.ml" 1139 33632 33646
)
"plugins/funind/functional_principles_proofs.ml" 1140 33667 33705 "plugins/funind/functional_principles_proofs.ml" 1140 33667 33716
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1140 33667 33690 "plugins/funind/functional_principles_proofs.ml" 1140 33667 33716
call(
  stack
)
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1141 33720 33729 "plugins/funind/functional_principles_proofs.ml" 1141 33720 33734
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1141 33720 33737 "plugins/funind/functional_principles_proofs.ml" 1141 33720 33748
type(
  (Names.name * Term.constr) list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1141 33720 33749 "plugins/funind/functional_principles_proofs.ml" 1141 33720 33758
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref type_args "plugins/funind/functional_principles_proofs.ml" 1140 33667 33676 "plugins/funind/functional_principles_proofs.ml" 1140 33667 33685
)
"plugins/funind/functional_principles_proofs.ml" 1141 33720 33737 "plugins/funind/functional_principles_proofs.ml" 1141 33720 33758
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33771 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33772
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33775 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33782
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33783 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33790
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33791 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33797
type(
  Names.constant array
)
ident(
  int_ref fnames "plugins/funind/functional_principles_proofs.ml" 1025 29939 29992 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29998
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33799 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33800
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 1138 33591 33598 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33599
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33791 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33801
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33783 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33801
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33803 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33815
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_context -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33816 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33827
type(
  Term.rel_declaration -> Term.constr
)
ident(
  int_ref var_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33828 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33838
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33828 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33845
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33803 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33845
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33782 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33846
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33775 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33846
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33859 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33869
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33872 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33882
type(
  int -> (int -> Term.constr) -> Term.constr array
)
ident(
  ext_ref Array.init
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33883 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33888
type(
  int
)
ident(
  int_ref nargs "plugins/funind/functional_principles_proofs.ml" 1141 33720 33729 "plugins/funind/functional_principles_proofs.ml" 1141 33720 33734
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33894 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33895
type(
  int
)
ident(
  def i "plugins/funind/functional_principles_proofs.ml" 1143 33850 33899 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33915
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33899 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33904
type(
  int -> Term.constr
)
ident(
  ext_ref Term.mkRel
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33906 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33911
type(
  int
)
ident(
  int_ref nargs "plugins/funind/functional_principles_proofs.ml" 1141 33720 33729 "plugins/funind/functional_principles_proofs.ml" 1141 33720 33734
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33912 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33913
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33913 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33914
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 1143 33850 33894 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33895
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33905 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33915
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33899 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33915
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33889 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33916
type(
  int -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33872 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33916
call(
  stack
)
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1144 33920 33929 "plugins/funind/functional_principles_proofs.ml" 1144 33920 33934
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1144 33920 33937 "plugins/funind/functional_principles_proofs.ml" 1144 33920 33942
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 1144 33920 33943 "plugins/funind/functional_principles_proofs.ml" 1144 33920 33944
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 1142 33762 33771 "plugins/funind/functional_principles_proofs.ml" 1142 33762 33772
)
"plugins/funind/functional_principles_proofs.ml" 1144 33920 33945 "plugins/funind/functional_principles_proofs.ml" 1144 33920 33955
type(
  Term.constr array
)
ident(
  int_ref first_args "plugins/funind/functional_principles_proofs.ml" 1143 33850 33859 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33869
)
"plugins/funind/functional_principles_proofs.ml" 1144 33920 33942 "plugins/funind/functional_principles_proofs.ml" 1144 33920 33956
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1144 33920 33937 "plugins/funind/functional_principles_proofs.ml" 1144 33920 33956
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1145 33960 33969 "plugins/funind/functional_principles_proofs.ml" 1145 33960 33977
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1145 33960 33981 "plugins/funind/functional_principles_proofs.ml" 1145 33960 33994
type(
  Term.constr array -> Term.constr list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/functional_principles_proofs.ml" 1145 33960 33995 "plugins/funind/functional_principles_proofs.ml" 1145 33960 34005
type(
  Term.constr array
)
ident(
  int_ref first_args "plugins/funind/functional_principles_proofs.ml" 1143 33850 33859 "plugins/funind/functional_principles_proofs.ml" 1143 33850 33869
)
"plugins/funind/functional_principles_proofs.ml" 1145 33960 33980 "plugins/funind/functional_principles_proofs.ml" 1145 33960 34006
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1145 33960 34006 "plugins/funind/functional_principles_proofs.ml" 1145 33960 34007
type(
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1145 33960 34008 "plugins/funind/functional_principles_proofs.ml" 1145 33960 34013
type(
  Term.constr
)
ident(
  int_ref app_f "plugins/funind/functional_principles_proofs.ml" 1144 33920 33929 "plugins/funind/functional_principles_proofs.ml" 1144 33920 33934
)
"plugins/funind/functional_principles_proofs.ml" 1145 33960 34007 "plugins/funind/functional_principles_proofs.ml" 1145 33960 34014
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1145 33960 33980 "plugins/funind/functional_principles_proofs.ml" 1145 33960 34014
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34027 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34034
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34037 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34044
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34045 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34050
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34052 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34068
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34069 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34072
type(
  Names.name
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 1138 33591 33620 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33623
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34051 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34073
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34045 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34073
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34074 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34082
type(
  Term.constr list
)
ident(
  int_ref pte_args "plugins/funind/functional_principles_proofs.ml" 1145 33960 33969 "plugins/funind/functional_principles_proofs.ml" 1145 33960 33977
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34044 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34083
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34037 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34083
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1147 34087 34096 "plugins/funind/functional_principles_proofs.ml" 1147 34087 34111
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1147 34087 34112 "plugins/funind/functional_principles_proofs.ml" 1147 34087 34115
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1147 34087 34096 "plugins/funind/functional_principles_proofs.ml" 1147 34087 34115
type(
  Term.constr * int
)
"plugins/funind/functional_principles_proofs.ml" 1148 34118 34129 "plugins/funind/functional_principles_proofs.ml" 1148 34118 34133
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1148 34118 34136 "plugins/funind/functional_principles_proofs.ml" 1148 34118 34144
type(
  Names.constant -> Term.constr
)
ident(
  int_ref get_body "plugins/funind/functional_principles_proofs.ml" 1054 30762 30770 "plugins/funind/functional_principles_proofs.ml" 1054 30762 30778
)
"plugins/funind/functional_principles_proofs.ml" 1148 34118 34145 "plugins/funind/functional_principles_proofs.ml" 1148 34118 34151
type(
  Names.constant array
)
ident(
  int_ref fnames "plugins/funind/functional_principles_proofs.ml" 1025 29939 29992 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29998
)
"plugins/funind/functional_principles_proofs.ml" 1148 34118 34153 "plugins/funind/functional_principles_proofs.ml" 1148 34118 34154
type(
  int
)
ident(
  int_ref i "plugins/funind/functional_principles_proofs.ml" 1138 33591 33598 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33599
)
"plugins/funind/functional_principles_proofs.ml" 1148 34118 34145 "plugins/funind/functional_principles_proofs.ml" 1148 34118 34155
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 1148 34118 34136 "plugins/funind/functional_principles_proofs.ml" 1148 34118 34155
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1149 34159 34170 "plugins/funind/functional_principles_proofs.ml" 1149 34159 34191
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1150 34194 34203 "plugins/funind/functional_principles_proofs.ml" 1150 34194 34227
type(
  Reductionops.local_reduction_function
)
ident(
  ext_ref Reductionops.nf_betaiota
)
"plugins/funind/functional_principles_proofs.ml" 1150 34194 34228 "plugins/funind/functional_principles_proofs.ml" 1150 34194 34237
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_proofs.ml" 1151 34240 34244 "plugins/funind/functional_principles_proofs.ml" 1151 34240 34251
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 1151 34240 34252 "plugins/funind/functional_principles_proofs.ml" 1151 34240 34256
type(
  Term.constr
)
ident(
  int_ref body "plugins/funind/functional_principles_proofs.ml" 1148 34118 34129 "plugins/funind/functional_principles_proofs.ml" 1148 34118 34133
)
"plugins/funind/functional_principles_proofs.ml" 1151 34240 34257 "plugins/funind/functional_principles_proofs.ml" 1151 34240 34269
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_context -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1151 34240 34270 "plugins/funind/functional_principles_proofs.ml" 1151 34240 34281
type(
  Term.rel_declaration -> Term.constr
)
ident(
  int_ref var_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
)
"plugins/funind/functional_principles_proofs.ml" 1151 34240 34282 "plugins/funind/functional_principles_proofs.ml" 1151 34240 34293
type(
  Term.rel_context
)
ident(
  int_ref full_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31309 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31320
)
"plugins/funind/functional_principles_proofs.ml" 1151 34240 34257 "plugins/funind/functional_principles_proofs.ml" 1151 34240 34293
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1151 34240 34251 "plugins/funind/functional_principles_proofs.ml" 1151 34240 34294
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1150 34194 34238 "plugins/funind/functional_principles_proofs.ml" 1151 34240 34295
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1150 34194 34203 "plugins/funind/functional_principles_proofs.ml" 1151 34240 34295
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1153 34306 34319 "plugins/funind/functional_principles_proofs.ml" 1153 34306 34331
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1153 34306 34332 "plugins/funind/functional_principles_proofs.ml" 1153 34306 34353
type(
  Term.constr
)
ident(
  int_ref body_with_full_params "plugins/funind/functional_principles_proofs.ml" 1149 34159 34170 "plugins/funind/functional_principles_proofs.ml" 1149 34159 34191
)
"plugins/funind/functional_principles_proofs.ml" 1153 34306 34319 "plugins/funind/functional_principles_proofs.ml" 1153 34306 34353
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1154 34359 34375 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34376
type(
  int array
)
"plugins/funind/functional_principles_proofs.ml" 1154 34359 34377 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34380
type(
  int
)
ident(
  def num "plugins/funind/functional_principles_proofs.ml" 1155 34395 34405 "plugins/funind/functional_principles_proofs.ml" 1163 34616 34626
)
"plugins/funind/functional_principles_proofs.ml" 1154 34359 34374 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34381
type(
  int array * int
)
"plugins/funind/functional_principles_proofs.ml" 1154 34359 34383 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34384
type(
  Names.name array
)
"plugins/funind/functional_principles_proofs.ml" 1154 34359 34385 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34386
type(
  Term.types array
)
"plugins/funind/functional_principles_proofs.ml" 1154 34359 34387 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34389
type(
  Term.constr array
)
ident(
  def bs "plugins/funind/functional_principles_proofs.ml" 1155 34395 34405 "plugins/funind/functional_principles_proofs.ml" 1163 34616 34626
)
"plugins/funind/functional_principles_proofs.ml" 1154 34359 34382 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34390
type(
  (Term.constr, Term.types) Term.prec_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1154 34359 34373 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34391
type(
  (Term.constr, Term.types) Term.pfixpoint
)
"plugins/funind/functional_principles_proofs.ml" 1154 34359 34370 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34391
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1155 34395 34405 "plugins/funind/functional_principles_proofs.ml" 1155 34395 34429
type(
  Reductionops.local_reduction_function
)
ident(
  ext_ref Reductionops.nf_betaiota
)
"plugins/funind/functional_principles_proofs.ml" 1155 34395 34430 "plugins/funind/functional_principles_proofs.ml" 1155 34395 34439
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_proofs.ml" 1157 34447 34455 "plugins/funind/functional_principles_proofs.ml" 1157 34447 34462
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 1158 34463 34474 "plugins/funind/functional_principles_proofs.ml" 1158 34463 34480
type(
  Term.constr list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.substl
)
"plugins/funind/functional_principles_proofs.ml" 1159 34481 34488 "plugins/funind/functional_principles_proofs.ml" 1159 34481 34496
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1160 34497 34507 "plugins/funind/functional_principles_proofs.ml" 1160 34497 34520
type(
  Term.constr array -> Term.constr list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/functional_principles_proofs.ml" 1160 34497 34521 "plugins/funind/functional_principles_proofs.ml" 1160 34497 34546
type(
  Term.constr array
)
ident(
  int_ref all_funs_with_full_params "plugins/funind/functional_principles_proofs.ml" 1103 32503 32511 "plugins/funind/functional_principles_proofs.ml" 1103 32503 32536
)
"plugins/funind/functional_principles_proofs.ml" 1160 34497 34506 "plugins/funind/functional_principles_proofs.ml" 1160 34497 34547
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1159 34481 34487 "plugins/funind/functional_principles_proofs.ml" 1160 34497 34548
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1161 34549 34555 "plugins/funind/functional_principles_proofs.ml" 1161 34549 34557
type(
  Term.constr array
)
ident(
  int_ref bs "plugins/funind/functional_principles_proofs.ml" 1154 34359 34387 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34389
)
"plugins/funind/functional_principles_proofs.ml" 1161 34549 34559 "plugins/funind/functional_principles_proofs.ml" 1161 34549 34562
type(
  int
)
ident(
  int_ref num "plugins/funind/functional_principles_proofs.ml" 1154 34359 34377 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34380
)
"plugins/funind/functional_principles_proofs.ml" 1161 34549 34555 "plugins/funind/functional_principles_proofs.ml" 1161 34549 34563
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1158 34463 34474 "plugins/funind/functional_principles_proofs.ml" 1161 34549 34563
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1162 34565 34576 "plugins/funind/functional_principles_proofs.ml" 1162 34565 34588
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_declaration list -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1162 34565 34589 "plugins/funind/functional_principles_proofs.ml" 1162 34565 34600
type(
  Term.rel_declaration -> Term.constr
)
ident(
  int_ref var_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
)
"plugins/funind/functional_principles_proofs.ml" 1162 34565 34601 "plugins/funind/functional_principles_proofs.ml" 1162 34565 34613
type(
  Term.rel_declaration list
)
ident(
  int_ref princ_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31321 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31333
)
"plugins/funind/functional_principles_proofs.ml" 1162 34565 34576 "plugins/funind/functional_principles_proofs.ml" 1162 34565 34613
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1158 34463 34473 "plugins/funind/functional_principles_proofs.ml" 1162 34565 34614
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1156 34440 34445 "plugins/funind/functional_principles_proofs.ml" 1163 34616 34622
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1155 34395 34405 "plugins/funind/functional_principles_proofs.ml" 1163 34616 34622
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1163 34616 34623 "plugins/funind/functional_principles_proofs.ml" 1163 34616 34626
type(
  int
)
ident(
  int_ref num "plugins/funind/functional_principles_proofs.ml" 1154 34359 34377 "plugins/funind/functional_principles_proofs.ml" 1154 34359 34380
)
"plugins/funind/functional_principles_proofs.ml" 1155 34395 34405 "plugins/funind/functional_principles_proofs.ml" 1163 34616 34626
type(
  Term.constr * int
)
"plugins/funind/functional_principles_proofs.ml" 1164 34627 34633 "plugins/funind/functional_principles_proofs.ml" 1164 34627 34634
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1164 34627 34638 "plugins/funind/functional_principles_proofs.ml" 1164 34627 34643
type(
  string -> Term.constr * int
)
ident(
  ext_ref Util.error
)
"plugins/funind/functional_principles_proofs.ml" 1164 34627 34644 "plugins/funind/functional_principles_proofs.ml" 1164 34627 34664
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1164 34627 34638 "plugins/funind/functional_principles_proofs.ml" 1164 34627 34664
type(
  Term.constr * int
)
"plugins/funind/functional_principles_proofs.ml" 1153 34306 34313 "plugins/funind/functional_principles_proofs.ml" 1164 34627 34664
type(
  Term.constr * int
)
"plugins/funind/functional_principles_proofs.ml" 1149 34159 34166 "plugins/funind/functional_principles_proofs.ml" 1164 34627 34664
type(
  Term.constr * int
)
"plugins/funind/functional_principles_proofs.ml" 1148 34118 34125 "plugins/funind/functional_principles_proofs.ml" 1164 34627 34664
type(
  Term.constr * int
)
"plugins/funind/functional_principles_proofs.ml" 1166 34673 34682 "plugins/funind/functional_principles_proofs.ml" 1166 34673 34686
type(
  static_fix_info
)
"plugins/funind/functional_principles_proofs.ml" 1167 34689 34697 "plugins/funind/functional_principles_proofs.ml" 1167 34689 34702
type(
  static_fix_info
)
ident(
  int_ref infos "plugins/funind/functional_principles_proofs.ml" 1139 33632 33641 "plugins/funind/functional_principles_proofs.ml" 1139 33632 33646
)
"plugins/funind/functional_principles_proofs.ml" 1168 34708 34719 "plugins/funind/functional_principles_proofs.ml" 1168 34708 34731
type(
  (Names.name * Term.constr) list -> Term.constr -> Term.types
)
ident(
  ext_ref Term.compose_prod
)
"plugins/funind/functional_principles_proofs.ml" 1168 34708 34732 "plugins/funind/functional_principles_proofs.ml" 1168 34708 34741
type(
  (Names.name * Term.constr) list
)
ident(
  int_ref type_args "plugins/funind/functional_principles_proofs.ml" 1140 33667 33676 "plugins/funind/functional_principles_proofs.ml" 1140 33667 33685
)
"plugins/funind/functional_principles_proofs.ml" 1168 34708 34742 "plugins/funind/functional_principles_proofs.ml" 1168 34708 34749
type(
  Term.constr
)
ident(
  int_ref app_pte "plugins/funind/functional_principles_proofs.ml" 1146 34018 34027 "plugins/funind/functional_principles_proofs.ml" 1146 34018 34034
)
"plugins/funind/functional_principles_proofs.ml" 1168 34708 34719 "plugins/funind/functional_principles_proofs.ml" 1168 34708 34749
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1169 34751 34773 "plugins/funind/functional_principles_proofs.ml" 1169 34751 34788
type(
  Term.constr
)
ident(
  int_ref body_with_param "plugins/funind/functional_principles_proofs.ml" 1147 34087 34096 "plugins/funind/functional_principles_proofs.ml" 1147 34087 34111
)
"plugins/funind/functional_principles_proofs.ml" 1170 34790 34809 "plugins/funind/functional_principles_proofs.ml" 1170 34790 34812
type(
  int
)
ident(
  int_ref num "plugins/funind/functional_principles_proofs.ml" 1147 34087 34112 "plugins/funind/functional_principles_proofs.ml" 1147 34087 34115
)
"plugins/funind/functional_principles_proofs.ml" 1167 34689 34696 "plugins/funind/functional_principles_proofs.ml" 1171 34813 34821
type(
  static_fix_info
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 34972 "plugins/funind/functional_principles_proofs.ml" 1175 34966 34981
type(
  Names.Idmap.key ->
  static_fix_info ->
  static_fix_info Names.Idmap.t -> static_fix_info Names.Idmap.t
)
ident(
  ext_ref Names.Idmap.add
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 34983 "plugins/funind/functional_principles_proofs.ml" 1175 34966 34999
type(
  Names.name -> Names.Idmap.key
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 35000 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35003
type(
  Names.name
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 1138 33591 33620 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33623
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 34982 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35004
call(
  stack
)
type(
  Names.Idmap.key
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 35005 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35009
type(
  static_fix_info
)
ident(
  int_ref info "plugins/funind/functional_principles_proofs.ml" 1166 34673 34682 "plugins/funind/functional_principles_proofs.ml" 1166 34673 34686
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 35010 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35017
type(
  static_fix_info Names.Idmap.t
)
ident(
  int_ref acc_map "plugins/funind/functional_principles_proofs.ml" 1138 33591 33601 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33608
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 34972 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35017
call(
  stack
)
type(
  static_fix_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 35018 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35022
type(
  static_fix_info
)
ident(
  int_ref info "plugins/funind/functional_principles_proofs.ml" 1166 34673 34682 "plugins/funind/functional_principles_proofs.ml" 1166 34673 34686
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 35024 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35032
type(
  static_fix_info list
)
ident(
  int_ref acc_info "plugins/funind/functional_principles_proofs.ml" 1138 33591 33609 "plugins/funind/functional_principles_proofs.ml" 1138 33591 33617
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 35018 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35032
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1175 34966 34971 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1166 34673 34678 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1147 34087 34092 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1146 34018 34023 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1145 33960 33965 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1144 33920 33925 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1143 33850 33855 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1142 33762 33767 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1141 33720 33725 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1140 33667 33672 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1139 33632 33637 "plugins/funind/functional_principles_proofs.ml" 1175 34966 35033
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1138 33591 33593 "plugins/funind/functional_principles_proofs.ml" 1176 35034 35040
type(
  int ->
  static_fix_info Names.Idmap.t * static_fix_info list ->
  Term.rel_declaration ->
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1177 35041 35043 "plugins/funind/functional_principles_proofs.ml" 1177 35041 35044
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1178 35045 35048 "plugins/funind/functional_principles_proofs.ml" 1178 35045 35059
type(
  static_fix_info Names.Idmap.t
)
ident(
  ext_ref Names.Idmap.empty
)
"plugins/funind/functional_principles_proofs.ml" 1178 35045 35060 "plugins/funind/functional_principles_proofs.ml" 1178 35045 35062
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1178 35045 35047 "plugins/funind/functional_principles_proofs.ml" 1178 35045 35063
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1179 35064 35067 "plugins/funind/functional_principles_proofs.ml" 1179 35064 35075
type(
  Term.rel_context -> Term.rel_declaration list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1179 35064 35076 "plugins/funind/functional_principles_proofs.ml" 1179 35064 35086
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1179 35064 35076 "plugins/funind/functional_principles_proofs.ml" 1179 35064 35097
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1179 35064 35066 "plugins/funind/functional_principles_proofs.ml" 1179 35064 35098
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1137 33567 33574 "plugins/funind/functional_principles_proofs.ml" 1179 35064 35098
call(
  stack
)
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1181 35107 35112 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35122
type(
  static_fix_info Names.Idmap.t
)
ident(
  int_ref pte_to_fix "plugins/funind/functional_principles_proofs.ml" 1136 33536 33545 "plugins/funind/functional_principles_proofs.ml" 1136 33536 33555
)
"plugins/funind/functional_principles_proofs.ml" 1181 35107 35123 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35131
type(
  static_fix_info list -> static_fix_info list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1181 35107 35132 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
type(
  static_fix_info list
)
ident(
  int_ref rev_info "plugins/funind/functional_principles_proofs.ml" 1136 33536 33556 "plugins/funind/functional_principles_proofs.ml" 1136 33536 33564
)
"plugins/funind/functional_principles_proofs.ml" 1181 35107 35123 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
call(
  stack
)
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1181 35107 35112 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1136 33536 33541 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1119 33061 33066 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1110 32803 32808 "plugins/funind/functional_principles_proofs.ml" 1181 35107 35140
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1182 35141 35144 "plugins/funind/functional_principles_proofs.ml" 1182 35141 35145
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1182 35141 35149 "plugins/funind/functional_principles_proofs.ml" 1182 35141 35160
type(
  static_fix_info Names.Idmap.t
)
ident(
  ext_ref Names.Idmap.empty
)
"plugins/funind/functional_principles_proofs.ml" 1182 35141 35161 "plugins/funind/functional_principles_proofs.ml" 1182 35141 35163
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1182 35141 35149 "plugins/funind/functional_principles_proofs.ml" 1182 35141 35163
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1108 32708 32714 "plugins/funind/functional_principles_proofs.ml" 1182 35141 35163
type(
  static_fix_info Names.Idmap.t * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1184 35171 35179 "plugins/funind/functional_principles_proofs.ml" 1184 35171 35187
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1185 35199 35209 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35217
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1185 35199 35218 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35223
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1185 35199 35209 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35223
type(
  static_fix_info list * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1185 35199 35226 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35235
type(
  ?msg:string ->
  int -> static_fix_info list -> static_fix_info list * static_fix_info list
)
ident(
  int_ref list_chop "plugins/funind/functional_principles_proofs.ml" 56 1091 1095 "plugins/funind/functional_principles_proofs.ml" 56 1091 1104
)
"plugins/funind/functional_principles_proofs.ml" 1185 35199 35236 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35243
type(
  int
)
ident(
  int_ref fun_num "plugins/funind/functional_principles_proofs.ml" 1025 29939 29984 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29991
)
"plugins/funind/functional_principles_proofs.ml" 1185 35199 35244 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35249
type(
  static_fix_info list
)
ident(
  int_ref infos "plugins/funind/functional_principles_proofs.ml" 1107 32680 32700 "plugins/funind/functional_principles_proofs.ml" 1107 32680 32705
)
"plugins/funind/functional_principles_proofs.ml" 1185 35199 35226 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35249
call(
  stack
)
type(
  static_fix_info list * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1186 35253 35265 "plugins/funind/functional_principles_proofs.ml" 1186 35253 35273
type(
  static_fix_info list
)
ident(
  int_ref pre_info "plugins/funind/functional_principles_proofs.ml" 1185 35199 35209 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35217
)
"plugins/funind/functional_principles_proofs.ml" 1186 35253 35274 "plugins/funind/functional_principles_proofs.ml" 1186 35253 35279
type(
  static_fix_info list
)
ident(
  int_ref infos "plugins/funind/functional_principles_proofs.ml" 1185 35199 35218 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35223
)
"plugins/funind/functional_principles_proofs.ml" 1186 35253 35265 "plugins/funind/functional_principles_proofs.ml" 1186 35253 35279
type(
  static_fix_info list * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1187 35285 35288 "plugins/funind/functional_principles_proofs.ml" 1187 35285 35290
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1187 35285 35291 "plugins/funind/functional_principles_proofs.ml" 1187 35285 35293
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1187 35285 35288 "plugins/funind/functional_principles_proofs.ml" 1187 35285 35293
type(
  static_fix_info list * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1187 35285 35297 "plugins/funind/functional_principles_proofs.ml" 1187 35285 35305
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/functional_principles_proofs.ml" 1188 35306 35309 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35310
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1188 35306 35312 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35325
type(
  static_fix_info
)
ident(
  def this_fix_info "plugins/funind/functional_principles_proofs.ml" 1189 35343 35348 "plugins/funind/functional_principles_proofs.ml" 1199 35673 35690
)
"plugins/funind/functional_principles_proofs.ml" 1188 35306 35327 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35339
type(
  static_fix_info list
)
ident(
  def others_infos "plugins/funind/functional_principles_proofs.ml" 1189 35343 35348 "plugins/funind/functional_principles_proofs.ml" 1199 35673 35690
)
"plugins/funind/functional_principles_proofs.ml" 1188 35306 35312 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35339
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1188 35306 35309 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35339
type(
  static_fix_info list * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1189 35343 35352 "plugins/funind/functional_principles_proofs.ml" 1189 35343 35367
type(
  (Names.identifier * int * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 1190 35370 35377 "plugins/funind/functional_principles_proofs.ml" 1190 35370 35385
type(
  (static_fix_info -> Names.identifier * int * Term.types) ->
  static_fix_info list -> (Names.identifier * int * Term.types) list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35393 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35395
type(
  static_fix_info
)
ident(
  def fi "plugins/funind/functional_principles_proofs.ml" 1191 35386 35399 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35427
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35399 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35401
type(
  static_fix_info
)
ident(
  int_ref fi "plugins/funind/functional_principles_proofs.ml" 1191 35386 35393 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35395
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35399 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35406
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35407 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35409
type(
  static_fix_info
)
ident(
  int_ref fi "plugins/funind/functional_principles_proofs.ml" 1191 35386 35393 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35395
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35407 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35413
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35414 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35415
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35416 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35417
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35407 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35417
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35419 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35421
type(
  static_fix_info
)
ident(
  int_ref fi "plugins/funind/functional_principles_proofs.ml" 1191 35386 35393 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35395
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35419 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35427
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35399 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35427
type(
  Names.identifier * int * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1191 35386 35388 "plugins/funind/functional_principles_proofs.ml" 1191 35386 35428
type(
  static_fix_info -> Names.identifier * int * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1192 35429 35432 "plugins/funind/functional_principles_proofs.ml" 1192 35429 35440
type(
  static_fix_info list
)
ident(
  int_ref pre_info "plugins/funind/functional_principles_proofs.ml" 1185 35199 35209 "plugins/funind/functional_principles_proofs.ml" 1185 35199 35217
)
"plugins/funind/functional_principles_proofs.ml" 1192 35429 35440 "plugins/funind/functional_principles_proofs.ml" 1192 35429 35441
type(
  static_fix_info list -> static_fix_info list -> static_fix_info list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1192 35429 35441 "plugins/funind/functional_principles_proofs.ml" 1192 35429 35453
type(
  static_fix_info list
)
ident(
  int_ref others_infos "plugins/funind/functional_principles_proofs.ml" 1188 35306 35327 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35339
)
"plugins/funind/functional_principles_proofs.ml" 1192 35429 35431 "plugins/funind/functional_principles_proofs.ml" 1192 35429 35454
call(
  stack
)
type(
  static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1190 35370 35377 "plugins/funind/functional_principles_proofs.ml" 1192 35429 35454
call(
  stack
)
type(
  (Names.identifier * int * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 1194 35463 35471 "plugins/funind/functional_principles_proofs.ml" 1194 35463 35486
type(
  (Names.identifier * int * Term.types) list
)
ident(
  int_ref other_fix_infos "plugins/funind/functional_principles_proofs.ml" 1189 35343 35352 "plugins/funind/functional_principles_proofs.ml" 1189 35343 35367
)
"plugins/funind/functional_principles_proofs.ml" 1194 35463 35487 "plugins/funind/functional_principles_proofs.ml" 1194 35463 35488
type(
  (Names.identifier * int * Term.types) list ->
  (Names.identifier * int * Term.types) list -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_proofs.ml" 1194 35463 35489 "plugins/funind/functional_principles_proofs.ml" 1194 35463 35491
type(
  (Names.identifier * int * Term.types) list
)
"plugins/funind/functional_principles_proofs.ml" 1194 35463 35471 "plugins/funind/functional_principles_proofs.ml" 1194 35463 35491
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35538 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35543
type(
  Names.identifier option -> int -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_fix
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35550 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35563
type(
  static_fix_info
)
ident(
  int_ref this_fix_info "plugins/funind/functional_principles_proofs.ml" 1188 35306 35312 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35325
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35550 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35568
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35544 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35569
type(
  Names.identifier option
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35571 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35584
type(
  static_fix_info
)
ident(
  int_ref this_fix_info "plugins/funind/functional_principles_proofs.ml" 1188 35306 35312 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35325
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35571 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35588
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35589 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35590
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35590 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35591
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35570 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35592
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1196 35502 35537 "plugins/funind/functional_principles_proofs.ml" 1196 35502 35593
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35611 "plugins/funind/functional_principles_proofs.ml" 1198 35604 35623
type(
  Tacexpr.hidden_flag ->
  Names.identifier ->
  int -> (Names.identifier * int * Term.types) list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_mutual_fix
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35624 "plugins/funind/functional_principles_proofs.ml" 1198 35604 35629
type(
  Tacexpr.hidden_flag
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35630 "plugins/funind/functional_principles_proofs.ml" 1198 35604 35643
type(
  static_fix_info
)
ident(
  int_ref this_fix_info "plugins/funind/functional_principles_proofs.ml" 1188 35306 35312 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35325
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35630 "plugins/funind/functional_principles_proofs.ml" 1198 35604 35648
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35650 "plugins/funind/functional_principles_proofs.ml" 1198 35604 35663
type(
  static_fix_info
)
ident(
  int_ref this_fix_info "plugins/funind/functional_principles_proofs.ml" 1188 35306 35312 "plugins/funind/functional_principles_proofs.ml" 1188 35306 35325
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35650 "plugins/funind/functional_principles_proofs.ml" 1198 35604 35667
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35668 "plugins/funind/functional_principles_proofs.ml" 1198 35604 35669
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35670 "plugins/funind/functional_principles_proofs.ml" 1198 35604 35671
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35649 "plugins/funind/functional_principles_proofs.ml" 1198 35604 35672
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1199 35673 35675 "plugins/funind/functional_principles_proofs.ml" 1199 35673 35690
type(
  (Names.identifier * int * Term.types) list
)
ident(
  int_ref other_fix_infos "plugins/funind/functional_principles_proofs.ml" 1189 35343 35352 "plugins/funind/functional_principles_proofs.ml" 1189 35343 35367
)
"plugins/funind/functional_principles_proofs.ml" 1198 35604 35611 "plugins/funind/functional_principles_proofs.ml" 1199 35673 35690
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1194 35463 35468 "plugins/funind/functional_principles_proofs.ml" 1199 35673 35690
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1189 35343 35348 "plugins/funind/functional_principles_proofs.ml" 1199 35673 35690
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1200 35691 35694 "plugins/funind/functional_principles_proofs.ml" 1200 35691 35695
type(
  static_fix_info list * static_fix_info list
)
"plugins/funind/functional_principles_proofs.ml" 1200 35691 35699 "plugins/funind/functional_principles_proofs.ml" 1200 35691 35706
type(
  string -> Proof_type.tactic
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_proofs.ml" 1200 35691 35707 "plugins/funind/functional_principles_proofs.ml" 1200 35691 35732
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1200 35691 35699 "plugins/funind/functional_principles_proofs.ml" 1200 35691 35732
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1186 35253 35259 "plugins/funind/functional_principles_proofs.ml" 1200 35691 35732
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1185 35199 35205 "plugins/funind/functional_principles_proofs.ml" 1200 35691 35732
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1202 35740 35748 "plugins/funind/functional_principles_proofs.ml" 1202 35740 35757
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1203 35812 35818 "plugins/funind/functional_principles_proofs.ml" 1203 35812 35828
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1204 35829 35872 "plugins/funind/functional_principles_proofs.ml" 1204 35829 35884
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tactics.intros_using
)
"plugins/funind/functional_principles_proofs.ml" 1204 35829 35886 "plugins/funind/functional_principles_proofs.ml" 1204 35829 35898
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_context -> Names.identifier list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1204 35829 35899 "plugins/funind/functional_principles_proofs.ml" 1204 35829 35909
type(
  Term.rel_declaration -> Names.identifier
)
ident(
  int_ref id_of_decl "plugins/funind/functional_principles_proofs.ml" 925 25942 25946 "plugins/funind/functional_principles_proofs.ml" 925 25942 25956
)
"plugins/funind/functional_principles_proofs.ml" 1204 35829 35910 "plugins/funind/functional_principles_proofs.ml" 1204 35829 35920
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1204 35829 35910 "plugins/funind/functional_principles_proofs.ml" 1204 35829 35927
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1204 35829 35885 "plugins/funind/functional_principles_proofs.ml" 1204 35829 35928
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1204 35829 35871 "plugins/funind/functional_principles_proofs.ml" 1204 35829 35929
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1205 35931 35977 "plugins/funind/functional_principles_proofs.ml" 1205 35931 35989
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tactics.intros_using
)
"plugins/funind/functional_principles_proofs.ml" 1205 35931 35991 "plugins/funind/functional_principles_proofs.ml" 1205 35931 36003
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_context -> Names.identifier list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1205 35931 36004 "plugins/funind/functional_principles_proofs.ml" 1205 35931 36014
type(
  Term.rel_declaration -> Names.identifier
)
ident(
  int_ref id_of_decl "plugins/funind/functional_principles_proofs.ml" 925 25942 25946 "plugins/funind/functional_principles_proofs.ml" 925 25942 25956
)
"plugins/funind/functional_principles_proofs.ml" 1205 35931 36015 "plugins/funind/functional_principles_proofs.ml" 1205 35931 36025
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1205 35931 36015 "plugins/funind/functional_principles_proofs.ml" 1205 35931 36036
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1205 35931 35990 "plugins/funind/functional_principles_proofs.ml" 1205 35931 36037
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1205 35931 35976 "plugins/funind/functional_principles_proofs.ml" 1205 35931 36038
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1206 36040 36085 "plugins/funind/functional_principles_proofs.ml" 1206 36040 36097
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tactics.intros_using
)
"plugins/funind/functional_principles_proofs.ml" 1206 36040 36099 "plugins/funind/functional_principles_proofs.ml" 1206 36040 36111
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_context -> Names.identifier list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1206 36040 36112 "plugins/funind/functional_principles_proofs.ml" 1206 36040 36122
type(
  Term.rel_declaration -> Names.identifier
)
ident(
  int_ref id_of_decl "plugins/funind/functional_principles_proofs.ml" 925 25942 25946 "plugins/funind/functional_principles_proofs.ml" 925 25942 25956
)
"plugins/funind/functional_principles_proofs.ml" 1206 36040 36123 "plugins/funind/functional_principles_proofs.ml" 1206 36040 36133
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1206 36040 36123 "plugins/funind/functional_principles_proofs.ml" 1206 36040 36142
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1206 36040 36098 "plugins/funind/functional_principles_proofs.ml" 1206 36040 36143
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1206 36040 36084 "plugins/funind/functional_principles_proofs.ml" 1206 36040 36144
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1207 36146 36184 "plugins/funind/functional_principles_proofs.ml" 1207 36146 36192
type(
  Proof_type.tactic
)
ident(
  int_ref mk_fixes "plugins/funind/functional_principles_proofs.ml" 1184 35171 35179 "plugins/funind/functional_principles_proofs.ml" 1184 35171 35187
)
"plugins/funind/functional_principles_proofs.ml" 1204 35829 35830 "plugins/funind/functional_principles_proofs.ml" 1208 36194 36196
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1203 35812 35818 "plugins/funind/functional_principles_proofs.ml" 1208 36194 36196
call(
  stack
)
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1210 36204 36212 "plugins/funind/functional_principles_proofs.ml" 1210 36204 36230
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1211 36242 36252 "plugins/funind/functional_principles_proofs.ml" 1211 36242 36254
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/functional_principles_proofs.ml" 1212 36258 36259 "plugins/funind/functional_principles_proofs.ml" 1329 39791 39796
)
"plugins/funind/functional_principles_proofs.ml" 1212 36258 36263 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36267
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1212 36258 36268 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36275
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1212 36258 36263 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36275
type(
  Term.rel_context * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1212 36258 36280 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36300
type(
  Term.types -> Term.rel_context * Term.types
)
ident(
  ext_ref Term.decompose_prod_assum
)
"plugins/funind/functional_principles_proofs.ml" 1212 36258 36302 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36310
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 1212 36258 36311 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36313
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/functional_principles_proofs.ml" 1211 36242 36252 "plugins/funind/functional_principles_proofs.ml" 1211 36242 36254
)
"plugins/funind/functional_principles_proofs.ml" 1212 36258 36301 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36314
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1212 36258 36279 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36315
call(
  stack
)
type(
  Term.rel_context * Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1213 36319 36324 "plugins/funind/functional_principles_proofs.ml" 1213 36319 36327
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1213 36319 36328 "plugins/funind/functional_principles_proofs.ml" 1213 36319 36336
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1213 36319 36324 "plugins/funind/functional_principles_proofs.ml" 1213 36319 36336
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1213 36319 36340 "plugins/funind/functional_principles_proofs.ml" 1213 36319 36353
type(
  Term.types -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_proofs.ml" 1213 36319 36354 "plugins/funind/functional_principles_proofs.ml" 1213 36319 36361
type(
  Term.types
)
ident(
  int_ref pte_app "plugins/funind/functional_principles_proofs.ml" 1212 36258 36268 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36275
)
"plugins/funind/functional_principles_proofs.ml" 1213 36319 36339 "plugins/funind/functional_principles_proofs.ml" 1213 36319 36362
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36378 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36381
type(
  Names.identifier
)
ident(
  def pte "plugins/funind/functional_principles_proofs.ml" 1216 36451 36454 "plugins/funind/functional_principles_proofs.ml" 1279 38473 38482
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36388 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36395
type(
  Term.constr -> Names.identifier
)
ident(
  ext_ref Term.destVar
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36396 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36399
type(
  Term.constr
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 1213 36319 36324 "plugins/funind/functional_principles_proofs.ml" 1213 36319 36327
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36388 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36399
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36405 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36406
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36410 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36417
type(
  string -> Names.identifier
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36418 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36446
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36410 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36446
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36384 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36446
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1216 36451 36458 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36466
type(
  static_fix_info
)
ident(
  def fix_info "plugins/funind/functional_principles_proofs.ml" 1217 36500 36503 "plugins/funind/functional_principles_proofs.ml" 1279 38473 38482
)
"plugins/funind/functional_principles_proofs.ml" 1216 36451 36469 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36479
type(
  Names.Idmap.key -> static_fix_info Names.Idmap.t -> static_fix_info
)
ident(
  ext_ref Names.Idmap.find
)
"plugins/funind/functional_principles_proofs.ml" 1216 36451 36481 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36484
type(
  Names.Idmap.key
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 1215 36371 36378 "plugins/funind/functional_principles_proofs.ml" 1215 36371 36381
)
"plugins/funind/functional_principles_proofs.ml" 1216 36451 36485 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36496
type(
  static_fix_info Names.Idmap.t
)
ident(
  int_ref ptes_to_fix "plugins/funind/functional_principles_proofs.ml" 1107 32680 32688 "plugins/funind/functional_principles_proofs.ml" 1107 32680 32699
)
"plugins/funind/functional_principles_proofs.ml" 1216 36451 36469 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36496
call(
  stack
)
type(
  static_fix_info
)
"plugins/funind/functional_principles_proofs.ml" 1217 36500 36507 "plugins/funind/functional_principles_proofs.ml" 1217 36500 36514
type(
  int
)
ident(
  def nb_args "plugins/funind/functional_principles_proofs.ml" 1218 36541 36544 "plugins/funind/functional_principles_proofs.ml" 1279 38473 38482
)
"plugins/funind/functional_principles_proofs.ml" 1217 36500 36517 "plugins/funind/functional_principles_proofs.ml" 1217 36500 36525
type(
  static_fix_info
)
ident(
  int_ref fix_info "plugins/funind/functional_principles_proofs.ml" 1216 36451 36458 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36466
)
"plugins/funind/functional_principles_proofs.ml" 1217 36500 36517 "plugins/funind/functional_principles_proofs.ml" 1217 36500 36537
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1218 36541 36544 "plugins/funind/functional_principles_proofs.ml" 1218 36541 36554
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1220 36562 36609 "plugins/funind/functional_principles_proofs.ml" 1220 36562 36614
type(
  int -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclDO
)
"plugins/funind/functional_principles_proofs.ml" 1220 36562 36615 "plugins/funind/functional_principles_proofs.ml" 1220 36562 36622
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/functional_principles_proofs.ml" 1217 36500 36507 "plugins/funind/functional_principles_proofs.ml" 1217 36500 36514
)
"plugins/funind/functional_principles_proofs.ml" 1220 36562 36623 "plugins/funind/functional_principles_proofs.ml" 1220 36562 36628
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intro
)
"plugins/funind/functional_principles_proofs.ml" 1220 36562 36608 "plugins/funind/functional_principles_proofs.ml" 1220 36562 36629
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1221 36631 36643 "plugins/funind/functional_principles_proofs.ml" 1221 36631 36644
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 1222 36694 36697 "plugins/funind/functional_principles_proofs.ml" 1277 38456 38462
)
"plugins/funind/functional_principles_proofs.ml" 1222 36694 36701 "plugins/funind/functional_principles_proofs.ml" 1222 36694 36705
type(
  Sign.named_context
)
"plugins/funind/functional_principles_proofs.ml" 1222 36694 36708 "plugins/funind/functional_principles_proofs.ml" 1222 36694 36718
type(
  int -> Proof_type.goal Tacmach.sigma -> Sign.named_context
)
ident(
  ext_ref Tacticals.nLastDecls
)
"plugins/funind/functional_principles_proofs.ml" 1222 36694 36719 "plugins/funind/functional_principles_proofs.ml" 1222 36694 36726
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/functional_principles_proofs.ml" 1217 36500 36507 "plugins/funind/functional_principles_proofs.ml" 1217 36500 36514
)
"plugins/funind/functional_principles_proofs.ml" 1222 36694 36727 "plugins/funind/functional_principles_proofs.ml" 1222 36694 36728
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1221 36631 36643 "plugins/funind/functional_principles_proofs.ml" 1221 36631 36644
)
"plugins/funind/functional_principles_proofs.ml" 1222 36694 36708 "plugins/funind/functional_principles_proofs.ml" 1222 36694 36728
call(
  stack
)
type(
  Sign.named_context
)
"plugins/funind/functional_principles_proofs.ml" 1223 36732 36739 "plugins/funind/functional_principles_proofs.ml" 1223 36732 36747
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1223 36732 36750 "plugins/funind/functional_principles_proofs.ml" 1223 36732 36758
type(
  static_fix_info
)
ident(
  int_ref fix_info "plugins/funind/functional_principles_proofs.ml" 1216 36451 36458 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36466
)
"plugins/funind/functional_principles_proofs.ml" 1223 36732 36750 "plugins/funind/functional_principles_proofs.ml" 1223 36732 36774
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36862 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36869
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36872 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36880
type(
  (Term.named_declaration -> Names.identifier) ->
  Sign.named_context -> Names.identifier list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36887 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36889
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 1225 36855 36898 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36900
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36890 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36891
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36892 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36893
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36886 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36894
type(
  Term.named_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36898 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36900
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1225 36855 36887 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36889
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36881 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36901
type(
  Term.named_declaration -> Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36902 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36906
type(
  Sign.named_context
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 1222 36694 36701 "plugins/funind/functional_principles_proofs.ml" 1222 36694 36705
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36872 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36906
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1226 36910 36917 "plugins/funind/functional_principles_proofs.ml" 1226 36910 36926
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1228 36936 36957 "plugins/funind/functional_principles_proofs.ml" 1228 36936 36961
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1229 36963 36981 "plugins/funind/functional_principles_proofs.ml" 1229 36963 36983
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1231 36999 37008 "plugins/funind/functional_principles_proofs.ml" 1231 36999 37032
type(
  Reductionops.local_reduction_function
)
ident(
  ext_ref Reductionops.nf_betaiota
)
"plugins/funind/functional_principles_proofs.ml" 1231 36999 37033 "plugins/funind/functional_principles_proofs.ml" 1231 36999 37042
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_proofs.ml" 1232 37043 37048 "plugins/funind/functional_principles_proofs.ml" 1232 37043 37055
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 1232 37043 37056 "plugins/funind/functional_principles_proofs.ml" 1232 37043 37064
type(
  Term.constr
)
ident(
  int_ref fix_body "plugins/funind/functional_principles_proofs.ml" 1223 36732 36739 "plugins/funind/functional_principles_proofs.ml" 1223 36732 36747
)
"plugins/funind/functional_principles_proofs.ml" 1232 37043 37065 "plugins/funind/functional_principles_proofs.ml" 1232 37043 37077
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1232 37043 37078 "plugins/funind/functional_principles_proofs.ml" 1232 37043 37083
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1232 37043 37084 "plugins/funind/functional_principles_proofs.ml" 1232 37043 37091
type(
  Names.identifier list
)
ident(
  int_ref args_id "plugins/funind/functional_principles_proofs.ml" 1225 36855 36862 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36869
)
"plugins/funind/functional_principles_proofs.ml" 1232 37043 37065 "plugins/funind/functional_principles_proofs.ml" 1232 37043 37091
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1232 37043 37055 "plugins/funind/functional_principles_proofs.ml" 1232 37043 37092
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1232 37043 37047 "plugins/funind/functional_principles_proofs.ml" 1232 37043 37093
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1231 36999 37008 "plugins/funind/functional_principles_proofs.ml" 1232 37043 37093
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1233 37095 37112 "plugins/funind/functional_principles_proofs.ml" 1233 37095 37114
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1227 36929 36934 "plugins/funind/functional_principles_proofs.ml" 1234 37115 37121
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1236 37128 37131 "plugins/funind/functional_principles_proofs.ml" 1236 37128 37141
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1239 37188 37198 "plugins/funind/functional_principles_proofs.ml" 1239 37188 37208
type(
  Term.rel_context ->
  int ->
  Names.identifier list ->
  Term.constr -> int -> Term.constr array -> Proof_type.tactic
)
ident(
  int_ref do_replace "plugins/funind/functional_principles_proofs.ml" 986 28608 28612 "plugins/funind/functional_principles_proofs.ml" 986 28608 28622
)
"plugins/funind/functional_principles_proofs.ml" 1240 37209 37214 "plugins/funind/functional_principles_proofs.ml" 1240 37209 37225
type(
  Term.rel_context
)
ident(
  int_ref full_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31309 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31320
)
"plugins/funind/functional_principles_proofs.ml" 1241 37226 37232 "plugins/funind/functional_principles_proofs.ml" 1241 37226 37240
type(
  static_fix_info
)
ident(
  int_ref fix_info "plugins/funind/functional_principles_proofs.ml" 1216 36451 36458 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36466
)
"plugins/funind/functional_principles_proofs.ml" 1241 37226 37232 "plugins/funind/functional_principles_proofs.ml" 1241 37226 37244
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1241 37226 37245 "plugins/funind/functional_principles_proofs.ml" 1241 37226 37246
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 1241 37226 37247 "plugins/funind/functional_principles_proofs.ml" 1241 37226 37258
type(
  Term.rel_declaration list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1241 37226 37259 "plugins/funind/functional_principles_proofs.ml" 1241 37226 37271
type(
  Term.rel_declaration list
)
ident(
  int_ref princ_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31321 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31333
)
"plugins/funind/functional_principles_proofs.ml" 1241 37226 37247 "plugins/funind/functional_principles_proofs.ml" 1241 37226 37271
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1241 37226 37231 "plugins/funind/functional_principles_proofs.ml" 1241 37226 37272
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37279 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37286
type(
  Names.identifier list
)
ident(
  int_ref args_id "plugins/funind/functional_principles_proofs.ml" 1225 36855 36862 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36869
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37286 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37287
type(
  Names.identifier list -> Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37288 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37296
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_declaration list -> Names.identifier list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37303 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37305
type(
  Names.name
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 1242 37273 37314 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37333
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37306 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37307
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37308 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37309
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37302 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37310
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37314 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37330
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37331 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37333
type(
  Names.name
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1242 37273 37303 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37305
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37314 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37333
call(
  tail
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37297 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37335
type(
  Term.rel_declaration -> Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37336 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37348
type(
  Term.rel_declaration list
)
ident(
  int_ref princ_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31321 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31333
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37287 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37349
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1242 37273 37278 "plugins/funind/functional_principles_proofs.ml" 1242 37273 37350
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1243 37351 37357 "plugins/funind/functional_principles_proofs.ml" 1243 37351 37365
type(
  Term.constr array
)
ident(
  int_ref all_funs "plugins/funind/functional_principles_proofs.ml" 1025 29939 29999 "plugins/funind/functional_principles_proofs.ml" 1025 29939 30007
)
"plugins/funind/functional_principles_proofs.ml" 1243 37351 37367 "plugins/funind/functional_principles_proofs.ml" 1243 37351 37375
type(
  static_fix_info
)
ident(
  int_ref fix_info "plugins/funind/functional_principles_proofs.ml" 1216 36451 36458 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36466
)
"plugins/funind/functional_principles_proofs.ml" 1243 37351 37367 "plugins/funind/functional_principles_proofs.ml" 1243 37351 37388
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1243 37351 37356 "plugins/funind/functional_principles_proofs.ml" 1243 37351 37390
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1244 37391 37396 "plugins/funind/functional_principles_proofs.ml" 1244 37391 37404
type(
  static_fix_info
)
ident(
  int_ref fix_info "plugins/funind/functional_principles_proofs.ml" 1216 36451 36458 "plugins/funind/functional_principles_proofs.ml" 1216 36451 36466
)
"plugins/funind/functional_principles_proofs.ml" 1244 37391 37396 "plugins/funind/functional_principles_proofs.ml" 1244 37391 37417
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1245 37418 37423 "plugins/funind/functional_principles_proofs.ml" 1245 37418 37431
type(
  Term.constr array
)
ident(
  int_ref all_funs "plugins/funind/functional_principles_proofs.ml" 1025 29939 29999 "plugins/funind/functional_principles_proofs.ml" 1025 29939 30007
)
"plugins/funind/functional_principles_proofs.ml" 1239 37188 37197 "plugins/funind/functional_principles_proofs.ml" 1246 37432 37442
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1250 37601 37612 "plugins/funind/functional_principles_proofs.ml" 1250 37601 37620
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  def do_prove "plugins/funind/functional_principles_proofs.ml" 1256 37745 37752 "plugins/funind/functional_principles_proofs.ml" 1275 38420 38448
)
"plugins/funind/functional_principles_proofs.ml" 1251 37623 37632 "plugins/funind/functional_principles_proofs.ml" 1251 37623 37643
type(
  bool ->
  Names.constant list ->
  pte_info Names.Idmap.t -> Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 664 18810 18814 "plugins/funind/functional_principles_proofs.ml" 664 18810 18825
)
"plugins/funind/functional_principles_proofs.ml" 1252 37644 37648 "plugins/funind/functional_principles_proofs.ml" 1252 37644 37665
type(
  bool
)
ident(
  int_ref interactive_proof "plugins/funind/functional_principles_proofs.ml" 1025 29939 29966 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29983
)
"plugins/funind/functional_principles_proofs.ml" 1253 37666 37671 "plugins/funind/functional_principles_proofs.ml" 1253 37666 37684
type(
  Names.constant array -> Names.constant list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/functional_principles_proofs.ml" 1253 37666 37685 "plugins/funind/functional_principles_proofs.ml" 1253 37666 37691
type(
  Names.constant array
)
ident(
  int_ref fnames "plugins/funind/functional_principles_proofs.ml" 1025 29939 29992 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29998
)
"plugins/funind/functional_principles_proofs.ml" 1253 37666 37670 "plugins/funind/functional_principles_proofs.ml" 1253 37666 37692
call(
  stack
)
type(
  Names.constant list
)
"plugins/funind/functional_principles_proofs.ml" 1254 37693 37698 "plugins/funind/functional_principles_proofs.ml" 1254 37693 37707
type(
  (static_fix_info -> pte_info) ->
  static_fix_info Names.Idmap.t -> pte_info Names.Idmap.t
)
ident(
  ext_ref Names.Idmap.map
)
"plugins/funind/functional_principles_proofs.ml" 1254 37693 37708 "plugins/funind/functional_principles_proofs.ml" 1254 37693 37721
type(
  static_fix_info -> pte_info
)
ident(
  int_ref prove_rec_hyp "plugins/funind/functional_principles_proofs.ml" 895 25021 25025 "plugins/funind/functional_principles_proofs.ml" 895 25021 25038
)
"plugins/funind/functional_principles_proofs.ml" 1254 37693 37722 "plugins/funind/functional_principles_proofs.ml" 1254 37693 37733
type(
  static_fix_info Names.Idmap.t
)
ident(
  int_ref ptes_to_fix "plugins/funind/functional_principles_proofs.ml" 1107 32680 32688 "plugins/funind/functional_principles_proofs.ml" 1107 32680 32699
)
"plugins/funind/functional_principles_proofs.ml" 1254 37693 37697 "plugins/funind/functional_principles_proofs.ml" 1254 37693 37734
call(
  stack
)
type(
  pte_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1251 37623 37632 "plugins/funind/functional_principles_proofs.ml" 1254 37693 37734
call(
  stack
)
type(
  Term.types dynamic_info -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1256 37745 37756 "plugins/funind/functional_principles_proofs.ml" 1256 37745 37765
type(
  Names.identifier list ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def prove_tac "plugins/funind/functional_principles_proofs.ml" 1273 38289 38327 "plugins/funind/functional_principles_proofs.ml" 1275 38420 38448
)
"plugins/funind/functional_principles_proofs.ml" 1256 37745 37766 "plugins/funind/functional_principles_proofs.ml" 1256 37745 37774
type(
  Names.identifier list
)
ident(
  def branches "plugins/funind/functional_principles_proofs.ml" 1257 37778 37787 "plugins/funind/functional_principles_proofs.ml" 1266 38019 38033
)
"plugins/funind/functional_principles_proofs.ml" 1257 37778 37791 "plugins/funind/functional_principles_proofs.ml" 1257 37778 37800
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1258 37803 37808 "plugins/funind/functional_principles_proofs.ml" 1258 37803 37817
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 1226 36910 36917 "plugins/funind/functional_principles_proofs.ml" 1226 36910 36926
)
"plugins/funind/functional_principles_proofs.ml" 1259 37823 37841 "plugins/funind/functional_principles_proofs.ml" 1259 37823 37849
type(
  Names.identifier list
)
ident(
  int_ref branches "plugins/funind/functional_principles_proofs.ml" 1256 37745 37766 "plugins/funind/functional_principles_proofs.ml" 1256 37745 37774
)
"plugins/funind/functional_principles_proofs.ml" 1260 37851 37872 "plugins/funind/functional_principles_proofs.ml" 1260 37851 37883
type(
  Names.identifier list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1260 37851 37884 "plugins/funind/functional_principles_proofs.ml" 1260 37851 37892
type(
  Names.identifier list
)
ident(
  int_ref branches "plugins/funind/functional_principles_proofs.ml" 1256 37745 37766 "plugins/funind/functional_principles_proofs.ml" 1256 37745 37774
)
"plugins/funind/functional_principles_proofs.ml" 1260 37851 37872 "plugins/funind/functional_principles_proofs.ml" 1260 37851 37892
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1258 37803 37807 "plugins/funind/functional_principles_proofs.ml" 1261 37893 37898
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1263 37911 37920 "plugins/funind/functional_principles_proofs.ml" 1263 37911 37931
type(
  string ->
  (Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 1263 37911 37932 "plugins/funind/functional_principles_proofs.ml" 1263 37911 37942
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1263 37911 37944 "plugins/funind/functional_principles_proofs.ml" 1263 37911 37963
type(
  pte_info Names.Idmap.t ->
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref clean_goal_with_heq "plugins/funind/functional_principles_proofs.ml" 533 15300 15304 "plugins/funind/functional_principles_proofs.ml" 533 15300 15323
)
"plugins/funind/functional_principles_proofs.ml" 1264 37964 37969 "plugins/funind/functional_principles_proofs.ml" 1264 37964 37978
type(
  (static_fix_info -> pte_info) ->
  static_fix_info Names.Idmap.t -> pte_info Names.Idmap.t
)
ident(
  ext_ref Names.Idmap.map
)
"plugins/funind/functional_principles_proofs.ml" 1264 37964 37979 "plugins/funind/functional_principles_proofs.ml" 1264 37964 37992
type(
  static_fix_info -> pte_info
)
ident(
  int_ref prove_rec_hyp "plugins/funind/functional_principles_proofs.ml" 895 25021 25025 "plugins/funind/functional_principles_proofs.ml" 895 25021 25038
)
"plugins/funind/functional_principles_proofs.ml" 1264 37964 37993 "plugins/funind/functional_principles_proofs.ml" 1264 37964 38004
type(
  static_fix_info Names.Idmap.t
)
ident(
  int_ref ptes_to_fix "plugins/funind/functional_principles_proofs.ml" 1107 32680 32688 "plugins/funind/functional_principles_proofs.ml" 1107 32680 32699
)
"plugins/funind/functional_principles_proofs.ml" 1264 37964 37968 "plugins/funind/functional_principles_proofs.ml" 1264 37964 38005
call(
  stack
)
type(
  pte_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1265 38006 38010 "plugins/funind/functional_principles_proofs.ml" 1265 38006 38018
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_prove "plugins/funind/functional_principles_proofs.ml" 1250 37601 37612 "plugins/funind/functional_principles_proofs.ml" 1250 37601 37620
)
"plugins/funind/functional_principles_proofs.ml" 1266 38019 38023 "plugins/funind/functional_principles_proofs.ml" 1266 38019 38032
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 1257 37778 37791 "plugins/funind/functional_principles_proofs.ml" 1257 37778 37800
)
"plugins/funind/functional_principles_proofs.ml" 1263 37911 37943 "plugins/funind/functional_principles_proofs.ml" 1266 38019 38033
call(
  stack
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1263 37911 37920 "plugins/funind/functional_principles_proofs.ml" 1266 38019 38033
call(
  tail
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1257 37778 37787 "plugins/funind/functional_principles_proofs.ml" 1266 38019 38033
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1273 38289 38328 "plugins/funind/functional_principles_proofs.ml" 1273 38289 38354
type(
  (Names.Idset.elt list -> Proof_type.tactic) ->
  Names.Idset.elt list -> Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref instanciate_hyps_with_args "plugins/funind/functional_principles_proofs.ml" 615 17526 17530 "plugins/funind/functional_principles_proofs.ml" 615 17526 17556
)
"plugins/funind/functional_principles_proofs.ml" 1273 38289 38355 "plugins/funind/functional_principles_proofs.ml" 1273 38289 38364
type(
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  int_ref prove_tac "plugins/funind/functional_principles_proofs.ml" 1256 37745 37756 "plugins/funind/functional_principles_proofs.ml" 1256 37745 37765
)
"plugins/funind/functional_principles_proofs.ml" 1274 38365 38375 "plugins/funind/functional_principles_proofs.ml" 1274 38365 38387
type(
  (Term.rel_declaration -> Names.Idset.elt) ->
  Term.rel_context -> Names.Idset.elt list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1274 38365 38388 "plugins/funind/functional_principles_proofs.ml" 1274 38365 38398
type(
  Term.rel_declaration -> Names.Idset.elt
)
ident(
  int_ref id_of_decl "plugins/funind/functional_principles_proofs.ml" 925 25942 25946 "plugins/funind/functional_principles_proofs.ml" 925 25942 25956
)
"plugins/funind/functional_principles_proofs.ml" 1274 38365 38399 "plugins/funind/functional_principles_proofs.ml" 1274 38365 38409
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1274 38365 38399 "plugins/funind/functional_principles_proofs.ml" 1274 38365 38418
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1274 38365 38374 "plugins/funind/functional_principles_proofs.ml" 1274 38365 38419
call(
  stack
)
type(
  Names.Idset.elt list
)
"plugins/funind/functional_principles_proofs.ml" 1275 38420 38430 "plugins/funind/functional_principles_proofs.ml" 1275 38420 38438
type(
  Names.identifier list -> Names.identifier list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1275 38420 38439 "plugins/funind/functional_principles_proofs.ml" 1275 38420 38446
type(
  Names.identifier list
)
ident(
  int_ref args_id "plugins/funind/functional_principles_proofs.ml" 1225 36855 36862 "plugins/funind/functional_principles_proofs.ml" 1225 36855 36869
)
"plugins/funind/functional_principles_proofs.ml" 1275 38420 38429 "plugins/funind/functional_principles_proofs.ml" 1275 38420 38447
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1273 38289 38327 "plugins/funind/functional_principles_proofs.ml" 1275 38420 38448
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1256 37745 37752 "plugins/funind/functional_principles_proofs.ml" 1275 38420 38448
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1250 37601 37608 "plugins/funind/functional_principles_proofs.ml" 1275 38420 38448
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1237 37142 37147 "plugins/funind/functional_principles_proofs.ml" 1276 38449 38455
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1277 38456 38461 "plugins/funind/functional_principles_proofs.ml" 1277 38456 38462
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1221 36631 36643 "plugins/funind/functional_principles_proofs.ml" 1221 36631 36644
)
"plugins/funind/functional_principles_proofs.ml" 1236 37128 37131 "plugins/funind/functional_principles_proofs.ml" 1277 38456 38462
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1226 36910 36913 "plugins/funind/functional_principles_proofs.ml" 1277 38456 38462
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1225 36855 36858 "plugins/funind/functional_principles_proofs.ml" 1277 38456 38462
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1223 36732 36735 "plugins/funind/functional_principles_proofs.ml" 1277 38456 38462
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1222 36694 36697 "plugins/funind/functional_principles_proofs.ml" 1277 38456 38462
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1221 36631 36638 "plugins/funind/functional_principles_proofs.ml" 1278 38463 38471
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1219 36555 36560 "plugins/funind/functional_principles_proofs.ml" 1279 38473 38479
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1279 38473 38480 "plugins/funind/functional_principles_proofs.ml" 1279 38473 38482
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/functional_principles_proofs.ml" 1211 36242 36252 "plugins/funind/functional_principles_proofs.ml" 1211 36242 36254
)
"plugins/funind/functional_principles_proofs.ml" 1218 36541 36544 "plugins/funind/functional_principles_proofs.ml" 1279 38473 38482
call(
  stack
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1217 36500 36503 "plugins/funind/functional_principles_proofs.ml" 1279 38473 38482
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1216 36451 36454 "plugins/funind/functional_principles_proofs.ml" 1279 38473 38482
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1215 36371 36374 "plugins/funind/functional_principles_proofs.ml" 1279 38473 38482
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1280 38483 38489 "plugins/funind/functional_principles_proofs.ml" 1280 38483 38498
type(
  exn
)
"plugins/funind/functional_principles_proofs.ml" 1281 38502 38509 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38516
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1281 38502 38519 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38522
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.min
)
"plugins/funind/functional_principles_proofs.ml" 1281 38502 38524 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38534
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1281 38502 38523 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38541
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1281 38502 38543 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38554
type(
  Term.rel_context -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1281 38502 38555 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38559
type(
  Term.rel_context
)
ident(
  int_ref ctxt "plugins/funind/functional_principles_proofs.ml" 1212 36258 36263 "plugins/funind/functional_principles_proofs.ml" 1212 36258 36267
)
"plugins/funind/functional_principles_proofs.ml" 1281 38502 38542 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38560
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1281 38502 38519 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38560
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1282 38564 38567 "plugins/funind/functional_principles_proofs.ml" 1282 38564 38577
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1284 38585 38592 "plugins/funind/functional_principles_proofs.ml" 1284 38585 38597
type(
  int -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclDO
)
"plugins/funind/functional_principles_proofs.ml" 1284 38585 38598 "plugins/funind/functional_principles_proofs.ml" 1284 38585 38605
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/functional_principles_proofs.ml" 1281 38502 38509 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38516
)
"plugins/funind/functional_principles_proofs.ml" 1284 38585 38606 "plugins/funind/functional_principles_proofs.ml" 1284 38585 38611
type(
  Proof_type.tactic
)
ident(
  ext_ref Tactics.intro
)
"plugins/funind/functional_principles_proofs.ml" 1284 38585 38592 "plugins/funind/functional_principles_proofs.ml" 1284 38585 38611
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1285 38613 38625 "plugins/funind/functional_principles_proofs.ml" 1285 38613 38626
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 1286 38676 38679 "plugins/funind/functional_principles_proofs.ml" 1326 39768 39774
)
"plugins/funind/functional_principles_proofs.ml" 1286 38676 38683 "plugins/funind/functional_principles_proofs.ml" 1286 38676 38687
type(
  Sign.named_context
)
"plugins/funind/functional_principles_proofs.ml" 1286 38676 38690 "plugins/funind/functional_principles_proofs.ml" 1286 38676 38700
type(
  int -> Proof_type.goal Tacmach.sigma -> Sign.named_context
)
ident(
  ext_ref Tacticals.nLastDecls
)
"plugins/funind/functional_principles_proofs.ml" 1286 38676 38701 "plugins/funind/functional_principles_proofs.ml" 1286 38676 38708
type(
  int
)
ident(
  int_ref nb_args "plugins/funind/functional_principles_proofs.ml" 1281 38502 38509 "plugins/funind/functional_principles_proofs.ml" 1281 38502 38516
)
"plugins/funind/functional_principles_proofs.ml" 1286 38676 38709 "plugins/funind/functional_principles_proofs.ml" 1286 38676 38710
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1285 38613 38625 "plugins/funind/functional_principles_proofs.ml" 1285 38613 38626
)
"plugins/funind/functional_principles_proofs.ml" 1286 38676 38690 "plugins/funind/functional_principles_proofs.ml" 1286 38676 38710
call(
  stack
)
type(
  Sign.named_context
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38721 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38728
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38731 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38739
type(
  (Term.named_declaration -> Names.identifier) ->
  Sign.named_context -> Names.identifier list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38746 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38748
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 1287 38714 38757 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38759
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38749 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38750
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38751 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38752
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38745 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38753
type(
  Term.named_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38757 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38759
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1287 38714 38746 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38748
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38740 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38760
type(
  Term.named_declaration -> Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38761 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38765
type(
  Sign.named_context
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 1286 38676 38683 "plugins/funind/functional_principles_proofs.ml" 1286 38676 38687
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38731 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38765
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1288 38769 38776 "plugins/funind/functional_principles_proofs.ml" 1288 38769 38785
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1290 38795 38816 "plugins/funind/functional_principles_proofs.ml" 1290 38795 38820
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1291 38822 38840 "plugins/funind/functional_principles_proofs.ml" 1291 38822 38842
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1293 38858 38867 "plugins/funind/functional_principles_proofs.ml" 1293 38858 38891
type(
  Reductionops.local_reduction_function
)
ident(
  ext_ref Reductionops.nf_betaiota
)
"plugins/funind/functional_principles_proofs.ml" 1293 38858 38892 "plugins/funind/functional_principles_proofs.ml" 1293 38858 38901
type(
  Evd.evar_map
)
ident(
  ext_ref Evd.empty
)
"plugins/funind/functional_principles_proofs.ml" 1294 38902 38907 "plugins/funind/functional_principles_proofs.ml" 1294 38902 38914
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Term.applist
)
"plugins/funind/functional_principles_proofs.ml" 1294 38902 38915 "plugins/funind/functional_principles_proofs.ml" 1294 38902 38937
type(
  Term.constr
)
ident(
  int_ref fbody_with_full_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31334 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31356
)
"plugins/funind/functional_principles_proofs.ml" 1295 38939 38946 "plugins/funind/functional_principles_proofs.ml" 1295 38939 38958
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_declaration list -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1295 38939 38959 "plugins/funind/functional_principles_proofs.ml" 1295 38939 38970
type(
  Term.rel_declaration -> Term.constr
)
ident(
  int_ref var_of_decl "plugins/funind/functional_principles_proofs.ml" 926 25991 25995 "plugins/funind/functional_principles_proofs.ml" 926 25991 26006
)
"plugins/funind/functional_principles_proofs.ml" 1295 38939 38971 "plugins/funind/functional_principles_proofs.ml" 1295 38939 38983
type(
  Term.rel_declaration list
)
ident(
  int_ref princ_params "plugins/funind/functional_principles_proofs.ml" 1069 31301 31321 "plugins/funind/functional_principles_proofs.ml" 1069 31301 31333
)
"plugins/funind/functional_principles_proofs.ml" 1295 38939 38945 "plugins/funind/functional_principles_proofs.ml" 1295 38939 38984
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1295 38939 38984 "plugins/funind/functional_principles_proofs.ml" 1295 38939 38985
type(
  Term.constr list -> Term.constr list -> Term.constr list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1296 38986 38995 "plugins/funind/functional_principles_proofs.ml" 1296 38986 39007
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1296 38986 39008 "plugins/funind/functional_principles_proofs.ml" 1296 38986 39013
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1296 38986 39014 "plugins/funind/functional_principles_proofs.ml" 1296 38986 39021
type(
  Names.identifier list
)
ident(
  int_ref args_id "plugins/funind/functional_principles_proofs.ml" 1287 38714 38721 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38728
)
"plugins/funind/functional_principles_proofs.ml" 1296 38986 38994 "plugins/funind/functional_principles_proofs.ml" 1296 38986 39022
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1295 38939 38945 "plugins/funind/functional_principles_proofs.ml" 1296 38986 39022
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1294 38902 38914 "plugins/funind/functional_principles_proofs.ml" 1297 39023 39029
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1294 38902 38906 "plugins/funind/functional_principles_proofs.ml" 1297 39023 39030
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1293 38858 38867 "plugins/funind/functional_principles_proofs.ml" 1297 39023 39030
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1298 39032 39049 "plugins/funind/functional_principles_proofs.ml" 1298 39032 39051
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1289 38788 38793 "plugins/funind/functional_principles_proofs.ml" 1299 39052 39058
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39072 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39077
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39080 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39089
type(
  Term.constr -> Names.constant
)
ident(
  ext_ref Term.destConst
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39091 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39094
type(
  Term.constr * Term.constr list -> Term.constr
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39096 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39109
type(
  Term.constr -> Term.constr * Term.constr list
)
ident(
  ext_ref Term.decompose_app
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39111 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39118
type(
  Term.constr list -> Term.constr
)
ident(
  ext_ref List.hd
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39120 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39128
type(
  Term.constr list -> Term.constr list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39129 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39137
type(
  Term.constr list
)
ident(
  int_ref pte_args "plugins/funind/functional_principles_proofs.ml" 1213 36319 36328 "plugins/funind/functional_principles_proofs.ml" 1213 36319 36336
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39119 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39138
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39110 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39139
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39095 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39140
call(
  stack
)
type(
  Term.constr * Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39090 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39141
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39080 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39141
call(
  stack
)
type(
  Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 1302 39145 39148 "plugins/funind/functional_principles_proofs.ml" 1302 39145 39158
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1303 39159 39165 "plugins/funind/functional_principles_proofs.ml" 1303 39159 39180
type(
  (Termops.occurrences * Names.evaluable_global_reference) list ->
  Proof_type.tactic
)
ident(
  ext_ref Tactics.unfold_in_concl
)
"plugins/funind/functional_principles_proofs.ml" 1303 39159 39183 "plugins/funind/functional_principles_proofs.ml" 1303 39159 39198
type(
  Termops.occurrences
)
ident(
  ext_ref Termops.all_occurrences
)
"plugins/funind/functional_principles_proofs.ml" 1303 39159 39218 "plugins/funind/functional_principles_proofs.ml" 1303 39159 39223
type(
  Names.constant
)
ident(
  int_ref fname "plugins/funind/functional_principles_proofs.ml" 1301 39065 39072 "plugins/funind/functional_principles_proofs.ml" 1301 39065 39077
)
"plugins/funind/functional_principles_proofs.ml" 1303 39159 39199 "plugins/funind/functional_principles_proofs.ml" 1303 39159 39223
type(
  Names.evaluable_global_reference
)
"plugins/funind/functional_principles_proofs.ml" 1303 39159 39182 "plugins/funind/functional_principles_proofs.ml" 1303 39159 39224
type(
  Termops.occurrences * Names.evaluable_global_reference
)
"plugins/funind/functional_principles_proofs.ml" 1303 39159 39181 "plugins/funind/functional_principles_proofs.ml" 1303 39159 39225
type(
  (Termops.occurrences * Names.evaluable_global_reference) list
)
"plugins/funind/functional_principles_proofs.ml" 1303 39159 39165 "plugins/funind/functional_principles_proofs.ml" 1303 39159 39225
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1304 39227 39237 "plugins/funind/functional_principles_proofs.ml" 1304 39227 39245
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  def do_prove "plugins/funind/functional_principles_proofs.ml" 1310 39366 39372 "plugins/funind/functional_principles_proofs.ml" 1324 39734 39760
)
"plugins/funind/functional_principles_proofs.ml" 1305 39248 39256 "plugins/funind/functional_principles_proofs.ml" 1305 39248 39267
type(
  bool ->
  Names.constant list ->
  pte_info Names.Idmap.t -> Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 664 18810 18814 "plugins/funind/functional_principles_proofs.ml" 664 18810 18825
)
"plugins/funind/functional_principles_proofs.ml" 1306 39268 39271 "plugins/funind/functional_principles_proofs.ml" 1306 39268 39288
type(
  bool
)
ident(
  int_ref interactive_proof "plugins/funind/functional_principles_proofs.ml" 1025 29939 29966 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29983
)
"plugins/funind/functional_principles_proofs.ml" 1307 39289 39293 "plugins/funind/functional_principles_proofs.ml" 1307 39289 39306
type(
  Names.constant array -> Names.constant list
)
ident(
  ext_ref Array.to_list
)
"plugins/funind/functional_principles_proofs.ml" 1307 39289 39307 "plugins/funind/functional_principles_proofs.ml" 1307 39289 39313
type(
  Names.constant array
)
ident(
  int_ref fnames "plugins/funind/functional_principles_proofs.ml" 1025 29939 29992 "plugins/funind/functional_principles_proofs.ml" 1025 29939 29998
)
"plugins/funind/functional_principles_proofs.ml" 1307 39289 39292 "plugins/funind/functional_principles_proofs.ml" 1307 39289 39314
call(
  stack
)
type(
  Names.constant list
)
"plugins/funind/functional_principles_proofs.ml" 1308 39315 39320 "plugins/funind/functional_principles_proofs.ml" 1308 39315 39329
type(
  (static_fix_info -> pte_info) ->
  static_fix_info Names.Idmap.t -> pte_info Names.Idmap.t
)
ident(
  ext_ref Names.Idmap.map
)
"plugins/funind/functional_principles_proofs.ml" 1308 39315 39330 "plugins/funind/functional_principles_proofs.ml" 1308 39315 39343
type(
  static_fix_info -> pte_info
)
ident(
  int_ref prove_rec_hyp "plugins/funind/functional_principles_proofs.ml" 895 25021 25025 "plugins/funind/functional_principles_proofs.ml" 895 25021 25038
)
"plugins/funind/functional_principles_proofs.ml" 1308 39315 39344 "plugins/funind/functional_principles_proofs.ml" 1308 39315 39355
type(
  static_fix_info Names.Idmap.t
)
ident(
  int_ref ptes_to_fix "plugins/funind/functional_principles_proofs.ml" 1107 32680 32688 "plugins/funind/functional_principles_proofs.ml" 1107 32680 32699
)
"plugins/funind/functional_principles_proofs.ml" 1308 39315 39319 "plugins/funind/functional_principles_proofs.ml" 1308 39315 39356
call(
  stack
)
type(
  pte_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1305 39248 39256 "plugins/funind/functional_principles_proofs.ml" 1308 39315 39356
call(
  stack
)
type(
  Term.types dynamic_info -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1310 39366 39376 "plugins/funind/functional_principles_proofs.ml" 1310 39366 39385
type(
  Names.identifier list ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def prove_tac "plugins/funind/functional_principles_proofs.ml" 1322 39636 39642 "plugins/funind/functional_principles_proofs.ml" 1324 39734 39760
)
"plugins/funind/functional_principles_proofs.ml" 1310 39366 39386 "plugins/funind/functional_principles_proofs.ml" 1310 39366 39394
type(
  Names.identifier list
)
ident(
  def branches "plugins/funind/functional_principles_proofs.ml" 1311 39398 39406 "plugins/funind/functional_principles_proofs.ml" 1320 39613 39626
)
"plugins/funind/functional_principles_proofs.ml" 1311 39398 39410 "plugins/funind/functional_principles_proofs.ml" 1311 39398 39419
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1312 39422 39427 "plugins/funind/functional_principles_proofs.ml" 1312 39422 39436
type(
  Term.constr dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 1288 38769 38776 "plugins/funind/functional_principles_proofs.ml" 1288 38769 38785
)
"plugins/funind/functional_principles_proofs.ml" 1313 39442 39460 "plugins/funind/functional_principles_proofs.ml" 1313 39442 39468
type(
  Names.identifier list
)
ident(
  int_ref branches "plugins/funind/functional_principles_proofs.ml" 1310 39366 39386 "plugins/funind/functional_principles_proofs.ml" 1310 39366 39394
)
"plugins/funind/functional_principles_proofs.ml" 1314 39470 39491 "plugins/funind/functional_principles_proofs.ml" 1314 39470 39502
type(
  Names.identifier list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1314 39470 39503 "plugins/funind/functional_principles_proofs.ml" 1314 39470 39511
type(
  Names.identifier list
)
ident(
  int_ref branches "plugins/funind/functional_principles_proofs.ml" 1310 39366 39386 "plugins/funind/functional_principles_proofs.ml" 1310 39366 39394
)
"plugins/funind/functional_principles_proofs.ml" 1314 39470 39491 "plugins/funind/functional_principles_proofs.ml" 1314 39470 39511
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1312 39422 39426 "plugins/funind/functional_principles_proofs.ml" 1315 39512 39517
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1317 39529 39538 "plugins/funind/functional_principles_proofs.ml" 1317 39529 39557
type(
  pte_info Names.Idmap.t ->
  (Term.types dynamic_info -> Proof_type.tactic) ->
  Term.types dynamic_info ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref clean_goal_with_heq "plugins/funind/functional_principles_proofs.ml" 533 15300 15304 "plugins/funind/functional_principles_proofs.ml" 533 15300 15323
)
"plugins/funind/functional_principles_proofs.ml" 1318 39558 39563 "plugins/funind/functional_principles_proofs.ml" 1318 39558 39572
type(
  (static_fix_info -> pte_info) ->
  static_fix_info Names.Idmap.t -> pte_info Names.Idmap.t
)
ident(
  ext_ref Names.Idmap.map
)
"plugins/funind/functional_principles_proofs.ml" 1318 39558 39573 "plugins/funind/functional_principles_proofs.ml" 1318 39558 39586
type(
  static_fix_info -> pte_info
)
ident(
  int_ref prove_rec_hyp "plugins/funind/functional_principles_proofs.ml" 895 25021 25025 "plugins/funind/functional_principles_proofs.ml" 895 25021 25038
)
"plugins/funind/functional_principles_proofs.ml" 1318 39558 39587 "plugins/funind/functional_principles_proofs.ml" 1318 39558 39598
type(
  static_fix_info Names.Idmap.t
)
ident(
  int_ref ptes_to_fix "plugins/funind/functional_principles_proofs.ml" 1107 32680 32688 "plugins/funind/functional_principles_proofs.ml" 1107 32680 32699
)
"plugins/funind/functional_principles_proofs.ml" 1318 39558 39562 "plugins/funind/functional_principles_proofs.ml" 1318 39558 39599
call(
  stack
)
type(
  pte_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1319 39600 39604 "plugins/funind/functional_principles_proofs.ml" 1319 39600 39612
type(
  Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref do_prove "plugins/funind/functional_principles_proofs.ml" 1304 39227 39237 "plugins/funind/functional_principles_proofs.ml" 1304 39227 39245
)
"plugins/funind/functional_principles_proofs.ml" 1320 39613 39617 "plugins/funind/functional_principles_proofs.ml" 1320 39613 39626
type(
  Term.types dynamic_info
)
ident(
  int_ref dyn_infos "plugins/funind/functional_principles_proofs.ml" 1311 39398 39410 "plugins/funind/functional_principles_proofs.ml" 1311 39398 39419
)
"plugins/funind/functional_principles_proofs.ml" 1317 39529 39538 "plugins/funind/functional_principles_proofs.ml" 1320 39613 39626
call(
  tail
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1311 39398 39406 "plugins/funind/functional_principles_proofs.ml" 1320 39613 39626
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1322 39636 39642 "plugins/funind/functional_principles_proofs.ml" 1322 39636 39668
type(
  (Names.Idset.elt list -> Proof_type.tactic) ->
  Names.Idset.elt list -> Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref instanciate_hyps_with_args "plugins/funind/functional_principles_proofs.ml" 615 17526 17530 "plugins/funind/functional_principles_proofs.ml" 615 17526 17556
)
"plugins/funind/functional_principles_proofs.ml" 1322 39636 39669 "plugins/funind/functional_principles_proofs.ml" 1322 39636 39678
type(
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  int_ref prove_tac "plugins/funind/functional_principles_proofs.ml" 1310 39366 39376 "plugins/funind/functional_principles_proofs.ml" 1310 39366 39385
)
"plugins/funind/functional_principles_proofs.ml" 1323 39679 39689 "plugins/funind/functional_principles_proofs.ml" 1323 39679 39701
type(
  (Term.rel_declaration -> Names.Idset.elt) ->
  Term.rel_context -> Names.Idset.elt list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1323 39679 39702 "plugins/funind/functional_principles_proofs.ml" 1323 39679 39712
type(
  Term.rel_declaration -> Names.Idset.elt
)
ident(
  int_ref id_of_decl "plugins/funind/functional_principles_proofs.ml" 925 25942 25946 "plugins/funind/functional_principles_proofs.ml" 925 25942 25956
)
"plugins/funind/functional_principles_proofs.ml" 1323 39679 39713 "plugins/funind/functional_principles_proofs.ml" 1323 39679 39723
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1046 30477 30485 "plugins/funind/functional_principles_proofs.ml" 1046 30477 30495
)
"plugins/funind/functional_principles_proofs.ml" 1323 39679 39713 "plugins/funind/functional_principles_proofs.ml" 1323 39679 39732
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1323 39679 39688 "plugins/funind/functional_principles_proofs.ml" 1323 39679 39733
call(
  stack
)
type(
  Names.Idset.elt list
)
"plugins/funind/functional_principles_proofs.ml" 1324 39734 39743 "plugins/funind/functional_principles_proofs.ml" 1324 39734 39751
type(
  Names.identifier list -> Names.identifier list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1324 39734 39752 "plugins/funind/functional_principles_proofs.ml" 1324 39734 39759
type(
  Names.identifier list
)
ident(
  int_ref args_id "plugins/funind/functional_principles_proofs.ml" 1287 38714 38721 "plugins/funind/functional_principles_proofs.ml" 1287 38714 38728
)
"plugins/funind/functional_principles_proofs.ml" 1324 39734 39742 "plugins/funind/functional_principles_proofs.ml" 1324 39734 39760
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1322 39636 39642 "plugins/funind/functional_principles_proofs.ml" 1324 39734 39760
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1310 39366 39372 "plugins/funind/functional_principles_proofs.ml" 1324 39734 39760
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1304 39227 39233 "plugins/funind/functional_principles_proofs.ml" 1324 39734 39760
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1303 39159 39164 "plugins/funind/functional_principles_proofs.ml" 1325 39761 39767
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1326 39768 39773 "plugins/funind/functional_principles_proofs.ml" 1326 39768 39774
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1285 38613 38625 "plugins/funind/functional_principles_proofs.ml" 1285 38613 38626
)
"plugins/funind/functional_principles_proofs.ml" 1302 39145 39148 "plugins/funind/functional_principles_proofs.ml" 1326 39768 39774
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1301 39065 39068 "plugins/funind/functional_principles_proofs.ml" 1326 39768 39774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1288 38769 38772 "plugins/funind/functional_principles_proofs.ml" 1326 39768 39774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1287 38714 38717 "plugins/funind/functional_principles_proofs.ml" 1326 39768 39774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1286 38676 38679 "plugins/funind/functional_principles_proofs.ml" 1326 39768 39774
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1285 38613 38620 "plugins/funind/functional_principles_proofs.ml" 1327 39775 39783
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1283 38578 38583 "plugins/funind/functional_principles_proofs.ml" 1328 39784 39790
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1329 39791 39794 "plugins/funind/functional_principles_proofs.ml" 1329 39791 39796
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/functional_principles_proofs.ml" 1211 36242 36252 "plugins/funind/functional_principles_proofs.ml" 1211 36242 36254
)
"plugins/funind/functional_principles_proofs.ml" 1282 38564 38567 "plugins/funind/functional_principles_proofs.ml" 1329 39791 39796
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1281 38502 38505 "plugins/funind/functional_principles_proofs.ml" 1329 39791 39796
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1214 36366 36367 "plugins/funind/functional_principles_proofs.ml" 1329 39791 39796
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1213 36319 36320 "plugins/funind/functional_principles_proofs.ml" 1329 39791 39796
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1212 36258 36259 "plugins/funind/functional_principles_proofs.ml" 1329 39791 39796
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1211 36242 36248 "plugins/funind/functional_principles_proofs.ml" 1329 39791 39796
type(
  Proof_type.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1331 39804 39808 "plugins/funind/functional_principles_proofs.ml" 1331 39804 39815
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 1332 39816 39822 "plugins/funind/functional_principles_proofs.ml" 1332 39816 39831
type(
  Proof_type.tactic
)
ident(
  int_ref first_tac "plugins/funind/functional_principles_proofs.ml" 1202 35740 35748 "plugins/funind/functional_principles_proofs.ml" 1202 35740 35757
)
"plugins/funind/functional_principles_proofs.ml" 1333 39832 39838 "plugins/funind/functional_principles_proofs.ml" 1333 39832 39856
type(
  Proof_type.tactic
)
ident(
  int_ref intros_after_fixes "plugins/funind/functional_principles_proofs.ml" 1210 36204 36212 "plugins/funind/functional_principles_proofs.ml" 1210 36204 36230
)
"plugins/funind/functional_principles_proofs.ml" 1334 39857 39863 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1026 30028 30034 "plugins/funind/functional_principles_proofs.ml" 1026 30028 30035
)
"plugins/funind/functional_principles_proofs.ml" 1331 39804 39808 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1210 36204 36208 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1202 35740 35744 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1184 35171 35175 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1107 32680 32684 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1106 32631 32635 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1103 32503 32507 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1069 31301 31305 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1068 31241 31245 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1067 31195 31199 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1066 31148 31152 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1065 31103 31107 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1054 30762 30766 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1046 30477 30481 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1041 30398 30402 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1029 30126 30130 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1028 30074 30078 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1027 30039 30043 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1026 30028 30030 "plugins/funind/functional_principles_proofs.ml" 1334 39857 39864
type(
  Proof_type.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1342 39918 39922 "plugins/funind/functional_principles_proofs.ml" 1342 39918 39926
type(
  Names.identifier
)
ident(
  def h_id "plugins/funind/functional_principles_proofs.ml" 1356 40252 40252 --
)
"plugins/funind/functional_principles_proofs.ml" 1342 39918 39929 "plugins/funind/functional_principles_proofs.ml" 1342 39918 39940
type(
  Names.identifier
)
ident(
  ext_ref Recdef.h_id
)
"plugins/funind/functional_principles_proofs.ml" 1343 39941 39945 "plugins/funind/functional_principles_proofs.ml" 1343 39941 39952
type(
  Names.identifier
)
ident(
  def hrec_id "plugins/funind/functional_principles_proofs.ml" 1356 40252 40252 --
)
"plugins/funind/functional_principles_proofs.ml" 1343 39941 39955 "plugins/funind/functional_principles_proofs.ml" 1343 39941 39969
type(
  Names.identifier
)
ident(
  ext_ref Recdef.hrec_id
)
"plugins/funind/functional_principles_proofs.ml" 1344 39970 39974 "plugins/funind/functional_principles_proofs.ml" 1344 39970 39984
type(
  unit -> Term.constr
)
ident(
  def acc_inv_id "plugins/funind/functional_principles_proofs.ml" 1356 40252 40252 --
)
"plugins/funind/functional_principles_proofs.ml" 1344 39970 39987 "plugins/funind/functional_principles_proofs.ml" 1344 39970 40004
type(
  unit -> Term.constr
)
ident(
  ext_ref Recdef.acc_inv_id
)
"plugins/funind/functional_principles_proofs.ml" 1345 40005 40009 "plugins/funind/functional_principles_proofs.ml" 1345 40005 40017
type(
  unit -> Libnames.global_reference
)
ident(
  def ltof_ref "plugins/funind/functional_principles_proofs.ml" 1356 40252 40252 --
)
"plugins/funind/functional_principles_proofs.ml" 1345 40005 40020 "plugins/funind/functional_principles_proofs.ml" 1345 40005 40035
type(
  unit -> Libnames.global_reference
)
ident(
  ext_ref Recdef.ltof_ref
)
"plugins/funind/functional_principles_proofs.ml" 1346 40036 40040 "plugins/funind/functional_principles_proofs.ml" 1346 40036 40047
type(
  unit -> Term.constr
)
ident(
  def acc_rel "plugins/funind/functional_principles_proofs.ml" 1356 40252 40252 --
)
"plugins/funind/functional_principles_proofs.ml" 1346 40036 40050 "plugins/funind/functional_principles_proofs.ml" 1346 40036 40064
type(
  unit -> Term.constr
)
ident(
  ext_ref Recdef.acc_rel
)
"plugins/funind/functional_principles_proofs.ml" 1347 40065 40069 "plugins/funind/functional_principles_proofs.ml" 1347 40065 40081
type(
  unit -> Term.constr
)
ident(
  def well_founded "plugins/funind/functional_principles_proofs.ml" 1356 40252 40252 --
)
"plugins/funind/functional_principles_proofs.ml" 1347 40065 40084 "plugins/funind/functional_principles_proofs.ml" 1347 40065 40103
type(
  unit -> Term.constr
)
ident(
  ext_ref Recdef.well_founded
)
"plugins/funind/functional_principles_proofs.ml" 1348 40104 40108 "plugins/funind/functional_principles_proofs.ml" 1348 40104 40116
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  def h_intros "plugins/funind/functional_principles_proofs.ml" 1356 40252 40252 --
)
"plugins/funind/functional_principles_proofs.ml" 1348 40104 40119 "plugins/funind/functional_principles_proofs.ml" 1348 40104 40134
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Recdef.h_intros
)
"plugins/funind/functional_principles_proofs.ml" 1349 40135 40139 "plugins/funind/functional_principles_proofs.ml" 1349 40135 40151
type(
  bool -> Term.constr list -> Proof_type.tactic
)
ident(
  def list_rewrite "plugins/funind/functional_principles_proofs.ml" 1356 40252 40252 --
)
"plugins/funind/functional_principles_proofs.ml" 1349 40135 40154 "plugins/funind/functional_principles_proofs.ml" 1349 40135 40173
type(
  bool -> Term.constr list -> Proof_type.tactic
)
ident(
  ext_ref Recdef.list_rewrite
)
"plugins/funind/functional_principles_proofs.ml" 1350 40174 40178 "plugins/funind/functional_principles_proofs.ml" 1350 40174 40207
type(
  Libnames.global_reference -> Names.evaluable_global_reference
)
ident(
  def evaluable_of_global_reference "plugins/funind/functional_principles_proofs.ml" 1356 40252 40252 --
)
"plugins/funind/functional_principles_proofs.ml" 1350 40174 40210 "plugins/funind/functional_principles_proofs.ml" 1350 40174 40246
type(
  Libnames.global_reference -> Names.evaluable_global_reference
)
ident(
  ext_ref Recdef.evaluable_of_global_reference
)
"plugins/funind/functional_principles_proofs.ml" 1356 40252 40256 "plugins/funind/functional_principles_proofs.ml" 1356 40252 40270
type(
  'a option ref -> Term.constr list -> Proof_type.tactic
)
ident(
  def prove_with_tcc "plugins/funind/functional_principles_proofs.ml" 1379 40931 40931 --
)
"plugins/funind/functional_principles_proofs.ml" 1356 40252 40271 "plugins/funind/functional_principles_proofs.ml" 1356 40252 40287
type(
  'a option ref
)
ident(
  def tcc_lemma_constr "plugins/funind/functional_principles_proofs.ml" 1356 40252 40288 "plugins/funind/functional_principles_proofs.ml" 1376 40920 40928
)
"plugins/funind/functional_principles_proofs.ml" 1356 40252 40288 "plugins/funind/functional_principles_proofs.ml" 1356 40252 40291
type(
  Term.constr list
)
ident(
  def eqs "plugins/funind/functional_principles_proofs.ml" 1356 40252 40292 "plugins/funind/functional_principles_proofs.ml" 1376 40920 40928
)
"plugins/funind/functional_principles_proofs.ml" 1357 40303 40311 "plugins/funind/functional_principles_proofs.ml" 1357 40303 40312
type(
  'a option ref -> 'a option
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1357 40303 40312 "plugins/funind/functional_principles_proofs.ml" 1357 40303 40328
type(
  'a option ref
)
ident(
  int_ref tcc_lemma_constr "plugins/funind/functional_principles_proofs.ml" 1356 40252 40271 "plugins/funind/functional_principles_proofs.ml" 1356 40252 40287
)
"plugins/funind/functional_principles_proofs.ml" 1357 40303 40311 "plugins/funind/functional_principles_proofs.ml" 1357 40303 40328
type(
  'a option
)
"plugins/funind/functional_principles_proofs.ml" 1358 40334 40340 "plugins/funind/functional_principles_proofs.ml" 1358 40334 40344
type(
  'a option
)
"plugins/funind/functional_principles_proofs.ml" 1358 40334 40348 "plugins/funind/functional_principles_proofs.ml" 1358 40334 40355
type(
  string -> Proof_type.tactic
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_proofs.ml" 1358 40334 40356 "plugins/funind/functional_principles_proofs.ml" 1358 40334 40373
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1358 40334 40348 "plugins/funind/functional_principles_proofs.ml" 1358 40334 40373
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1359 40374 40385 "plugins/funind/functional_principles_proofs.ml" 1359 40374 40390
type(
  'a
)
ident(
  def lemma "plugins/funind/functional_principles_proofs.ml" 1360 40394 40395 "plugins/funind/functional_principles_proofs.ml" 1376 40920 40928
)
"plugins/funind/functional_principles_proofs.ml" 1359 40374 40380 "plugins/funind/functional_principles_proofs.ml" 1359 40374 40390
type(
  'a option
)
"plugins/funind/functional_principles_proofs.ml" 1360 40394 40399 "plugins/funind/functional_principles_proofs.ml" 1360 40394 40402
type(
  Proof_type.goal Evd.sigma
)
ident(
  def gls "plugins/funind/functional_principles_proofs.ml" 1363 40525 40528 "plugins/funind/functional_principles_proofs.ml" 1376 40920 40928
)
"plugins/funind/functional_principles_proofs.ml" 1363 40525 40528 "plugins/funind/functional_principles_proofs.ml" 1363 40525 40538
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1368 40652 40659 "plugins/funind/functional_principles_proofs.ml" 1368 40652 40665
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTRY
)
"plugins/funind/functional_principles_proofs.ml" 1368 40652 40666 "plugins/funind/functional_principles_proofs.ml" 1368 40652 40678
type(
  bool -> Term.constr list -> Proof_type.tactic
)
ident(
  int_ref list_rewrite "plugins/funind/functional_principles_proofs.ml" 1349 40135 40139 "plugins/funind/functional_principles_proofs.ml" 1349 40135 40151
)
"plugins/funind/functional_principles_proofs.ml" 1368 40652 40679 "plugins/funind/functional_principles_proofs.ml" 1368 40652 40683
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1368 40652 40684 "plugins/funind/functional_principles_proofs.ml" 1368 40652 40687
type(
  Term.constr list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1356 40252 40288 "plugins/funind/functional_principles_proofs.ml" 1356 40252 40291
)
"plugins/funind/functional_principles_proofs.ml" 1368 40652 40665 "plugins/funind/functional_principles_proofs.ml" 1368 40652 40688
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1368 40652 40659 "plugins/funind/functional_principles_proofs.ml" 1368 40652 40688
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1374 40861 40868 "plugins/funind/functional_principles_proofs.ml" 1374 40861 40883
type(
  bool ->
  bool * int ->
  Term.constr list -> Auto.hint_db_name list option -> Proof_type.tactic
)
ident(
  ext_ref Eauto.gen_eauto
)
"plugins/funind/functional_principles_proofs.ml" 1374 40861 40884 "plugins/funind/functional_principles_proofs.ml" 1374 40861 40889
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1374 40861 40891 "plugins/funind/functional_principles_proofs.ml" 1374 40861 40896
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1374 40861 40897 "plugins/funind/functional_principles_proofs.ml" 1374 40861 40898
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1374 40861 40890 "plugins/funind/functional_principles_proofs.ml" 1374 40861 40899
type(
  bool * int
)
"plugins/funind/functional_principles_proofs.ml" 1374 40861 40900 "plugins/funind/functional_principles_proofs.ml" 1374 40861 40902
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1374 40861 40909 "plugins/funind/functional_principles_proofs.ml" 1374 40861 40911
type(
  Auto.hint_db_name list
)
"plugins/funind/functional_principles_proofs.ml" 1374 40861 40903 "plugins/funind/functional_principles_proofs.ml" 1374 40861 40912
type(
  Auto.hint_db_name list option
)
"plugins/funind/functional_principles_proofs.ml" 1374 40861 40868 "plugins/funind/functional_principles_proofs.ml" 1374 40861 40912
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1364 40539 40544 "plugins/funind/functional_principles_proofs.ml" 1375 40913 40919
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1376 40920 40925 "plugins/funind/functional_principles_proofs.ml" 1376 40920 40928
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref gls "plugins/funind/functional_principles_proofs.ml" 1360 40394 40399 "plugins/funind/functional_principles_proofs.ml" 1360 40394 40402
)
"plugins/funind/functional_principles_proofs.ml" 1363 40525 40528 "plugins/funind/functional_principles_proofs.ml" 1376 40920 40928
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1360 40394 40395 "plugins/funind/functional_principles_proofs.ml" 1376 40920 40928
type(
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1357 40303 40305 "plugins/funind/functional_principles_proofs.ml" 1376 40920 40928
type(
  Proof_type.tactic
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1379 40931 40935 "plugins/funind/functional_principles_proofs.ml" 1379 40931 40959
type(
  Names.identifier -> Names.identifier list -> Proof_type.tactic
)
ident(
  def backtrack_eqs_until_hrec "plugins/funind/functional_principles_proofs.ml" 1399 41521 41521 --
)
"plugins/funind/functional_principles_proofs.ml" 1379 40931 40960 "plugins/funind/functional_principles_proofs.ml" 1379 40931 40964
type(
  Names.identifier
)
ident(
  def hrec "plugins/funind/functional_principles_proofs.ml" 1379 40931 40965 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
)
"plugins/funind/functional_principles_proofs.ml" 1379 40931 40965 "plugins/funind/functional_principles_proofs.ml" 1379 40931 40968
type(
  Names.identifier list
)
ident(
  def eqs "plugins/funind/functional_principles_proofs.ml" 1379 40931 40969 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
)
"plugins/funind/functional_principles_proofs.ml" 1380 40980 40986 "plugins/funind/functional_principles_proofs.ml" 1380 40980 40989
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gls "plugins/funind/functional_principles_proofs.ml" 1381 40993 40997 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
)
"plugins/funind/functional_principles_proofs.ml" 1381 40993 41001 "plugins/funind/functional_principles_proofs.ml" 1381 40993 41004
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1381 40993 41007 "plugins/funind/functional_principles_proofs.ml" 1381 40993 41015
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1381 40993 41016 "plugins/funind/functional_principles_proofs.ml" 1381 40993 41021
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1381 40993 41022 "plugins/funind/functional_principles_proofs.ml" 1381 40993 41025
type(
  Names.identifier list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1379 40931 40965 "plugins/funind/functional_principles_proofs.ml" 1379 40931 40968
)
"plugins/funind/functional_principles_proofs.ml" 1381 40993 41007 "plugins/funind/functional_principles_proofs.ml" 1381 40993 41025
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1382 41029 41037 "plugins/funind/functional_principles_proofs.ml" 1382 41029 41044
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1383 41047 41053 "plugins/funind/functional_principles_proofs.ml" 1383 41047 41061
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclFIRST
)
"plugins/funind/functional_principles_proofs.ml" 1383 41047 41063 "plugins/funind/functional_principles_proofs.ml" 1383 41047 41071
type(
  (Term.constr -> Tacmach.tactic) ->
  Term.constr list -> Proof_type.tactic list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1383 41047 41072 "plugins/funind/functional_principles_proofs.ml" 1383 41047 41090
call(
  tail
)
type(
  ?tac:Tacmach.tactic * Equality.conditions -> Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Equality.rewriteRL
)
"plugins/funind/functional_principles_proofs.ml" 1383 41047 41091 "plugins/funind/functional_principles_proofs.ml" 1383 41047 41094
type(
  Term.constr list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1381 40993 41001 "plugins/funind/functional_principles_proofs.ml" 1381 40993 41004
)
"plugins/funind/functional_principles_proofs.ml" 1383 41047 41062 "plugins/funind/functional_principles_proofs.ml" 1383 41047 41096
call(
  stack
)
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1383 41047 41053 "plugins/funind/functional_principles_proofs.ml" 1383 41047 41096
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41112 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41113
type(
  (Names.name * Term.constr) list
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41114 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41124
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41112 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41124
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41128 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41142
type(
  Term.types -> (Names.name * Term.constr) list * Term.constr
)
ident(
  ext_ref Term.decompose_prod
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41144 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41154
type(
  Proof_type.goal Tacmach.sigma -> Term.constr -> Term.types
)
ident(
  ext_ref Tacmach.pf_type_of
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41155 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41158
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gls "plugins/funind/functional_principles_proofs.ml" 1380 40980 40986 "plugins/funind/functional_principles_proofs.ml" 1380 40980 40989
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41160 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41165
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41166 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41170
type(
  Names.identifier
)
ident(
  int_ref hrec "plugins/funind/functional_principles_proofs.ml" 1379 40931 40960 "plugins/funind/functional_principles_proofs.ml" 1379 40931 40964
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41159 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41171
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41143 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41172
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41128 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41172
call(
  stack
)
type(
  (Names.name * Term.constr) list * Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1386 41176 41184 "plugins/funind/functional_principles_proofs.ml" 1386 41176 41189
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1386 41176 41192 "plugins/funind/functional_principles_proofs.ml" 1386 41176 41202
type(
  Term.constr array -> Term.constr
)
ident(
  ext_ref Util.array_last
)
"plugins/funind/functional_principles_proofs.ml" 1386 41176 41204 "plugins/funind/functional_principles_proofs.ml" 1386 41176 41207
type(
  Term.constr * Term.constr array -> Term.constr array
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/functional_principles_proofs.ml" 1386 41176 41209 "plugins/funind/functional_principles_proofs.ml" 1386 41176 41216
type(
  Term.constr -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 1386 41176 41217 "plugins/funind/functional_principles_proofs.ml" 1386 41176 41227
type(
  Term.constr
)
ident(
  int_ref hrec_concl "plugins/funind/functional_principles_proofs.ml" 1385 41104 41114 "plugins/funind/functional_principles_proofs.ml" 1385 41104 41124
)
"plugins/funind/functional_principles_proofs.ml" 1386 41176 41208 "plugins/funind/functional_principles_proofs.ml" 1386 41176 41228
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1386 41176 41203 "plugins/funind/functional_principles_proofs.ml" 1386 41176 41229
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1386 41176 41192 "plugins/funind/functional_principles_proofs.ml" 1386 41176 41229
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1387 41233 41241 "plugins/funind/functional_principles_proofs.ml" 1387 41233 41242
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1387 41233 41247 "plugins/funind/functional_principles_proofs.ml" 1387 41233 41250
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Pervasives.fst
)
"plugins/funind/functional_principles_proofs.ml" 1387 41233 41252 "plugins/funind/functional_principles_proofs.ml" 1387 41233 41259
type(
  Term.constr -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 1387 41233 41260 "plugins/funind/functional_principles_proofs.ml" 1387 41233 41265
type(
  Term.constr
)
ident(
  int_ref f_app "plugins/funind/functional_principles_proofs.ml" 1386 41176 41184 "plugins/funind/functional_principles_proofs.ml" 1386 41176 41189
)
"plugins/funind/functional_principles_proofs.ml" 1387 41233 41251 "plugins/funind/functional_principles_proofs.ml" 1387 41233 41266
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1387 41233 41246 "plugins/funind/functional_principles_proofs.ml" 1387 41233 41267
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1388 41271 41283 "plugins/funind/functional_principles_proofs.ml" 1388 41271 41292
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1389 41304 41314 "plugins/funind/functional_principles_proofs.ml" 1389 41304 41315
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 1390 41319 41320 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41492
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41324 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41329
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41332 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41342
type(
  Term.constr array -> Term.constr
)
ident(
  ext_ref Util.array_last
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41344 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41347
type(
  Term.constr * Term.constr array -> Term.constr array
)
ident(
  ext_ref Pervasives.snd
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41349 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41356
type(
  Term.types -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41358 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41366
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41367 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41368
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1389 41304 41314 "plugins/funind/functional_principles_proofs.ml" 1389 41304 41315
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41357 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41369
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41348 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41370
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41343 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41371
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41332 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41371
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1391 41375 41382 "plugins/funind/functional_principles_proofs.ml" 1391 41375 41394
type(
  Term.constr -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1391 41375 41395 "plugins/funind/functional_principles_proofs.ml" 1391 41375 41400
type(
  Term.constr
)
ident(
  int_ref f_app "plugins/funind/functional_principles_proofs.ml" 1390 41319 41324 "plugins/funind/functional_principles_proofs.ml" 1390 41319 41329
)
"plugins/funind/functional_principles_proofs.ml" 1391 41375 41382 "plugins/funind/functional_principles_proofs.ml" 1391 41375 41400
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41415 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41417
type(
  Term.constr
)
ident(
  def f' "plugins/funind/functional_principles_proofs.ml" 1392 41406 41421 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41454
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41418 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41419
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41411 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41420
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41426 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41435
type(
  Term.constr -> Term.constr -> bool
)
ident(
  ext_ref Termops.eq_constr
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41436 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41438
type(
  Term.constr
)
ident(
  int_ref f' "plugins/funind/functional_principles_proofs.ml" 1392 41406 41415 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41417
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41439 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41440
type(
  Term.constr
)
ident(
  int_ref f "plugins/funind/functional_principles_proofs.ml" 1387 41233 41241 "plugins/funind/functional_principles_proofs.ml" 1387 41233 41242
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41426 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41440
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41444 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41452
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41453 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41454
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1389 41304 41314 "plugins/funind/functional_principles_proofs.ml" 1389 41304 41315
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41444 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41454
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1392 41406 41421 "plugins/funind/functional_principles_proofs.ml" 1392 41406 41454
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1393 41455 41460 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41461
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1393 41455 41465 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41472
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 1393 41455 41473 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41480
type(
  Proof_type.tactic
)
ident(
  int_ref rewrite "plugins/funind/functional_principles_proofs.ml" 1382 41029 41037 "plugins/funind/functional_principles_proofs.ml" 1382 41029 41044
)
"plugins/funind/functional_principles_proofs.ml" 1393 41455 41481 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41490
type(
  Proof_type.tactic
)
ident(
  int_ref backtrack "plugins/funind/functional_principles_proofs.ml" 1388 41271 41283 "plugins/funind/functional_principles_proofs.ml" 1388 41271 41292
)
"plugins/funind/functional_principles_proofs.ml" 1393 41455 41491 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41492
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1389 41304 41314 "plugins/funind/functional_principles_proofs.ml" 1389 41304 41315
)
"plugins/funind/functional_principles_proofs.ml" 1393 41455 41465 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41492
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1391 41375 41376 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41492
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1390 41319 41320 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41492
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1389 41304 41310 "plugins/funind/functional_principles_proofs.ml" 1393 41455 41492
type(
  Proof_type.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1395 41500 41504 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41513
type(
  Proof_type.tactic
)
ident(
  int_ref backtrack "plugins/funind/functional_principles_proofs.ml" 1388 41271 41283 "plugins/funind/functional_principles_proofs.ml" 1388 41271 41292
)
"plugins/funind/functional_principles_proofs.ml" 1395 41500 41514 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gls "plugins/funind/functional_principles_proofs.ml" 1380 40980 40986 "plugins/funind/functional_principles_proofs.ml" 1380 40980 40989
)
"plugins/funind/functional_principles_proofs.ml" 1395 41500 41504 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1388 41271 41275 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1387 41233 41237 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1386 41176 41180 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1385 41104 41108 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1382 41029 41033 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1381 40993 40997 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1380 40980 40982 "plugins/funind/functional_principles_proofs.ml" 1395 41500 41517
type(
  Proof_type.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1399 41521 41525 "plugins/funind/functional_principles_proofs.ml" 1399 41521 41537
type(
  'a list -> 'a Tacexpr.gclause
)
ident(
  def build_clause "plugins/funind/functional_principles_proofs.ml" 1409 41725 41725 --
)
"plugins/funind/functional_principles_proofs.ml" 1399 41521 41538 "plugins/funind/functional_principles_proofs.ml" 1399 41521 41541
type(
  'a list
)
ident(
  def eqs "plugins/funind/functional_principles_proofs.ml" 1400 41544 41546 "plugins/funind/functional_principles_proofs.ml" 1407 41720 41723
)
"plugins/funind/functional_principles_proofs.ml" 1402 41569 41581 "plugins/funind/functional_principles_proofs.ml" 1402 41569 41589
type(
  ('a -> 'a Tacexpr.raw_hyp_location) ->
  'a list -> 'a Tacexpr.raw_hyp_location list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1403 41590 41602 "plugins/funind/functional_principles_proofs.ml" 1403 41590 41604
type(
  'a
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 1403 41590 41608 "plugins/funind/functional_principles_proofs.ml" 1403 41590 41647
)
"plugins/funind/functional_principles_proofs.ml" 1403 41590 41609 "plugins/funind/functional_principles_proofs.ml" 1403 41590 41637
type(
  Rawterm.occurrences_expr
)
ident(
  ext_ref Rawterm.all_occurrences_expr
)
"plugins/funind/functional_principles_proofs.ml" 1403 41590 41638 "plugins/funind/functional_principles_proofs.ml" 1403 41590 41640
type(
  'a
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1403 41590 41602 "plugins/funind/functional_principles_proofs.ml" 1403 41590 41604
)
"plugins/funind/functional_principles_proofs.ml" 1403 41590 41608 "plugins/funind/functional_principles_proofs.ml" 1403 41590 41641
type(
  'a Rawterm.with_occurrences
)
"plugins/funind/functional_principles_proofs.ml" 1403 41590 41642 "plugins/funind/functional_principles_proofs.ml" 1403 41590 41647
type(
  Termops.hyp_location_flag
)
"plugins/funind/functional_principles_proofs.ml" 1403 41590 41608 "plugins/funind/functional_principles_proofs.ml" 1403 41590 41647
type(
  'a Tacexpr.raw_hyp_location
)
"plugins/funind/functional_principles_proofs.ml" 1403 41590 41597 "plugins/funind/functional_principles_proofs.ml" 1403 41590 41648
type(
  'a -> 'a Tacexpr.raw_hyp_location
)
"plugins/funind/functional_principles_proofs.ml" 1404 41649 41656 "plugins/funind/functional_principles_proofs.ml" 1404 41649 41659
type(
  'a list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1399 41521 41538 "plugins/funind/functional_principles_proofs.ml" 1399 41521 41541
)
"plugins/funind/functional_principles_proofs.ml" 1402 41569 41580 "plugins/funind/functional_principles_proofs.ml" 1405 41660 41665
call(
  stack
)
type(
  'a Tacexpr.raw_hyp_location list
)
"plugins/funind/functional_principles_proofs.ml" 1402 41569 41575 "plugins/funind/functional_principles_proofs.ml" 1405 41660 41665
type(
  'a Tacexpr.raw_hyp_location list option
)
"plugins/funind/functional_principles_proofs.ml" 1406 41667 41692 "plugins/funind/functional_principles_proofs.ml" 1406 41667 41719
type(
  Rawterm.occurrences_expr
)
ident(
  ext_ref Rawterm.no_occurrences_expr
)
"plugins/funind/functional_principles_proofs.ml" 1400 41544 41546 "plugins/funind/functional_principles_proofs.ml" 1407 41720 41723
type(
  'a Tacexpr.gclause
)
"plugins/funind/functional_principles_proofs.ml" 1409 41725 41733 "plugins/funind/functional_principles_proofs.ml" 1409 41725 41751
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  def rewrite_eqs_in_eqs "plugins/funind/functional_principles_proofs.ml" 1409 41725 41725 --
)
"plugins/funind/functional_principles_proofs.ml" 1409 41725 41752 "plugins/funind/functional_principles_proofs.ml" 1409 41725 41755
type(
  Names.identifier list
)
ident(
  def eqs "plugins/funind/functional_principles_proofs.ml" 1410 41758 41760 "plugins/funind/functional_principles_proofs.ml" 1424 42107 42136
)
"plugins/funind/functional_principles_proofs.ml" 1410 41758 41766 "plugins/funind/functional_principles_proofs.ml" 1410 41758 41769
type(
  Names.identifier list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1409 41725 41752 "plugins/funind/functional_principles_proofs.ml" 1409 41725 41755
)
"plugins/funind/functional_principles_proofs.ml" 1411 41775 41781 "plugins/funind/functional_principles_proofs.ml" 1411 41775 41783
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1411 41775 41787 "plugins/funind/functional_principles_proofs.ml" 1411 41775 41795
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/functional_principles_proofs.ml" 1412 41796 41802 "plugins/funind/functional_principles_proofs.ml" 1412 41796 41804
type(
  Names.identifier
)
ident(
  def eq "plugins/funind/functional_principles_proofs.ml" 1414 41814 41817 "plugins/funind/functional_principles_proofs.ml" 1424 42107 42136
)
"plugins/funind/functional_principles_proofs.ml" 1412 41796 41806 "plugins/funind/functional_principles_proofs.ml" 1412 41796 41809
type(
  Names.identifier list
)
ident(
  def eqs "plugins/funind/functional_principles_proofs.ml" 1414 41814 41817 "plugins/funind/functional_principles_proofs.ml" 1424 42107 42136
)
"plugins/funind/functional_principles_proofs.ml" 1412 41796 41802 "plugins/funind/functional_principles_proofs.ml" 1412 41796 41809
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1414 41814 41817 "plugins/funind/functional_principles_proofs.ml" 1414 41814 41824
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 1415 41825 41831 "plugins/funind/functional_principles_proofs.ml" 1415 41825 41837
type(
  (Names.identifier -> Proof_type.tactic) ->
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclMAP
)
"plugins/funind/functional_principles_proofs.ml" 1416 41838 41851 "plugins/funind/functional_principles_proofs.ml" 1416 41838 41853
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 1416 41838 41854 "plugins/funind/functional_principles_proofs.ml" 1420 42069 42077
)
"plugins/funind/functional_principles_proofs.ml" 1416 41838 41854 "plugins/funind/functional_principles_proofs.ml" 1416 41838 41856
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/functional_principles_proofs.ml" 1417 41860 41864 "plugins/funind/functional_principles_proofs.ml" 1420 42069 42077
)
"plugins/funind/functional_principles_proofs.ml" 1417 41860 41864 "plugins/funind/functional_principles_proofs.ml" 1417 41860 41875
type(
  string ->
  Proof_type.tactic ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 1418 41876 41883 "plugins/funind/functional_principles_proofs.ml" 1418 41876 41897
type(
  (string -> string -> string, unit, string) format ->
  string -> string -> string
)
ident(
  ext_ref Format.sprintf
)
"plugins/funind/functional_principles_proofs.ml" 1418 41876 41898 "plugins/funind/functional_principles_proofs.ml" 1418 41876 41917
type(
  (string -> string -> string, unit, string) format
)
"plugins/funind/functional_principles_proofs.ml" 1418 41876 41919 "plugins/funind/functional_principles_proofs.ml" 1418 41876 41931
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/functional_principles_proofs.ml" 1418 41876 41932 "plugins/funind/functional_principles_proofs.ml" 1418 41876 41934
type(
  Names.identifier
)
ident(
  int_ref eq "plugins/funind/functional_principles_proofs.ml" 1412 41796 41802 "plugins/funind/functional_principles_proofs.ml" 1412 41796 41804
)
"plugins/funind/functional_principles_proofs.ml" 1418 41876 41918 "plugins/funind/functional_principles_proofs.ml" 1418 41876 41935
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1418 41876 41937 "plugins/funind/functional_principles_proofs.ml" 1418 41876 41949
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/functional_principles_proofs.ml" 1418 41876 41950 "plugins/funind/functional_principles_proofs.ml" 1418 41876 41952
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1416 41838 41851 "plugins/funind/functional_principles_proofs.ml" 1416 41838 41853
)
"plugins/funind/functional_principles_proofs.ml" 1418 41876 41936 "plugins/funind/functional_principles_proofs.ml" 1418 41876 41953
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1418 41876 41882 "plugins/funind/functional_principles_proofs.ml" 1418 41876 41954
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 41962 "plugins/funind/functional_principles_proofs.ml" 1419 41955 41968
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTRY
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 41970 "plugins/funind/functional_principles_proofs.ml" 1419 41955 41997
type(
  Equality.orientation ->
  Termops.occurrences ->
  Equality.dep_proof_flag ->
  ?tac:Tacmach.tactic * Equality.conditions ->
  Names.identifier -> Term.constr -> Tacexpr.evars_flag -> Tacmach.tactic
)
ident(
  ext_ref Equality.general_rewrite_in
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 41998 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42002
type(
  Equality.orientation
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 42003 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42018
type(
  Termops.occurrences
)
ident(
  ext_ref Termops.all_occurrences
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 42042 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42046
type(
  Equality.dep_proof_flag
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 42047 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42049
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1416 41838 41851 "plugins/funind/functional_principles_proofs.ml" 1416 41838 41853
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 42051 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42056
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 42057 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42059
type(
  Names.identifier
)
ident(
  int_ref eq "plugins/funind/functional_principles_proofs.ml" 1412 41796 41802 "plugins/funind/functional_principles_proofs.ml" 1412 41796 41804
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 42050 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42060
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 42061 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42066
type(
  Tacexpr.evars_flag
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 41969 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42067
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1419 41955 41961 "plugins/funind/functional_principles_proofs.ml" 1419 41955 42068
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1420 42069 42075 "plugins/funind/functional_principles_proofs.ml" 1420 42069 42077
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/functional_principles_proofs.ml" 1416 41838 41854 "plugins/funind/functional_principles_proofs.ml" 1416 41838 41856
)
"plugins/funind/functional_principles_proofs.ml" 1417 41860 41864 "plugins/funind/functional_principles_proofs.ml" 1420 42069 42077
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1416 41838 41846 "plugins/funind/functional_principles_proofs.ml" 1421 42078 42087
type(
  Names.identifier -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1422 42088 42096 "plugins/funind/functional_principles_proofs.ml" 1422 42088 42099
type(
  Names.identifier list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1412 41796 41806 "plugins/funind/functional_principles_proofs.ml" 1412 41796 41809
)
"plugins/funind/functional_principles_proofs.ml" 1415 41825 41830 "plugins/funind/functional_principles_proofs.ml" 1423 42100 42106
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1424 42107 42113 "plugins/funind/functional_principles_proofs.ml" 1424 42107 42131
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref rewrite_eqs_in_eqs "plugins/funind/functional_principles_proofs.ml" 1409 41725 41733 "plugins/funind/functional_principles_proofs.ml" 1409 41725 41751
)
"plugins/funind/functional_principles_proofs.ml" 1424 42107 42132 "plugins/funind/functional_principles_proofs.ml" 1424 42107 42135
type(
  Names.identifier list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1412 41796 41806 "plugins/funind/functional_principles_proofs.ml" 1412 41796 41809
)
"plugins/funind/functional_principles_proofs.ml" 1424 42107 42112 "plugins/funind/functional_principles_proofs.ml" 1424 42107 42136
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1414 41814 41817 "plugins/funind/functional_principles_proofs.ml" 1424 42107 42136
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1410 41758 41760 "plugins/funind/functional_principles_proofs.ml" 1424 42107 42136
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1426 42138 42142 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42160
type(
  bool ->
  Term.constr Lazy.t ->
  Names.identifier ->
  Names.identifier list -> Names.identifier list -> Proof_type.tactic
)
ident(
  def new_prove_with_tcc "plugins/funind/functional_principles_proofs.ml" 1467 43173 43173 --
)
"plugins/funind/functional_principles_proofs.ml" 1426 42138 42161 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42167
type(
  bool
)
ident(
  def is_mes "plugins/funind/functional_principles_proofs.ml" 1426 42138 42168 "plugins/funind/functional_principles_proofs.ml" 1464 43161 43170
)
"plugins/funind/functional_principles_proofs.ml" 1426 42138 42168 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42175
type(
  Term.constr Lazy.t
)
ident(
  def acc_inv "plugins/funind/functional_principles_proofs.ml" 1426 42138 42176 "plugins/funind/functional_principles_proofs.ml" 1464 43161 43170
)
"plugins/funind/functional_principles_proofs.ml" 1426 42138 42176 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42180
type(
  Names.identifier
)
ident(
  def hrec "plugins/funind/functional_principles_proofs.ml" 1426 42138 42181 "plugins/funind/functional_principles_proofs.ml" 1464 43161 43170
)
"plugins/funind/functional_principles_proofs.ml" 1426 42138 42181 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42189
type(
  Names.identifier list
)
ident(
  def tcc_hyps "plugins/funind/functional_principles_proofs.ml" 1426 42138 42190 "plugins/funind/functional_principles_proofs.ml" 1464 43161 43170
)
"plugins/funind/functional_principles_proofs.ml" 1426 42138 42190 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42193
type(
  Names.identifier list
)
ident(
  def eqs "plugins/funind/functional_principles_proofs.ml" 1426 42138 42194 "plugins/funind/functional_principles_proofs.ml" 1464 43161 43170
)
"plugins/funind/functional_principles_proofs.ml" 1427 42205 42211 "plugins/funind/functional_principles_proofs.ml" 1427 42205 42214
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gls "plugins/funind/functional_principles_proofs.ml" 1428 42218 42222 "plugins/funind/functional_principles_proofs.ml" 1464 43161 43170
)
"plugins/funind/functional_principles_proofs.ml" 1428 42218 42223 "plugins/funind/functional_principles_proofs.ml" 1428 42218 42233
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1430 42243 42245 "plugins/funind/functional_principles_proofs.ml" 1430 42243 42269
type(
  Names.identifier -> Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref backtrack_eqs_until_hrec "plugins/funind/functional_principles_proofs.ml" 1379 40931 40935 "plugins/funind/functional_principles_proofs.ml" 1379 40931 40959
)
"plugins/funind/functional_principles_proofs.ml" 1430 42243 42270 "plugins/funind/functional_principles_proofs.ml" 1430 42243 42274
type(
  Names.identifier
)
ident(
  int_ref hrec "plugins/funind/functional_principles_proofs.ml" 1426 42138 42176 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42180
)
"plugins/funind/functional_principles_proofs.ml" 1430 42243 42275 "plugins/funind/functional_principles_proofs.ml" 1430 42243 42278
type(
  Names.identifier list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1426 42138 42190 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42193
)
"plugins/funind/functional_principles_proofs.ml" 1430 42243 42245 "plugins/funind/functional_principles_proofs.ml" 1430 42243 42278
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1432 42361 42364 "plugins/funind/functional_principles_proofs.ml" 1432 42361 42372
type(
  Proof_type.tactic -> Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENS
)
"plugins/funind/functional_principles_proofs.ml" 1433 42414 42420 "plugins/funind/functional_principles_proofs.ml" 1433 42414 42425
type(
  Term.constr -> Proof_type.tactic
)
ident(
  ext_ref Tactics.apply
)
"plugins/funind/functional_principles_proofs.ml" 1433 42414 42427 "plugins/funind/functional_principles_proofs.ml" 1433 42414 42432
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1433 42414 42433 "plugins/funind/functional_principles_proofs.ml" 1433 42414 42437
type(
  Names.identifier
)
ident(
  int_ref hrec "plugins/funind/functional_principles_proofs.ml" 1426 42138 42176 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42180
)
"plugins/funind/functional_principles_proofs.ml" 1433 42414 42426 "plugins/funind/functional_principles_proofs.ml" 1433 42414 42438
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1433 42414 42419 "plugins/funind/functional_principles_proofs.ml" 1433 42414 42439
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1434 42440 42447 "plugins/funind/functional_principles_proofs.ml" 1434 42440 42457
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1436 42462 42466 "plugins/funind/functional_principles_proofs.ml" 1436 42462 42470
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tactics.keep
)
"plugins/funind/functional_principles_proofs.ml" 1436 42462 42472 "plugins/funind/functional_principles_proofs.ml" 1436 42462 42480
type(
  Names.identifier list
)
ident(
  int_ref tcc_hyps "plugins/funind/functional_principles_proofs.ml" 1426 42138 42181 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42189
)
"plugins/funind/functional_principles_proofs.ml" 1436 42462 42480 "plugins/funind/functional_principles_proofs.ml" 1436 42462 42481
type(
  Names.identifier list -> Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1436 42462 42481 "plugins/funind/functional_principles_proofs.ml" 1436 42462 42484
type(
  Names.identifier list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1426 42138 42190 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42193
)
"plugins/funind/functional_principles_proofs.ml" 1436 42462 42471 "plugins/funind/functional_principles_proofs.ml" 1436 42462 42485
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1436 42462 42466 "plugins/funind/functional_principles_proofs.ml" 1436 42462 42485
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1437 42487 42491 "plugins/funind/functional_principles_proofs.ml" 1437 42487 42496
type(
  Term.constr -> Proof_type.tactic
)
ident(
  ext_ref Tactics.apply
)
"plugins/funind/functional_principles_proofs.ml" 1437 42487 42498 "plugins/funind/functional_principles_proofs.ml" 1437 42487 42508
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 1437 42487 42509 "plugins/funind/functional_principles_proofs.ml" 1437 42487 42516
type(
  Term.constr Lazy.t
)
ident(
  int_ref acc_inv "plugins/funind/functional_principles_proofs.ml" 1426 42138 42168 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42175
)
"plugins/funind/functional_principles_proofs.ml" 1437 42487 42497 "plugins/funind/functional_principles_proofs.ml" 1437 42487 42517
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1437 42487 42491 "plugins/funind/functional_principles_proofs.ml" 1437 42487 42517
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1438 42519 42528 "plugins/funind/functional_principles_proofs.ml" 1438 42519 42529
type(
  Proof_type.goal Evd.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 1439 42533 42540 "plugins/funind/functional_principles_proofs.ml" 1442 42665 42687
)
"plugins/funind/functional_principles_proofs.ml" 1439 42533 42543 "plugins/funind/functional_principles_proofs.ml" 1439 42533 42549
type(
  bool
)
ident(
  int_ref is_mes "plugins/funind/functional_principles_proofs.ml" 1426 42138 42161 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42167
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42571 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42586
type(
  (Termops.occurrences * Names.evaluable_global_reference) list ->
  Proof_type.tactic
)
ident(
  ext_ref Tactics.unfold_in_concl
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42589 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42604
type(
  Termops.occurrences
)
ident(
  ext_ref Termops.all_occurrences
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42606 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42635
type(
  Libnames.global_reference -> Names.evaluable_global_reference
)
ident(
  int_ref evaluable_of_global_reference "plugins/funind/functional_principles_proofs.ml" 1350 40174 40178 "plugins/funind/functional_principles_proofs.ml" 1350 40174 40207
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42637 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42650
type(
  Libnames.global_reference Util.delayed -> Libnames.global_reference
)
ident(
  ext_ref Util.delayed_force
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42651 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42659
type(
  Libnames.global_reference Util.delayed
)
ident(
  int_ref ltof_ref "plugins/funind/functional_principles_proofs.ml" 1345 40005 40009 "plugins/funind/functional_principles_proofs.ml" 1345 40005 40017
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42636 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42660
call(
  stack
)
type(
  Libnames.global_reference
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42606 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42660
call(
  stack
)
type(
  Names.evaluable_global_reference
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42588 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42661
type(
  Termops.occurrences * Names.evaluable_global_reference
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42587 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42662
type(
  (Termops.occurrences * Names.evaluable_global_reference) list
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42663 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42664
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1438 42519 42528 "plugins/funind/functional_principles_proofs.ml" 1438 42519 42529
)
"plugins/funind/functional_principles_proofs.ml" 1441 42562 42571 "plugins/funind/functional_principles_proofs.ml" 1441 42562 42664
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1442 42665 42677 "plugins/funind/functional_principles_proofs.ml" 1442 42665 42685
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/functional_principles_proofs.ml" 1442 42665 42686 "plugins/funind/functional_principles_proofs.ml" 1442 42665 42687
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1438 42519 42528 "plugins/funind/functional_principles_proofs.ml" 1438 42519 42529
)
"plugins/funind/functional_principles_proofs.ml" 1442 42665 42677 "plugins/funind/functional_principles_proofs.ml" 1442 42665 42687
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1439 42533 42540 "plugins/funind/functional_principles_proofs.ml" 1442 42665 42687
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1438 42519 42523 "plugins/funind/functional_principles_proofs.ml" 1443 42688 42693
type(
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1444 42695 42699 "plugins/funind/functional_principles_proofs.ml" 1444 42695 42710
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 1444 42695 42711 "plugins/funind/functional_principles_proofs.ml" 1444 42695 42727
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1445 42728 42735 "plugins/funind/functional_principles_proofs.ml" 1445 42728 42746
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENLIST
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42757 "plugins/funind/functional_principles_proofs.ml" 1446 42747 42763
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTRY
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42764 "plugins/funind/functional_principles_proofs.ml" 1446 42747 42783
type(
  bool -> Term.constr list -> Proof_type.tactic
)
ident(
  ext_ref Recdef.list_rewrite
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42784 "plugins/funind/functional_principles_proofs.ml" 1446 42747 42789
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42791 "plugins/funind/functional_principles_proofs.ml" 1446 42747 42799
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42800 "plugins/funind/functional_principles_proofs.ml" 1446 42747 42805
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42806 "plugins/funind/functional_principles_proofs.ml" 1446 42747 42809
type(
  Names.identifier list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1426 42138 42190 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42193
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42790 "plugins/funind/functional_principles_proofs.ml" 1446 42747 42810
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42763 "plugins/funind/functional_principles_proofs.ml" 1446 42747 42811
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42757 "plugins/funind/functional_principles_proofs.ml" 1446 42747 42811
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1447 42813 42816 "plugins/funind/functional_principles_proofs.ml" 1447 42813 42827
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 1447 42813 42828 "plugins/funind/functional_principles_proofs.ml" 1447 42813 42848
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1447 42813 42850 "plugins/funind/functional_principles_proofs.ml" 1447 42813 42868
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref rewrite_eqs_in_eqs "plugins/funind/functional_principles_proofs.ml" 1409 41725 41733 "plugins/funind/functional_principles_proofs.ml" 1409 41725 41751
)
"plugins/funind/functional_principles_proofs.ml" 1447 42813 42869 "plugins/funind/functional_principles_proofs.ml" 1447 42813 42872
type(
  Names.identifier list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1426 42138 42190 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42193
)
"plugins/funind/functional_principles_proofs.ml" 1447 42813 42849 "plugins/funind/functional_principles_proofs.ml" 1447 42813 42873
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1447 42813 42816 "plugins/funind/functional_principles_proofs.ml" 1447 42813 42873
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1448 42875 42880 "plugins/funind/functional_principles_proofs.ml" 1448 42875 42891
type(
  string -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 1448 42875 42892 "plugins/funind/functional_principles_proofs.ml" 1448 42875 42909
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1450 42918 42925 "plugins/funind/functional_principles_proofs.ml" 1450 42918 42936
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclCOMPLETE
)
"plugins/funind/functional_principles_proofs.ml" 1451 42938 42946 "plugins/funind/functional_principles_proofs.ml" 1451 42938 42968
type(
  bool ->
  bool * int -> Term.constr list -> Auto.hint_db list -> Proof_type.tactic
)
ident(
  ext_ref Eauto.eauto_with_bases
)
"plugins/funind/functional_principles_proofs.ml" 1452 42969 42979 "plugins/funind/functional_principles_proofs.ml" 1452 42969 42984
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1453 42985 42996 "plugins/funind/functional_principles_proofs.ml" 1453 42985 43000
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1453 42985 43001 "plugins/funind/functional_principles_proofs.ml" 1453 42985 43002
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1453 42985 42995 "plugins/funind/functional_principles_proofs.ml" 1453 42985 43003
type(
  bool * int
)
"plugins/funind/functional_principles_proofs.ml" 1454 43004 43015 "plugins/funind/functional_principles_proofs.ml" 1454 43004 43025
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 1454 43004 43026 "plugins/funind/functional_principles_proofs.ml" 1454 43004 43036
type(
  Term.constr Lazy.t
)
ident(
  ext_ref Indfun_common.refl_equal
)
"plugins/funind/functional_principles_proofs.ml" 1454 43004 43015 "plugins/funind/functional_principles_proofs.ml" 1454 43004 43036
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1454 43004 43014 "plugins/funind/functional_principles_proofs.ml" 1454 43004 43037
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1455 43038 43049 "plugins/funind/functional_principles_proofs.ml" 1455 43038 43067
type(
  Names.transparent_state -> bool -> Auto.hint_db
)
ident(
  ext_ref Auto.Hint_db.empty
)
"plugins/funind/functional_principles_proofs.ml" 1455 43038 43068 "plugins/funind/functional_principles_proofs.ml" 1455 43038 43091
type(
  Names.transparent_state
)
ident(
  ext_ref Names.empty_transparent_state
)
"plugins/funind/functional_principles_proofs.ml" 1455 43038 43092 "plugins/funind/functional_principles_proofs.ml" 1455 43038 43097
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1455 43038 43049 "plugins/funind/functional_principles_proofs.ml" 1455 43038 43097
call(
  stack
)
type(
  Auto.hint_db
)
"plugins/funind/functional_principles_proofs.ml" 1455 43038 43048 "plugins/funind/functional_principles_proofs.ml" 1455 43038 43098
type(
  Auto.hint_db list
)
"plugins/funind/functional_principles_proofs.ml" 1450 42918 42936 "plugins/funind/functional_principles_proofs.ml" 1456 43099 43106
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1449 42910 42916 "plugins/funind/functional_principles_proofs.ml" 1457 43107 43114
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1448 42875 42879 "plugins/funind/functional_principles_proofs.ml" 1458 43115 43119
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1446 42747 42756 "plugins/funind/functional_principles_proofs.ml" 1459 43120 43130
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1445 42728 42734 "plugins/funind/functional_principles_proofs.ml" 1460 43131 43138
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1444 42695 42699 "plugins/funind/functional_principles_proofs.ml" 1460 43131 43138
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1435 42458 42460 "plugins/funind/functional_principles_proofs.ml" 1461 43139 43142
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1434 42440 42447 "plugins/funind/functional_principles_proofs.ml" 1461 43139 43142
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1434 42440 42445 "plugins/funind/functional_principles_proofs.ml" 1462 43143 43149
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1432 42361 42363 "plugins/funind/functional_principles_proofs.ml" 1462 43143 43150
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1429 42234 42241 "plugins/funind/functional_principles_proofs.ml" 1463 43151 43159
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1428 42218 42222 "plugins/funind/functional_principles_proofs.ml" 1463 43151 43160
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1464 43161 43167 "plugins/funind/functional_principles_proofs.ml" 1464 43161 43170
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gls "plugins/funind/functional_principles_proofs.ml" 1427 42205 42211 "plugins/funind/functional_principles_proofs.ml" 1427 42205 42214
)
"plugins/funind/functional_principles_proofs.ml" 1428 42218 42222 "plugins/funind/functional_principles_proofs.ml" 1464 43161 43170
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1427 42205 42207 "plugins/funind/functional_principles_proofs.ml" 1464 43161 43170
type(
  Proof_type.tactic
)
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1467 43173 43177 "plugins/funind/functional_principles_proofs.ml" 1467 43173 43196
type(
  Names.Idset.elt list -> Term.types -> bool
)
ident(
  def is_valid_hypothesis "plugins/funind/functional_principles_proofs.ml" 1486 43673 43673 --
)
"plugins/funind/functional_principles_proofs.ml" 1467 43173 43197 "plugins/funind/functional_principles_proofs.ml" 1467 43173 43212
type(
  Names.Idset.elt list
)
ident(
  def predicates_name "plugins/funind/functional_principles_proofs.ml" 1468 43215 43217 "plugins/funind/functional_principles_proofs.ml" 1484 43650 43671
)
"plugins/funind/functional_principles_proofs.ml" 1468 43215 43221 "plugins/funind/functional_principles_proofs.ml" 1468 43215 43236
type(
  Names.Idset.t
)
"plugins/funind/functional_principles_proofs.ml" 1468 43215 43239 "plugins/funind/functional_principles_proofs.ml" 1468 43215 43254
type(
  (Names.Idset.elt -> Names.Idset.t -> Names.Idset.t) ->
  Names.Idset.elt list -> Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref List.fold_right
)
"plugins/funind/functional_principles_proofs.ml" 1468 43215 43255 "plugins/funind/functional_principles_proofs.ml" 1468 43215 43264
type(
  Names.Idset.elt -> Names.Idset.t -> Names.Idset.t
)
ident(
  ext_ref Names.Idset.add
)
"plugins/funind/functional_principles_proofs.ml" 1468 43215 43265 "plugins/funind/functional_principles_proofs.ml" 1468 43215 43280
type(
  Names.Idset.elt list
)
ident(
  int_ref predicates_name "plugins/funind/functional_principles_proofs.ml" 1467 43173 43197 "plugins/funind/functional_principles_proofs.ml" 1467 43173 43212
)
"plugins/funind/functional_principles_proofs.ml" 1468 43215 43281 "plugins/funind/functional_principles_proofs.ml" 1468 43215 43292
type(
  Names.Idset.t
)
ident(
  ext_ref Names.Idset.empty
)
"plugins/funind/functional_principles_proofs.ml" 1468 43215 43239 "plugins/funind/functional_principles_proofs.ml" 1468 43215 43292
call(
  stack
)
type(
  Names.Idset.t
)
"plugins/funind/functional_principles_proofs.ml" 1469 43296 43302 "plugins/funind/functional_principles_proofs.ml" 1469 43296 43308
type(
  Term.constr -> bool
)
"plugins/funind/functional_principles_proofs.ml" 1469 43296 43309 "plugins/funind/functional_principles_proofs.ml" 1469 43296 43312
type(
  Term.constr
)
ident(
  def typ "plugins/funind/functional_principles_proofs.ml" 1470 43315 43319 "plugins/funind/functional_principles_proofs.ml" 1476 43461 43475
)
"plugins/funind/functional_principles_proofs.ml" 1470 43315 43322 "plugins/funind/functional_principles_proofs.ml" 1470 43315 43327
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isApp
)
"plugins/funind/functional_principles_proofs.ml" 1470 43315 43328 "plugins/funind/functional_principles_proofs.ml" 1470 43315 43331
type(
  Term.constr
)
ident(
  int_ref typ "plugins/funind/functional_principles_proofs.ml" 1469 43296 43309 "plugins/funind/functional_principles_proofs.ml" 1469 43296 43312
)
"plugins/funind/functional_principles_proofs.ml" 1470 43315 43322 "plugins/funind/functional_principles_proofs.ml" 1470 43315 43331
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1472 43341 43351 "plugins/funind/functional_principles_proofs.ml" 1472 43341 43354
type(
  Term.constr
)
ident(
  def pte "plugins/funind/functional_principles_proofs.ml" 1473 43374 43380 "plugins/funind/functional_principles_proofs.ml" 1475 43444 43460
)
"plugins/funind/functional_principles_proofs.ml" 1472 43341 43355 "plugins/funind/functional_principles_proofs.ml" 1472 43341 43356
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1472 43341 43351 "plugins/funind/functional_principles_proofs.ml" 1472 43341 43356
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1472 43341 43359 "plugins/funind/functional_principles_proofs.ml" 1472 43341 43366
type(
  Term.constr -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 1472 43341 43367 "plugins/funind/functional_principles_proofs.ml" 1472 43341 43370
type(
  Term.constr
)
ident(
  int_ref typ "plugins/funind/functional_principles_proofs.ml" 1469 43296 43309 "plugins/funind/functional_principles_proofs.ml" 1469 43296 43312
)
"plugins/funind/functional_principles_proofs.ml" 1472 43341 43359 "plugins/funind/functional_principles_proofs.ml" 1472 43341 43370
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1473 43374 43383 "plugins/funind/functional_principles_proofs.ml" 1473 43374 43388
type(
  Term.constr -> bool
)
ident(
  ext_ref Term.isVar
)
"plugins/funind/functional_principles_proofs.ml" 1473 43374 43389 "plugins/funind/functional_principles_proofs.ml" 1473 43374 43392
type(
  Term.constr
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 1472 43341 43351 "plugins/funind/functional_principles_proofs.ml" 1472 43341 43354
)
"plugins/funind/functional_principles_proofs.ml" 1473 43374 43383 "plugins/funind/functional_principles_proofs.ml" 1473 43374 43392
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1474 43393 43404 "plugins/funind/functional_principles_proofs.ml" 1474 43393 43413
type(
  Names.Idset.elt -> Names.Idset.t -> bool
)
ident(
  ext_ref Names.Idset.mem
)
"plugins/funind/functional_principles_proofs.ml" 1474 43393 43415 "plugins/funind/functional_principles_proofs.ml" 1474 43393 43422
type(
  Term.constr -> Names.Idset.elt
)
ident(
  ext_ref Term.destVar
)
"plugins/funind/functional_principles_proofs.ml" 1474 43393 43423 "plugins/funind/functional_principles_proofs.ml" 1474 43393 43426
type(
  Term.constr
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 1472 43341 43351 "plugins/funind/functional_principles_proofs.ml" 1472 43341 43354
)
"plugins/funind/functional_principles_proofs.ml" 1474 43393 43414 "plugins/funind/functional_principles_proofs.ml" 1474 43393 43427
call(
  stack
)
type(
  Names.Idset.elt
)
"plugins/funind/functional_principles_proofs.ml" 1474 43393 43428 "plugins/funind/functional_principles_proofs.ml" 1474 43393 43443
type(
  Names.Idset.t
)
ident(
  int_ref predicates_name "plugins/funind/functional_principles_proofs.ml" 1468 43215 43221 "plugins/funind/functional_principles_proofs.ml" 1468 43215 43236
)
"plugins/funind/functional_principles_proofs.ml" 1474 43393 43404 "plugins/funind/functional_principles_proofs.ml" 1474 43393 43443
call(
  tail
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1475 43444 43455 "plugins/funind/functional_principles_proofs.ml" 1475 43444 43460
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1473 43374 43380 "plugins/funind/functional_principles_proofs.ml" 1475 43444 43460
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1472 43341 43347 "plugins/funind/functional_principles_proofs.ml" 1475 43444 43460
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1476 43461 43470 "plugins/funind/functional_principles_proofs.ml" 1476 43461 43475
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1470 43315 43319 "plugins/funind/functional_principles_proofs.ml" 1476 43461 43475
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1478 43481 43491 "plugins/funind/functional_principles_proofs.ml" 1478 43481 43510
type(
  Term.types -> bool
)
"plugins/funind/functional_principles_proofs.ml" 1478 43481 43511 "plugins/funind/functional_principles_proofs.ml" 1478 43481 43514
type(
  Term.types
)
ident(
  def typ "plugins/funind/functional_principles_proofs.ml" 1479 43517 43521 "plugins/funind/functional_principles_proofs.ml" 1482 43631 43644
)
"plugins/funind/functional_principles_proofs.ml" 1479 43517 43521 "plugins/funind/functional_principles_proofs.ml" 1479 43517 43527
type(
  Term.types -> bool
)
ident(
  int_ref is_pte "plugins/funind/functional_principles_proofs.ml" 1469 43296 43302 "plugins/funind/functional_principles_proofs.ml" 1469 43296 43308
)
"plugins/funind/functional_principles_proofs.ml" 1479 43517 43528 "plugins/funind/functional_principles_proofs.ml" 1479 43517 43531
type(
  Term.types
)
ident(
  int_ref typ "plugins/funind/functional_principles_proofs.ml" 1478 43481 43511 "plugins/funind/functional_principles_proofs.ml" 1478 43481 43514
)
"plugins/funind/functional_principles_proofs.ml" 1479 43517 43521 "plugins/funind/functional_principles_proofs.ml" 1479 43517 43531
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1479 43517 43532 "plugins/funind/functional_principles_proofs.ml" 1479 43517 43534
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"plugins/funind/functional_principles_proofs.ml" 1480 43535 43547 "plugins/funind/functional_principles_proofs.ml" 1480 43535 43559
type(
  Term.types -> (Term.constr, Term.types) Term.kind_of_term
)
ident(
  ext_ref Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1480 43535 43560 "plugins/funind/functional_principles_proofs.ml" 1480 43535 43563
type(
  Term.types
)
ident(
  int_ref typ "plugins/funind/functional_principles_proofs.ml" 1478 43481 43511 "plugins/funind/functional_principles_proofs.ml" 1478 43481 43514
)
"plugins/funind/functional_principles_proofs.ml" 1480 43535 43547 "plugins/funind/functional_principles_proofs.ml" 1480 43535 43563
call(
  stack
)
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43577 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43578
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43579 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43582
type(
  Term.types
)
ident(
  def pte "plugins/funind/functional_principles_proofs.ml" 1481 43569 43592 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43630
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43583 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43587
type(
  Term.types
)
ident(
  def typ' "plugins/funind/functional_principles_proofs.ml" 1481 43569 43592 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43630
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43572 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43588
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43592 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43598
type(
  Term.types -> bool
)
ident(
  int_ref is_pte "plugins/funind/functional_principles_proofs.ml" 1469 43296 43302 "plugins/funind/functional_principles_proofs.ml" 1469 43296 43308
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43599 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43602
type(
  Term.types
)
ident(
  int_ref pte "plugins/funind/functional_principles_proofs.ml" 1481 43569 43579 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43582
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43592 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43602
call(
  stack
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43603 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43605
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43606 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43625
type(
  Term.types -> bool
)
ident(
  int_ref is_valid_hypothesis "plugins/funind/functional_principles_proofs.ml" 1478 43481 43491 "plugins/funind/functional_principles_proofs.ml" 1478 43481 43510
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43626 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43630
type(
  Term.types
)
ident(
  int_ref typ' "plugins/funind/functional_principles_proofs.ml" 1481 43569 43583 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43587
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43606 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43630
call(
  tail
)
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1481 43569 43592 "plugins/funind/functional_principles_proofs.ml" 1481 43569 43630
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1482 43631 43634 "plugins/funind/functional_principles_proofs.ml" 1482 43631 43635
type(
  (Term.constr, Term.types) Term.kind_of_term
)
"plugins/funind/functional_principles_proofs.ml" 1482 43631 43639 "plugins/funind/functional_principles_proofs.ml" 1482 43631 43644
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1480 43535 43541 "plugins/funind/functional_principles_proofs.ml" 1482 43631 43644
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1479 43517 43521 "plugins/funind/functional_principles_proofs.ml" 1482 43631 43644
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1484 43650 43652 "plugins/funind/functional_principles_proofs.ml" 1484 43650 43671
type(
  Term.types -> bool
)
ident(
  int_ref is_valid_hypothesis "plugins/funind/functional_principles_proofs.ml" 1478 43481 43491 "plugins/funind/functional_principles_proofs.ml" 1478 43481 43510
)
"plugins/funind/functional_principles_proofs.ml" 1478 43481 43483 "plugins/funind/functional_principles_proofs.ml" 1484 43650 43671
type(
  Term.types -> bool
)
"plugins/funind/functional_principles_proofs.ml" 1469 43296 43298 "plugins/funind/functional_principles_proofs.ml" 1484 43650 43671
type(
  Term.types -> bool
)
"plugins/funind/functional_principles_proofs.ml" 1468 43215 43217 "plugins/funind/functional_principles_proofs.ml" 1484 43650 43671
type(
  Term.types -> bool
)
"plugins/funind/functional_principles_proofs.ml" 1486 43673 43677 "plugins/funind/functional_principles_proofs.ml" 1486 43673 43700
type(
  Names.constant * 'a * Names.constant ->
  Term.constr option ref ->
  bool ->
  int ->
  Term.constr ->
  Term.constr ->
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  def prove_principle_for_gen "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525 --
)
"plugins/funind/functional_principles_proofs.ml" 1487 43701 43706 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43711
type(
  Names.constant
)
ident(
  def f_ref "plugins/funind/functional_principles_proofs.ml" 1487 43701 43735 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
)
"plugins/funind/functional_principles_proofs.ml" 1487 43701 43712 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43726
type(
  'a
)
ident(
  def functional_ref "plugins/funind/functional_principles_proofs.ml" 1487 43701 43735 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
)
"plugins/funind/functional_principles_proofs.ml" 1487 43701 43727 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43733
type(
  Names.constant
)
ident(
  def eq_ref "plugins/funind/functional_principles_proofs.ml" 1487 43701 43735 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
)
"plugins/funind/functional_principles_proofs.ml" 1487 43701 43705 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43734
type(
  Names.constant * 'a * Names.constant
)
"plugins/funind/functional_principles_proofs.ml" 1487 43701 43735 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43748
type(
  Term.constr option ref
)
ident(
  def tcc_lemma_ref "plugins/funind/functional_principles_proofs.ml" 1487 43701 43749 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
)
"plugins/funind/functional_principles_proofs.ml" 1487 43701 43749 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43755
type(
  bool
)
ident(
  def is_mes "plugins/funind/functional_principles_proofs.ml" 1488 43756 43760 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
)
"plugins/funind/functional_principles_proofs.ml" 1488 43756 43760 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43771
type(
  int
)
ident(
  def rec_arg_num "plugins/funind/functional_principles_proofs.ml" 1488 43756 43772 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
)
"plugins/funind/functional_principles_proofs.ml" 1488 43756 43772 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43784
type(
  Term.constr
)
ident(
  def rec_arg_type "plugins/funind/functional_principles_proofs.ml" 1488 43756 43785 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
)
"plugins/funind/functional_principles_proofs.ml" 1488 43756 43785 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43793
type(
  Term.constr
)
ident(
  def relation "plugins/funind/functional_principles_proofs.ml" 1488 43756 43794 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
)
"plugins/funind/functional_principles_proofs.ml" 1488 43756 43794 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43796
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl "plugins/funind/functional_principles_proofs.ml" 1489 43799 43801 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
)
"plugins/funind/functional_principles_proofs.ml" 1489 43799 43805 "plugins/funind/functional_principles_proofs.ml" 1489 43799 43815
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1489 43799 43818 "plugins/funind/functional_principles_proofs.ml" 1489 43799 43826
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 1489 43799 43827 "plugins/funind/functional_principles_proofs.ml" 1489 43799 43829
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/functional_principles_proofs.ml" 1488 43756 43794 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43796
)
"plugins/funind/functional_principles_proofs.ml" 1489 43799 43818 "plugins/funind/functional_principles_proofs.ml" 1489 43799 43829
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1490 43833 43839 "plugins/funind/functional_principles_proofs.ml" 1490 43833 43849
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_proofs.ml" 1490 43833 43852 "plugins/funind/functional_principles_proofs.ml" 1490 43833 43868
type(
  ?elimc:Term.constr Rawterm.with_bindings ->
  Term.types -> Tactics.elim_scheme
)
ident(
  ext_ref Tactics.compute_elim_sig
)
"plugins/funind/functional_principles_proofs.ml" 1490 43833 43869 "plugins/funind/functional_principles_proofs.ml" 1490 43833 43879
type(
  Term.types
)
ident(
  int_ref princ_type "plugins/funind/functional_principles_proofs.ml" 1489 43799 43805 "plugins/funind/functional_principles_proofs.ml" 1489 43799 43815
)
"plugins/funind/functional_principles_proofs.ml" 1490 43833 43852 "plugins/funind/functional_principles_proofs.ml" 1490 43833 43879
call(
  stack
)
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_proofs.ml" 1491 43883 43889 "plugins/funind/functional_principles_proofs.ml" 1491 43883 43897
type(
  Names.name -> Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1492 43900 43908 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43913
type(
  Names.identifier list ref
)
"plugins/funind/functional_principles_proofs.ml" 1492 43900 43916 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43919
type(
  Names.identifier list -> Names.identifier list ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/functional_principles_proofs.ml" 1492 43900 43921 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43935
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/functional_principles_proofs.ml" 1492 43900 43936 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43938
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/functional_principles_proofs.ml" 1488 43756 43794 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43796
)
"plugins/funind/functional_principles_proofs.ml" 1492 43900 43920 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43939
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1492 43900 43916 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43939
type(
  Names.identifier list ref
)
"plugins/funind/functional_principles_proofs.ml" 1493 43943 43951 "plugins/funind/functional_principles_proofs.ml" 1493 43943 43953
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1494 43957 43963 "plugins/funind/functional_principles_proofs.ml" 1500 44127 44144
)
"plugins/funind/functional_principles_proofs.ml" 1494 43957 43967 "plugins/funind/functional_principles_proofs.ml" 1494 43957 43973
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1495 43976 43985 "plugins/funind/functional_principles_proofs.ml" 1495 43976 43987
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1493 43943 43951 "plugins/funind/functional_principles_proofs.ml" 1493 43943 43953
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44005 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44007
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 1496 43993 44011 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44044
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44000 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44007
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44011 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44019
type(
  Names.identifier list -> string -> Names.identifier
)
ident(
  ext_ref Indfun_common.fresh_id
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44020 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44021
type(
  Names.identifier list ref -> Names.identifier list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44021 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44026
type(
  Names.identifier list ref
)
ident(
  int_ref avoid "plugins/funind/functional_principles_proofs.ml" 1492 43900 43908 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43913
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44020 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44026
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44028 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44040
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44041 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44043
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1496 43993 44005 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44007
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44027 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44044
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1496 43993 44011 "plugins/funind/functional_principles_proofs.ml" 1496 43993 44044
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1497 44045 44052 "plugins/funind/functional_principles_proofs.ml" 1497 44045 44061
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1497 44045 44065 "plugins/funind/functional_principles_proofs.ml" 1497 44045 44073
type(
  Names.identifier list -> string -> Names.identifier
)
ident(
  ext_ref Indfun_common.fresh_id
)
"plugins/funind/functional_principles_proofs.ml" 1497 44045 44074 "plugins/funind/functional_principles_proofs.ml" 1497 44045 44075
type(
  Names.identifier list ref -> Names.identifier list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1497 44045 44075 "plugins/funind/functional_principles_proofs.ml" 1497 44045 44080
type(
  Names.identifier list ref
)
ident(
  int_ref avoid "plugins/funind/functional_principles_proofs.ml" 1492 43900 43908 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43913
)
"plugins/funind/functional_principles_proofs.ml" 1497 44045 44074 "plugins/funind/functional_principles_proofs.ml" 1497 44045 44080
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1497 44045 44081 "plugins/funind/functional_principles_proofs.ml" 1497 44045 44084
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1497 44045 44065 "plugins/funind/functional_principles_proofs.ml" 1497 44045 44084
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1495 43976 43979 "plugins/funind/functional_principles_proofs.ml" 1497 44045 44084
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1499 44094 44100 "plugins/funind/functional_principles_proofs.ml" 1499 44094 44105
type(
  Names.identifier list ref
)
ident(
  int_ref avoid "plugins/funind/functional_principles_proofs.ml" 1492 43900 43908 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43913
)
"plugins/funind/functional_principles_proofs.ml" 1499 44094 44106 "plugins/funind/functional_principles_proofs.ml" 1499 44094 44108
type(
  Names.identifier list ref -> Names.identifier list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/functional_principles_proofs.ml" 1499 44094 44109 "plugins/funind/functional_principles_proofs.ml" 1499 44094 44115
type(
  Names.identifier
)
ident(
  int_ref new_id "plugins/funind/functional_principles_proofs.ml" 1494 43957 43967 "plugins/funind/functional_principles_proofs.ml" 1494 43957 43973
)
"plugins/funind/functional_principles_proofs.ml" 1499 44094 44119 "plugins/funind/functional_principles_proofs.ml" 1499 44094 44120
type(
  Names.identifier list ref -> Names.identifier list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1499 44094 44120 "plugins/funind/functional_principles_proofs.ml" 1499 44094 44125
type(
  Names.identifier list ref
)
ident(
  int_ref avoid "plugins/funind/functional_principles_proofs.ml" 1492 43900 43908 "plugins/funind/functional_principles_proofs.ml" 1492 43900 43913
)
"plugins/funind/functional_principles_proofs.ml" 1499 44094 44119 "plugins/funind/functional_principles_proofs.ml" 1499 44094 44125
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1499 44094 44109 "plugins/funind/functional_principles_proofs.ml" 1499 44094 44125
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1499 44094 44100 "plugins/funind/functional_principles_proofs.ml" 1499 44094 44125
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 1500 44127 44138 "plugins/funind/functional_principles_proofs.ml" 1500 44127 44144
type(
  Names.identifier
)
ident(
  int_ref new_id "plugins/funind/functional_principles_proofs.ml" 1494 43957 43967 "plugins/funind/functional_principles_proofs.ml" 1494 43957 43973
)
"plugins/funind/functional_principles_proofs.ml" 1500 44127 44133 "plugins/funind/functional_principles_proofs.ml" 1500 44127 44144
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1499 44094 44100 "plugins/funind/functional_principles_proofs.ml" 1500 44127 44144
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1494 43957 43963 "plugins/funind/functional_principles_proofs.ml" 1500 44127 44144
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1493 43943 43947 "plugins/funind/functional_principles_proofs.ml" 1500 44127 44144
type(
  Names.name -> Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1492 43900 43904 "plugins/funind/functional_principles_proofs.ml" 1500 44127 44144
type(
  Names.name -> Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44156 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44166
type(
  Names.name * 'b * 'c -> Names.name * 'b * 'c
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44168 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44170
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1502 44150 44178 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44195
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44171 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44172
type(
  'b
)
ident(
  def b "plugins/funind/functional_principles_proofs.ml" 1502 44150 44178 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44195
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44173 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44174
type(
  'c
)
ident(
  def t "plugins/funind/functional_principles_proofs.ml" 1502 44150 44178 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44195
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44167 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44175
type(
  Names.name * 'b * 'c
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44179 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44187
type(
  Names.name -> Names.name
)
ident(
  int_ref fresh_id "plugins/funind/functional_principles_proofs.ml" 1491 43883 43889 "plugins/funind/functional_principles_proofs.ml" 1491 43883 43897
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44188 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44190
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1502 44150 44168 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44170
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44179 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44190
call(
  stack
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44191 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44192
type(
  'b
)
ident(
  int_ref b "plugins/funind/functional_principles_proofs.ml" 1502 44150 44171 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44172
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44193 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44194
type(
  'c
)
ident(
  int_ref t "plugins/funind/functional_principles_proofs.ml" 1502 44150 44173 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44174
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44178 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44195
type(
  Names.name * 'b * 'c
)
"plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_proofs.ml" 1504 44232 44238 "plugins/funind/functional_principles_proofs.ml" 1504 44232 44248
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1490 43833 43839 "plugins/funind/functional_principles_proofs.ml" 1490 43833 43849
)
"plugins/funind/functional_principles_proofs.ml" 1505 44254 44264 "plugins/funind/functional_principles_proofs.ml" 1505 44254 44272
type(
  (Term.rel_declaration -> Term.rel_declaration) ->
  Term.rel_context -> Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1505 44254 44273 "plugins/funind/functional_principles_proofs.ml" 1505 44254 44283
type(
  Term.rel_declaration -> Term.rel_declaration
)
ident(
  int_ref fresh_decl "plugins/funind/functional_principles_proofs.ml" 1502 44150 44156 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44166
)
"plugins/funind/functional_principles_proofs.ml" 1505 44254 44284 "plugins/funind/functional_principles_proofs.ml" 1505 44254 44294
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1490 43833 43839 "plugins/funind/functional_principles_proofs.ml" 1490 43833 43849
)
"plugins/funind/functional_principles_proofs.ml" 1505 44254 44284 "plugins/funind/functional_principles_proofs.ml" 1505 44254 44301
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1505 44254 44264 "plugins/funind/functional_principles_proofs.ml" 1505 44254 44301
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1506 44303 44317 "plugins/funind/functional_principles_proofs.ml" 1506 44303 44325
type(
  (Term.rel_declaration -> Term.rel_declaration) ->
  Term.rel_context -> Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1506 44303 44326 "plugins/funind/functional_principles_proofs.ml" 1506 44303 44336
type(
  Term.rel_declaration -> Term.rel_declaration
)
ident(
  int_ref fresh_decl "plugins/funind/functional_principles_proofs.ml" 1502 44150 44156 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44166
)
"plugins/funind/functional_principles_proofs.ml" 1506 44303 44337 "plugins/funind/functional_principles_proofs.ml" 1506 44303 44347
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1490 43833 43839 "plugins/funind/functional_principles_proofs.ml" 1490 43833 43849
)
"plugins/funind/functional_principles_proofs.ml" 1506 44303 44337 "plugins/funind/functional_principles_proofs.ml" 1506 44303 44358
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1506 44303 44317 "plugins/funind/functional_principles_proofs.ml" 1506 44303 44358
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1507 44360 44372 "plugins/funind/functional_principles_proofs.ml" 1507 44360 44380
type(
  (Term.rel_declaration -> Term.rel_declaration) ->
  Term.rel_context -> Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1507 44360 44381 "plugins/funind/functional_principles_proofs.ml" 1507 44360 44391
type(
  Term.rel_declaration -> Term.rel_declaration
)
ident(
  int_ref fresh_decl "plugins/funind/functional_principles_proofs.ml" 1502 44150 44156 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44166
)
"plugins/funind/functional_principles_proofs.ml" 1507 44360 44392 "plugins/funind/functional_principles_proofs.ml" 1507 44360 44402
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1490 43833 43839 "plugins/funind/functional_principles_proofs.ml" 1490 43833 43849
)
"plugins/funind/functional_principles_proofs.ml" 1507 44360 44392 "plugins/funind/functional_principles_proofs.ml" 1507 44360 44411
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1507 44360 44372 "plugins/funind/functional_principles_proofs.ml" 1507 44360 44411
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1508 44413 44421 "plugins/funind/functional_principles_proofs.ml" 1508 44413 44429
type(
  (Term.rel_declaration -> Term.rel_declaration) ->
  Term.rel_context -> Term.rel_context
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1508 44413 44430 "plugins/funind/functional_principles_proofs.ml" 1508 44413 44440
type(
  Term.rel_declaration -> Term.rel_declaration
)
ident(
  int_ref fresh_decl "plugins/funind/functional_principles_proofs.ml" 1502 44150 44156 "plugins/funind/functional_principles_proofs.ml" 1502 44150 44166
)
"plugins/funind/functional_principles_proofs.ml" 1508 44413 44441 "plugins/funind/functional_principles_proofs.ml" 1508 44413 44451
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1490 43833 43839 "plugins/funind/functional_principles_proofs.ml" 1490 43833 43849
)
"plugins/funind/functional_principles_proofs.ml" 1508 44413 44441 "plugins/funind/functional_principles_proofs.ml" 1508 44413 44456
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1508 44413 44421 "plugins/funind/functional_principles_proofs.ml" 1508 44413 44456
call(
  stack
)
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1504 44232 44236 "plugins/funind/functional_principles_proofs.ml" 1509 44457 44462
type(
  Tactics.elim_scheme
)
type(
  Tactics.elim_scheme
)
"plugins/funind/functional_principles_proofs.ml" 1511 44468 44474 "plugins/funind/functional_principles_proofs.ml" 1511 44468 44480
type(
  bool -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1512 44483 44490 "plugins/funind/functional_principles_proofs.ml" 1512 44483 44496
type(
  bool
)
ident(
  int_ref is_mes "plugins/funind/functional_principles_proofs.ml" 1487 43701 43749 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43755
)
"plugins/funind/functional_principles_proofs.ml" 1514 44506 44517 "plugins/funind/functional_principles_proofs.ml" 1514 44506 44518
type(
  bool
)
ident(
  def b "plugins/funind/functional_principles_proofs.ml" 1514 44506 44522 "plugins/funind/functional_principles_proofs.ml" 1514 44506 44563
)
"plugins/funind/functional_principles_proofs.ml" 1514 44506 44522 "plugins/funind/functional_principles_proofs.ml" 1514 44506 44547
type(
  Proof_type.tactic ->
  bool -> Names.identifier list option -> Proof_type.tactic
)
ident(
  ext_ref Recdef.tclUSER_if_not_mes
)
"plugins/funind/functional_principles_proofs.ml" 1514 44506 44548 "plugins/funind/functional_principles_proofs.ml" 1514 44506 44556
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/functional_principles_proofs.ml" 1514 44506 44557 "plugins/funind/functional_principles_proofs.ml" 1514 44506 44558
type(
  bool
)
ident(
  int_ref b "plugins/funind/functional_principles_proofs.ml" 1514 44506 44517 "plugins/funind/functional_principles_proofs.ml" 1514 44506 44518
)
"plugins/funind/functional_principles_proofs.ml" 1514 44506 44559 "plugins/funind/functional_principles_proofs.ml" 1514 44506 44563
type(
  Names.identifier list option
)
"plugins/funind/functional_principles_proofs.ml" 1514 44506 44522 "plugins/funind/functional_principles_proofs.ml" 1514 44506 44563
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1514 44506 44512 "plugins/funind/functional_principles_proofs.ml" 1514 44506 44564
type(
  bool -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1515 44565 44578 "plugins/funind/functional_principles_proofs.ml" 1515 44565 44579
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1515 44565 44583 "plugins/funind/functional_principles_proofs.ml" 1515 44565 44597
type(
  Term.constr option ref -> Term.constr list -> Proof_type.tactic
)
ident(
  int_ref prove_with_tcc "plugins/funind/functional_principles_proofs.ml" 1356 40252 40256 "plugins/funind/functional_principles_proofs.ml" 1356 40252 40270
)
"plugins/funind/functional_principles_proofs.ml" 1515 44565 44598 "plugins/funind/functional_principles_proofs.ml" 1515 44565 44611
type(
  Term.constr option ref
)
ident(
  int_ref tcc_lemma_ref "plugins/funind/functional_principles_proofs.ml" 1487 43701 43735 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43748
)
"plugins/funind/functional_principles_proofs.ml" 1515 44565 44612 "plugins/funind/functional_principles_proofs.ml" 1515 44565 44614
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1515 44565 44583 "plugins/funind/functional_principles_proofs.ml" 1515 44565 44614
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1515 44565 44574 "plugins/funind/functional_principles_proofs.ml" 1515 44565 44614
type(
  bool -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1512 44483 44487 "plugins/funind/functional_principles_proofs.ml" 1515 44565 44614
type(
  bool -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1517 44620 44626 "plugins/funind/functional_principles_proofs.ml" 1517 44620 44642
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1517 44620 44645 "plugins/funind/functional_principles_proofs.ml" 1517 44620 44656
type(
  int
)
ident(
  int_ref rec_arg_num "plugins/funind/functional_principles_proofs.ml" 1488 43756 43760 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43771
)
"plugins/funind/functional_principles_proofs.ml" 1517 44620 44657 "plugins/funind/functional_principles_proofs.ml" 1517 44620 44658
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 1517 44620 44659 "plugins/funind/functional_principles_proofs.ml" 1517 44620 44669
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1517 44620 44659 "plugins/funind/functional_principles_proofs.ml" 1517 44620 44677
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1517 44620 44645 "plugins/funind/functional_principles_proofs.ml" 1517 44620 44677
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44687 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44700
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44703 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44713
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44703 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44719
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44720 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44721
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44722 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44738
type(
  int
)
ident(
  int_ref real_rec_arg_num "plugins/funind/functional_principles_proofs.ml" 1517 44620 44626 "plugins/funind/functional_principles_proofs.ml" 1517 44620 44642
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44703 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44738
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44739 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44740
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44741 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44742
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44703 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44742
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1527 45191 45198 "plugins/funind/functional_principles_proofs.ml" 1527 45191 45210
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1527 45191 45211 "plugins/funind/functional_principles_proofs.ml" 1527 45191 45222
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1527 45191 45197 "plugins/funind/functional_principles_proofs.ml" 1527 45191 45223
type(
  Term.rel_declaration list * Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1528 45226 45230 "plugins/funind/functional_principles_proofs.ml" 1528 45226 45244
type(
  int ->
  Term.rel_context -> Term.rel_declaration list * Term.rel_declaration list
)
ident(
  ext_ref Util.list_chop
)
"plugins/funind/functional_principles_proofs.ml" 1528 45226 45245 "plugins/funind/functional_principles_proofs.ml" 1528 45226 45258
type(
  int
)
ident(
  int_ref npost_rec_arg "plugins/funind/functional_principles_proofs.ml" 1518 44681 44687 "plugins/funind/functional_principles_proofs.ml" 1518 44681 44700
)
"plugins/funind/functional_principles_proofs.ml" 1528 45226 45259 "plugins/funind/functional_principles_proofs.ml" 1528 45226 45269
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1528 45226 45259 "plugins/funind/functional_principles_proofs.ml" 1528 45226 45274
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1528 45226 45230 "plugins/funind/functional_principles_proofs.ml" 1528 45226 45274
call(
  stack
)
type(
  Term.rel_declaration list * Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1530 45280 45286 "plugins/funind/functional_principles_proofs.ml" 1530 45280 45296
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1531 45299 45309 "plugins/funind/functional_principles_proofs.ml" 1531 45299 45317
type(
  Term.rel_declaration list -> Term.rel_declaration list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1531 45299 45318 "plugins/funind/functional_principles_proofs.ml" 1531 45299 45330
type(
  Term.rel_declaration list
)
ident(
  int_ref post_rec_arg "plugins/funind/functional_principles_proofs.ml" 1527 45191 45198 "plugins/funind/functional_principles_proofs.ml" 1527 45191 45210
)
"plugins/funind/functional_principles_proofs.ml" 1531 45299 45309 "plugins/funind/functional_principles_proofs.ml" 1531 45299 45330
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1532 45336 45350 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45352
type(
  Names.identifier
)
ident(
  def id "plugins/funind/functional_principles_proofs.ml" 1532 45336 45364 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45366
)
"plugins/funind/functional_principles_proofs.ml" 1532 45336 45345 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45352
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1532 45336 45353 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45354
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1532 45336 45355 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45356
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1532 45336 45344 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45357
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1532 45336 45359 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45360
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1532 45336 45344 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45360
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1532 45336 45364 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45366
type(
  Names.identifier
)
ident(
  int_ref id "plugins/funind/functional_principles_proofs.ml" 1532 45336 45350 "plugins/funind/functional_principles_proofs.ml" 1532 45336 45352
)
"plugins/funind/functional_principles_proofs.ml" 1533 45367 45375 "plugins/funind/functional_principles_proofs.ml" 1533 45367 45376
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1533 45367 45380 "plugins/funind/functional_principles_proofs.ml" 1533 45367 45392
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1531 45299 45303 "plugins/funind/functional_principles_proofs.ml" 1533 45367 45392
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45477 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45490
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45493 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45501
type(
  (Term.rel_declaration -> Term.constr) ->
  Term.rel_declaration list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45508 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45510
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1536 45471 45519 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45546
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45511 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45512
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45513 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45514
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45507 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45515
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45519 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45524
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45526 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45542
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45543 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45545
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1536 45471 45508 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45510
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45525 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45546
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45519 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45546
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45502 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45547
type(
  Term.rel_declaration -> Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45549 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45560
type(
  Term.rel_declaration list
)
ident(
  int_ref pre_rec_arg "plugins/funind/functional_principles_proofs.ml" 1527 45191 45211 "plugins/funind/functional_principles_proofs.ml" 1527 45191 45222
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45560 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45561
type(
  Term.rel_declaration list -> Term.rel_context -> Term.rel_declaration list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45561 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45571
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45561 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45578
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45548 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45579
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45493 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45579
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1537 45583 45589 "plugins/funind/functional_principles_proofs.ml" 1537 45583 45597
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1537 45583 45600 "plugins/funind/functional_principles_proofs.ml" 1537 45583 45606
type(
  Term.constr list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.substl
)
"plugins/funind/functional_principles_proofs.ml" 1537 45583 45607 "plugins/funind/functional_principles_proofs.ml" 1537 45583 45620
type(
  Term.constr list
)
ident(
  int_ref subst_constrs "plugins/funind/functional_principles_proofs.ml" 1536 45471 45477 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45490
)
"plugins/funind/functional_principles_proofs.ml" 1537 45583 45621 "plugins/funind/functional_principles_proofs.ml" 1537 45583 45629
type(
  Term.constr
)
ident(
  int_ref relation "plugins/funind/functional_principles_proofs.ml" 1488 43756 43785 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43793
)
"plugins/funind/functional_principles_proofs.ml" 1537 45583 45600 "plugins/funind/functional_principles_proofs.ml" 1537 45583 45629
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1538 45633 45639 "plugins/funind/functional_principles_proofs.ml" 1538 45633 45649
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1538 45633 45652 "plugins/funind/functional_principles_proofs.ml" 1538 45633 45658
type(
  Term.constr list -> Term.constr -> Term.constr
)
ident(
  ext_ref Term.substl
)
"plugins/funind/functional_principles_proofs.ml" 1538 45633 45659 "plugins/funind/functional_principles_proofs.ml" 1538 45633 45672
type(
  Term.constr list
)
ident(
  int_ref subst_constrs "plugins/funind/functional_principles_proofs.ml" 1536 45471 45477 "plugins/funind/functional_principles_proofs.ml" 1536 45471 45490
)
"plugins/funind/functional_principles_proofs.ml" 1538 45633 45673 "plugins/funind/functional_principles_proofs.ml" 1538 45633 45685
type(
  Term.constr
)
ident(
  int_ref rec_arg_type "plugins/funind/functional_principles_proofs.ml" 1488 43756 43772 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43784
)
"plugins/funind/functional_principles_proofs.ml" 1538 45633 45652 "plugins/funind/functional_principles_proofs.ml" 1538 45633 45685
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45695 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45704
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45707 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45723
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45725 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45733
type(
  Names.name -> Names.name
)
ident(
  int_ref fresh_id "plugins/funind/functional_principles_proofs.ml" 1491 43883 43889 "plugins/funind/functional_principles_proofs.ml" 1491 43883 43897
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45741 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45753
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45754 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45760
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45740 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45761
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45734 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45762
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45724 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45763
call(
  stack
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45707 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45763
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1540 45767 45773 "plugins/funind/functional_principles_proofs.ml" 1540 45767 45787
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45794 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45810
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45812 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45820
type(
  Names.name -> Names.name
)
ident(
  int_ref fresh_id "plugins/funind/functional_principles_proofs.ml" 1491 43883 43889 "plugins/funind/functional_principles_proofs.ml" 1491 43883 43897
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45828 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45840
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45842 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45848
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45848 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45849
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45850 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45862
type(
  Names.identifier -> string
)
ident(
  ext_ref Names.string_of_id
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45863 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45873
type(
  Names.identifier
)
ident(
  int_ref rec_arg_id "plugins/funind/functional_principles_proofs.ml" 1530 45280 45286 "plugins/funind/functional_principles_proofs.ml" 1530 45280 45296
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45849 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45874
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45841 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45875
call(
  stack
)
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45827 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45876
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45821 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45877
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45811 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45878
call(
  stack
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1541 45790 45794 "plugins/funind/functional_principles_proofs.ml" 1541 45790 45878
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1543 45884 45890 "plugins/funind/functional_principles_proofs.ml" 1543 45884 45896
type(
  Names.identifier list -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1543 45884 45897 "plugins/funind/functional_principles_proofs.ml" 1543 45884 45898
type(
  Names.identifier list
)
ident(
  def l "plugins/funind/functional_principles_proofs.ml" 1544 45901 45905 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45956
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45905 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45912
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45914 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45926
type(
  Term.constr list -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_generalize
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45928 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45936
type(
  (Names.identifier -> Term.constr) ->
  Names.identifier list -> Term.constr list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45937 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45942
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45943 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45944
type(
  Names.identifier list
)
ident(
  int_ref l "plugins/funind/functional_principles_proofs.ml" 1543 45884 45897 "plugins/funind/functional_principles_proofs.ml" 1543 45884 45898
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45927 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45945
call(
  stack
)
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45913 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45946
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45948 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45953
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  ext_ref Tactics.clear
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45954 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45955
type(
  Names.identifier list
)
ident(
  int_ref l "plugins/funind/functional_principles_proofs.ml" 1543 45884 45897 "plugins/funind/functional_principles_proofs.ml" 1543 45884 45898
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45947 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45956
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1544 45901 45905 "plugins/funind/functional_principles_proofs.ml" 1544 45901 45956
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1546 45962 45968 "plugins/funind/functional_principles_proofs.ml" 1546 45962 45974
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1546 45962 45977 "plugins/funind/functional_principles_proofs.ml" 1546 45962 45993
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1546 45962 45995 "plugins/funind/functional_principles_proofs.ml" 1546 45962 46003
type(
  Names.name -> Names.name
)
ident(
  int_ref fresh_id "plugins/funind/functional_principles_proofs.ml" 1491 43883 43889 "plugins/funind/functional_principles_proofs.ml" 1491 43883 43897
)
"plugins/funind/functional_principles_proofs.ml" 1546 45962 46010 "plugins/funind/functional_principles_proofs.ml" 1546 45962 46017
type(
  Names.identifier
)
ident(
  int_ref hrec_id "plugins/funind/functional_principles_proofs.ml" 1343 39941 39945 "plugins/funind/functional_principles_proofs.ml" 1343 39941 39952
)
"plugins/funind/functional_principles_proofs.ml" 1546 45962 46004 "plugins/funind/functional_principles_proofs.ml" 1546 45962 46018
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1546 45962 45994 "plugins/funind/functional_principles_proofs.ml" 1546 45962 46019
call(
  stack
)
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1546 45962 45977 "plugins/funind/functional_principles_proofs.ml" 1546 45962 46019
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1547 46023 46029 "plugins/funind/functional_principles_proofs.ml" 1547 46023 46046
type(
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1547 46023 46047 "plugins/funind/functional_principles_proofs.ml" 1547 46023 46048
type(
  Proof_type.goal Evd.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 1548 46051 46057 "plugins/funind/functional_principles_proofs.ml" 1562 46458 46465
)
"plugins/funind/functional_principles_proofs.ml" 1549 46097 46100 "plugins/funind/functional_principles_proofs.ml" 1549 46097 46111
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclCOMPLETE
)
"plugins/funind/functional_principles_proofs.ml" 1550 46112 46118 "plugins/funind/functional_principles_proofs.ml" 1550 46112 46125
type(
  Proof_type.tactic -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHEN
)
"plugins/funind/functional_principles_proofs.ml" 1551 46126 46135 "plugins/funind/functional_principles_proofs.ml" 1551 46126 46144
type(
  Names.name -> Term.types -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tactics.assert_by
)
"plugins/funind/functional_principles_proofs.ml" 1551 46126 46151 "plugins/funind/functional_principles_proofs.ml" 1551 46126 46160
type(
  Names.identifier
)
ident(
  int_ref wf_thm_id "plugins/funind/functional_principles_proofs.ml" 1539 45689 45695 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45704
)
"plugins/funind/functional_principles_proofs.ml" 1551 46126 46145 "plugins/funind/functional_principles_proofs.ml" 1551 46126 46161
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1552 46162 46167 "plugins/funind/functional_principles_proofs.ml" 1552 46162 46172
type(
  Term.constr * Term.constr array -> Term.types
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 1552 46162 46174 "plugins/funind/functional_principles_proofs.ml" 1552 46162 46187
type(
  Term.constr Util.delayed -> Term.constr
)
ident(
  ext_ref Util.delayed_force
)
"plugins/funind/functional_principles_proofs.ml" 1552 46162 46188 "plugins/funind/functional_principles_proofs.ml" 1552 46162 46200
type(
  Term.constr Util.delayed
)
ident(
  int_ref well_founded "plugins/funind/functional_principles_proofs.ml" 1347 40065 40069 "plugins/funind/functional_principles_proofs.ml" 1347 40065 40081
)
"plugins/funind/functional_principles_proofs.ml" 1552 46162 46174 "plugins/funind/functional_principles_proofs.ml" 1552 46162 46200
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1552 46162 46203 "plugins/funind/functional_principles_proofs.ml" 1552 46162 46213
type(
  Term.constr
)
ident(
  int_ref input_type "plugins/funind/functional_principles_proofs.ml" 1538 45633 45639 "plugins/funind/functional_principles_proofs.ml" 1538 45633 45649
)
"plugins/funind/functional_principles_proofs.ml" 1552 46162 46214 "plugins/funind/functional_principles_proofs.ml" 1552 46162 46222
type(
  Term.constr
)
ident(
  int_ref relation "plugins/funind/functional_principles_proofs.ml" 1537 45583 45589 "plugins/funind/functional_principles_proofs.ml" 1537 45583 45597
)
"plugins/funind/functional_principles_proofs.ml" 1552 46162 46201 "plugins/funind/functional_principles_proofs.ml" 1552 46162 46224
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1552 46162 46173 "plugins/funind/functional_principles_proofs.ml" 1552 46162 46225
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1552 46162 46166 "plugins/funind/functional_principles_proofs.ml" 1552 46162 46226
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1553 46227 46236 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46237
type(
  Proof_type.goal Evd.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 1553 46227 46270 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46301
)
"plugins/funind/functional_principles_proofs.ml" 1553 46227 46271 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46282
type(
  Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclCOMPLETE
)
"plugins/funind/functional_principles_proofs.ml" 1553 46227 46284 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46290
type(
  bool -> Proof_type.tactic
)
ident(
  int_ref wf_tac "plugins/funind/functional_principles_proofs.ml" 1511 44468 44474 "plugins/funind/functional_principles_proofs.ml" 1511 44468 44480
)
"plugins/funind/functional_principles_proofs.ml" 1553 46227 46291 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46297
type(
  bool
)
ident(
  int_ref is_mes "plugins/funind/functional_principles_proofs.ml" 1487 43701 43749 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43755
)
"plugins/funind/functional_principles_proofs.ml" 1553 46227 46283 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46298
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1553 46227 46270 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46299
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1553 46227 46300 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46301
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1553 46227 46236 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46237
)
"plugins/funind/functional_principles_proofs.ml" 1553 46227 46270 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46301
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1553 46227 46231 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46302
type(
  Proof_type.goal Evd.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1551 46126 46134 "plugins/funind/functional_principles_proofs.ml" 1553 46227 46303
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46366 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46382
type(
  Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_simplest_apply
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46384 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46389
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46390 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46395
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46396 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46405
type(
  Names.identifier
)
ident(
  int_ref wf_thm_id "plugins/funind/functional_principles_proofs.ml" 1539 45689 45695 "plugins/funind/functional_principles_proofs.ml" 1539 45689 45704
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46390 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46405
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46408 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46413
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46414 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46424
type(
  Names.identifier
)
ident(
  int_ref rec_arg_id "plugins/funind/functional_principles_proofs.ml" 1530 45280 45286 "plugins/funind/functional_principles_proofs.ml" 1530 45280 45296
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46408 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46424
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46406 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46426
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46389 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46427
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1557 46363 46383 "plugins/funind/functional_principles_proofs.ml" 1557 46363 46428
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1554 46304 46312 "plugins/funind/functional_principles_proofs.ml" 1558 46429 46438
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1550 46112 46117 "plugins/funind/functional_principles_proofs.ml" 1559 46439 46445
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1548 46051 46057 "plugins/funind/functional_principles_proofs.ml" 1561 46450 46457
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1562 46458 46464 "plugins/funind/functional_principles_proofs.ml" 1562 46458 46465
type(
  Proof_type.goal Evd.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1547 46023 46047 "plugins/funind/functional_principles_proofs.ml" 1547 46023 46048
)
"plugins/funind/functional_principles_proofs.ml" 1548 46051 46057 "plugins/funind/functional_principles_proofs.ml" 1562 46458 46465
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46477 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46485
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46488 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46496
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_context -> Names.identifier list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46503 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46505
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1564 46471 46514 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46533
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46506 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46507
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46508 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46509
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46502 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46510
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46514 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46530
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46531 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46533
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1564 46471 46503 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46505
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46514 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46533
call(
  tail
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46497 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46534
type(
  Term.rel_declaration -> Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46535 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46545
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46535 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46550
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46488 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46550
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1565 46554 46560 "plugins/funind/functional_principles_proofs.ml" 1565 46554 46565
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1566 46568 46578 "plugins/funind/functional_principles_proofs.ml" 1566 46568 46579
type(
  Term.constr option ref -> Term.constr option
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1566 46568 46579 "plugins/funind/functional_principles_proofs.ml" 1566 46568 46592
type(
  Term.constr option ref
)
ident(
  int_ref tcc_lemma_ref "plugins/funind/functional_principles_proofs.ml" 1487 43701 43735 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43748
)
"plugins/funind/functional_principles_proofs.ml" 1566 46568 46578 "plugins/funind/functional_principles_proofs.ml" 1566 46568 46592
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1567 46598 46605 "plugins/funind/functional_principles_proofs.ml" 1567 46598 46609
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1567 46598 46613 "plugins/funind/functional_principles_proofs.ml" 1567 46598 46620
type(
  string -> Term.constr
)
ident(
  ext_ref Util.anomaly
)
"plugins/funind/functional_principles_proofs.ml" 1567 46598 46621 "plugins/funind/functional_principles_proofs.ml" 1567 46598 46641
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1567 46598 46613 "plugins/funind/functional_principles_proofs.ml" 1567 46598 46641
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1568 46642 46654 "plugins/funind/functional_principles_proofs.ml" 1568 46642 46659
type(
  Term.constr
)
ident(
  def lemma "plugins/funind/functional_principles_proofs.ml" 1568 46642 46663 "plugins/funind/functional_principles_proofs.ml" 1568 46642 46668
)
"plugins/funind/functional_principles_proofs.ml" 1568 46642 46649 "plugins/funind/functional_principles_proofs.ml" 1568 46642 46659
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1568 46642 46663 "plugins/funind/functional_principles_proofs.ml" 1568 46642 46668
type(
  Term.constr
)
ident(
  int_ref lemma "plugins/funind/functional_principles_proofs.ml" 1568 46642 46654 "plugins/funind/functional_principles_proofs.ml" 1568 46642 46659
)
"plugins/funind/functional_principles_proofs.ml" 1566 46568 46572 "plugins/funind/functional_principles_proofs.ml" 1568 46642 46668
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1580 46986 46992 "plugins/funind/functional_principles_proofs.ml" 1580 46986 47000
type(
  Names.identifier list ref
)
"plugins/funind/functional_principles_proofs.ml" 1580 46986 47003 "plugins/funind/functional_principles_proofs.ml" 1580 46986 47006
type(
  Names.identifier list -> Names.identifier list ref
)
ident(
  ext_ref Pervasives.ref
)
"plugins/funind/functional_principles_proofs.ml" 1580 46986 47007 "plugins/funind/functional_principles_proofs.ml" 1580 46986 47009
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1580 46986 47003 "plugins/funind/functional_principles_proofs.ml" 1580 46986 47009
type(
  Names.identifier list ref
)
"plugins/funind/functional_principles_proofs.ml" 1581 47013 47019 "plugins/funind/functional_principles_proofs.ml" 1581 47013 47028
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1581 47013 47029 "plugins/funind/functional_principles_proofs.ml" 1581 47013 47032
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gls "plugins/funind/functional_principles_proofs.ml" 1582 47035 47039 "plugins/funind/functional_principles_proofs.ml" 1605 47501 47507
)
"plugins/funind/functional_principles_proofs.ml" 1582 47035 47043 "plugins/funind/functional_principles_proofs.ml" 1582 47035 47047
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1582 47035 47050 "plugins/funind/functional_principles_proofs.ml" 1582 47035 47064
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/functional_principles_proofs.ml" 1582 47035 47065 "plugins/funind/functional_principles_proofs.ml" 1582 47035 47068
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gls "plugins/funind/functional_principles_proofs.ml" 1581 47013 47029 "plugins/funind/functional_principles_proofs.ml" 1581 47013 47032
)
"plugins/funind/functional_principles_proofs.ml" 1582 47035 47050 "plugins/funind/functional_principles_proofs.ml" 1582 47035 47068
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1583 47072 47082 "plugins/funind/functional_principles_proofs.ml" 1583 47072 47085
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1584 47088 47089 "plugins/funind/functional_principles_proofs.ml" 1584 47088 47112
type(
  Names.identifier -> Names.identifier list -> Names.identifier
)
ident(
  ext_ref Namegen.next_ident_away_in_goal
)
"plugins/funind/functional_principles_proofs.ml" 1585 47113 47117 "plugins/funind/functional_principles_proofs.ml" 1585 47113 47129
type(
  string -> Names.identifier
)
ident(
  ext_ref Names.id_of_string
)
"plugins/funind/functional_principles_proofs.ml" 1585 47113 47130 "plugins/funind/functional_principles_proofs.ml" 1585 47113 47136
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1585 47113 47116 "plugins/funind/functional_principles_proofs.ml" 1585 47113 47137
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1586 47138 47141 "plugins/funind/functional_principles_proofs.ml" 1586 47138 47145
type(
  Names.identifier list
)
ident(
  int_ref hyps "plugins/funind/functional_principles_proofs.ml" 1582 47035 47043 "plugins/funind/functional_principles_proofs.ml" 1582 47035 47047
)
"plugins/funind/functional_principles_proofs.ml" 1584 47088 47089 "plugins/funind/functional_principles_proofs.ml" 1586 47138 47145
call(
  stack
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1588 47155 47161 "plugins/funind/functional_principles_proofs.ml" 1588 47155 47171
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1590 47175 47178 "plugins/funind/functional_principles_proofs.ml" 1590 47175 47188
type(
  Term.constr list -> Proof_type.tactic
)
ident(
  ext_ref Tactics.generalize
)
"plugins/funind/functional_principles_proofs.ml" 1590 47175 47190 "plugins/funind/functional_principles_proofs.ml" 1590 47175 47195
type(
  Term.constr
)
ident(
  int_ref lemma "plugins/funind/functional_principles_proofs.ml" 1565 46554 46560 "plugins/funind/functional_principles_proofs.ml" 1565 46554 46565
)
"plugins/funind/functional_principles_proofs.ml" 1590 47175 47189 "plugins/funind/functional_principles_proofs.ml" 1590 47175 47196
type(
  Term.constr list
)
"plugins/funind/functional_principles_proofs.ml" 1590 47175 47178 "plugins/funind/functional_principles_proofs.ml" 1590 47175 47196
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1591 47198 47201 "plugins/funind/functional_principles_proofs.ml" 1591 47198 47208
type(
  Names.identifier -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_intro
)
"plugins/funind/functional_principles_proofs.ml" 1591 47198 47209 "plugins/funind/functional_principles_proofs.ml" 1591 47198 47212
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 1583 47072 47082 "plugins/funind/functional_principles_proofs.ml" 1583 47072 47085
)
"plugins/funind/functional_principles_proofs.ml" 1591 47198 47201 "plugins/funind/functional_principles_proofs.ml" 1591 47198 47212
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1592 47214 47217 "plugins/funind/functional_principles_proofs.ml" 1592 47214 47237
type(
  Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Elim.h_decompose_and
)
"plugins/funind/functional_principles_proofs.ml" 1592 47214 47239 "plugins/funind/functional_principles_proofs.ml" 1592 47214 47244
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1592 47214 47245 "plugins/funind/functional_principles_proofs.ml" 1592 47214 47248
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 1583 47072 47082 "plugins/funind/functional_principles_proofs.ml" 1583 47072 47085
)
"plugins/funind/functional_principles_proofs.ml" 1592 47214 47238 "plugins/funind/functional_principles_proofs.ml" 1592 47214 47249
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1592 47214 47217 "plugins/funind/functional_principles_proofs.ml" 1592 47214 47249
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1593 47251 47259 "plugins/funind/functional_principles_proofs.ml" 1593 47251 47260
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def g "plugins/funind/functional_principles_proofs.ml" 1594 47264 47270 "plugins/funind/functional_principles_proofs.ml" 1602 47467 47490
)
"plugins/funind/functional_principles_proofs.ml" 1594 47264 47274 "plugins/funind/functional_principles_proofs.ml" 1594 47264 47282
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1594 47264 47285 "plugins/funind/functional_principles_proofs.ml" 1594 47264 47299
type(
  Proof_type.goal Tacmach.sigma -> Names.identifier list
)
ident(
  ext_ref Tacmach.pf_ids_of_hyps
)
"plugins/funind/functional_principles_proofs.ml" 1594 47264 47300 "plugins/funind/functional_principles_proofs.ml" 1594 47264 47301
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1593 47251 47259 "plugins/funind/functional_principles_proofs.ml" 1593 47251 47260
)
"plugins/funind/functional_principles_proofs.ml" 1594 47264 47285 "plugins/funind/functional_principles_proofs.ml" 1594 47264 47301
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47311 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47319
type(
  Names.identifier list ref
)
ident(
  int_ref tcc_list "plugins/funind/functional_principles_proofs.ml" 1580 46986 46992 "plugins/funind/functional_principles_proofs.ml" 1580 46986 47000
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47320 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47322
type(
  Names.identifier list ref -> Names.identifier list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47323 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47331
type(
  Names.identifier list -> Names.identifier list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47333 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47346
type(
  Names.identifier list -> Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Util.list_subtract
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47347 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47355
type(
  Names.identifier list
)
ident(
  int_ref new_hyps "plugins/funind/functional_principles_proofs.ml" 1594 47264 47274 "plugins/funind/functional_principles_proofs.ml" 1594 47264 47282
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47357 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47360
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 1583 47072 47082 "plugins/funind/functional_principles_proofs.ml" 1583 47072 47085
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47362 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47366
type(
  Names.identifier list
)
ident(
  int_ref hyps "plugins/funind/functional_principles_proofs.ml" 1582 47035 47043 "plugins/funind/functional_principles_proofs.ml" 1582 47035 47047
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47356 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47367
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47332 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47368
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47323 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47368
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47311 "plugins/funind/functional_principles_proofs.ml" 1595 47305 47368
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 1596 47370 47379 "plugins/funind/functional_principles_proofs.ml" 1596 47370 47380
type(
  Names.identifier list ref -> Names.identifier list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1596 47370 47380 "plugins/funind/functional_principles_proofs.ml" 1596 47370 47388
type(
  Names.identifier list ref
)
ident(
  int_ref tcc_list "plugins/funind/functional_principles_proofs.ml" 1580 46986 46992 "plugins/funind/functional_principles_proofs.ml" 1580 46986 47000
)
"plugins/funind/functional_principles_proofs.ml" 1596 47370 47379 "plugins/funind/functional_principles_proofs.ml" 1596 47370 47388
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1596 47370 47389 "plugins/funind/functional_principles_proofs.ml" 1596 47370 47390
type(
  Names.identifier list -> Names.identifier list -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"plugins/funind/functional_principles_proofs.ml" 1596 47370 47391 "plugins/funind/functional_principles_proofs.ml" 1596 47370 47393
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1596 47370 47379 "plugins/funind/functional_principles_proofs.ml" 1596 47370 47393
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1599 47419 47422 "plugins/funind/functional_principles_proofs.ml" 1599 47419 47430
type(
  Names.identifier list ref
)
ident(
  int_ref tcc_list "plugins/funind/functional_principles_proofs.ml" 1580 46986 46992 "plugins/funind/functional_principles_proofs.ml" 1580 46986 47000
)
"plugins/funind/functional_principles_proofs.ml" 1599 47419 47431 "plugins/funind/functional_principles_proofs.ml" 1599 47419 47433
type(
  Names.identifier list ref -> Names.identifier list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"plugins/funind/functional_principles_proofs.ml" 1599 47419 47435 "plugins/funind/functional_principles_proofs.ml" 1599 47419 47438
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 1583 47072 47082 "plugins/funind/functional_principles_proofs.ml" 1583 47072 47085
)
"plugins/funind/functional_principles_proofs.ml" 1599 47419 47434 "plugins/funind/functional_principles_proofs.ml" 1599 47419 47439
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1599 47419 47422 "plugins/funind/functional_principles_proofs.ml" 1599 47419 47439
type(
  unit
)
"plugins/funind/functional_principles_proofs.ml" 1600 47441 47444 "plugins/funind/functional_principles_proofs.ml" 1600 47441 47452
type(
  Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclIDTAC
)
"plugins/funind/functional_principles_proofs.ml" 1600 47441 47453 "plugins/funind/functional_principles_proofs.ml" 1600 47441 47454
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1593 47251 47259 "plugins/funind/functional_principles_proofs.ml" 1593 47251 47260
)
"plugins/funind/functional_principles_proofs.ml" 1600 47441 47444 "plugins/funind/functional_principles_proofs.ml" 1600 47441 47454
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1598 47405 47413 "plugins/funind/functional_principles_proofs.ml" 1601 47455 47466
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1602 47467 47478 "plugins/funind/functional_principles_proofs.ml" 1602 47467 47482
type(
  Names.identifier list -> Tacmach.tactic
)
ident(
  int_ref thin "plugins/funind/functional_principles_proofs.ml" 96 1804 1808 "plugins/funind/functional_principles_proofs.ml" 96 1804 1812
)
"plugins/funind/functional_principles_proofs.ml" 1602 47467 47484 "plugins/funind/functional_principles_proofs.ml" 1602 47467 47487
type(
  Names.identifier
)
ident(
  int_ref hid "plugins/funind/functional_principles_proofs.ml" 1583 47072 47082 "plugins/funind/functional_principles_proofs.ml" 1583 47072 47085
)
"plugins/funind/functional_principles_proofs.ml" 1602 47467 47483 "plugins/funind/functional_principles_proofs.ml" 1602 47467 47488
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1602 47467 47489 "plugins/funind/functional_principles_proofs.ml" 1602 47467 47490
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref g "plugins/funind/functional_principles_proofs.ml" 1593 47251 47259 "plugins/funind/functional_principles_proofs.ml" 1593 47251 47260
)
"plugins/funind/functional_principles_proofs.ml" 1602 47467 47478 "plugins/funind/functional_principles_proofs.ml" 1602 47467 47490
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1596 47370 47376 "plugins/funind/functional_principles_proofs.ml" 1602 47467 47490
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1595 47305 47311 "plugins/funind/functional_principles_proofs.ml" 1602 47467 47490
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1594 47264 47270 "plugins/funind/functional_principles_proofs.ml" 1602 47467 47490
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1593 47251 47254 "plugins/funind/functional_principles_proofs.ml" 1603 47491 47495
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1589 47172 47173 "plugins/funind/functional_principles_proofs.ml" 1604 47496 47500
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1605 47501 47504 "plugins/funind/functional_principles_proofs.ml" 1605 47501 47507
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gls "plugins/funind/functional_principles_proofs.ml" 1581 47013 47029 "plugins/funind/functional_principles_proofs.ml" 1581 47013 47032
)
"plugins/funind/functional_principles_proofs.ml" 1588 47155 47161 "plugins/funind/functional_principles_proofs.ml" 1605 47501 47507
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1583 47072 47078 "plugins/funind/functional_principles_proofs.ml" 1605 47501 47507
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1582 47035 47039 "plugins/funind/functional_principles_proofs.ml" 1605 47501 47507
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1607 47513 47515 "plugins/funind/functional_principles_proofs.ml" 1607 47513 47525
type(
  Proof_type.tactic list -> Proof_type.tactic
)
ident(
  ext_ref Tacticals.tclTHENSEQ
)
"plugins/funind/functional_principles_proofs.ml" 1609 47532 47538 "plugins/funind/functional_principles_proofs.ml" 1609 47532 47549
type(
  string ->
  (Proof_type.goal Tacmach.sigma ->
   Proof_type.goal list Evd.sigma * Proof_type.validation) ->
  Proof_type.tactic
)
ident(
  int_ref observe_tac "plugins/funind/functional_principles_proofs.ml" 48 863 867 "plugins/funind/functional_principles_proofs.ml" 48 863 878
)
"plugins/funind/functional_principles_proofs.ml" 1609 47532 47550 "plugins/funind/functional_principles_proofs.ml" 1609 47532 47561
type(
  string
)
"plugins/funind/functional_principles_proofs.ml" 1609 47532 47562 "plugins/funind/functional_principles_proofs.ml" 1609 47532 47571
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
ident(
  int_ref start_tac "plugins/funind/functional_principles_proofs.ml" 1581 47013 47019 "plugins/funind/functional_principles_proofs.ml" 1581 47013 47028
)
"plugins/funind/functional_principles_proofs.ml" 1609 47532 47538 "plugins/funind/functional_principles_proofs.ml" 1609 47532 47571
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1610 47573 47579 "plugins/funind/functional_principles_proofs.ml" 1610 47573 47587
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref h_intros "plugins/funind/functional_principles_proofs.ml" 1348 40104 40108 "plugins/funind/functional_principles_proofs.ml" 1348 40104 40116
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47590 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47602
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_declaration list -> Names.identifier list
)
ident(
  ext_ref List.rev_map
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47609 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47611
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1611 47588 47620 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47639
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47612 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47613
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47614 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47615
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47608 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47616
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47620 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47636
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47637 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47639
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1611 47588 47609 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47611
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47620 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47639
call(
  tail
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47603 "plugins/funind/functional_principles_proofs.ml" 1611 47588 47640
type(
  Term.rel_declaration -> Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47646 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47656
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47646 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47661
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47661 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47662
type(
  Term.rel_context -> Term.rel_declaration list -> Term.rel_declaration list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47662 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47672
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47662 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47681
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47681 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47682
type(
  Term.rel_context -> Term.rel_declaration list -> Term.rel_declaration list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47682 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47692
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47682 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47703
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47703 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47704
type(
  Term.rel_context -> Term.rel_context -> Term.rel_declaration list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47704 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47714
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47704 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47721
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47682 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47721
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47662 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47721
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1612 47641 47645 "plugins/funind/functional_principles_proofs.ml" 1612 47641 47722
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1611 47588 47589 "plugins/funind/functional_principles_proofs.ml" 1613 47723 47725
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1610 47573 47579 "plugins/funind/functional_principles_proofs.ml" 1613 47723 47725
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1614 47727 47755 "plugins/funind/functional_principles_proofs.ml" 1614 47727 47764
type(
  Names.name -> Term.types -> Proof_type.tactic -> Proof_type.tactic
)
ident(
  ext_ref Tactics.assert_by
)
"plugins/funind/functional_principles_proofs.ml" 1615 47765 47773 "plugins/funind/functional_principles_proofs.ml" 1615 47765 47787
type(
  Names.identifier
)
ident(
  int_ref acc_rec_arg_id "plugins/funind/functional_principles_proofs.ml" 1540 45767 45773 "plugins/funind/functional_principles_proofs.ml" 1540 45767 45787
)
"plugins/funind/functional_principles_proofs.ml" 1615 47765 47767 "plugins/funind/functional_principles_proofs.ml" 1615 47765 47788
type(
  Names.name
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47793 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47798
type(
  Term.constr * Term.constr array -> Term.types
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47800 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47813
type(
  Term.constr Util.delayed -> Term.constr
)
ident(
  ext_ref Util.delayed_force
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47814 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47821
type(
  Term.constr Util.delayed
)
ident(
  int_ref acc_rel "plugins/funind/functional_principles_proofs.ml" 1346 40036 40040 "plugins/funind/functional_principles_proofs.ml" 1346 40036 40047
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47800 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47821
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47824 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47834
type(
  Term.constr
)
ident(
  int_ref input_type "plugins/funind/functional_principles_proofs.ml" 1538 45633 45639 "plugins/funind/functional_principles_proofs.ml" 1538 45633 45649
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47835 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47843
type(
  Term.constr
)
ident(
  int_ref relation "plugins/funind/functional_principles_proofs.ml" 1537 45583 45589 "plugins/funind/functional_principles_proofs.ml" 1537 45583 45597
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47844 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47849
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47850 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47860
type(
  Names.identifier
)
ident(
  int_ref rec_arg_id "plugins/funind/functional_principles_proofs.ml" 1530 45280 45286 "plugins/funind/functional_principles_proofs.ml" 1530 45280 45296
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47844 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47860
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47822 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47862
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47799 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47863
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1616 47789 47792 "plugins/funind/functional_principles_proofs.ml" 1616 47789 47864
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1617 47865 47867 "plugins/funind/functional_principles_proofs.ml" 1617 47865 47886
type(
  Proof_type.tactic
)
ident(
  int_ref prove_rec_arg_acc "plugins/funind/functional_principles_proofs.ml" 1547 46023 46029 "plugins/funind/functional_principles_proofs.ml" 1547 46023 46046
)
"plugins/funind/functional_principles_proofs.ml" 1614 47727 47754 "plugins/funind/functional_principles_proofs.ml" 1618 47887 47894
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1619 47896 47933 "plugins/funind/functional_principles_proofs.ml" 1619 47896 47939
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref revert "plugins/funind/functional_principles_proofs.ml" 1543 45884 45890 "plugins/funind/functional_principles_proofs.ml" 1543 45884 45896
)
"plugins/funind/functional_principles_proofs.ml" 1619 47896 47941 "plugins/funind/functional_principles_proofs.ml" 1619 47896 47949
type(
  Names.identifier list -> Names.identifier list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1619 47896 47951 "plugins/funind/functional_principles_proofs.ml" 1619 47896 47965
type(
  Names.identifier
)
ident(
  int_ref acc_rec_arg_id "plugins/funind/functional_principles_proofs.ml" 1540 45767 45773 "plugins/funind/functional_principles_proofs.ml" 1540 45767 45787
)
"plugins/funind/functional_principles_proofs.ml" 1619 47896 47967 "plugins/funind/functional_principles_proofs.ml" 1619 47896 47975
type(
  Names.identifier list
)
ident(
  int_ref args_ids "plugins/funind/functional_principles_proofs.ml" 1564 46471 46477 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46485
)
"plugins/funind/functional_principles_proofs.ml" 1619 47896 47950 "plugins/funind/functional_principles_proofs.ml" 1619 47896 47976
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1619 47896 47940 "plugins/funind/functional_principles_proofs.ml" 1619 47896 47977
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1619 47896 47932 "plugins/funind/functional_principles_proofs.ml" 1619 47896 47978
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48166 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48171
type(
  Names.identifier option -> int -> Tacmach.tactic
)
ident(
  ext_ref Hiddentac.h_fix
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48178 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48184
type(
  Names.identifier
)
ident(
  int_ref fix_id "plugins/funind/functional_principles_proofs.ml" 1546 45962 45968 "plugins/funind/functional_principles_proofs.ml" 1546 45962 45974
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48172 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48185
type(
  Names.identifier option
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48187 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48198
type(
  Names.identifier list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48199 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48207
type(
  Names.identifier list
)
ident(
  int_ref args_ids "plugins/funind/functional_principles_proofs.ml" 1564 46471 46477 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46485
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48187 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48207
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48208 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48209
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48210 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48211
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48186 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48212
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1622 48132 48165 "plugins/funind/functional_principles_proofs.ml" 1622 48132 48213
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1624 48358 48364 "plugins/funind/functional_principles_proofs.ml" 1624 48358 48372
type(
  Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref h_intros "plugins/funind/functional_principles_proofs.ml" 1348 40104 40108 "plugins/funind/functional_principles_proofs.ml" 1348 40104 40116
)
"plugins/funind/functional_principles_proofs.ml" 1624 48358 48374 "plugins/funind/functional_principles_proofs.ml" 1624 48358 48382
type(
  Names.identifier list -> Names.identifier list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1624 48358 48384 "plugins/funind/functional_principles_proofs.ml" 1624 48358 48398
type(
  Names.identifier
)
ident(
  int_ref acc_rec_arg_id "plugins/funind/functional_principles_proofs.ml" 1540 45767 45773 "plugins/funind/functional_principles_proofs.ml" 1540 45767 45787
)
"plugins/funind/functional_principles_proofs.ml" 1624 48358 48400 "plugins/funind/functional_principles_proofs.ml" 1624 48358 48408
type(
  Names.identifier list
)
ident(
  int_ref args_ids "plugins/funind/functional_principles_proofs.ml" 1564 46471 46477 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46485
)
"plugins/funind/functional_principles_proofs.ml" 1624 48358 48383 "plugins/funind/functional_principles_proofs.ml" 1624 48358 48409
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1624 48358 48373 "plugins/funind/functional_principles_proofs.ml" 1624 48358 48410
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1624 48358 48364 "plugins/funind/functional_principles_proofs.ml" 1624 48358 48410
call(
  stack
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1625 48412 48418 "plugins/funind/functional_principles_proofs.ml" 1625 48412 48436
type(
  ?tac:Tacmach.tactic * Equality.conditions -> Term.constr -> Tacmach.tactic
)
ident(
  ext_ref Equality.rewriteLR
)
"plugins/funind/functional_principles_proofs.ml" 1625 48412 48438 "plugins/funind/functional_principles_proofs.ml" 1625 48412 48445
type(
  Names.constant -> Term.constr
)
ident(
  ext_ref Term.mkConst
)
"plugins/funind/functional_principles_proofs.ml" 1625 48412 48446 "plugins/funind/functional_principles_proofs.ml" 1625 48412 48452
type(
  Names.constant
)
ident(
  int_ref eq_ref "plugins/funind/functional_principles_proofs.ml" 1487 43701 43727 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43733
)
"plugins/funind/functional_principles_proofs.ml" 1625 48412 48437 "plugins/funind/functional_principles_proofs.ml" 1625 48412 48453
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1625 48412 48418 "plugins/funind/functional_principles_proofs.ml" 1625 48412 48453
call(
  stack
)
type(
  Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1626 48455 48493 "plugins/funind/functional_principles_proofs.ml" 1626 48455 48496
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  def gl' "plugins/funind/functional_principles_proofs.ml" 1627 48500 48502 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
)
"plugins/funind/functional_principles_proofs.ml" 1627 48500 48506 "plugins/funind/functional_principles_proofs.ml" 1627 48500 48510
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1628 48513 48521 "plugins/funind/functional_principles_proofs.ml" 1628 48513 48522
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1628 48513 48523 "plugins/funind/functional_principles_proofs.ml" 1628 48513 48527
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1628 48513 48521 "plugins/funind/functional_principles_proofs.ml" 1628 48513 48527
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1628 48513 48530 "plugins/funind/functional_principles_proofs.ml" 1628 48513 48537
type(
  Term.types -> Term.constr * Term.constr array
)
ident(
  ext_ref Term.destApp
)
"plugins/funind/functional_principles_proofs.ml" 1628 48513 48539 "plugins/funind/functional_principles_proofs.ml" 1628 48513 48547
type(
  Proof_type.goal Tacmach.sigma -> Term.types
)
ident(
  ext_ref Tacmach.pf_concl
)
"plugins/funind/functional_principles_proofs.ml" 1628 48513 48548 "plugins/funind/functional_principles_proofs.ml" 1628 48513 48551
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl' "plugins/funind/functional_principles_proofs.ml" 1626 48455 48493 "plugins/funind/functional_principles_proofs.ml" 1626 48455 48496
)
"plugins/funind/functional_principles_proofs.ml" 1628 48513 48538 "plugins/funind/functional_principles_proofs.ml" 1628 48513 48552
call(
  stack
)
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1628 48513 48530 "plugins/funind/functional_principles_proofs.ml" 1628 48513 48552
call(
  stack
)
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1629 48556 48560 "plugins/funind/functional_principles_proofs.ml" 1629 48556 48570
type(
  Term.constr array -> Term.constr
)
ident(
  ext_ref Util.array_last
)
"plugins/funind/functional_principles_proofs.ml" 1629 48556 48571 "plugins/funind/functional_principles_proofs.ml" 1629 48556 48575
type(
  Term.constr array
)
ident(
  int_ref args "plugins/funind/functional_principles_proofs.ml" 1628 48513 48523 "plugins/funind/functional_principles_proofs.ml" 1628 48513 48527
)
"plugins/funind/functional_principles_proofs.ml" 1629 48556 48560 "plugins/funind/functional_principles_proofs.ml" 1629 48556 48575
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1628 48513 48517 "plugins/funind/functional_principles_proofs.ml" 1629 48556 48575
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1631 48581 48587 "plugins/funind/functional_principles_proofs.ml" 1631 48581 48596
type(
  Names.identifier list -> Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1631 48581 48597 "plugins/funind/functional_principles_proofs.ml" 1631 48581 48605
type(
  Names.identifier list
)
ident(
  def rec_hyps "plugins/funind/functional_principles_proofs.ml" 1632 48608 48612 "plugins/funind/functional_principles_proofs.ml" 1637 48721 48726
)
"plugins/funind/functional_principles_proofs.ml" 1633 48614 48634 "plugins/funind/functional_principles_proofs.ml" 1633 48614 48645
type(
  Names.identifier list -> int
)
ident(
  ext_ref List.length
)
"plugins/funind/functional_principles_proofs.ml" 1633 48614 48646 "plugins/funind/functional_principles_proofs.ml" 1633 48614 48654
type(
  Names.identifier list
)
ident(
  int_ref rec_hyps "plugins/funind/functional_principles_proofs.ml" 1631 48581 48597 "plugins/funind/functional_principles_proofs.ml" 1631 48581 48605
)
"plugins/funind/functional_principles_proofs.ml" 1633 48614 48634 "plugins/funind/functional_principles_proofs.ml" 1633 48614 48654
call(
  stack
)
type(
  int
)
"plugins/funind/functional_principles_proofs.ml" 1634 48656 48673 "plugins/funind/functional_principles_proofs.ml" 1634 48656 48681
type(
  Names.identifier list
)
ident(
  int_ref rec_hyps "plugins/funind/functional_principles_proofs.ml" 1631 48581 48597 "plugins/funind/functional_principles_proofs.ml" 1631 48581 48605
)
"plugins/funind/functional_principles_proofs.ml" 1635 48683 48699 "plugins/funind/functional_principles_proofs.ml" 1635 48683 48701
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1636 48703 48716 "plugins/funind/functional_principles_proofs.ml" 1636 48703 48720
type(
  Term.constr
)
ident(
  int_ref body "plugins/funind/functional_principles_proofs.ml" 1627 48500 48506 "plugins/funind/functional_principles_proofs.ml" 1627 48500 48510
)
"plugins/funind/functional_principles_proofs.ml" 1632 48608 48612 "plugins/funind/functional_principles_proofs.ml" 1637 48721 48726
type(
  Term.constr dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1639 48732 48738 "plugins/funind/functional_principles_proofs.ml" 1639 48732 48745
type(
  Term.constr lazy_t
)
"plugins/funind/functional_principles_proofs.ml" 1641 48759 48765 "plugins/funind/functional_principles_proofs.ml" 1641 48759 48770
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 1642 48773 48781 "plugins/funind/functional_principles_proofs.ml" 1642 48773 48794
type(
  Term.constr Util.delayed -> Term.constr
)
ident(
  ext_ref Util.delayed_force
)
"plugins/funind/functional_principles_proofs.ml" 1642 48773 48795 "plugins/funind/functional_principles_proofs.ml" 1642 48773 48805
type(
  Term.constr Util.delayed
)
ident(
  int_ref acc_inv_id "plugins/funind/functional_principles_proofs.ml" 1344 39970 39974 "plugins/funind/functional_principles_proofs.ml" 1344 39970 39984
)
"plugins/funind/functional_principles_proofs.ml" 1642 48773 48781 "plugins/funind/functional_principles_proofs.ml" 1642 48773 48805
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1643 48807 48817 "plugins/funind/functional_principles_proofs.ml" 1643 48807 48827
type(
  Term.constr
)
ident(
  int_ref input_type "plugins/funind/functional_principles_proofs.ml" 1538 45633 45639 "plugins/funind/functional_principles_proofs.ml" 1538 45633 45649
)
"plugins/funind/functional_principles_proofs.ml" 1643 48807 48828 "plugins/funind/functional_principles_proofs.ml" 1643 48807 48836
type(
  Term.constr
)
ident(
  int_ref relation "plugins/funind/functional_principles_proofs.ml" 1537 45583 45589 "plugins/funind/functional_principles_proofs.ml" 1537 45583 45597
)
"plugins/funind/functional_principles_proofs.ml" 1643 48807 48837 "plugins/funind/functional_principles_proofs.ml" 1643 48807 48842
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1643 48807 48843 "plugins/funind/functional_principles_proofs.ml" 1643 48807 48853
type(
  Names.identifier
)
ident(
  int_ref rec_arg_id "plugins/funind/functional_principles_proofs.ml" 1530 45280 45286 "plugins/funind/functional_principles_proofs.ml" 1530 45280 45296
)
"plugins/funind/functional_principles_proofs.ml" 1643 48807 48837 "plugins/funind/functional_principles_proofs.ml" 1643 48807 48853
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1643 48807 48815 "plugins/funind/functional_principles_proofs.ml" 1643 48807 48855
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1641 48759 48771 "plugins/funind/functional_principles_proofs.ml" 1644 48856 48863
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1640 48748 48757 "plugins/funind/functional_principles_proofs.ml" 1645 48864 48869
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1640 48748 48752 "plugins/funind/functional_principles_proofs.ml" 1645 48864 48869
type(
  Term.constr lazy_t
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48881 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48888
type(
  Term.constr lazy_t
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48897 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48902
type(
  Term.constr * Term.constr array -> Term.constr
)
ident(
  ext_ref Term.mkApp
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48903 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48913
type(
  Term.constr Lazy.t -> Term.constr
)
ident(
  ext_ref Lazy.force
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48914 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48921
type(
  Term.constr Lazy.t
)
ident(
  int_ref acc_inv "plugins/funind/functional_principles_proofs.ml" 1639 48732 48738 "plugins/funind/functional_principles_proofs.ml" 1639 48732 48745
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48903 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48921
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48925 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48930
type(
  Names.identifier -> Term.constr
)
ident(
  ext_ref Term.mkVar
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48932 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48946
type(
  Names.identifier
)
ident(
  int_ref acc_rec_arg_id "plugins/funind/functional_principles_proofs.ml" 1540 45767 45773 "plugins/funind/functional_principles_proofs.ml" 1540 45767 45787
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48925 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48946
call(
  stack
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48923 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48948
type(
  Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48902 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48949
type(
  Term.constr * Term.constr array
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48896 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48950
call(
  tail
)
type(
  Term.constr
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48891 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48950
type(
  Term.constr lazy_t
)
"plugins/funind/functional_principles_proofs.ml" 1648 48954 48960 "plugins/funind/functional_principles_proofs.ml" 1648 48954 48976
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 48983 "plugins/funind/functional_principles_proofs.ml" 1649 48979 48991
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_context -> Names.identifier list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 48998 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49000
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1649 48979 49009 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49028
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 49001 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49002
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 49003 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49004
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 48997 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49005
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 49009 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49025
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 49026 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49028
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1649 48979 48998 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49000
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 49009 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49028
call(
  tail
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 48992 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49029
type(
  Term.rel_declaration -> Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 49030 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49040
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 49030 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49051
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1649 48979 48983 "plugins/funind/functional_principles_proofs.ml" 1649 48979 49051
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1651 49057 49063 "plugins/funind/functional_principles_proofs.ml" 1651 49057 49071
type(
  pte_info
)
"plugins/funind/functional_principles_proofs.ml" 1653 49094 49107 "plugins/funind/functional_principles_proofs.ml" 1653 49094 49110
type(
  Names.identifier list
)
ident(
  def eqs "plugins/funind/functional_principles_proofs.ml" 1661 49703 49709 "plugins/funind/functional_principles_proofs.ml" 1668 49909 49916
)
"plugins/funind/functional_principles_proofs.ml" 1661 49703 49710 "plugins/funind/functional_principles_proofs.ml" 1661 49703 49728
type(
  bool ->
  Term.constr Lazy.t ->
  Names.identifier ->
  Names.identifier list -> Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref new_prove_with_tcc "plugins/funind/functional_principles_proofs.ml" 1426 42138 42142 "plugins/funind/functional_principles_proofs.ml" 1426 42138 42160
)
"plugins/funind/functional_principles_proofs.ml" 1662 49729 49738 "plugins/funind/functional_principles_proofs.ml" 1662 49729 49744
type(
  bool
)
ident(
  int_ref is_mes "plugins/funind/functional_principles_proofs.ml" 1487 43701 43749 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43755
)
"plugins/funind/functional_principles_proofs.ml" 1662 49729 49745 "plugins/funind/functional_principles_proofs.ml" 1662 49729 49752
type(
  Term.constr Lazy.t
)
ident(
  int_ref acc_inv "plugins/funind/functional_principles_proofs.ml" 1647 48875 48881 "plugins/funind/functional_principles_proofs.ml" 1647 48875 48888
)
"plugins/funind/functional_principles_proofs.ml" 1662 49729 49753 "plugins/funind/functional_principles_proofs.ml" 1662 49729 49759
type(
  Names.identifier
)
ident(
  int_ref fix_id "plugins/funind/functional_principles_proofs.ml" 1546 45962 45968 "plugins/funind/functional_principles_proofs.ml" 1546 45962 45974
)
"plugins/funind/functional_principles_proofs.ml" 1664 49761 49771 "plugins/funind/functional_principles_proofs.ml" 1664 49761 49772
type(
  Names.identifier list ref -> Names.identifier list
)
ident(
  ext_ref Pervasives.( ! )
)
"plugins/funind/functional_principles_proofs.ml" 1664 49761 49772 "plugins/funind/functional_principles_proofs.ml" 1664 49761 49780
type(
  Names.identifier list ref
)
ident(
  int_ref tcc_list "plugins/funind/functional_principles_proofs.ml" 1580 46986 46992 "plugins/funind/functional_principles_proofs.ml" 1580 46986 47000
)
"plugins/funind/functional_principles_proofs.ml" 1664 49761 49771 "plugins/funind/functional_principles_proofs.ml" 1664 49761 49780
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1664 49761 49780 "plugins/funind/functional_principles_proofs.ml" 1664 49761 49781
type(
  Names.identifier list -> Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1664 49761 49782 "plugins/funind/functional_principles_proofs.ml" 1664 49761 49790
type(
  (Term.rel_declaration -> Names.identifier) ->
  Term.rel_declaration list -> Names.identifier list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1665 49791 49803 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49805
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1665 49791 49814 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49835
)
"plugins/funind/functional_principles_proofs.ml" 1665 49791 49806 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49807
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1665 49791 49808 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49809
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1665 49791 49802 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49810
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1665 49791 49815 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49831
type(
  Names.name -> Names.identifier
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1665 49791 49832 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49834
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1665 49791 49803 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49805
)
"plugins/funind/functional_principles_proofs.ml" 1665 49791 49814 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49835
call(
  tail
)
type(
  Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1665 49791 49797 "plugins/funind/functional_principles_proofs.ml" 1665 49791 49836
type(
  Term.rel_declaration -> Names.identifier
)
"plugins/funind/functional_principles_proofs.ml" 1666 49837 49844 "plugins/funind/functional_principles_proofs.ml" 1666 49837 49854
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1666 49837 49844 "plugins/funind/functional_principles_proofs.ml" 1666 49837 49859
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1666 49837 49859 "plugins/funind/functional_principles_proofs.ml" 1666 49837 49860
type(
  Term.rel_context -> Term.rel_context -> Term.rel_declaration list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1666 49837 49860 "plugins/funind/functional_principles_proofs.ml" 1666 49837 49870
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1666 49837 49860 "plugins/funind/functional_principles_proofs.ml" 1666 49837 49877
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1666 49837 49843 "plugins/funind/functional_principles_proofs.ml" 1666 49837 49878
call(
  stack
)
type(
  Term.rel_declaration list
)
"plugins/funind/functional_principles_proofs.ml" 1664 49761 49781 "plugins/funind/functional_principles_proofs.ml" 1667 49879 49883
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1667 49879 49883 "plugins/funind/functional_principles_proofs.ml" 1667 49879 49884
type(
  Names.identifier list -> Names.identifier list -> Names.identifier list
)
ident(
  ext_ref Pervasives.( @ )
)
"plugins/funind/functional_principles_proofs.ml" 1667 49879 49887 "plugins/funind/functional_principles_proofs.ml" 1667 49879 49901
type(
  Names.identifier
)
ident(
  int_ref acc_rec_arg_id "plugins/funind/functional_principles_proofs.ml" 1540 45767 45773 "plugins/funind/functional_principles_proofs.ml" 1540 45767 45787
)
"plugins/funind/functional_principles_proofs.ml" 1667 49879 49885 "plugins/funind/functional_principles_proofs.ml" 1667 49879 49903
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1664 49761 49781 "plugins/funind/functional_principles_proofs.ml" 1667 49879 49903
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1664 49761 49770 "plugins/funind/functional_principles_proofs.ml" 1667 49879 49904
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1667 49879 49905 "plugins/funind/functional_principles_proofs.ml" 1667 49879 49908
type(
  Names.identifier list
)
ident(
  int_ref eqs "plugins/funind/functional_principles_proofs.ml" 1653 49094 49107 "plugins/funind/functional_principles_proofs.ml" 1653 49094 49110
)
"plugins/funind/functional_principles_proofs.ml" 1661 49703 49709 "plugins/funind/functional_principles_proofs.ml" 1668 49909 49916
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1653 49094 49102 "plugins/funind/functional_principles_proofs.ml" 1670 49918 49927
type(
  Names.identifier list -> Tacmach.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1671 49929 49946 "plugins/funind/functional_principles_proofs.ml" 1671 49929 49965
type(
  Names.Idset.elt list -> Term.types -> bool
)
ident(
  int_ref is_valid_hypothesis "plugins/funind/functional_principles_proofs.ml" 1467 43173 43177 "plugins/funind/functional_principles_proofs.ml" 1467 43173 43196
)
"plugins/funind/functional_principles_proofs.ml" 1671 49929 49966 "plugins/funind/functional_principles_proofs.ml" 1671 49929 49982
type(
  Names.Idset.elt list
)
ident(
  int_ref predicates_names "plugins/funind/functional_principles_proofs.ml" 1648 48954 48960 "plugins/funind/functional_principles_proofs.ml" 1648 48954 48976
)
"plugins/funind/functional_principles_proofs.ml" 1671 49929 49946 "plugins/funind/functional_principles_proofs.ml" 1671 49929 49982
call(
  stack
)
type(
  Term.types -> bool
)
"plugins/funind/functional_principles_proofs.ml" 1652 49074 49078 "plugins/funind/functional_principles_proofs.ml" 1672 49983 49988
type(
  pte_info
)
"plugins/funind/functional_principles_proofs.ml" 1674 49994 50000 "plugins/funind/functional_principles_proofs.ml" 1674 49994 50009
type(
  pte_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1675 50031 50035 "plugins/funind/functional_principles_proofs.ml" 1675 50031 50049
type(
  (pte_info Names.Idmap.t -> Names.Idmap.key -> pte_info Names.Idmap.t) ->
  pte_info Names.Idmap.t -> Names.Idmap.key list -> pte_info Names.Idmap.t
)
ident(
  ext_ref List.fold_left
)
"plugins/funind/functional_principles_proofs.ml" 1676 50050 50061 "plugins/funind/functional_principles_proofs.ml" 1676 50050 50064
type(
  pte_info Names.Idmap.t
)
ident(
  def map "plugins/funind/functional_principles_proofs.ml" 1676 50050 50065 "plugins/funind/functional_principles_proofs.ml" 1679 50107 50114
)
"plugins/funind/functional_principles_proofs.ml" 1676 50050 50065 "plugins/funind/functional_principles_proofs.ml" 1676 50050 50071
type(
  Names.Idmap.key
)
ident(
  def pte_id "plugins/funind/functional_principles_proofs.ml" 1677 50075 50077 "plugins/funind/functional_principles_proofs.ml" 1679 50107 50114
)
"plugins/funind/functional_principles_proofs.ml" 1677 50075 50077 "plugins/funind/functional_principles_proofs.ml" 1677 50075 50086
type(
  Names.Idmap.key ->
  pte_info -> pte_info Names.Idmap.t -> pte_info Names.Idmap.t
)
ident(
  ext_ref Names.Idmap.add
)
"plugins/funind/functional_principles_proofs.ml" 1677 50075 50087 "plugins/funind/functional_principles_proofs.ml" 1677 50075 50093
type(
  Names.Idmap.key
)
ident(
  int_ref pte_id "plugins/funind/functional_principles_proofs.ml" 1676 50050 50065 "plugins/funind/functional_principles_proofs.ml" 1676 50050 50071
)
"plugins/funind/functional_principles_proofs.ml" 1678 50094 50098 "plugins/funind/functional_principles_proofs.ml" 1678 50094 50106
type(
  pte_info
)
ident(
  int_ref pte_info "plugins/funind/functional_principles_proofs.ml" 1651 49057 49063 "plugins/funind/functional_principles_proofs.ml" 1651 49057 49071
)
"plugins/funind/functional_principles_proofs.ml" 1679 50107 50111 "plugins/funind/functional_principles_proofs.ml" 1679 50107 50114
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref map "plugins/funind/functional_principles_proofs.ml" 1676 50050 50061 "plugins/funind/functional_principles_proofs.ml" 1676 50050 50064
)
"plugins/funind/functional_principles_proofs.ml" 1677 50075 50077 "plugins/funind/functional_principles_proofs.ml" 1679 50107 50114
call(
  tail
)
type(
  pte_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1676 50050 50056 "plugins/funind/functional_principles_proofs.ml" 1680 50115 50122
type(
  pte_info Names.Idmap.t -> Names.Idmap.key -> pte_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1681 50123 50129 "plugins/funind/functional_principles_proofs.ml" 1681 50123 50140
type(
  pte_info Names.Idmap.t
)
ident(
  ext_ref Names.Idmap.empty
)
"plugins/funind/functional_principles_proofs.ml" 1682 50141 50147 "plugins/funind/functional_principles_proofs.ml" 1682 50141 50163
type(
  Names.Idmap.key list
)
ident(
  int_ref predicates_names "plugins/funind/functional_principles_proofs.ml" 1648 48954 48960 "plugins/funind/functional_principles_proofs.ml" 1648 48954 48976
)
"plugins/funind/functional_principles_proofs.ml" 1675 50031 50035 "plugins/funind/functional_principles_proofs.ml" 1682 50141 50163
call(
  stack
)
type(
  pte_info Names.Idmap.t
)
type(
  pte_info Names.Idmap.t
)
"plugins/funind/functional_principles_proofs.ml" 1684 50169 50175 "plugins/funind/functional_principles_proofs.ml" 1684 50169 50185
type(
  Names.identifier list -> Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1684 50169 50186 "plugins/funind/functional_principles_proofs.ml" 1684 50169 50194
type(
  Names.identifier list
)
ident(
  def rec_hyps "plugins/funind/functional_principles_proofs.ml" 1685 50197 50201 "plugins/funind/functional_principles_proofs.ml" 1689 50255 50281
)
"plugins/funind/functional_principles_proofs.ml" 1685 50197 50201 "plugins/funind/functional_principles_proofs.ml" 1685 50197 50212
type(
  bool ->
  Names.constant list ->
  pte_info Names.Idmap.t -> Term.types dynamic_info -> Proof_type.tactic
)
ident(
  int_ref build_proof "plugins/funind/functional_principles_proofs.ml" 664 18810 18814 "plugins/funind/functional_principles_proofs.ml" 664 18810 18825
)
"plugins/funind/functional_principles_proofs.ml" 1686 50213 50219 "plugins/funind/functional_principles_proofs.ml" 1686 50213 50224
type(
  bool
)
"plugins/funind/functional_principles_proofs.ml" 1687 50225 50232 "plugins/funind/functional_principles_proofs.ml" 1687 50225 50237
type(
  Names.constant
)
ident(
  int_ref f_ref "plugins/funind/functional_principles_proofs.ml" 1487 43701 43706 "plugins/funind/functional_principles_proofs.ml" 1487 43701 43711
)
"plugins/funind/functional_principles_proofs.ml" 1687 50225 50231 "plugins/funind/functional_principles_proofs.ml" 1687 50225 50238
type(
  Names.constant list
)
"plugins/funind/functional_principles_proofs.ml" 1688 50239 50245 "plugins/funind/functional_principles_proofs.ml" 1688 50239 50254
type(
  pte_info Names.Idmap.t
)
ident(
  int_ref ptes_info "plugins/funind/functional_principles_proofs.ml" 1674 49994 50000 "plugins/funind/functional_principles_proofs.ml" 1674 49994 50009
)
"plugins/funind/functional_principles_proofs.ml" 1689 50255 50262 "plugins/funind/functional_principles_proofs.ml" 1689 50255 50271
type(
  Names.identifier list -> Term.types dynamic_info
)
ident(
  int_ref body_info "plugins/funind/functional_principles_proofs.ml" 1631 48581 48587 "plugins/funind/functional_principles_proofs.ml" 1631 48581 48596
)
"plugins/funind/functional_principles_proofs.ml" 1689 50255 50272 "plugins/funind/functional_principles_proofs.ml" 1689 50255 50280
type(
  Names.identifier list
)
ident(
  int_ref rec_hyps "plugins/funind/functional_principles_proofs.ml" 1684 50169 50186 "plugins/funind/functional_principles_proofs.ml" 1684 50169 50194
)
"plugins/funind/functional_principles_proofs.ml" 1689 50255 50261 "plugins/funind/functional_principles_proofs.ml" 1689 50255 50281
call(
  stack
)
type(
  Term.types dynamic_info
)
"plugins/funind/functional_principles_proofs.ml" 1685 50197 50201 "plugins/funind/functional_principles_proofs.ml" 1689 50255 50281
call(
  tail
)
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1692 50337 50342 "plugins/funind/functional_principles_proofs.ml" 1692 50337 50368
type(
  (Names.Idset.elt list -> Proof_type.tactic) ->
  Names.Idset.elt list -> Names.identifier list -> Proof_type.tactic
)
ident(
  int_ref instanciate_hyps_with_args "plugins/funind/functional_principles_proofs.ml" 615 17526 17530 "plugins/funind/functional_principles_proofs.ml" 615 17526 17556
)
"plugins/funind/functional_principles_proofs.ml" 1693 50369 50376 "plugins/funind/functional_principles_proofs.ml" 1693 50369 50386
type(
  Names.Idset.elt list -> Proof_type.tactic
)
ident(
  int_ref make_proof "plugins/funind/functional_principles_proofs.ml" 1684 50169 50175 "plugins/funind/functional_principles_proofs.ml" 1684 50169 50185
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50395 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50403
type(
  (Term.rel_declaration -> Names.Idset.elt) ->
  Term.rel_context -> Names.Idset.elt list
)
ident(
  ext_ref List.map
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50410 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50412
type(
  Names.name
)
ident(
  def na "plugins/funind/functional_principles_proofs.ml" 1694 50387 50421 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50440
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50413 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50414
type(
  Term.constr option
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50415 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50416
type(
  Term.types
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50409 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50417
type(
  Term.rel_declaration
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50421 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50437
type(
  Names.name -> Names.Idset.elt
)
ident(
  ext_ref Nameops.out_name
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50438 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50440
type(
  Names.name
)
ident(
  int_ref na "plugins/funind/functional_principles_proofs.ml" 1694 50387 50410 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50412
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50421 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50440
call(
  tail
)
type(
  Names.Idset.elt
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50404 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50441
type(
  Term.rel_declaration -> Names.Idset.elt
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50442 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50452
type(
  Tactics.elim_scheme
)
ident(
  int_ref princ_info "plugins/funind/functional_principles_proofs.ml" 1503 44199 44205 "plugins/funind/functional_principles_proofs.ml" 1503 44199 44215
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50442 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50461
type(
  Term.rel_context
)
"plugins/funind/functional_principles_proofs.ml" 1694 50387 50394 "plugins/funind/functional_principles_proofs.ml" 1694 50387 50462
call(
  stack
)
type(
  Names.Idset.elt list
)
"plugins/funind/functional_principles_proofs.ml" 1695 50463 50471 "plugins/funind/functional_principles_proofs.ml" 1695 50463 50479
type(
  Names.identifier list -> Names.identifier list
)
ident(
  ext_ref List.rev
)
"plugins/funind/functional_principles_proofs.ml" 1695 50463 50480 "plugins/funind/functional_principles_proofs.ml" 1695 50463 50488
type(
  Names.identifier list
)
ident(
  int_ref args_ids "plugins/funind/functional_principles_proofs.ml" 1564 46471 46477 "plugins/funind/functional_principles_proofs.ml" 1564 46471 46485
)
"plugins/funind/functional_principles_proofs.ml" 1695 50463 50470 "plugins/funind/functional_principles_proofs.ml" 1695 50463 50489
call(
  stack
)
type(
  Names.identifier list
)
"plugins/funind/functional_principles_proofs.ml" 1692 50337 50341 "plugins/funind/functional_principles_proofs.ml" 1696 50490 50495
type(
  Proof_type.tactic
)
"plugins/funind/functional_principles_proofs.ml" 1697 50496 50500 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl' "plugins/funind/functional_principles_proofs.ml" 1626 48455 48493 "plugins/funind/functional_principles_proofs.ml" 1626 48455 48496
)
"plugins/funind/functional_principles_proofs.ml" 1692 50337 50341 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1684 50169 50171 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1674 49994 49996 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1651 49057 49059 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1648 48954 48956 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1647 48875 48877 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1639 48732 48734 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1631 48581 48583 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1627 48500 48502 "plugins/funind/functional_principles_proofs.ml" 1697 50496 50503
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1626 48455 48488 "plugins/funind/functional_principles_proofs.ml" 1698 50504 50511
type(
  Proof_type.goal Tacmach.sigma ->
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1608 47526 47530 "plugins/funind/functional_principles_proofs.ml" 1700 50513 50518
type(
  Proof_type.tactic list
)
"plugins/funind/functional_principles_proofs.ml" 1701 50519 50523 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal Tacmach.sigma
)
ident(
  int_ref gl "plugins/funind/functional_principles_proofs.ml" 1488 43756 43794 "plugins/funind/functional_principles_proofs.ml" 1488 43756 43796
)
"plugins/funind/functional_principles_proofs.ml" 1607 47513 47515 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
call(
  tail
)
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1581 47013 47015 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1580 46986 46988 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1565 46554 46556 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1564 46471 46473 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1547 46023 46025 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1546 45962 45964 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1543 45884 45886 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1540 45767 45769 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1539 45689 45691 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1538 45633 45635 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1537 45583 45585 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1536 45471 45473 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1530 45280 45282 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1527 45191 45193 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1518 44681 44683 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1517 44620 44622 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1511 44468 44470 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1503 44199 44201 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1502 44150 44152 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1491 43883 43885 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1490 43833 43835 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
"plugins/funind/functional_principles_proofs.ml" 1489 43799 43801 "plugins/funind/functional_principles_proofs.ml" 1701 50519 50525
type(
  Proof_type.goal list Evd.sigma * Proof_type.validation
)
